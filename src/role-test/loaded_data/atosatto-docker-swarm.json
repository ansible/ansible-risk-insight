{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/atosatto-docker-swarm", "installed_roles": [{"py/object": "struct4.Role", "name": "atosatto.docker-swarm", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm", "fqcn": "atosatto.docker-swarm", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "setup-swarm-labels.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get list of labels.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "options": {"name": "Get list of labels.", "register": "docker_swarm_labels", "changed_when": false, "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "tags": ["swarm_labels"]}, "module_options": "docker inspect --format {% raw %}'{{ range $key, $value := .Spec.Labels }}{{ printf \"%s\\n\" $key }}{{ end }}'{% endraw %} {{ ansible_fqdn|lower }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove labels from swarm node.", "module": "command", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "options": {"name": "Remove labels from swarm node.", "with_items": "{{ docker_swarm_labels.stdout_lines }}", "when": "item not in swarm_labels", "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "tags": ["swarm_labels"]}, "module_options": "docker node update --label-rm {{ item }} {{ ansible_fqdn|lower }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assign labels to swarm nodes if any.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "options": {"name": "Assign labels to swarm nodes if any.", "when": "item not in docker_swarm_labels.stdout_lines", "with_items": ["{{ swarm_labels  | default([]) }}"], "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "tags": ["swarm_labels"]}, "module_options": "docker node update --label-add {{ item }}=true {{ ansible_fqdn|lower }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-docker-cli.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prefix the Docker CLI package version with the correct separator on RedHat.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "options": {"name": "Prefix the Docker CLI package version with the correct separator on RedHat.", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"_docker_cli_package_version": "-{{ docker_cli_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Prefix the Docker CLI package version with the correct separator on Debian.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "options": {"name": "Prefix the Docker CLI package version with the correct separator on Debian.", "when": "ansible_os_family == 'Debian'"}, "module_options": {"_docker_cli_package_version": "={{ docker_cli_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker CLI.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "options": {"name": "Install the Docker CLI."}, "module_options": {"name": "{{ docker_cli_package_name }}{{ _docker_cli_package_version | default('') }}", "state": "{{ docker_cli_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-containerd.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prefix the containerd package version with the correct separator on RedHat.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Prefix the containerd package version with the correct separator on RedHat.", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"_containerd_package_version": "-{{ containerd_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Prefix the containerd package version with the correct separator on Debian.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Prefix the containerd package version with the correct separator on Debian.", "when": "ansible_os_family == 'Debian'"}, "module_options": {"_containerd_package_version": "={{ containerd_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install containerd.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Install containerd.", "when": "ansible_os_family != 'RedHat' or (ansible_os_family == 'RedHat' and ansible_distribution_major_version != '8')"}, "module_options": {"name": "{{ containerd_package_name }}{{ _containerd_package_version | default('') }}", "state": "{{ containerd_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install containerd on RHEL 8.", "module": "package", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Install containerd on RHEL 8.", "when": "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '8'"}, "module_options": {"name": "https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm", "state": "{{ containerd_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the systemd overrides directory for containerd.", "module": "file", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Create the systemd overrides directory for containerd."}, "module_options": {"name": "/etc/systemd/system/containerd.service.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Override the systemd unit for containerd.", "module": "template", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Override the systemd unit for containerd.", "register": "_containerd_systemd_override"}, "module_options": {"src": "containerd-override.conf.j2", "dest": "/etc/systemd/system/containerd.service.d/override.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd and restart containerd.", "module": "service", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Reload systemd and restart containerd.", "when": "_containerd_systemd_override.changed"}, "module_options": {"name": "containerd", "state": "{% if containerd_service_state != 'stopped' %}restarted{% else %}stopped{% endif %}", "daemon_reload": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable the containerd daemon service and start it.", "module": "service", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Enable the containerd daemon service and start it."}, "module_options": {"name": "containerd", "state": "{{ containerd_service_state }}", "enabled": "{{ containerd_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-swarm-cluster.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create a custom Swarm network.", "module": "docker_network", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Create a custom Swarm network.", "when": "docker_swarm_network is defined and docker_swarm_network | ipaddr('net')"}, "module_options": {"name": "docker_gwbridge", "driver_options": {"com.docker.network.bridge.enable_icc": "false", "com.docker.network.bridge.enable_ip_masquerade": "true", "com.docker.network.bridge.name": "docker_gwbridge"}, "ipam_options": {"subnet": "{{ docker_swarm_network }}", "gateway": "{{ docker_swarm_network | ipaddr('net') | ipaddr('1') | ipaddr('ip') }}"}}, "executable": "docker_network", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if \"Swarm Mode\" is enabled.", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Check if \"Swarm Mode\" is enabled.", "changed_when": false, "register": "docker_info", "tags": ["skip_ansible_lint"]}, "module_options": "docker info", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Init \"Swarm Mode\" on the first manager.", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Init \"Swarm Mode\" on the first manager.", "when": "docker_info.stdout.find('Swarm: active') == -1 and inventory_hostname == groups['docker_swarm_manager'][0]", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm init --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }} --advertise-addr {{ docker_swarm_addr }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the worker join-token.", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Get the worker join-token.", "changed_when": false, "register": "docker_worker_token", "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "when": "'docker_swarm_worker' in group_names", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join-token -q worker", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the manager join-token.", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Get the manager join-token.", "changed_when": false, "register": "docker_manager_token", "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "when": "'docker_swarm_manager' in group_names and inventory_hostname != groups['docker_swarm_manager'][0]", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join-token -q manager", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Declare the address of the first Swarm manager as a fact.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Declare the address of the first Swarm manager as a fact.", "when": "inventory_hostname == groups['docker_swarm_manager'][0]"}, "module_options": {"docker_manager_address": "{{ docker_swarm_addr }}:{{ docker_swarm_port }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Distribute the fact containing address of the first Swarm manager.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Distribute the fact containing address of the first Swarm manager.", "when": "inventory_hostname != groups['docker_swarm_manager'][0]"}, "module_options": {"docker_manager_address": "{{ hostvars[groups['docker_swarm_manager'][0]]['docker_manager_address'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Join the pending Swarm worker nodes.", "module": "shell", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Join the pending Swarm worker nodes.", "changed_when": false, "when": "docker_info.stdout.find('Swarm: active') == -1 and docker_info.stdout.find('Swarm: pending') == -1 and 'docker_swarm_worker' in group_names and 'docker_swarm_manager' not in group_names", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }} --advertise-addr {{ docker_swarm_addr }} --token \"{{ docker_worker_token.stdout }}\" {{ docker_manager_address }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Join the pending Swarm manager nodes.", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Join the pending Swarm manager nodes.", "changed_when": false, "when": "docker_info.stdout.find('Swarm: active') == -1 and docker_info.stdout.find('Swarm: pending') == -1 and 'docker_swarm_manager' in group_names and inventory_hostname != groups['docker_swarm_manager'][0]", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }} --advertise-addr {{ docker_swarm_addr }} --token \"{{ docker_manager_token.stdout }}\" {{ docker_manager_address }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "reset-connection.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/reset-connection.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "meta", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/reset-connection.yml", "options": {}, "module_options": "reset_connection", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-docker-compose.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get information on the latest docker-compose release from Github.", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "options": {"name": "Get information on the latest docker-compose release from Github.", "register": "_docker_compose_github_release", "check_mode": false, "until": "_docker_compose_github_release.status == 200", "retries": 5, "delay": 15}, "module_options": {"url": "https://api.github.com/repos/docker/compose/releases/latest", "method": "GET"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract the name of the latest docker-compose release tag.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "options": {"name": "Extract the name of the latest docker-compose release tag."}, "module_options": {"docker_compose_version": "{{ _docker_compose_github_release['json'] | json_query('tag_name') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download docker-compose.", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "options": {"name": "Download docker-compose."}, "module_options": {"url": "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}", "dest": "/usr/local/bin/docker-compose", "mode": "0755"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-docker-group.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "tasks": [{"py/object": "struct4.Task", "name": "Add the Docker administrators to the Docker group.", "module": "user", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "options": {"name": "Add the Docker administrators to the Docker group.", "register": "addtogroup", "become": true, "with_items": "{{ docker_group_users }}"}, "module_options": {"name": "{{ item }}", "groups": "{{ docker_group_name }}", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reset ansible connection after group changes (Ansible < 2.3.0).", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "options": {"name": "Reset ansible connection after group changes (Ansible < 2.3.0).", "async": 3, "poll": 2, "failed_when": false, "when": "ansible_version is defined and (ansible_version.full is version_compare('2.3.0.0', '<'))"}, "module_options": "sleep 1; pkill -u {{ ansible_user }} {{ ssh_daemon }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reset ansible connection after group changes (Ansible >= 2.3.0).", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "options": {"name": "Reset ansible connection after group changes (Ansible >= 2.3.0).", "when": "ansible_version is defined and (ansible_version.full is version_compare('2.3.0.0', '>='))"}, "module_options": "reset-connection.yml", "executable": "reset-connection.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "repo-RedHat.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install yum-utils if necessary.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-RedHat.yml", "options": {"name": "Install yum-utils if necessary."}, "module_options": {"name": "yum-utils", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the YUM Docker repository.", "module": "yum_repository", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-RedHat.yml", "options": {"name": "Add the YUM Docker repository.", "notify": "clean yum cache"}, "module_options": {"name": "{{ docker_repo['name'] }}", "file": "{{ docker_repo['name'] }}", "description": "{{ docker_repo['name'] }}", "baseurl": "{{ docker_repo['yum_repo'] }}", "gpgkey": "{{ docker_repo['yum_gpg_key'] | default(omit) }}", "gpgcheck": "{{ docker_repo['yum_gpg_check'] | default(False) }}", "state": "present"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-python-pip.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-python-pip.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install epel-release", "module": "package", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-python-pip.yml", "options": {"name": "Install epel-release", "when": "((not skip_docker_py) or (not skip_docker_compose)) and (ansible_os_family == 'RedHat' and ansible_distribution != 'Fedora')"}, "module_options": {"name": "epel-release", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install python-pip.", "module": "package", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-python-pip.yml", "options": {"name": "Install python-pip.", "when": "(not skip_docker_py) or (not skip_docker_compose) or (ansible_os_family == 'Debian' and ansible_python_version is version_compare('2.6.0', '>=') and ansible_python_version is version_compare('2.7.9', '<'))"}, "module_options": {"name": "{{ python_pip_packages }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-docker-engine.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prefix the Docker package version with the correct separator on RedHat.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Prefix the Docker package version with the correct separator on RedHat.", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"_docker_package_version": "-{{ docker_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Prefix the Docker package version with the correct separator on Debian.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Prefix the Docker package version with the correct separator on Debian.", "when": "ansible_os_family == 'Debian'"}, "module_options": {"_docker_package_version": "={{ docker_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Install Docker."}, "module_options": {"name": "{{ docker_package_name }}{{ _docker_package_version | default('') }}", "state": "{{ docker_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the systemd overrides directory for Docker.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Create the systemd overrides directory for Docker."}, "module_options": {"name": "/etc/systemd/system/docker.service.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Override the systemd unit for Docker.", "module": "template", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Override the systemd unit for Docker.", "register": "_docker_systemd_override"}, "module_options": {"src": "docker-override.conf.j2", "dest": "/etc/systemd/system/docker.service.d/override.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd and restart Docker.", "module": "service", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Reload systemd and restart Docker.", "when": "_docker_systemd_override.changed"}, "module_options": {"name": "docker", "state": "{% if docker_service_state != 'stopped' %}restarted{% else %}stopped{% endif %}", "daemon_reload": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the Docker daemon configuration directory exists.", "module": "file", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Make sure the Docker daemon configuration directory exists."}, "module_options": {"path": "/etc/docker", "owner": "root", "group": "root", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure the Docker deamon.", "module": "template", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Configure the Docker deamon.", "notify": "restart docker"}, "module_options": {"src": "docker-daemon.json.j2", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable the Docker daemon service and start it.", "module": "service", "index": 8, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Enable the Docker daemon service and start it."}, "module_options": {"name": "docker", "state": "{{ docker_service_state }}", "enabled": "{{ docker_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "repo-Debian.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install the Python SNI support packages.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Install the Python SNI support packages."}, "module_options": {"name": "{{ python_sni_support_packages }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Python SNI python-pip dependencies.", "module": "pip", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Install the Python SNI python-pip dependencies."}, "module_options": {"name": "{{ python_sni_pip_dependencies }}", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install apt-transport-https and gnupg if necessary.", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Install apt-transport-https and gnupg if necessary."}, "module_options": {"name": ["apt-transport-https", "gnupg"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import Docker APT public key.", "module": "apt_key", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Import Docker APT public key."}, "module_options": {"url": "{{ docker_repo['apt_gpg_key'] }}", "id": "{{ docker_repo['apt_gpg_key_id'] | default('') }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the Docker APT repository.", "module": "apt_repository", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Add the Docker APT repository."}, "module_options": {"repo": "{{ docker_repo['apt_repo'] }}", "filename": "{{ docker_repo['name'] }}", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-docker-py.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-py.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install docker-py.", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-py.yml", "options": {"name": "Install docker-py."}, "module_options": {"name": "{{ docker_py_package_name }}", "version": "{{ docker_py_package_version }}", "state": "{{ docker_py_package_state }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include os-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"name": "Include os-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update APT cache.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"name": "Update APT cache.", "when": "ansible_os_family == 'Debian'", "changed_when": false}, "module_options": {"update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {}, "module_options": "setup-python-pip.yml", "executable": "setup-python-pip.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_repo"}, "module_options": "repo-{{ ansible_os_family }}.yml", "executable": "repo-{{ ansible_os_family }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker dependencies.", "module": "package", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"name": "Install Docker dependencies.", "when": "not skip_containerd or not skip_engine"}, "module_options": {"name": "{{ docker_dependencies }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_containerd"}, "module_options": "setup-containerd.yml", "executable": "setup-containerd.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_engine"}, "module_options": "setup-docker-engine.yml", "executable": "setup-docker-engine.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_cli"}, "module_options": "setup-docker-cli.yml", "executable": "setup-docker-cli.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {}, "module_options": "setup-swarm-cluster.yml", "executable": "setup-swarm-cluster.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {}, "module_options": "setup-swarm-labels.yml", "executable": "setup-swarm-labels.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_group"}, "module_options": "setup-docker-group.yml", "executable": "setup-docker-group.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_docker_py"}, "module_options": "setup-docker-py.yml", "executable": "setup-docker-py.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_docker_compose"}, "module_options": "setup-docker-compose.yml", "executable": "setup-docker-compose.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Get list of labels.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "options": {"name": "Get list of labels.", "register": "docker_swarm_labels", "changed_when": false, "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "tags": ["swarm_labels"]}, "module_options": "docker inspect --format {% raw %}'{{ range $key, $value := .Spec.Labels }}{{ printf \"%s\\n\" $key }}{{ end }}'{% endraw %} {{ ansible_fqdn|lower }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Remove labels from swarm node.", "module": "command", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "options": {"name": "Remove labels from swarm node.", "with_items": "{{ docker_swarm_labels.stdout_lines }}", "when": "item not in swarm_labels", "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "tags": ["swarm_labels"]}, "module_options": "docker node update --label-rm {{ item }} {{ ansible_fqdn|lower }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Assign labels to swarm nodes if any.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "options": {"name": "Assign labels to swarm nodes if any.", "when": "item not in docker_swarm_labels.stdout_lines", "with_items": ["{{ swarm_labels  | default([]) }}"], "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "tags": ["swarm_labels"]}, "module_options": "docker node update --label-add {{ item }}=true {{ ansible_fqdn|lower }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prefix the Docker CLI package version with the correct separator on RedHat.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "options": {"name": "Prefix the Docker CLI package version with the correct separator on RedHat.", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"_docker_cli_package_version": "-{{ docker_cli_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Prefix the Docker CLI package version with the correct separator on Debian.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "options": {"name": "Prefix the Docker CLI package version with the correct separator on Debian.", "when": "ansible_os_family == 'Debian'"}, "module_options": {"_docker_cli_package_version": "={{ docker_cli_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install the Docker CLI.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "options": {"name": "Install the Docker CLI."}, "module_options": {"name": "{{ docker_cli_package_name }}{{ _docker_cli_package_version | default('') }}", "state": "{{ docker_cli_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prefix the containerd package version with the correct separator on RedHat.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Prefix the containerd package version with the correct separator on RedHat.", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"_containerd_package_version": "-{{ containerd_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Prefix the containerd package version with the correct separator on Debian.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Prefix the containerd package version with the correct separator on Debian.", "when": "ansible_os_family == 'Debian'"}, "module_options": {"_containerd_package_version": "={{ containerd_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install containerd.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Install containerd.", "when": "ansible_os_family != 'RedHat' or (ansible_os_family == 'RedHat' and ansible_distribution_major_version != '8')"}, "module_options": {"name": "{{ containerd_package_name }}{{ _containerd_package_version | default('') }}", "state": "{{ containerd_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install containerd on RHEL 8.", "module": "package", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Install containerd on RHEL 8.", "when": "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '8'"}, "module_options": {"name": "https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm", "state": "{{ containerd_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create the systemd overrides directory for containerd.", "module": "file", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Create the systemd overrides directory for containerd."}, "module_options": {"name": "/etc/systemd/system/containerd.service.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Override the systemd unit for containerd.", "module": "template", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Override the systemd unit for containerd.", "register": "_containerd_systemd_override"}, "module_options": {"src": "containerd-override.conf.j2", "dest": "/etc/systemd/system/containerd.service.d/override.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Reload systemd and restart containerd.", "module": "service", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Reload systemd and restart containerd.", "when": "_containerd_systemd_override.changed"}, "module_options": {"name": "containerd", "state": "{% if containerd_service_state != 'stopped' %}restarted{% else %}stopped{% endif %}", "daemon_reload": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Enable the containerd daemon service and start it.", "module": "service", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Enable the containerd daemon service and start it."}, "module_options": {"name": "containerd", "state": "{{ containerd_service_state }}", "enabled": "{{ containerd_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create a custom Swarm network.", "module": "docker_network", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Create a custom Swarm network.", "when": "docker_swarm_network is defined and docker_swarm_network | ipaddr('net')"}, "module_options": {"name": "docker_gwbridge", "driver_options": {"com.docker.network.bridge.enable_icc": "false", "com.docker.network.bridge.enable_ip_masquerade": "true", "com.docker.network.bridge.name": "docker_gwbridge"}, "ipam_options": {"subnet": "{{ docker_swarm_network }}", "gateway": "{{ docker_swarm_network | ipaddr('net') | ipaddr('1') | ipaddr('ip') }}"}}, "executable": "docker_network", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Check if \"Swarm Mode\" is enabled.", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Check if \"Swarm Mode\" is enabled.", "changed_when": false, "register": "docker_info", "tags": ["skip_ansible_lint"]}, "module_options": "docker info", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Init \"Swarm Mode\" on the first manager.", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Init \"Swarm Mode\" on the first manager.", "when": "docker_info.stdout.find('Swarm: active') == -1 and inventory_hostname == groups['docker_swarm_manager'][0]", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm init --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }} --advertise-addr {{ docker_swarm_addr }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Get the worker join-token.", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Get the worker join-token.", "changed_when": false, "register": "docker_worker_token", "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "when": "'docker_swarm_worker' in group_names", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join-token -q worker", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Get the manager join-token.", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Get the manager join-token.", "changed_when": false, "register": "docker_manager_token", "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "when": "'docker_swarm_manager' in group_names and inventory_hostname != groups['docker_swarm_manager'][0]", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join-token -q manager", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Declare the address of the first Swarm manager as a fact.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Declare the address of the first Swarm manager as a fact.", "when": "inventory_hostname == groups['docker_swarm_manager'][0]"}, "module_options": {"docker_manager_address": "{{ docker_swarm_addr }}:{{ docker_swarm_port }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Distribute the fact containing address of the first Swarm manager.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Distribute the fact containing address of the first Swarm manager.", "when": "inventory_hostname != groups['docker_swarm_manager'][0]"}, "module_options": {"docker_manager_address": "{{ hostvars[groups['docker_swarm_manager'][0]]['docker_manager_address'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Join the pending Swarm worker nodes.", "module": "shell", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Join the pending Swarm worker nodes.", "changed_when": false, "when": "docker_info.stdout.find('Swarm: active') == -1 and docker_info.stdout.find('Swarm: pending') == -1 and 'docker_swarm_worker' in group_names and 'docker_swarm_manager' not in group_names", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }} --advertise-addr {{ docker_swarm_addr }} --token \"{{ docker_worker_token.stdout }}\" {{ docker_manager_address }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Join the pending Swarm manager nodes.", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Join the pending Swarm manager nodes.", "changed_when": false, "when": "docker_info.stdout.find('Swarm: active') == -1 and docker_info.stdout.find('Swarm: pending') == -1 and 'docker_swarm_manager' in group_names and inventory_hostname != groups['docker_swarm_manager'][0]", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }} --advertise-addr {{ docker_swarm_addr }} --token \"{{ docker_manager_token.stdout }}\" {{ docker_manager_address }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/reset-connection.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/reset-connection.yml", "options": {}, "module_options": "reset_connection", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Get information on the latest docker-compose release from Github.", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "options": {"name": "Get information on the latest docker-compose release from Github.", "register": "_docker_compose_github_release", "check_mode": false, "until": "_docker_compose_github_release.status == 200", "retries": 5, "delay": 15}, "module_options": {"url": "https://api.github.com/repos/docker/compose/releases/latest", "method": "GET"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Extract the name of the latest docker-compose release tag.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "options": {"name": "Extract the name of the latest docker-compose release tag."}, "module_options": {"docker_compose_version": "{{ _docker_compose_github_release['json'] | json_query('tag_name') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Download docker-compose.", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "options": {"name": "Download docker-compose."}, "module_options": {"url": "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}", "dest": "/usr/local/bin/docker-compose", "mode": "0755"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Add the Docker administrators to the Docker group.", "module": "user", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "options": {"name": "Add the Docker administrators to the Docker group.", "register": "addtogroup", "become": true, "with_items": "{{ docker_group_users }}"}, "module_options": {"name": "{{ item }}", "groups": "{{ docker_group_name }}", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Reset ansible connection after group changes (Ansible < 2.3.0).", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "options": {"name": "Reset ansible connection after group changes (Ansible < 2.3.0).", "async": 3, "poll": 2, "failed_when": false, "when": "ansible_version is defined and (ansible_version.full is version_compare('2.3.0.0', '<'))"}, "module_options": "sleep 1; pkill -u {{ ansible_user }} {{ ssh_daemon }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Reset ansible connection after group changes (Ansible >= 2.3.0).", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "options": {"name": "Reset ansible connection after group changes (Ansible >= 2.3.0).", "when": "ansible_version is defined and (ansible_version.full is version_compare('2.3.0.0', '>='))"}, "module_options": "reset-connection.yml", "executable": "reset-connection.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install yum-utils if necessary.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-RedHat.yml", "options": {"name": "Install yum-utils if necessary."}, "module_options": {"name": "yum-utils", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add the YUM Docker repository.", "module": "yum_repository", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-RedHat.yml", "options": {"name": "Add the YUM Docker repository.", "notify": "clean yum cache"}, "module_options": {"name": "{{ docker_repo['name'] }}", "file": "{{ docker_repo['name'] }}", "description": "{{ docker_repo['name'] }}", "baseurl": "{{ docker_repo['yum_repo'] }}", "gpgkey": "{{ docker_repo['yum_gpg_key'] | default(omit) }}", "gpgcheck": "{{ docker_repo['yum_gpg_check'] | default(False) }}", "state": "present"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-python-pip.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install epel-release", "module": "package", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-python-pip.yml", "options": {"name": "Install epel-release", "when": "((not skip_docker_py) or (not skip_docker_compose)) and (ansible_os_family == 'RedHat' and ansible_distribution != 'Fedora')"}, "module_options": {"name": "epel-release", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-python-pip.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install python-pip.", "module": "package", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-python-pip.yml", "options": {"name": "Install python-pip.", "when": "(not skip_docker_py) or (not skip_docker_compose) or (ansible_os_family == 'Debian' and ansible_python_version is version_compare('2.6.0', '>=') and ansible_python_version is version_compare('2.7.9', '<'))"}, "module_options": {"name": "{{ python_pip_packages }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prefix the Docker package version with the correct separator on RedHat.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Prefix the Docker package version with the correct separator on RedHat.", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"_docker_package_version": "-{{ docker_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Prefix the Docker package version with the correct separator on Debian.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Prefix the Docker package version with the correct separator on Debian.", "when": "ansible_os_family == 'Debian'"}, "module_options": {"_docker_package_version": "={{ docker_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install Docker.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Install Docker."}, "module_options": {"name": "{{ docker_package_name }}{{ _docker_package_version | default('') }}", "state": "{{ docker_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create the systemd overrides directory for Docker.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Create the systemd overrides directory for Docker."}, "module_options": {"name": "/etc/systemd/system/docker.service.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Override the systemd unit for Docker.", "module": "template", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Override the systemd unit for Docker.", "register": "_docker_systemd_override"}, "module_options": {"src": "docker-override.conf.j2", "dest": "/etc/systemd/system/docker.service.d/override.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Reload systemd and restart Docker.", "module": "service", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Reload systemd and restart Docker.", "when": "_docker_systemd_override.changed"}, "module_options": {"name": "docker", "state": "{% if docker_service_state != 'stopped' %}restarted{% else %}stopped{% endif %}", "daemon_reload": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Make sure the Docker daemon configuration directory exists.", "module": "file", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Make sure the Docker daemon configuration directory exists."}, "module_options": {"path": "/etc/docker", "owner": "root", "group": "root", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Configure the Docker deamon.", "module": "template", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Configure the Docker deamon.", "notify": "restart docker"}, "module_options": {"src": "docker-daemon.json.j2", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Enable the Docker daemon service and start it.", "module": "service", "index": 8, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Enable the Docker daemon service and start it."}, "module_options": {"name": "docker", "state": "{{ docker_service_state }}", "enabled": "{{ docker_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install the Python SNI support packages.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Install the Python SNI support packages."}, "module_options": {"name": "{{ python_sni_support_packages }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install the Python SNI python-pip dependencies.", "module": "pip", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Install the Python SNI python-pip dependencies."}, "module_options": {"name": "{{ python_sni_pip_dependencies }}", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install apt-transport-https and gnupg if necessary.", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Install apt-transport-https and gnupg if necessary."}, "module_options": {"name": ["apt-transport-https", "gnupg"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Import Docker APT public key.", "module": "apt_key", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Import Docker APT public key."}, "module_options": {"url": "{{ docker_repo['apt_gpg_key'] }}", "id": "{{ docker_repo['apt_gpg_key_id'] | default('') }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Add the Docker APT repository.", "module": "apt_repository", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Add the Docker APT repository."}, "module_options": {"repo": "{{ docker_repo['apt_repo'] }}", "filename": "{{ docker_repo['name'] }}", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-py.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install docker-py.", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-py.yml", "options": {"name": "Install docker-py."}, "module_options": {"name": "{{ docker_py_package_name }}", "version": "{{ docker_py_package_version }}", "state": "{{ docker_py_package_state }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include os-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"name": "Include os-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Update APT cache.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"name": "Update APT cache.", "when": "ansible_os_family == 'Debian'", "changed_when": false}, "module_options": {"update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {}, "module_options": "setup-python-pip.yml", "executable": "setup-python-pip.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_repo"}, "module_options": "repo-{{ ansible_os_family }}.yml", "executable": "repo-{{ ansible_os_family }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install Docker dependencies.", "module": "package", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"name": "Install Docker dependencies.", "when": "not skip_containerd or not skip_engine"}, "module_options": {"name": "{{ docker_dependencies }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_containerd"}, "module_options": "setup-containerd.yml", "executable": "setup-containerd.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_engine"}, "module_options": "setup-docker-engine.yml", "executable": "setup-docker-engine.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_cli"}, "module_options": "setup-docker-cli.yml", "executable": "setup-docker-cli.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {}, "module_options": "setup-swarm-cluster.yml", "executable": "setup-swarm-cluster.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {}, "module_options": "setup-swarm-labels.yml", "executable": "setup-swarm-labels.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_group"}, "module_options": "setup-docker-group.yml", "executable": "setup-docker-group.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_docker_py"}, "module_options": "setup-docker-py.yml", "executable": "setup-docker-py.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_docker_compose"}, "module_options": "setup-docker-compose.yml", "executable": "setup-docker-compose.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml": {"py/object": "struct4.TaskFile", "name": "setup-swarm-labels.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get list of labels.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "options": {"name": "Get list of labels.", "register": "docker_swarm_labels", "changed_when": false, "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "tags": ["swarm_labels"]}, "module_options": "docker inspect --format {% raw %}'{{ range $key, $value := .Spec.Labels }}{{ printf \"%s\\n\" $key }}{{ end }}'{% endraw %} {{ ansible_fqdn|lower }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove labels from swarm node.", "module": "command", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "options": {"name": "Remove labels from swarm node.", "with_items": "{{ docker_swarm_labels.stdout_lines }}", "when": "item not in swarm_labels", "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "tags": ["swarm_labels"]}, "module_options": "docker node update --label-rm {{ item }} {{ ansible_fqdn|lower }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assign labels to swarm nodes if any.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "options": {"name": "Assign labels to swarm nodes if any.", "when": "item not in docker_swarm_labels.stdout_lines", "with_items": ["{{ swarm_labels  | default([]) }}"], "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "tags": ["swarm_labels"]}, "module_options": "docker node update --label-add {{ item }}=true {{ ansible_fqdn|lower }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml": {"py/object": "struct4.TaskFile", "name": "setup-docker-cli.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prefix the Docker CLI package version with the correct separator on RedHat.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "options": {"name": "Prefix the Docker CLI package version with the correct separator on RedHat.", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"_docker_cli_package_version": "-{{ docker_cli_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Prefix the Docker CLI package version with the correct separator on Debian.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "options": {"name": "Prefix the Docker CLI package version with the correct separator on Debian.", "when": "ansible_os_family == 'Debian'"}, "module_options": {"_docker_cli_package_version": "={{ docker_cli_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker CLI.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "options": {"name": "Install the Docker CLI."}, "module_options": {"name": "{{ docker_cli_package_name }}{{ _docker_cli_package_version | default('') }}", "state": "{{ docker_cli_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml": {"py/object": "struct4.TaskFile", "name": "setup-containerd.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prefix the containerd package version with the correct separator on RedHat.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Prefix the containerd package version with the correct separator on RedHat.", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"_containerd_package_version": "-{{ containerd_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Prefix the containerd package version with the correct separator on Debian.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Prefix the containerd package version with the correct separator on Debian.", "when": "ansible_os_family == 'Debian'"}, "module_options": {"_containerd_package_version": "={{ containerd_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install containerd.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Install containerd.", "when": "ansible_os_family != 'RedHat' or (ansible_os_family == 'RedHat' and ansible_distribution_major_version != '8')"}, "module_options": {"name": "{{ containerd_package_name }}{{ _containerd_package_version | default('') }}", "state": "{{ containerd_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install containerd on RHEL 8.", "module": "package", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Install containerd on RHEL 8.", "when": "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '8'"}, "module_options": {"name": "https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm", "state": "{{ containerd_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the systemd overrides directory for containerd.", "module": "file", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Create the systemd overrides directory for containerd."}, "module_options": {"name": "/etc/systemd/system/containerd.service.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Override the systemd unit for containerd.", "module": "template", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Override the systemd unit for containerd.", "register": "_containerd_systemd_override"}, "module_options": {"src": "containerd-override.conf.j2", "dest": "/etc/systemd/system/containerd.service.d/override.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd and restart containerd.", "module": "service", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Reload systemd and restart containerd.", "when": "_containerd_systemd_override.changed"}, "module_options": {"name": "containerd", "state": "{% if containerd_service_state != 'stopped' %}restarted{% else %}stopped{% endif %}", "daemon_reload": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable the containerd daemon service and start it.", "module": "service", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Enable the containerd daemon service and start it."}, "module_options": {"name": "containerd", "state": "{{ containerd_service_state }}", "enabled": "{{ containerd_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml": {"py/object": "struct4.TaskFile", "name": "setup-swarm-cluster.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create a custom Swarm network.", "module": "docker_network", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Create a custom Swarm network.", "when": "docker_swarm_network is defined and docker_swarm_network | ipaddr('net')"}, "module_options": {"name": "docker_gwbridge", "driver_options": {"com.docker.network.bridge.enable_icc": "false", "com.docker.network.bridge.enable_ip_masquerade": "true", "com.docker.network.bridge.name": "docker_gwbridge"}, "ipam_options": {"subnet": "{{ docker_swarm_network }}", "gateway": "{{ docker_swarm_network | ipaddr('net') | ipaddr('1') | ipaddr('ip') }}"}}, "executable": "docker_network", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if \"Swarm Mode\" is enabled.", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Check if \"Swarm Mode\" is enabled.", "changed_when": false, "register": "docker_info", "tags": ["skip_ansible_lint"]}, "module_options": "docker info", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Init \"Swarm Mode\" on the first manager.", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Init \"Swarm Mode\" on the first manager.", "when": "docker_info.stdout.find('Swarm: active') == -1 and inventory_hostname == groups['docker_swarm_manager'][0]", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm init --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }} --advertise-addr {{ docker_swarm_addr }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the worker join-token.", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Get the worker join-token.", "changed_when": false, "register": "docker_worker_token", "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "when": "'docker_swarm_worker' in group_names", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join-token -q worker", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the manager join-token.", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Get the manager join-token.", "changed_when": false, "register": "docker_manager_token", "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "when": "'docker_swarm_manager' in group_names and inventory_hostname != groups['docker_swarm_manager'][0]", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join-token -q manager", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Declare the address of the first Swarm manager as a fact.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Declare the address of the first Swarm manager as a fact.", "when": "inventory_hostname == groups['docker_swarm_manager'][0]"}, "module_options": {"docker_manager_address": "{{ docker_swarm_addr }}:{{ docker_swarm_port }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Distribute the fact containing address of the first Swarm manager.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Distribute the fact containing address of the first Swarm manager.", "when": "inventory_hostname != groups['docker_swarm_manager'][0]"}, "module_options": {"docker_manager_address": "{{ hostvars[groups['docker_swarm_manager'][0]]['docker_manager_address'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Join the pending Swarm worker nodes.", "module": "shell", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Join the pending Swarm worker nodes.", "changed_when": false, "when": "docker_info.stdout.find('Swarm: active') == -1 and docker_info.stdout.find('Swarm: pending') == -1 and 'docker_swarm_worker' in group_names and 'docker_swarm_manager' not in group_names", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }} --advertise-addr {{ docker_swarm_addr }} --token \"{{ docker_worker_token.stdout }}\" {{ docker_manager_address }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Join the pending Swarm manager nodes.", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Join the pending Swarm manager nodes.", "changed_when": false, "when": "docker_info.stdout.find('Swarm: active') == -1 and docker_info.stdout.find('Swarm: pending') == -1 and 'docker_swarm_manager' in group_names and inventory_hostname != groups['docker_swarm_manager'][0]", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }} --advertise-addr {{ docker_swarm_addr }} --token \"{{ docker_manager_token.stdout }}\" {{ docker_manager_address }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/reset-connection.yml": {"py/object": "struct4.TaskFile", "name": "reset-connection.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/reset-connection.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "meta", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/reset-connection.yml", "options": {}, "module_options": "reset_connection", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml": {"py/object": "struct4.TaskFile", "name": "setup-docker-compose.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get information on the latest docker-compose release from Github.", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "options": {"name": "Get information on the latest docker-compose release from Github.", "register": "_docker_compose_github_release", "check_mode": false, "until": "_docker_compose_github_release.status == 200", "retries": 5, "delay": 15}, "module_options": {"url": "https://api.github.com/repos/docker/compose/releases/latest", "method": "GET"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract the name of the latest docker-compose release tag.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "options": {"name": "Extract the name of the latest docker-compose release tag."}, "module_options": {"docker_compose_version": "{{ _docker_compose_github_release['json'] | json_query('tag_name') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download docker-compose.", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "options": {"name": "Download docker-compose."}, "module_options": {"url": "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}", "dest": "/usr/local/bin/docker-compose", "mode": "0755"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml": {"py/object": "struct4.TaskFile", "name": "setup-docker-group.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "tasks": [{"py/object": "struct4.Task", "name": "Add the Docker administrators to the Docker group.", "module": "user", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "options": {"name": "Add the Docker administrators to the Docker group.", "register": "addtogroup", "become": true, "with_items": "{{ docker_group_users }}"}, "module_options": {"name": "{{ item }}", "groups": "{{ docker_group_name }}", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reset ansible connection after group changes (Ansible < 2.3.0).", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "options": {"name": "Reset ansible connection after group changes (Ansible < 2.3.0).", "async": 3, "poll": 2, "failed_when": false, "when": "ansible_version is defined and (ansible_version.full is version_compare('2.3.0.0', '<'))"}, "module_options": "sleep 1; pkill -u {{ ansible_user }} {{ ssh_daemon }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reset ansible connection after group changes (Ansible >= 2.3.0).", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "options": {"name": "Reset ansible connection after group changes (Ansible >= 2.3.0).", "when": "ansible_version is defined and (ansible_version.full is version_compare('2.3.0.0', '>='))"}, "module_options": "reset-connection.yml", "executable": "reset-connection.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-RedHat.yml": {"py/object": "struct4.TaskFile", "name": "repo-RedHat.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install yum-utils if necessary.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-RedHat.yml", "options": {"name": "Install yum-utils if necessary."}, "module_options": {"name": "yum-utils", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the YUM Docker repository.", "module": "yum_repository", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-RedHat.yml", "options": {"name": "Add the YUM Docker repository.", "notify": "clean yum cache"}, "module_options": {"name": "{{ docker_repo['name'] }}", "file": "{{ docker_repo['name'] }}", "description": "{{ docker_repo['name'] }}", "baseurl": "{{ docker_repo['yum_repo'] }}", "gpgkey": "{{ docker_repo['yum_gpg_key'] | default(omit) }}", "gpgcheck": "{{ docker_repo['yum_gpg_check'] | default(False) }}", "state": "present"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-python-pip.yml": {"py/object": "struct4.TaskFile", "name": "setup-python-pip.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-python-pip.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install epel-release", "module": "package", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-python-pip.yml", "options": {"name": "Install epel-release", "when": "((not skip_docker_py) or (not skip_docker_compose)) and (ansible_os_family == 'RedHat' and ansible_distribution != 'Fedora')"}, "module_options": {"name": "epel-release", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install python-pip.", "module": "package", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-python-pip.yml", "options": {"name": "Install python-pip.", "when": "(not skip_docker_py) or (not skip_docker_compose) or (ansible_os_family == 'Debian' and ansible_python_version is version_compare('2.6.0', '>=') and ansible_python_version is version_compare('2.7.9', '<'))"}, "module_options": {"name": "{{ python_pip_packages }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml": {"py/object": "struct4.TaskFile", "name": "setup-docker-engine.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prefix the Docker package version with the correct separator on RedHat.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Prefix the Docker package version with the correct separator on RedHat.", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"_docker_package_version": "-{{ docker_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Prefix the Docker package version with the correct separator on Debian.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Prefix the Docker package version with the correct separator on Debian.", "when": "ansible_os_family == 'Debian'"}, "module_options": {"_docker_package_version": "={{ docker_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Install Docker."}, "module_options": {"name": "{{ docker_package_name }}{{ _docker_package_version | default('') }}", "state": "{{ docker_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the systemd overrides directory for Docker.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Create the systemd overrides directory for Docker."}, "module_options": {"name": "/etc/systemd/system/docker.service.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Override the systemd unit for Docker.", "module": "template", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Override the systemd unit for Docker.", "register": "_docker_systemd_override"}, "module_options": {"src": "docker-override.conf.j2", "dest": "/etc/systemd/system/docker.service.d/override.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd and restart Docker.", "module": "service", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Reload systemd and restart Docker.", "when": "_docker_systemd_override.changed"}, "module_options": {"name": "docker", "state": "{% if docker_service_state != 'stopped' %}restarted{% else %}stopped{% endif %}", "daemon_reload": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the Docker daemon configuration directory exists.", "module": "file", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Make sure the Docker daemon configuration directory exists."}, "module_options": {"path": "/etc/docker", "owner": "root", "group": "root", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure the Docker deamon.", "module": "template", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Configure the Docker deamon.", "notify": "restart docker"}, "module_options": {"src": "docker-daemon.json.j2", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable the Docker daemon service and start it.", "module": "service", "index": 8, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Enable the Docker daemon service and start it."}, "module_options": {"name": "docker", "state": "{{ docker_service_state }}", "enabled": "{{ docker_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml": {"py/object": "struct4.TaskFile", "name": "repo-Debian.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install the Python SNI support packages.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Install the Python SNI support packages."}, "module_options": {"name": "{{ python_sni_support_packages }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Python SNI python-pip dependencies.", "module": "pip", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Install the Python SNI python-pip dependencies."}, "module_options": {"name": "{{ python_sni_pip_dependencies }}", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install apt-transport-https and gnupg if necessary.", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Install apt-transport-https and gnupg if necessary."}, "module_options": {"name": ["apt-transport-https", "gnupg"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import Docker APT public key.", "module": "apt_key", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Import Docker APT public key."}, "module_options": {"url": "{{ docker_repo['apt_gpg_key'] }}", "id": "{{ docker_repo['apt_gpg_key_id'] | default('') }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the Docker APT repository.", "module": "apt_repository", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Add the Docker APT repository."}, "module_options": {"repo": "{{ docker_repo['apt_repo'] }}", "filename": "{{ docker_repo['name'] }}", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-py.yml": {"py/object": "struct4.TaskFile", "name": "setup-docker-py.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-py.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install docker-py.", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-py.yml", "options": {"name": "Install docker-py."}, "module_options": {"name": "{{ docker_py_package_name }}", "version": "{{ docker_py_package_version }}", "state": "{{ docker_py_package_state }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include os-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"name": "Include os-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update APT cache.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"name": "Update APT cache.", "when": "ansible_os_family == 'Debian'", "changed_when": false}, "module_options": {"update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {}, "module_options": "setup-python-pip.yml", "executable": "setup-python-pip.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_repo"}, "module_options": "repo-{{ ansible_os_family }}.yml", "executable": "repo-{{ ansible_os_family }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker dependencies.", "module": "package", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"name": "Install Docker dependencies.", "when": "not skip_containerd or not skip_engine"}, "module_options": {"name": "{{ docker_dependencies }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_containerd"}, "module_options": "setup-containerd.yml", "executable": "setup-containerd.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_engine"}, "module_options": "setup-docker-engine.yml", "executable": "setup-docker-engine.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_cli"}, "module_options": "setup-docker-cli.yml", "executable": "setup-docker-cli.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {}, "module_options": "setup-swarm-cluster.yml", "executable": "setup-swarm-cluster.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {}, "module_options": "setup-swarm-labels.yml", "executable": "setup-swarm-labels.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_group"}, "module_options": "setup-docker-group.yml", "executable": "setup-docker-group.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_docker_py"}, "module_options": "setup-docker-py.yml", "executable": "setup-docker-py.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_docker_compose"}, "module_options": "setup-docker-compose.yml", "executable": "setup-docker-compose.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}}, "role_dict": {"atosatto.docker-swarm": {"py/object": "struct4.Role", "name": "atosatto.docker-swarm", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm", "fqcn": "atosatto.docker-swarm", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "setup-swarm-labels.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get list of labels.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "options": {"name": "Get list of labels.", "register": "docker_swarm_labels", "changed_when": false, "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "tags": ["swarm_labels"]}, "module_options": "docker inspect --format {% raw %}'{{ range $key, $value := .Spec.Labels }}{{ printf \"%s\\n\" $key }}{{ end }}'{% endraw %} {{ ansible_fqdn|lower }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove labels from swarm node.", "module": "command", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "options": {"name": "Remove labels from swarm node.", "with_items": "{{ docker_swarm_labels.stdout_lines }}", "when": "item not in swarm_labels", "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "tags": ["swarm_labels"]}, "module_options": "docker node update --label-rm {{ item }} {{ ansible_fqdn|lower }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assign labels to swarm nodes if any.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-labels.yml", "options": {"name": "Assign labels to swarm nodes if any.", "when": "item not in docker_swarm_labels.stdout_lines", "with_items": ["{{ swarm_labels  | default([]) }}"], "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "tags": ["swarm_labels"]}, "module_options": "docker node update --label-add {{ item }}=true {{ ansible_fqdn|lower }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-docker-cli.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prefix the Docker CLI package version with the correct separator on RedHat.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "options": {"name": "Prefix the Docker CLI package version with the correct separator on RedHat.", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"_docker_cli_package_version": "-{{ docker_cli_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Prefix the Docker CLI package version with the correct separator on Debian.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "options": {"name": "Prefix the Docker CLI package version with the correct separator on Debian.", "when": "ansible_os_family == 'Debian'"}, "module_options": {"_docker_cli_package_version": "={{ docker_cli_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker CLI.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-cli.yml", "options": {"name": "Install the Docker CLI."}, "module_options": {"name": "{{ docker_cli_package_name }}{{ _docker_cli_package_version | default('') }}", "state": "{{ docker_cli_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-containerd.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prefix the containerd package version with the correct separator on RedHat.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Prefix the containerd package version with the correct separator on RedHat.", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"_containerd_package_version": "-{{ containerd_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Prefix the containerd package version with the correct separator on Debian.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Prefix the containerd package version with the correct separator on Debian.", "when": "ansible_os_family == 'Debian'"}, "module_options": {"_containerd_package_version": "={{ containerd_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install containerd.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Install containerd.", "when": "ansible_os_family != 'RedHat' or (ansible_os_family == 'RedHat' and ansible_distribution_major_version != '8')"}, "module_options": {"name": "{{ containerd_package_name }}{{ _containerd_package_version | default('') }}", "state": "{{ containerd_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install containerd on RHEL 8.", "module": "package", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Install containerd on RHEL 8.", "when": "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '8'"}, "module_options": {"name": "https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm", "state": "{{ containerd_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the systemd overrides directory for containerd.", "module": "file", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Create the systemd overrides directory for containerd."}, "module_options": {"name": "/etc/systemd/system/containerd.service.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Override the systemd unit for containerd.", "module": "template", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Override the systemd unit for containerd.", "register": "_containerd_systemd_override"}, "module_options": {"src": "containerd-override.conf.j2", "dest": "/etc/systemd/system/containerd.service.d/override.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd and restart containerd.", "module": "service", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Reload systemd and restart containerd.", "when": "_containerd_systemd_override.changed"}, "module_options": {"name": "containerd", "state": "{% if containerd_service_state != 'stopped' %}restarted{% else %}stopped{% endif %}", "daemon_reload": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable the containerd daemon service and start it.", "module": "service", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-containerd.yml", "options": {"name": "Enable the containerd daemon service and start it."}, "module_options": {"name": "containerd", "state": "{{ containerd_service_state }}", "enabled": "{{ containerd_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-swarm-cluster.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create a custom Swarm network.", "module": "docker_network", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Create a custom Swarm network.", "when": "docker_swarm_network is defined and docker_swarm_network | ipaddr('net')"}, "module_options": {"name": "docker_gwbridge", "driver_options": {"com.docker.network.bridge.enable_icc": "false", "com.docker.network.bridge.enable_ip_masquerade": "true", "com.docker.network.bridge.name": "docker_gwbridge"}, "ipam_options": {"subnet": "{{ docker_swarm_network }}", "gateway": "{{ docker_swarm_network | ipaddr('net') | ipaddr('1') | ipaddr('ip') }}"}}, "executable": "docker_network", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if \"Swarm Mode\" is enabled.", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Check if \"Swarm Mode\" is enabled.", "changed_when": false, "register": "docker_info", "tags": ["skip_ansible_lint"]}, "module_options": "docker info", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Init \"Swarm Mode\" on the first manager.", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Init \"Swarm Mode\" on the first manager.", "when": "docker_info.stdout.find('Swarm: active') == -1 and inventory_hostname == groups['docker_swarm_manager'][0]", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm init --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }} --advertise-addr {{ docker_swarm_addr }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the worker join-token.", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Get the worker join-token.", "changed_when": false, "register": "docker_worker_token", "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "when": "'docker_swarm_worker' in group_names", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join-token -q worker", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the manager join-token.", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Get the manager join-token.", "changed_when": false, "register": "docker_manager_token", "delegate_to": "{{ groups['docker_swarm_manager'][0] }}", "delegate_facts": true, "when": "'docker_swarm_manager' in group_names and inventory_hostname != groups['docker_swarm_manager'][0]", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join-token -q manager", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Declare the address of the first Swarm manager as a fact.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Declare the address of the first Swarm manager as a fact.", "when": "inventory_hostname == groups['docker_swarm_manager'][0]"}, "module_options": {"docker_manager_address": "{{ docker_swarm_addr }}:{{ docker_swarm_port }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Distribute the fact containing address of the first Swarm manager.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Distribute the fact containing address of the first Swarm manager.", "when": "inventory_hostname != groups['docker_swarm_manager'][0]"}, "module_options": {"docker_manager_address": "{{ hostvars[groups['docker_swarm_manager'][0]]['docker_manager_address'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Join the pending Swarm worker nodes.", "module": "shell", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Join the pending Swarm worker nodes.", "changed_when": false, "when": "docker_info.stdout.find('Swarm: active') == -1 and docker_info.stdout.find('Swarm: pending') == -1 and 'docker_swarm_worker' in group_names and 'docker_swarm_manager' not in group_names", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }} --advertise-addr {{ docker_swarm_addr }} --token \"{{ docker_worker_token.stdout }}\" {{ docker_manager_address }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Join the pending Swarm manager nodes.", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-swarm-cluster.yml", "options": {"name": "Join the pending Swarm manager nodes.", "changed_when": false, "when": "docker_info.stdout.find('Swarm: active') == -1 and docker_info.stdout.find('Swarm: pending') == -1 and 'docker_swarm_manager' in group_names and inventory_hostname != groups['docker_swarm_manager'][0]", "tags": ["skip_ansible_lint"]}, "module_options": "docker swarm join --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }} --advertise-addr {{ docker_swarm_addr }} --token \"{{ docker_manager_token.stdout }}\" {{ docker_manager_address }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "reset-connection.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/reset-connection.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "meta", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/reset-connection.yml", "options": {}, "module_options": "reset_connection", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-docker-compose.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get information on the latest docker-compose release from Github.", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "options": {"name": "Get information on the latest docker-compose release from Github.", "register": "_docker_compose_github_release", "check_mode": false, "until": "_docker_compose_github_release.status == 200", "retries": 5, "delay": 15}, "module_options": {"url": "https://api.github.com/repos/docker/compose/releases/latest", "method": "GET"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract the name of the latest docker-compose release tag.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "options": {"name": "Extract the name of the latest docker-compose release tag."}, "module_options": {"docker_compose_version": "{{ _docker_compose_github_release['json'] | json_query('tag_name') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download docker-compose.", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-compose.yml", "options": {"name": "Download docker-compose."}, "module_options": {"url": "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}", "dest": "/usr/local/bin/docker-compose", "mode": "0755"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-docker-group.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "tasks": [{"py/object": "struct4.Task", "name": "Add the Docker administrators to the Docker group.", "module": "user", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "options": {"name": "Add the Docker administrators to the Docker group.", "register": "addtogroup", "become": true, "with_items": "{{ docker_group_users }}"}, "module_options": {"name": "{{ item }}", "groups": "{{ docker_group_name }}", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reset ansible connection after group changes (Ansible < 2.3.0).", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "options": {"name": "Reset ansible connection after group changes (Ansible < 2.3.0).", "async": 3, "poll": 2, "failed_when": false, "when": "ansible_version is defined and (ansible_version.full is version_compare('2.3.0.0', '<'))"}, "module_options": "sleep 1; pkill -u {{ ansible_user }} {{ ssh_daemon }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reset ansible connection after group changes (Ansible >= 2.3.0).", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-group.yml", "options": {"name": "Reset ansible connection after group changes (Ansible >= 2.3.0).", "when": "ansible_version is defined and (ansible_version.full is version_compare('2.3.0.0', '>='))"}, "module_options": "reset-connection.yml", "executable": "reset-connection.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "repo-RedHat.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install yum-utils if necessary.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-RedHat.yml", "options": {"name": "Install yum-utils if necessary."}, "module_options": {"name": "yum-utils", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the YUM Docker repository.", "module": "yum_repository", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-RedHat.yml", "options": {"name": "Add the YUM Docker repository.", "notify": "clean yum cache"}, "module_options": {"name": "{{ docker_repo['name'] }}", "file": "{{ docker_repo['name'] }}", "description": "{{ docker_repo['name'] }}", "baseurl": "{{ docker_repo['yum_repo'] }}", "gpgkey": "{{ docker_repo['yum_gpg_key'] | default(omit) }}", "gpgcheck": "{{ docker_repo['yum_gpg_check'] | default(False) }}", "state": "present"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-python-pip.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-python-pip.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install epel-release", "module": "package", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-python-pip.yml", "options": {"name": "Install epel-release", "when": "((not skip_docker_py) or (not skip_docker_compose)) and (ansible_os_family == 'RedHat' and ansible_distribution != 'Fedora')"}, "module_options": {"name": "epel-release", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install python-pip.", "module": "package", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-python-pip.yml", "options": {"name": "Install python-pip.", "when": "(not skip_docker_py) or (not skip_docker_compose) or (ansible_os_family == 'Debian' and ansible_python_version is version_compare('2.6.0', '>=') and ansible_python_version is version_compare('2.7.9', '<'))"}, "module_options": {"name": "{{ python_pip_packages }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-docker-engine.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prefix the Docker package version with the correct separator on RedHat.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Prefix the Docker package version with the correct separator on RedHat.", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"_docker_package_version": "-{{ docker_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Prefix the Docker package version with the correct separator on Debian.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Prefix the Docker package version with the correct separator on Debian.", "when": "ansible_os_family == 'Debian'"}, "module_options": {"_docker_package_version": "={{ docker_package_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Install Docker."}, "module_options": {"name": "{{ docker_package_name }}{{ _docker_package_version | default('') }}", "state": "{{ docker_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the systemd overrides directory for Docker.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Create the systemd overrides directory for Docker."}, "module_options": {"name": "/etc/systemd/system/docker.service.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Override the systemd unit for Docker.", "module": "template", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Override the systemd unit for Docker.", "register": "_docker_systemd_override"}, "module_options": {"src": "docker-override.conf.j2", "dest": "/etc/systemd/system/docker.service.d/override.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd and restart Docker.", "module": "service", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Reload systemd and restart Docker.", "when": "_docker_systemd_override.changed"}, "module_options": {"name": "docker", "state": "{% if docker_service_state != 'stopped' %}restarted{% else %}stopped{% endif %}", "daemon_reload": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the Docker daemon configuration directory exists.", "module": "file", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Make sure the Docker daemon configuration directory exists."}, "module_options": {"path": "/etc/docker", "owner": "root", "group": "root", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure the Docker deamon.", "module": "template", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Configure the Docker deamon.", "notify": "restart docker"}, "module_options": {"src": "docker-daemon.json.j2", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable the Docker daemon service and start it.", "module": "service", "index": 8, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-engine.yml", "options": {"name": "Enable the Docker daemon service and start it."}, "module_options": {"name": "docker", "state": "{{ docker_service_state }}", "enabled": "{{ docker_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "repo-Debian.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install the Python SNI support packages.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Install the Python SNI support packages."}, "module_options": {"name": "{{ python_sni_support_packages }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Python SNI python-pip dependencies.", "module": "pip", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Install the Python SNI python-pip dependencies."}, "module_options": {"name": "{{ python_sni_pip_dependencies }}", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install apt-transport-https and gnupg if necessary.", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Install apt-transport-https and gnupg if necessary."}, "module_options": {"name": ["apt-transport-https", "gnupg"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import Docker APT public key.", "module": "apt_key", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Import Docker APT public key."}, "module_options": {"url": "{{ docker_repo['apt_gpg_key'] }}", "id": "{{ docker_repo['apt_gpg_key_id'] | default('') }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the Docker APT repository.", "module": "apt_repository", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/repo-Debian.yml", "options": {"name": "Add the Docker APT repository."}, "module_options": {"repo": "{{ docker_repo['apt_repo'] }}", "filename": "{{ docker_repo['name'] }}", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-docker-py.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-py.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install docker-py.", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/setup-docker-py.yml", "options": {"name": "Install docker-py."}, "module_options": {"name": "{{ docker_py_package_name }}", "version": "{{ docker_py_package_version }}", "state": "{{ docker_py_package_state }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include os-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"name": "Include os-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update APT cache.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"name": "Update APT cache.", "when": "ansible_os_family == 'Debian'", "changed_when": false}, "module_options": {"update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {}, "module_options": "setup-python-pip.yml", "executable": "setup-python-pip.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_repo"}, "module_options": "repo-{{ ansible_os_family }}.yml", "executable": "repo-{{ ansible_os_family }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker dependencies.", "module": "package", "index": 4, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"name": "Install Docker dependencies.", "when": "not skip_containerd or not skip_engine"}, "module_options": {"name": "{{ docker_dependencies }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_containerd"}, "module_options": "setup-containerd.yml", "executable": "setup-containerd.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_engine"}, "module_options": "setup-docker-engine.yml", "executable": "setup-docker-engine.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_cli"}, "module_options": "setup-docker-cli.yml", "executable": "setup-docker-cli.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {}, "module_options": "setup-swarm-cluster.yml", "executable": "setup-swarm-cluster.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {}, "module_options": "setup-swarm-labels.yml", "executable": "setup-swarm-labels.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_group"}, "module_options": "setup-docker-group.yml", "executable": "setup-docker-group.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_docker_py"}, "module_options": "setup-docker-py.yml", "executable": "setup-docker-py.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/atosatto-docker-swarm/atosatto.docker-swarm/tasks/main.yml", "options": {"when": "not skip_docker_compose"}, "module_options": "setup-docker-compose.yml", "executable": "setup-docker-compose.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "atosatto.docker-swarm", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}