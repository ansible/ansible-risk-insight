{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/bertvv-bind", "installed_roles": [{"py/object": "struct4.Role", "name": "bertvv.bind", "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind", "fqcn": "bertvv.bind", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "zones.yml", "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set list of all host IP addresses", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Set list of all host IP addresses", "tags": "bind"}, "module_options": {"host_all_addresses": "{{ ansible_all_ipv4_addresses | union(ansible_all_ipv6_addresses) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read forward zone hashes", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Read forward zone hashes", "changed_when": false, "check_mode": false, "register": "forward_hashes_temp", "with_items": ["{{ bind_zones }}"], "run_once": true, "loop_control": {"label": "{{ item.name }}"}, "tags": "bind"}, "module_options": "grep -s \"^; Hash:\" {{ bind_zone_dir }}/{{ item.name }} || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create dict of forward hashes", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create dict of forward hashes", "with_items": ["{{ forward_hashes_temp.results }}"], "run_once": true, "loop_control": {"label": "{{ item.item.name }}"}, "tags": "bind"}, "module_options": {"forward_hashes": "{{ forward_hashes|default([]) + [ {'hash': item.stdout|default(), 'name': item.item.name} ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read reverse ipv4 zone hashes", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Read reverse ipv4 zone hashes", "changed_when": false, "check_mode": false, "register": "reverse_hashes_temp", "with_subelements": ["{{ bind_zones }}", "networks", {"flags": null, "skip_missing": true}], "run_once": true, "loop_control": {"label": "{{ item.1 }}"}, "tags": "bind"}, "module_options": "grep -s \"^; Hash:\" {{ bind_zone_dir }}/{{ ('.'.join(item.1.replace(item.1+'.','').split('.')[::-1])) }}.in-addr.arpa || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create dict of reverse hashes", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create dict of reverse hashes", "with_subelements": ["{{ reverse_hashes_temp.results }}", "item"], "run_once": true, "loop_control": {"label": "{{ item.1.name |default(item.0.cmd.split(' ')[4]) }}"}, "tags": "bind"}, "module_options": {"reverse_hashes": "{{ reverse_hashes|default([]) + [ {'hash': item.0.stdout|default(), 'network': item.1} ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read reverse ipv6 zone hashes", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Read reverse ipv6 zone hashes", "changed_when": false, "check_mode": false, "register": "reverse_hashes_ipv6_temp", "with_subelements": ["{{ bind_zones }}", "ipv6_networks", {"flags": null, "skip_missing": true}], "run_once": true, "loop_control": {"label": "{{ item.1 }}"}, "tags": "bind"}, "module_options": "grep -s \"^; Hash:\" {{ bind_zone_dir }}/{{ (item.1 | ipaddr('revdns'))[-(9+(item.1|regex_replace('^.*/','')|int)//2):-1] }} || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create dict of reverse ipv6 hashes", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create dict of reverse ipv6 hashes", "with_subelements": ["{{ reverse_hashes_ipv6_temp.results }}", "item"], "run_once": true, "loop_control": {"label": "{{ item.1.name |default(item.0.cmd.split(' ')[4]) }}"}, "tags": "bind"}, "module_options": {"reverse_hashes_ipv6": "{{ reverse_hashes_ipv6|default([]) + [ {'hash': item.0.stdout|default(), 'network': item.1} ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create forward lookup zone file", "module": "template", "index": 7, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create forward lookup zone file", "become": true, "with_items": ["{{ bind_zones }}"], "loop_control": {"label": "{{ item.name }}"}, "when": "(item.create_forward_zones is not defined or item.create_forward_zones) and ((item.type is defined and item.type == 'primary') or (item.type is not defined and item.primaries is defined and (host_all_addresses | intersect(item.primaries) | length > 0)))\n", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "bind_zone.j2", "dest": "{{ bind_zone_dir }}/{{ item.name }}", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": "{{ bind_zone_file_mode }}", "setype": "named_zone_t", "validate": "named-checkzone -d {{ item.name }} %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create reverse lookup zone file", "module": "template", "index": 8, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create reverse lookup zone file", "become": true, "with_subelements": ["{{ bind_zones }}", "networks", {"flags": null, "skip_missing": true}], "loop_control": {"label": "{{ item.1 }}"}, "when": "(item.create_reverse_zones is not defined or item.create_reverse_zones) and ((item[0].type is defined and item[0].type == 'primary') or (item[0].type is not defined and item[0].primaries is defined and (host_all_addresses | intersect(item[0].primaries) | length > 0)))\n", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "reverse_zone.j2", "dest": "{{ bind_zone_dir }}/{{ ('.'.join(item.1.replace(item.1+'.','').split('.')[::-1])) }}.in-addr.arpa", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": "{{ bind_zone_file_mode }}", "setype": "named_zone_t", "validate": "named-checkzone {{ ('.'.join(item.1.replace(item.1+'.','').split('.')[::-1])) }}.in-addr.arpa %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create reverse IPv6 lookup zone file", "module": "template", "index": 9, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create reverse IPv6 lookup zone file", "become": true, "with_subelements": ["{{ bind_zones }}", "ipv6_networks", {"flags": null, "skip_missing": true}], "loop_control": {"label": "{{ item.1 }}"}, "when": "(item.create_reverse_zones is not defined or item.create_reverse_zones) and ((item[0].type is defined and item[0].type == 'primary') or (item[0].type is not defined and item[0].primaries is defined and (host_all_addresses | intersect(item[0].primaries) | length > 0)))\n", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "reverse_zone_ipv6.j2", "dest": "{{ bind_zone_dir }}/{{ (item.1 | ipaddr('revdns'))[-(9+(item.1|regex_replace('^.*/','')|int)//2):-1] }}", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": "{{ bind_zone_file_mode }}", "setype": "named_zone_t", "validate": "named-checkzone {{ (item.1 | ipaddr('revdns'))[-(9+(item.1|regex_replace('^.*/','')|int)//2):] }} %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "bertvv.bind", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Source specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Source specific variables", "with_first_found": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_distribution_file_variety }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution_file_variety }}.yml"], "tags": "bind"}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check `primaries` or `forwarders` was set for each zone", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Check `primaries` or `forwarders` was set for each zone", "loop": "{{ bind_zones }}", "loop_control": {"label": "{{ item.name }}"}, "tags": "bind"}, "module_options": {"that": ["item.primaries is defined or item.forwarders is defined"], "quiet": true}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update package cache for Debian based distros", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Update package cache for Debian based distros", "become": true, "changed_when": false, "when": "ansible_os_family == 'Debian'", "tags": "bind"}, "module_options": {"update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that all XFR keys exist in the key list", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Assert that all XFR keys exist in the key list", "loop": "{{ bind_key_mapping.keys() | list }}", "when": "bind_key_mapping | list | count > 0"}, "module_options": {"that": "bind_dns_keys | selectattr(\"name\",\"equalto\",bind_key_mapping[item]) | list | count > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install BIND", "module": "package", "index": 4, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Install BIND", "become": true, "with_items": ["{{ bind_packages }}"], "tags": "bind"}, "module_options": {"pkg": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure runtime directories referenced in config exist", "module": "file", "index": 5, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Ensure runtime directories referenced in config exist", "become": true, "with_items": ["{{ bind_dir }}/dynamic", "{{ bind_dir }}/data", "{{ bind_zone_dir }}"], "tags": "bind"}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": 504}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Directory for Cached Secondary Zones exists", "module": "file", "index": 6, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Ensure Directory for Cached Secondary Zones exists", "become": true, "tags": "bind"}, "module_options": {"path": "{{ bind_secondary_dir }}", "state": "directory", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": 504, "setype": "named_cache_t"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create serial, based on UTC UNIX time", "module": "command", "index": 7, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Create serial, based on UTC UNIX time", "register": "timestamp", "changed_when": false, "run_once": true, "check_mode": false, "tags": "bind"}, "module_options": "date -u +%s", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create extra config for authenticated XFR request", "module": "template", "index": 8, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Create extra config for authenticated XFR request", "become": true, "when": "bind_dns_keys is defined and bind_dns_keys|length > 0", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "auth_transfer.j2", "dest": "{{ bind_conf_dir }}/{{ auth_file }}", "mode": 416, "owner": "root", "group": "{{ bind_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zones", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Configure zones", "tags": "bind"}, "module_options": "zones.yml", "executable": "zones.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Main BIND config file", "module": "template", "index": 10, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Main BIND config file", "become": true, "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "etc_named.conf.j2", "dest": "{{ bind_config }}", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": 416, "setype": "named_conf_t", "validate": "named-checkconf %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start BIND service", "module": "service", "index": 11, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Start BIND service", "become": true, "tags": "bind"}, "module_options": {"name": "{{ bind_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "bertvv.bind", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set list of all host IP addresses", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Set list of all host IP addresses", "tags": "bind"}, "module_options": {"host_all_addresses": "{{ ansible_all_ipv4_addresses | union(ansible_all_ipv6_addresses) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Read forward zone hashes", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Read forward zone hashes", "changed_when": false, "check_mode": false, "register": "forward_hashes_temp", "with_items": ["{{ bind_zones }}"], "run_once": true, "loop_control": {"label": "{{ item.name }}"}, "tags": "bind"}, "module_options": "grep -s \"^; Hash:\" {{ bind_zone_dir }}/{{ item.name }} || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create dict of forward hashes", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create dict of forward hashes", "with_items": ["{{ forward_hashes_temp.results }}"], "run_once": true, "loop_control": {"label": "{{ item.item.name }}"}, "tags": "bind"}, "module_options": {"forward_hashes": "{{ forward_hashes|default([]) + [ {'hash': item.stdout|default(), 'name': item.item.name} ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Read reverse ipv4 zone hashes", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Read reverse ipv4 zone hashes", "changed_when": false, "check_mode": false, "register": "reverse_hashes_temp", "with_subelements": ["{{ bind_zones }}", "networks", {"flags": null, "skip_missing": true}], "run_once": true, "loop_control": {"label": "{{ item.1 }}"}, "tags": "bind"}, "module_options": "grep -s \"^; Hash:\" {{ bind_zone_dir }}/{{ ('.'.join(item.1.replace(item.1+'.','').split('.')[::-1])) }}.in-addr.arpa || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create dict of reverse hashes", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create dict of reverse hashes", "with_subelements": ["{{ reverse_hashes_temp.results }}", "item"], "run_once": true, "loop_control": {"label": "{{ item.1.name |default(item.0.cmd.split(' ')[4]) }}"}, "tags": "bind"}, "module_options": {"reverse_hashes": "{{ reverse_hashes|default([]) + [ {'hash': item.0.stdout|default(), 'network': item.1} ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Read reverse ipv6 zone hashes", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Read reverse ipv6 zone hashes", "changed_when": false, "check_mode": false, "register": "reverse_hashes_ipv6_temp", "with_subelements": ["{{ bind_zones }}", "ipv6_networks", {"flags": null, "skip_missing": true}], "run_once": true, "loop_control": {"label": "{{ item.1 }}"}, "tags": "bind"}, "module_options": "grep -s \"^; Hash:\" {{ bind_zone_dir }}/{{ (item.1 | ipaddr('revdns'))[-(9+(item.1|regex_replace('^.*/','')|int)//2):-1] }} || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create dict of reverse ipv6 hashes", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create dict of reverse ipv6 hashes", "with_subelements": ["{{ reverse_hashes_ipv6_temp.results }}", "item"], "run_once": true, "loop_control": {"label": "{{ item.1.name |default(item.0.cmd.split(' ')[4]) }}"}, "tags": "bind"}, "module_options": {"reverse_hashes_ipv6": "{{ reverse_hashes_ipv6|default([]) + [ {'hash': item.0.stdout|default(), 'network': item.1} ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create forward lookup zone file", "module": "template", "index": 7, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create forward lookup zone file", "become": true, "with_items": ["{{ bind_zones }}"], "loop_control": {"label": "{{ item.name }}"}, "when": "(item.create_forward_zones is not defined or item.create_forward_zones) and ((item.type is defined and item.type == 'primary') or (item.type is not defined and item.primaries is defined and (host_all_addresses | intersect(item.primaries) | length > 0)))\n", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "bind_zone.j2", "dest": "{{ bind_zone_dir }}/{{ item.name }}", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": "{{ bind_zone_file_mode }}", "setype": "named_zone_t", "validate": "named-checkzone -d {{ item.name }} %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create reverse lookup zone file", "module": "template", "index": 8, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create reverse lookup zone file", "become": true, "with_subelements": ["{{ bind_zones }}", "networks", {"flags": null, "skip_missing": true}], "loop_control": {"label": "{{ item.1 }}"}, "when": "(item.create_reverse_zones is not defined or item.create_reverse_zones) and ((item[0].type is defined and item[0].type == 'primary') or (item[0].type is not defined and item[0].primaries is defined and (host_all_addresses | intersect(item[0].primaries) | length > 0)))\n", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "reverse_zone.j2", "dest": "{{ bind_zone_dir }}/{{ ('.'.join(item.1.replace(item.1+'.','').split('.')[::-1])) }}.in-addr.arpa", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": "{{ bind_zone_file_mode }}", "setype": "named_zone_t", "validate": "named-checkzone {{ ('.'.join(item.1.replace(item.1+'.','').split('.')[::-1])) }}.in-addr.arpa %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create reverse IPv6 lookup zone file", "module": "template", "index": 9, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create reverse IPv6 lookup zone file", "become": true, "with_subelements": ["{{ bind_zones }}", "ipv6_networks", {"flags": null, "skip_missing": true}], "loop_control": {"label": "{{ item.1 }}"}, "when": "(item.create_reverse_zones is not defined or item.create_reverse_zones) and ((item[0].type is defined and item[0].type == 'primary') or (item[0].type is not defined and item[0].primaries is defined and (host_all_addresses | intersect(item[0].primaries) | length > 0)))\n", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "reverse_zone_ipv6.j2", "dest": "{{ bind_zone_dir }}/{{ (item.1 | ipaddr('revdns'))[-(9+(item.1|regex_replace('^.*/','')|int)//2):-1] }}", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": "{{ bind_zone_file_mode }}", "setype": "named_zone_t", "validate": "named-checkzone {{ (item.1 | ipaddr('revdns'))[-(9+(item.1|regex_replace('^.*/','')|int)//2):] }} %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Source specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Source specific variables", "with_first_found": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_distribution_file_variety }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution_file_variety }}.yml"], "tags": "bind"}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Check `primaries` or `forwarders` was set for each zone", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Check `primaries` or `forwarders` was set for each zone", "loop": "{{ bind_zones }}", "loop_control": {"label": "{{ item.name }}"}, "tags": "bind"}, "module_options": {"that": ["item.primaries is defined or item.forwarders is defined"], "quiet": true}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Update package cache for Debian based distros", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Update package cache for Debian based distros", "become": true, "changed_when": false, "when": "ansible_os_family == 'Debian'", "tags": "bind"}, "module_options": {"update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Assert that all XFR keys exist in the key list", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Assert that all XFR keys exist in the key list", "loop": "{{ bind_key_mapping.keys() | list }}", "when": "bind_key_mapping | list | count > 0"}, "module_options": {"that": "bind_dns_keys | selectattr(\"name\",\"equalto\",bind_key_mapping[item]) | list | count > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install BIND", "module": "package", "index": 4, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Install BIND", "become": true, "with_items": ["{{ bind_packages }}"], "tags": "bind"}, "module_options": {"pkg": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Ensure runtime directories referenced in config exist", "module": "file", "index": 5, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Ensure runtime directories referenced in config exist", "become": true, "with_items": ["{{ bind_dir }}/dynamic", "{{ bind_dir }}/data", "{{ bind_zone_dir }}"], "tags": "bind"}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": 504}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Ensure Directory for Cached Secondary Zones exists", "module": "file", "index": 6, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Ensure Directory for Cached Secondary Zones exists", "become": true, "tags": "bind"}, "module_options": {"path": "{{ bind_secondary_dir }}", "state": "directory", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": 504, "setype": "named_cache_t"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create serial, based on UTC UNIX time", "module": "command", "index": 7, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Create serial, based on UTC UNIX time", "register": "timestamp", "changed_when": false, "run_once": true, "check_mode": false, "tags": "bind"}, "module_options": "date -u +%s", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create extra config for authenticated XFR request", "module": "template", "index": 8, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Create extra config for authenticated XFR request", "become": true, "when": "bind_dns_keys is defined and bind_dns_keys|length > 0", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "auth_transfer.j2", "dest": "{{ bind_conf_dir }}/{{ auth_file }}", "mode": 416, "owner": "root", "group": "{{ bind_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Configure zones", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Configure zones", "tags": "bind"}, "module_options": "zones.yml", "executable": "zones.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Main BIND config file", "module": "template", "index": 10, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Main BIND config file", "become": true, "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "etc_named.conf.j2", "dest": "{{ bind_config }}", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": 416, "setype": "named_conf_t", "validate": "named-checkconf %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Start BIND service", "module": "service", "index": 11, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Start BIND service", "become": true, "tags": "bind"}, "module_options": {"name": "{{ bind_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml": {"py/object": "struct4.TaskFile", "name": "zones.yml", "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set list of all host IP addresses", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Set list of all host IP addresses", "tags": "bind"}, "module_options": {"host_all_addresses": "{{ ansible_all_ipv4_addresses | union(ansible_all_ipv6_addresses) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read forward zone hashes", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Read forward zone hashes", "changed_when": false, "check_mode": false, "register": "forward_hashes_temp", "with_items": ["{{ bind_zones }}"], "run_once": true, "loop_control": {"label": "{{ item.name }}"}, "tags": "bind"}, "module_options": "grep -s \"^; Hash:\" {{ bind_zone_dir }}/{{ item.name }} || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create dict of forward hashes", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create dict of forward hashes", "with_items": ["{{ forward_hashes_temp.results }}"], "run_once": true, "loop_control": {"label": "{{ item.item.name }}"}, "tags": "bind"}, "module_options": {"forward_hashes": "{{ forward_hashes|default([]) + [ {'hash': item.stdout|default(), 'name': item.item.name} ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read reverse ipv4 zone hashes", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Read reverse ipv4 zone hashes", "changed_when": false, "check_mode": false, "register": "reverse_hashes_temp", "with_subelements": ["{{ bind_zones }}", "networks", {"flags": null, "skip_missing": true}], "run_once": true, "loop_control": {"label": "{{ item.1 }}"}, "tags": "bind"}, "module_options": "grep -s \"^; Hash:\" {{ bind_zone_dir }}/{{ ('.'.join(item.1.replace(item.1+'.','').split('.')[::-1])) }}.in-addr.arpa || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create dict of reverse hashes", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create dict of reverse hashes", "with_subelements": ["{{ reverse_hashes_temp.results }}", "item"], "run_once": true, "loop_control": {"label": "{{ item.1.name |default(item.0.cmd.split(' ')[4]) }}"}, "tags": "bind"}, "module_options": {"reverse_hashes": "{{ reverse_hashes|default([]) + [ {'hash': item.0.stdout|default(), 'network': item.1} ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read reverse ipv6 zone hashes", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Read reverse ipv6 zone hashes", "changed_when": false, "check_mode": false, "register": "reverse_hashes_ipv6_temp", "with_subelements": ["{{ bind_zones }}", "ipv6_networks", {"flags": null, "skip_missing": true}], "run_once": true, "loop_control": {"label": "{{ item.1 }}"}, "tags": "bind"}, "module_options": "grep -s \"^; Hash:\" {{ bind_zone_dir }}/{{ (item.1 | ipaddr('revdns'))[-(9+(item.1|regex_replace('^.*/','')|int)//2):-1] }} || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create dict of reverse ipv6 hashes", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create dict of reverse ipv6 hashes", "with_subelements": ["{{ reverse_hashes_ipv6_temp.results }}", "item"], "run_once": true, "loop_control": {"label": "{{ item.1.name |default(item.0.cmd.split(' ')[4]) }}"}, "tags": "bind"}, "module_options": {"reverse_hashes_ipv6": "{{ reverse_hashes_ipv6|default([]) + [ {'hash': item.0.stdout|default(), 'network': item.1} ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create forward lookup zone file", "module": "template", "index": 7, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create forward lookup zone file", "become": true, "with_items": ["{{ bind_zones }}"], "loop_control": {"label": "{{ item.name }}"}, "when": "(item.create_forward_zones is not defined or item.create_forward_zones) and ((item.type is defined and item.type == 'primary') or (item.type is not defined and item.primaries is defined and (host_all_addresses | intersect(item.primaries) | length > 0)))\n", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "bind_zone.j2", "dest": "{{ bind_zone_dir }}/{{ item.name }}", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": "{{ bind_zone_file_mode }}", "setype": "named_zone_t", "validate": "named-checkzone -d {{ item.name }} %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create reverse lookup zone file", "module": "template", "index": 8, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create reverse lookup zone file", "become": true, "with_subelements": ["{{ bind_zones }}", "networks", {"flags": null, "skip_missing": true}], "loop_control": {"label": "{{ item.1 }}"}, "when": "(item.create_reverse_zones is not defined or item.create_reverse_zones) and ((item[0].type is defined and item[0].type == 'primary') or (item[0].type is not defined and item[0].primaries is defined and (host_all_addresses | intersect(item[0].primaries) | length > 0)))\n", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "reverse_zone.j2", "dest": "{{ bind_zone_dir }}/{{ ('.'.join(item.1.replace(item.1+'.','').split('.')[::-1])) }}.in-addr.arpa", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": "{{ bind_zone_file_mode }}", "setype": "named_zone_t", "validate": "named-checkzone {{ ('.'.join(item.1.replace(item.1+'.','').split('.')[::-1])) }}.in-addr.arpa %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create reverse IPv6 lookup zone file", "module": "template", "index": 9, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create reverse IPv6 lookup zone file", "become": true, "with_subelements": ["{{ bind_zones }}", "ipv6_networks", {"flags": null, "skip_missing": true}], "loop_control": {"label": "{{ item.1 }}"}, "when": "(item.create_reverse_zones is not defined or item.create_reverse_zones) and ((item[0].type is defined and item[0].type == 'primary') or (item[0].type is not defined and item[0].primaries is defined and (host_all_addresses | intersect(item[0].primaries) | length > 0)))\n", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "reverse_zone_ipv6.j2", "dest": "{{ bind_zone_dir }}/{{ (item.1 | ipaddr('revdns'))[-(9+(item.1|regex_replace('^.*/','')|int)//2):-1] }}", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": "{{ bind_zone_file_mode }}", "setype": "named_zone_t", "validate": "named-checkzone {{ (item.1 | ipaddr('revdns'))[-(9+(item.1|regex_replace('^.*/','')|int)//2):] }} %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "bertvv.bind", "used_in": [], "annotations": {}}, "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Source specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Source specific variables", "with_first_found": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_distribution_file_variety }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution_file_variety }}.yml"], "tags": "bind"}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check `primaries` or `forwarders` was set for each zone", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Check `primaries` or `forwarders` was set for each zone", "loop": "{{ bind_zones }}", "loop_control": {"label": "{{ item.name }}"}, "tags": "bind"}, "module_options": {"that": ["item.primaries is defined or item.forwarders is defined"], "quiet": true}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update package cache for Debian based distros", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Update package cache for Debian based distros", "become": true, "changed_when": false, "when": "ansible_os_family == 'Debian'", "tags": "bind"}, "module_options": {"update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that all XFR keys exist in the key list", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Assert that all XFR keys exist in the key list", "loop": "{{ bind_key_mapping.keys() | list }}", "when": "bind_key_mapping | list | count > 0"}, "module_options": {"that": "bind_dns_keys | selectattr(\"name\",\"equalto\",bind_key_mapping[item]) | list | count > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install BIND", "module": "package", "index": 4, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Install BIND", "become": true, "with_items": ["{{ bind_packages }}"], "tags": "bind"}, "module_options": {"pkg": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure runtime directories referenced in config exist", "module": "file", "index": 5, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Ensure runtime directories referenced in config exist", "become": true, "with_items": ["{{ bind_dir }}/dynamic", "{{ bind_dir }}/data", "{{ bind_zone_dir }}"], "tags": "bind"}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": 504}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Directory for Cached Secondary Zones exists", "module": "file", "index": 6, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Ensure Directory for Cached Secondary Zones exists", "become": true, "tags": "bind"}, "module_options": {"path": "{{ bind_secondary_dir }}", "state": "directory", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": 504, "setype": "named_cache_t"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create serial, based on UTC UNIX time", "module": "command", "index": 7, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Create serial, based on UTC UNIX time", "register": "timestamp", "changed_when": false, "run_once": true, "check_mode": false, "tags": "bind"}, "module_options": "date -u +%s", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create extra config for authenticated XFR request", "module": "template", "index": 8, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Create extra config for authenticated XFR request", "become": true, "when": "bind_dns_keys is defined and bind_dns_keys|length > 0", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "auth_transfer.j2", "dest": "{{ bind_conf_dir }}/{{ auth_file }}", "mode": 416, "owner": "root", "group": "{{ bind_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zones", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Configure zones", "tags": "bind"}, "module_options": "zones.yml", "executable": "zones.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Main BIND config file", "module": "template", "index": 10, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Main BIND config file", "become": true, "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "etc_named.conf.j2", "dest": "{{ bind_config }}", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": 416, "setype": "named_conf_t", "validate": "named-checkconf %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start BIND service", "module": "service", "index": 11, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Start BIND service", "become": true, "tags": "bind"}, "module_options": {"name": "{{ bind_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "bertvv.bind", "used_in": [], "annotations": {}}}, "role_dict": {"bertvv.bind": {"py/object": "struct4.Role", "name": "bertvv.bind", "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind", "fqcn": "bertvv.bind", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "zones.yml", "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set list of all host IP addresses", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Set list of all host IP addresses", "tags": "bind"}, "module_options": {"host_all_addresses": "{{ ansible_all_ipv4_addresses | union(ansible_all_ipv6_addresses) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read forward zone hashes", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Read forward zone hashes", "changed_when": false, "check_mode": false, "register": "forward_hashes_temp", "with_items": ["{{ bind_zones }}"], "run_once": true, "loop_control": {"label": "{{ item.name }}"}, "tags": "bind"}, "module_options": "grep -s \"^; Hash:\" {{ bind_zone_dir }}/{{ item.name }} || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create dict of forward hashes", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create dict of forward hashes", "with_items": ["{{ forward_hashes_temp.results }}"], "run_once": true, "loop_control": {"label": "{{ item.item.name }}"}, "tags": "bind"}, "module_options": {"forward_hashes": "{{ forward_hashes|default([]) + [ {'hash': item.stdout|default(), 'name': item.item.name} ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read reverse ipv4 zone hashes", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Read reverse ipv4 zone hashes", "changed_when": false, "check_mode": false, "register": "reverse_hashes_temp", "with_subelements": ["{{ bind_zones }}", "networks", {"flags": null, "skip_missing": true}], "run_once": true, "loop_control": {"label": "{{ item.1 }}"}, "tags": "bind"}, "module_options": "grep -s \"^; Hash:\" {{ bind_zone_dir }}/{{ ('.'.join(item.1.replace(item.1+'.','').split('.')[::-1])) }}.in-addr.arpa || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create dict of reverse hashes", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create dict of reverse hashes", "with_subelements": ["{{ reverse_hashes_temp.results }}", "item"], "run_once": true, "loop_control": {"label": "{{ item.1.name |default(item.0.cmd.split(' ')[4]) }}"}, "tags": "bind"}, "module_options": {"reverse_hashes": "{{ reverse_hashes|default([]) + [ {'hash': item.0.stdout|default(), 'network': item.1} ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read reverse ipv6 zone hashes", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Read reverse ipv6 zone hashes", "changed_when": false, "check_mode": false, "register": "reverse_hashes_ipv6_temp", "with_subelements": ["{{ bind_zones }}", "ipv6_networks", {"flags": null, "skip_missing": true}], "run_once": true, "loop_control": {"label": "{{ item.1 }}"}, "tags": "bind"}, "module_options": "grep -s \"^; Hash:\" {{ bind_zone_dir }}/{{ (item.1 | ipaddr('revdns'))[-(9+(item.1|regex_replace('^.*/','')|int)//2):-1] }} || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create dict of reverse ipv6 hashes", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create dict of reverse ipv6 hashes", "with_subelements": ["{{ reverse_hashes_ipv6_temp.results }}", "item"], "run_once": true, "loop_control": {"label": "{{ item.1.name |default(item.0.cmd.split(' ')[4]) }}"}, "tags": "bind"}, "module_options": {"reverse_hashes_ipv6": "{{ reverse_hashes_ipv6|default([]) + [ {'hash': item.0.stdout|default(), 'network': item.1} ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create forward lookup zone file", "module": "template", "index": 7, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create forward lookup zone file", "become": true, "with_items": ["{{ bind_zones }}"], "loop_control": {"label": "{{ item.name }}"}, "when": "(item.create_forward_zones is not defined or item.create_forward_zones) and ((item.type is defined and item.type == 'primary') or (item.type is not defined and item.primaries is defined and (host_all_addresses | intersect(item.primaries) | length > 0)))\n", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "bind_zone.j2", "dest": "{{ bind_zone_dir }}/{{ item.name }}", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": "{{ bind_zone_file_mode }}", "setype": "named_zone_t", "validate": "named-checkzone -d {{ item.name }} %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create reverse lookup zone file", "module": "template", "index": 8, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create reverse lookup zone file", "become": true, "with_subelements": ["{{ bind_zones }}", "networks", {"flags": null, "skip_missing": true}], "loop_control": {"label": "{{ item.1 }}"}, "when": "(item.create_reverse_zones is not defined or item.create_reverse_zones) and ((item[0].type is defined and item[0].type == 'primary') or (item[0].type is not defined and item[0].primaries is defined and (host_all_addresses | intersect(item[0].primaries) | length > 0)))\n", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "reverse_zone.j2", "dest": "{{ bind_zone_dir }}/{{ ('.'.join(item.1.replace(item.1+'.','').split('.')[::-1])) }}.in-addr.arpa", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": "{{ bind_zone_file_mode }}", "setype": "named_zone_t", "validate": "named-checkzone {{ ('.'.join(item.1.replace(item.1+'.','').split('.')[::-1])) }}.in-addr.arpa %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create reverse IPv6 lookup zone file", "module": "template", "index": 9, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/zones.yml", "options": {"name": "Create reverse IPv6 lookup zone file", "become": true, "with_subelements": ["{{ bind_zones }}", "ipv6_networks", {"flags": null, "skip_missing": true}], "loop_control": {"label": "{{ item.1 }}"}, "when": "(item.create_reverse_zones is not defined or item.create_reverse_zones) and ((item[0].type is defined and item[0].type == 'primary') or (item[0].type is not defined and item[0].primaries is defined and (host_all_addresses | intersect(item[0].primaries) | length > 0)))\n", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "reverse_zone_ipv6.j2", "dest": "{{ bind_zone_dir }}/{{ (item.1 | ipaddr('revdns'))[-(9+(item.1|regex_replace('^.*/','')|int)//2):-1] }}", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": "{{ bind_zone_file_mode }}", "setype": "named_zone_t", "validate": "named-checkzone {{ (item.1 | ipaddr('revdns'))[-(9+(item.1|regex_replace('^.*/','')|int)//2):] }} %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "bertvv.bind", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Source specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Source specific variables", "with_first_found": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_distribution_file_variety }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution_file_variety }}.yml"], "tags": "bind"}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check `primaries` or `forwarders` was set for each zone", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Check `primaries` or `forwarders` was set for each zone", "loop": "{{ bind_zones }}", "loop_control": {"label": "{{ item.name }}"}, "tags": "bind"}, "module_options": {"that": ["item.primaries is defined or item.forwarders is defined"], "quiet": true}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update package cache for Debian based distros", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Update package cache for Debian based distros", "become": true, "changed_when": false, "when": "ansible_os_family == 'Debian'", "tags": "bind"}, "module_options": {"update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that all XFR keys exist in the key list", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Assert that all XFR keys exist in the key list", "loop": "{{ bind_key_mapping.keys() | list }}", "when": "bind_key_mapping | list | count > 0"}, "module_options": {"that": "bind_dns_keys | selectattr(\"name\",\"equalto\",bind_key_mapping[item]) | list | count > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install BIND", "module": "package", "index": 4, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Install BIND", "become": true, "with_items": ["{{ bind_packages }}"], "tags": "bind"}, "module_options": {"pkg": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure runtime directories referenced in config exist", "module": "file", "index": 5, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Ensure runtime directories referenced in config exist", "become": true, "with_items": ["{{ bind_dir }}/dynamic", "{{ bind_dir }}/data", "{{ bind_zone_dir }}"], "tags": "bind"}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": 504}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Directory for Cached Secondary Zones exists", "module": "file", "index": 6, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Ensure Directory for Cached Secondary Zones exists", "become": true, "tags": "bind"}, "module_options": {"path": "{{ bind_secondary_dir }}", "state": "directory", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": 504, "setype": "named_cache_t"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create serial, based on UTC UNIX time", "module": "command", "index": 7, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Create serial, based on UTC UNIX time", "register": "timestamp", "changed_when": false, "run_once": true, "check_mode": false, "tags": "bind"}, "module_options": "date -u +%s", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create extra config for authenticated XFR request", "module": "template", "index": 8, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Create extra config for authenticated XFR request", "become": true, "when": "bind_dns_keys is defined and bind_dns_keys|length > 0", "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "auth_transfer.j2", "dest": "{{ bind_conf_dir }}/{{ auth_file }}", "mode": 416, "owner": "root", "group": "{{ bind_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zones", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Configure zones", "tags": "bind"}, "module_options": "zones.yml", "executable": "zones.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Main BIND config file", "module": "template", "index": 10, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Main BIND config file", "become": true, "notify": "reload bind", "tags": "bind"}, "module_options": {"src": "etc_named.conf.j2", "dest": "{{ bind_config }}", "owner": "{{ bind_owner }}", "group": "{{ bind_group }}", "mode": 416, "setype": "named_conf_t", "validate": "named-checkconf %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start BIND service", "module": "service", "index": 11, "defined_in": "./role-test/testdata/bertvv-bind/bertvv.bind/tasks/main.yml", "options": {"name": "Start BIND service", "become": true, "tags": "bind"}, "module_options": {"name": "{{ bind_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "bertvv.bind", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}