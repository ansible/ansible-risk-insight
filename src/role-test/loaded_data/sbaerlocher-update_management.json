{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/sbaerlocher-update_management", "installed_roles": [{"py/object": "struct4.Role", "name": "sbaerlocher.update_management", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management", "fqcn": "sbaerlocher.update_management", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set Update Managment Enable", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set Update Managment Enable", "when": "update_management_GPO_enable"}, "module_options": {"update_management_Windows_enable": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Turn off auto-restart for updates during active hours", "module": "win_regedit", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Turn off auto-restart for updates during active hours", "when": "not update_management_GPO_enable", "with_items": [{"name": "SetActiveHours", "data": "{{ '00000001' if update_management_SetActiveHours_enabled else '00000000' }}"}, {"name": "ActiveHoursStart", "data": "{{ update_management_ActiveHoursStart }}"}, {"name": "ActiveHoursEnd", "data": "{{ update_management_ActiveHoursEnd }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Automatic Updates", "module": "win_regedit", "index": 2, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Configure Automatic Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "NoAutoUpdate", "data": "{{ '00000001' if update_management_NoAutoUpdate_enable else '00000000' }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Automatic Updates", "module": "win_regedit", "index": 3, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Configure Automatic Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "AUOptions", "data": "{{ update_management_AUOptions }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Automatic Updates", "module": "win_regedit", "index": 4, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Configure Automatic Updates", "when": "not update_management_GPO_enable", "with_items": [{"name": "ScheduledInstallDay", "data": "{{ update_management_ScheduledInstallDay }}"}, {"name": "ScheduledInstallTime", "data": "{{ update_management_ScheduledInstallTime }}"}, {"name": "ScheduledInstallEveryWeek", "data": "{{ update_management_ScheduledInstallEveryWeek }}"}, {"name": "AllowMUUpdateService", "data": "{{ update_management_AllowMUUpdateService }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Turn off auto-restart notifications for update installations", "module": "win_regedit", "index": 5, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Turn off auto-restart notifications for update installations", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "SetAutoRestartNotificationDisable", "data": "{{ update_management_SetAutoRestartNotificationDisable }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Turn on recommended updates via Automatic Updates", "module": "win_regedit", "index": 6, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Turn on recommended updates via Automatic Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "IncludeRecommendedUpdates", "data": "{{ update_management_IncludeRecommendedUpdates }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Specify deadline before auto-restart for update installation", "module": "win_regedit", "index": 7, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Specify deadline before auto-restart for update installation", "when": "not update_management_GPO_enable", "with_items": [{"name": "AutoRestartDeadlinePeriodInDays", "data": "{{ update_management_AutoRestartDeadlinePeriodInDays }}"}, {"name": "SetAutoRestartDeadline", "data": "{{ update_management_SetAutoRestartDeadline }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Automatic Updates detection frequency", "module": "win_regedit", "index": 8, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Automatic Updates detection frequency", "when": "not update_management_GPO_enable", "with_items": [{"name": "DetectionFrequencyEnabled", "data": "{{ update_management_DetectionFrequencyEnabled }}"}, {"name": "DetectionFrequency", "data": "{{ update_management_DetectionFrequency }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Specify Engaged restart transition and notification schedule for updates", "module": "win_regedit", "index": 9, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Specify Engaged restart transition and notification schedule for updates", "when": "not update_management_GPO_enable", "with_items": [{"name": "SetEngagedRestartTransitionSchedule", "data": "{{ update_management_SetEngagedRestartTransitionSchedule }}"}, {"name": "EngagedRestartTransitionSchedule", "data": "{{ update_management_EngagedRestartTransitionSchedule }}"}, {"name": "EngagedRestartSnoozeSchedule", "data": "{{ update_management_EngagedRestartSnoozeSchedule }}"}, {"name": "EngagedRestartDeadline", "data": "{{ update_management_EngagedRestartDeadline }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove access to use all Windows Update features", "module": "win_regedit", "index": 10, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Remove access to use all Windows Update features", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "SetDisableUXWUAccess", "data": "{{ update_management_SetDisableUXWUAccess }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Do not include drivers with Windows Updates", "module": "win_regedit", "index": 11, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Do not include drivers with Windows Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "ExcludeWUDriversInQualityUpdate", "data": "{{ '00000001' if update_management_Noincludedrivers_enable else '00000000' }}", "state": "{{ 'present' if update_management_Noincludedrivers_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Select when Preview Builds and Feature Updates are received", "module": "win_regedit", "index": 12, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Select when Preview Builds and Feature Updates are received", "when": "not update_management_GPO_enable", "with_items": [{"name": "DeferFeatureUpdates", "type": "dword", "data": "{{ update_management_DeferFeatureUpdates }}"}, {"name": "BranchReadinessLevel", "type": "dword", "data": "{{ update_management_BranchReadinessLevel }}"}, {"name": "DeferFeatureUpdatesPeriodInDays", "type": "dword", "data": "{{ update_management_DeferFeatureUpdatesPeriodInDays }}"}, {"name": "PauseFeatureUpdatesStartTime", "type": "String", "data": "{{ update_management_PauseFeatureUpdatesStartTime }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "{{ item.type }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Use Windows Update Server", "module": "win_regedit", "index": 13, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Use Windows Update Server", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "UseWUServer", "data": "{{ '00000001' if update_management_UseWUServer_enable else '00000000' }}", "state": "{{ 'present' if update_management_UseWUServer_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the intranet update service for detecting updates", "module": "win_regedit", "index": 14, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set the intranet update service for detecting updates", "when": "not update_management_GPO_enable and update_management_UseWUServer_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "WUServer", "data": "update_management_WUServer", "state": "{{ 'present' if update_management_WUServer else 'absent' }}", "type": "string"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the intranet statistics server", "module": "win_regedit", "index": 15, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set the intranet statistics server", "when": "not update_management_GPO_enable and update_management_UseWUServer_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "WUStatusServer", "data": "update_management_WUStatusServer", "state": "{{ 'present' if update_management_WUStatusServer else 'absent' }}", "type": "string"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the alternate download server", "module": "win_regedit", "index": 16, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set the alternate download server", "when": "not update_management_GPO_enable and update_management_UseWUServer_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "UpdateServiceUrlAlternate", "data": "update_management_UpdateServiceUrlAlternate", "state": "{{ 'present' if update_management_UpdateServiceUrlAlternate else 'absent' }}", "type": "string"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "CentOS.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/CentOS.yml", "tasks": [{"py/object": "struct4.Task", "name": "{{ 'Install' if update_management_CentOS_enable else 'Remove' }} yum-cron", "module": "package", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/CentOS.yml", "options": {"name": "{{ 'Install' if update_management_CentOS_enable else 'Remove' }} yum-cron", "become": true, "notify": ["enable yum-cron", "start yum-cron"], "tags": ["packages"]}, "module_options": {"name": "yum-cron", "state": "{{ 'present' if update_management_CentOS_enable else 'absent' }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy configuration files", "module": "template", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/CentOS.yml", "options": {"name": "Copy configuration files", "become": true, "when": "update_management_CentOS_enable", "with_items": [{"src": "CentOS/yum-cron-hourly.conf.j2", "dest": "/etc/yum/yum-cron-hourly.conf"}, {"src": "CentOS/yum-cron.conf.j2", "dest": "/etc/yum/yum-cron.conf"}], "notify": ["restart yum-cron"], "tags": ["configuration"]}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "{{ 'Install' if update_management_Debian_enable else 'Remove' }} unattended-upgrades", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "options": {"name": "{{ 'Install' if update_management_Debian_enable else 'Remove' }} unattended-upgrades", "become": true}, "module_options": {"pkg": "unattended-upgrades", "state": "{{ 'present' if update_management_Debian_enable else 'absent' }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create auto-upgrades configuration", "module": "template", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "options": {"name": "Create auto-upgrades configuration", "become": true, "when": "update_management_Debian_enable"}, "module_options": {"src": "Debian/20auto-upgrades.j2", "dest": "/etc/apt/apt.conf.d/20auto-upgrades", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create unattended-upgrades configuration", "module": "template", "index": 2, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "options": {"name": "Create unattended-upgrades configuration", "become": true, "when": "update_management_Debian_enable"}, "module_options": {"src": "Debian/50unattended-upgrades.j2", "dest": "/etc/apt/apt.conf.d/50unattended-upgrades", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/defaults.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set Update Managment Enable", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set Update Managment Enable", "when": "update_management_GPO_enable"}, "module_options": {"update_management_Windows_enable": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Turn off auto-restart for updates during active hours", "module": "win_regedit", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Turn off auto-restart for updates during active hours", "when": "not update_management_GPO_enable", "with_items": [{"name": "SetActiveHours", "data": "{{ '00000001' if update_management_SetActiveHours_enabled else '00000000' }}"}, {"name": "ActiveHoursStart", "data": "{{ update_management_ActiveHoursStart }}"}, {"name": "ActiveHoursEnd", "data": "{{ update_management_ActiveHoursEnd }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Configure Automatic Updates", "module": "win_regedit", "index": 2, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Configure Automatic Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "NoAutoUpdate", "data": "{{ '00000001' if update_management_NoAutoUpdate_enable else '00000000' }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Configure Automatic Updates", "module": "win_regedit", "index": 3, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Configure Automatic Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "AUOptions", "data": "{{ update_management_AUOptions }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Configure Automatic Updates", "module": "win_regedit", "index": 4, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Configure Automatic Updates", "when": "not update_management_GPO_enable", "with_items": [{"name": "ScheduledInstallDay", "data": "{{ update_management_ScheduledInstallDay }}"}, {"name": "ScheduledInstallTime", "data": "{{ update_management_ScheduledInstallTime }}"}, {"name": "ScheduledInstallEveryWeek", "data": "{{ update_management_ScheduledInstallEveryWeek }}"}, {"name": "AllowMUUpdateService", "data": "{{ update_management_AllowMUUpdateService }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Turn off auto-restart notifications for update installations", "module": "win_regedit", "index": 5, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Turn off auto-restart notifications for update installations", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "SetAutoRestartNotificationDisable", "data": "{{ update_management_SetAutoRestartNotificationDisable }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Turn on recommended updates via Automatic Updates", "module": "win_regedit", "index": 6, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Turn on recommended updates via Automatic Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "IncludeRecommendedUpdates", "data": "{{ update_management_IncludeRecommendedUpdates }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Specify deadline before auto-restart for update installation", "module": "win_regedit", "index": 7, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Specify deadline before auto-restart for update installation", "when": "not update_management_GPO_enable", "with_items": [{"name": "AutoRestartDeadlinePeriodInDays", "data": "{{ update_management_AutoRestartDeadlinePeriodInDays }}"}, {"name": "SetAutoRestartDeadline", "data": "{{ update_management_SetAutoRestartDeadline }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Automatic Updates detection frequency", "module": "win_regedit", "index": 8, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Automatic Updates detection frequency", "when": "not update_management_GPO_enable", "with_items": [{"name": "DetectionFrequencyEnabled", "data": "{{ update_management_DetectionFrequencyEnabled }}"}, {"name": "DetectionFrequency", "data": "{{ update_management_DetectionFrequency }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Specify Engaged restart transition and notification schedule for updates", "module": "win_regedit", "index": 9, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Specify Engaged restart transition and notification schedule for updates", "when": "not update_management_GPO_enable", "with_items": [{"name": "SetEngagedRestartTransitionSchedule", "data": "{{ update_management_SetEngagedRestartTransitionSchedule }}"}, {"name": "EngagedRestartTransitionSchedule", "data": "{{ update_management_EngagedRestartTransitionSchedule }}"}, {"name": "EngagedRestartSnoozeSchedule", "data": "{{ update_management_EngagedRestartSnoozeSchedule }}"}, {"name": "EngagedRestartDeadline", "data": "{{ update_management_EngagedRestartDeadline }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Remove access to use all Windows Update features", "module": "win_regedit", "index": 10, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Remove access to use all Windows Update features", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "SetDisableUXWUAccess", "data": "{{ update_management_SetDisableUXWUAccess }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Do not include drivers with Windows Updates", "module": "win_regedit", "index": 11, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Do not include drivers with Windows Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "ExcludeWUDriversInQualityUpdate", "data": "{{ '00000001' if update_management_Noincludedrivers_enable else '00000000' }}", "state": "{{ 'present' if update_management_Noincludedrivers_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Select when Preview Builds and Feature Updates are received", "module": "win_regedit", "index": 12, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Select when Preview Builds and Feature Updates are received", "when": "not update_management_GPO_enable", "with_items": [{"name": "DeferFeatureUpdates", "type": "dword", "data": "{{ update_management_DeferFeatureUpdates }}"}, {"name": "BranchReadinessLevel", "type": "dword", "data": "{{ update_management_BranchReadinessLevel }}"}, {"name": "DeferFeatureUpdatesPeriodInDays", "type": "dword", "data": "{{ update_management_DeferFeatureUpdatesPeriodInDays }}"}, {"name": "PauseFeatureUpdatesStartTime", "type": "String", "data": "{{ update_management_PauseFeatureUpdatesStartTime }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "{{ item.type }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Use Windows Update Server", "module": "win_regedit", "index": 13, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Use Windows Update Server", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "UseWUServer", "data": "{{ '00000001' if update_management_UseWUServer_enable else '00000000' }}", "state": "{{ 'present' if update_management_UseWUServer_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Set the intranet update service for detecting updates", "module": "win_regedit", "index": 14, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set the intranet update service for detecting updates", "when": "not update_management_GPO_enable and update_management_UseWUServer_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "WUServer", "data": "update_management_WUServer", "state": "{{ 'present' if update_management_WUServer else 'absent' }}", "type": "string"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Set the intranet statistics server", "module": "win_regedit", "index": 15, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set the intranet statistics server", "when": "not update_management_GPO_enable and update_management_UseWUServer_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "WUStatusServer", "data": "update_management_WUStatusServer", "state": "{{ 'present' if update_management_WUStatusServer else 'absent' }}", "type": "string"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Set the alternate download server", "module": "win_regedit", "index": 16, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set the alternate download server", "when": "not update_management_GPO_enable and update_management_UseWUServer_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "UpdateServiceUrlAlternate", "data": "update_management_UpdateServiceUrlAlternate", "state": "{{ 'present' if update_management_UpdateServiceUrlAlternate else 'absent' }}", "type": "string"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/CentOS.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "{{ 'Install' if update_management_CentOS_enable else 'Remove' }} yum-cron", "module": "package", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/CentOS.yml", "options": {"name": "{{ 'Install' if update_management_CentOS_enable else 'Remove' }} yum-cron", "become": true, "notify": ["enable yum-cron", "start yum-cron"], "tags": ["packages"]}, "module_options": {"name": "yum-cron", "state": "{{ 'present' if update_management_CentOS_enable else 'absent' }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/CentOS.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy configuration files", "module": "template", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/CentOS.yml", "options": {"name": "Copy configuration files", "become": true, "when": "update_management_CentOS_enable", "with_items": [{"src": "CentOS/yum-cron-hourly.conf.j2", "dest": "/etc/yum/yum-cron-hourly.conf"}, {"src": "CentOS/yum-cron.conf.j2", "dest": "/etc/yum/yum-cron.conf"}], "notify": ["restart yum-cron"], "tags": ["configuration"]}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "{{ 'Install' if update_management_Debian_enable else 'Remove' }} unattended-upgrades", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "options": {"name": "{{ 'Install' if update_management_Debian_enable else 'Remove' }} unattended-upgrades", "become": true}, "module_options": {"pkg": "unattended-upgrades", "state": "{{ 'present' if update_management_Debian_enable else 'absent' }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create auto-upgrades configuration", "module": "template", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "options": {"name": "Create auto-upgrades configuration", "become": true, "when": "update_management_Debian_enable"}, "module_options": {"src": "Debian/20auto-upgrades.j2", "dest": "/etc/apt/apt.conf.d/20auto-upgrades", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create unattended-upgrades configuration", "module": "template", "index": 2, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "options": {"name": "Create unattended-upgrades configuration", "become": true, "when": "update_management_Debian_enable"}, "module_options": {"src": "Debian/50unattended-upgrades.j2", "dest": "/etc/apt/apt.conf.d/50unattended-upgrades", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}, "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/defaults.yml": {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}, "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml": {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set Update Managment Enable", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set Update Managment Enable", "when": "update_management_GPO_enable"}, "module_options": {"update_management_Windows_enable": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Turn off auto-restart for updates during active hours", "module": "win_regedit", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Turn off auto-restart for updates during active hours", "when": "not update_management_GPO_enable", "with_items": [{"name": "SetActiveHours", "data": "{{ '00000001' if update_management_SetActiveHours_enabled else '00000000' }}"}, {"name": "ActiveHoursStart", "data": "{{ update_management_ActiveHoursStart }}"}, {"name": "ActiveHoursEnd", "data": "{{ update_management_ActiveHoursEnd }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Automatic Updates", "module": "win_regedit", "index": 2, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Configure Automatic Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "NoAutoUpdate", "data": "{{ '00000001' if update_management_NoAutoUpdate_enable else '00000000' }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Automatic Updates", "module": "win_regedit", "index": 3, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Configure Automatic Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "AUOptions", "data": "{{ update_management_AUOptions }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Automatic Updates", "module": "win_regedit", "index": 4, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Configure Automatic Updates", "when": "not update_management_GPO_enable", "with_items": [{"name": "ScheduledInstallDay", "data": "{{ update_management_ScheduledInstallDay }}"}, {"name": "ScheduledInstallTime", "data": "{{ update_management_ScheduledInstallTime }}"}, {"name": "ScheduledInstallEveryWeek", "data": "{{ update_management_ScheduledInstallEveryWeek }}"}, {"name": "AllowMUUpdateService", "data": "{{ update_management_AllowMUUpdateService }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Turn off auto-restart notifications for update installations", "module": "win_regedit", "index": 5, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Turn off auto-restart notifications for update installations", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "SetAutoRestartNotificationDisable", "data": "{{ update_management_SetAutoRestartNotificationDisable }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Turn on recommended updates via Automatic Updates", "module": "win_regedit", "index": 6, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Turn on recommended updates via Automatic Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "IncludeRecommendedUpdates", "data": "{{ update_management_IncludeRecommendedUpdates }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Specify deadline before auto-restart for update installation", "module": "win_regedit", "index": 7, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Specify deadline before auto-restart for update installation", "when": "not update_management_GPO_enable", "with_items": [{"name": "AutoRestartDeadlinePeriodInDays", "data": "{{ update_management_AutoRestartDeadlinePeriodInDays }}"}, {"name": "SetAutoRestartDeadline", "data": "{{ update_management_SetAutoRestartDeadline }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Automatic Updates detection frequency", "module": "win_regedit", "index": 8, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Automatic Updates detection frequency", "when": "not update_management_GPO_enable", "with_items": [{"name": "DetectionFrequencyEnabled", "data": "{{ update_management_DetectionFrequencyEnabled }}"}, {"name": "DetectionFrequency", "data": "{{ update_management_DetectionFrequency }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Specify Engaged restart transition and notification schedule for updates", "module": "win_regedit", "index": 9, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Specify Engaged restart transition and notification schedule for updates", "when": "not update_management_GPO_enable", "with_items": [{"name": "SetEngagedRestartTransitionSchedule", "data": "{{ update_management_SetEngagedRestartTransitionSchedule }}"}, {"name": "EngagedRestartTransitionSchedule", "data": "{{ update_management_EngagedRestartTransitionSchedule }}"}, {"name": "EngagedRestartSnoozeSchedule", "data": "{{ update_management_EngagedRestartSnoozeSchedule }}"}, {"name": "EngagedRestartDeadline", "data": "{{ update_management_EngagedRestartDeadline }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove access to use all Windows Update features", "module": "win_regedit", "index": 10, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Remove access to use all Windows Update features", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "SetDisableUXWUAccess", "data": "{{ update_management_SetDisableUXWUAccess }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Do not include drivers with Windows Updates", "module": "win_regedit", "index": 11, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Do not include drivers with Windows Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "ExcludeWUDriversInQualityUpdate", "data": "{{ '00000001' if update_management_Noincludedrivers_enable else '00000000' }}", "state": "{{ 'present' if update_management_Noincludedrivers_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Select when Preview Builds and Feature Updates are received", "module": "win_regedit", "index": 12, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Select when Preview Builds and Feature Updates are received", "when": "not update_management_GPO_enable", "with_items": [{"name": "DeferFeatureUpdates", "type": "dword", "data": "{{ update_management_DeferFeatureUpdates }}"}, {"name": "BranchReadinessLevel", "type": "dword", "data": "{{ update_management_BranchReadinessLevel }}"}, {"name": "DeferFeatureUpdatesPeriodInDays", "type": "dword", "data": "{{ update_management_DeferFeatureUpdatesPeriodInDays }}"}, {"name": "PauseFeatureUpdatesStartTime", "type": "String", "data": "{{ update_management_PauseFeatureUpdatesStartTime }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "{{ item.type }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Use Windows Update Server", "module": "win_regedit", "index": 13, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Use Windows Update Server", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "UseWUServer", "data": "{{ '00000001' if update_management_UseWUServer_enable else '00000000' }}", "state": "{{ 'present' if update_management_UseWUServer_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the intranet update service for detecting updates", "module": "win_regedit", "index": 14, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set the intranet update service for detecting updates", "when": "not update_management_GPO_enable and update_management_UseWUServer_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "WUServer", "data": "update_management_WUServer", "state": "{{ 'present' if update_management_WUServer else 'absent' }}", "type": "string"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the intranet statistics server", "module": "win_regedit", "index": 15, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set the intranet statistics server", "when": "not update_management_GPO_enable and update_management_UseWUServer_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "WUStatusServer", "data": "update_management_WUStatusServer", "state": "{{ 'present' if update_management_WUStatusServer else 'absent' }}", "type": "string"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the alternate download server", "module": "win_regedit", "index": 16, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set the alternate download server", "when": "not update_management_GPO_enable and update_management_UseWUServer_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "UpdateServiceUrlAlternate", "data": "update_management_UpdateServiceUrlAlternate", "state": "{{ 'present' if update_management_UpdateServiceUrlAlternate else 'absent' }}", "type": "string"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}, "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/CentOS.yml": {"py/object": "struct4.TaskFile", "name": "CentOS.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/CentOS.yml", "tasks": [{"py/object": "struct4.Task", "name": "{{ 'Install' if update_management_CentOS_enable else 'Remove' }} yum-cron", "module": "package", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/CentOS.yml", "options": {"name": "{{ 'Install' if update_management_CentOS_enable else 'Remove' }} yum-cron", "become": true, "notify": ["enable yum-cron", "start yum-cron"], "tags": ["packages"]}, "module_options": {"name": "yum-cron", "state": "{{ 'present' if update_management_CentOS_enable else 'absent' }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy configuration files", "module": "template", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/CentOS.yml", "options": {"name": "Copy configuration files", "become": true, "when": "update_management_CentOS_enable", "with_items": [{"src": "CentOS/yum-cron-hourly.conf.j2", "dest": "/etc/yum/yum-cron-hourly.conf"}, {"src": "CentOS/yum-cron.conf.j2", "dest": "/etc/yum/yum-cron.conf"}], "notify": ["restart yum-cron"], "tags": ["configuration"]}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}, "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml": {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "{{ 'Install' if update_management_Debian_enable else 'Remove' }} unattended-upgrades", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "options": {"name": "{{ 'Install' if update_management_Debian_enable else 'Remove' }} unattended-upgrades", "become": true}, "module_options": {"pkg": "unattended-upgrades", "state": "{{ 'present' if update_management_Debian_enable else 'absent' }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create auto-upgrades configuration", "module": "template", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "options": {"name": "Create auto-upgrades configuration", "become": true, "when": "update_management_Debian_enable"}, "module_options": {"src": "Debian/20auto-upgrades.j2", "dest": "/etc/apt/apt.conf.d/20auto-upgrades", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create unattended-upgrades configuration", "module": "template", "index": 2, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "options": {"name": "Create unattended-upgrades configuration", "become": true, "when": "update_management_Debian_enable"}, "module_options": {"src": "Debian/50unattended-upgrades.j2", "dest": "/etc/apt/apt.conf.d/50unattended-upgrades", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}}, "role_dict": {"sbaerlocher.update_management": {"py/object": "struct4.Role", "name": "sbaerlocher.update_management", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management", "fqcn": "sbaerlocher.update_management", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set Update Managment Enable", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set Update Managment Enable", "when": "update_management_GPO_enable"}, "module_options": {"update_management_Windows_enable": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Turn off auto-restart for updates during active hours", "module": "win_regedit", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Turn off auto-restart for updates during active hours", "when": "not update_management_GPO_enable", "with_items": [{"name": "SetActiveHours", "data": "{{ '00000001' if update_management_SetActiveHours_enabled else '00000000' }}"}, {"name": "ActiveHoursStart", "data": "{{ update_management_ActiveHoursStart }}"}, {"name": "ActiveHoursEnd", "data": "{{ update_management_ActiveHoursEnd }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Automatic Updates", "module": "win_regedit", "index": 2, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Configure Automatic Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "NoAutoUpdate", "data": "{{ '00000001' if update_management_NoAutoUpdate_enable else '00000000' }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Automatic Updates", "module": "win_regedit", "index": 3, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Configure Automatic Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "AUOptions", "data": "{{ update_management_AUOptions }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Automatic Updates", "module": "win_regedit", "index": 4, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Configure Automatic Updates", "when": "not update_management_GPO_enable", "with_items": [{"name": "ScheduledInstallDay", "data": "{{ update_management_ScheduledInstallDay }}"}, {"name": "ScheduledInstallTime", "data": "{{ update_management_ScheduledInstallTime }}"}, {"name": "ScheduledInstallEveryWeek", "data": "{{ update_management_ScheduledInstallEveryWeek }}"}, {"name": "AllowMUUpdateService", "data": "{{ update_management_AllowMUUpdateService }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Turn off auto-restart notifications for update installations", "module": "win_regedit", "index": 5, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Turn off auto-restart notifications for update installations", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "SetAutoRestartNotificationDisable", "data": "{{ update_management_SetAutoRestartNotificationDisable }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Turn on recommended updates via Automatic Updates", "module": "win_regedit", "index": 6, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Turn on recommended updates via Automatic Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "IncludeRecommendedUpdates", "data": "{{ update_management_IncludeRecommendedUpdates }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Specify deadline before auto-restart for update installation", "module": "win_regedit", "index": 7, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Specify deadline before auto-restart for update installation", "when": "not update_management_GPO_enable", "with_items": [{"name": "AutoRestartDeadlinePeriodInDays", "data": "{{ update_management_AutoRestartDeadlinePeriodInDays }}"}, {"name": "SetAutoRestartDeadline", "data": "{{ update_management_SetAutoRestartDeadline }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Automatic Updates detection frequency", "module": "win_regedit", "index": 8, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Automatic Updates detection frequency", "when": "not update_management_GPO_enable", "with_items": [{"name": "DetectionFrequencyEnabled", "data": "{{ update_management_DetectionFrequencyEnabled }}"}, {"name": "DetectionFrequency", "data": "{{ update_management_DetectionFrequency }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Specify Engaged restart transition and notification schedule for updates", "module": "win_regedit", "index": 9, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Specify Engaged restart transition and notification schedule for updates", "when": "not update_management_GPO_enable", "with_items": [{"name": "SetEngagedRestartTransitionSchedule", "data": "{{ update_management_SetEngagedRestartTransitionSchedule }}"}, {"name": "EngagedRestartTransitionSchedule", "data": "{{ update_management_EngagedRestartTransitionSchedule }}"}, {"name": "EngagedRestartSnoozeSchedule", "data": "{{ update_management_EngagedRestartSnoozeSchedule }}"}, {"name": "EngagedRestartDeadline", "data": "{{ update_management_EngagedRestartDeadline }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "dword", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove access to use all Windows Update features", "module": "win_regedit", "index": 10, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Remove access to use all Windows Update features", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "SetDisableUXWUAccess", "data": "{{ update_management_SetDisableUXWUAccess }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Do not include drivers with Windows Updates", "module": "win_regedit", "index": 11, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Do not include drivers with Windows Updates", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "ExcludeWUDriversInQualityUpdate", "data": "{{ '00000001' if update_management_Noincludedrivers_enable else '00000000' }}", "state": "{{ 'present' if update_management_Noincludedrivers_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Select when Preview Builds and Feature Updates are received", "module": "win_regedit", "index": 12, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Select when Preview Builds and Feature Updates are received", "when": "not update_management_GPO_enable", "with_items": [{"name": "DeferFeatureUpdates", "type": "dword", "data": "{{ update_management_DeferFeatureUpdates }}"}, {"name": "BranchReadinessLevel", "type": "dword", "data": "{{ update_management_BranchReadinessLevel }}"}, {"name": "DeferFeatureUpdatesPeriodInDays", "type": "dword", "data": "{{ update_management_DeferFeatureUpdatesPeriodInDays }}"}, {"name": "PauseFeatureUpdatesStartTime", "type": "String", "data": "{{ update_management_PauseFeatureUpdatesStartTime }}"}]}, "module_options": {"path": "HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "{{ item.name }}", "data": "{{ item.data }}", "type": "{{ item.type }}", "state": "{{ 'present' if update_management_Windows_enable else 'absent' }}"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Use Windows Update Server", "module": "win_regedit", "index": 13, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Use Windows Update Server", "when": "not update_management_GPO_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU", "name": "UseWUServer", "data": "{{ '00000001' if update_management_UseWUServer_enable else '00000000' }}", "state": "{{ 'present' if update_management_UseWUServer_enable else 'absent' }}", "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the intranet update service for detecting updates", "module": "win_regedit", "index": 14, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set the intranet update service for detecting updates", "when": "not update_management_GPO_enable and update_management_UseWUServer_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "WUServer", "data": "update_management_WUServer", "state": "{{ 'present' if update_management_WUServer else 'absent' }}", "type": "string"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the intranet statistics server", "module": "win_regedit", "index": 15, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set the intranet statistics server", "when": "not update_management_GPO_enable and update_management_UseWUServer_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "WUStatusServer", "data": "update_management_WUStatusServer", "state": "{{ 'present' if update_management_WUStatusServer else 'absent' }}", "type": "string"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the alternate download server", "module": "win_regedit", "index": 16, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Windows.yml", "options": {"name": "Set the alternate download server", "when": "not update_management_GPO_enable and update_management_UseWUServer_enable"}, "module_options": {"path": "HKLM:\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate", "name": "UpdateServiceUrlAlternate", "data": "update_management_UpdateServiceUrlAlternate", "state": "{{ 'present' if update_management_UpdateServiceUrlAlternate else 'absent' }}", "type": "string"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "CentOS.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/CentOS.yml", "tasks": [{"py/object": "struct4.Task", "name": "{{ 'Install' if update_management_CentOS_enable else 'Remove' }} yum-cron", "module": "package", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/CentOS.yml", "options": {"name": "{{ 'Install' if update_management_CentOS_enable else 'Remove' }} yum-cron", "become": true, "notify": ["enable yum-cron", "start yum-cron"], "tags": ["packages"]}, "module_options": {"name": "yum-cron", "state": "{{ 'present' if update_management_CentOS_enable else 'absent' }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy configuration files", "module": "template", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/CentOS.yml", "options": {"name": "Copy configuration files", "become": true, "when": "update_management_CentOS_enable", "with_items": [{"src": "CentOS/yum-cron-hourly.conf.j2", "dest": "/etc/yum/yum-cron-hourly.conf"}, {"src": "CentOS/yum-cron.conf.j2", "dest": "/etc/yum/yum-cron.conf"}], "notify": ["restart yum-cron"], "tags": ["configuration"]}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "{{ 'Install' if update_management_Debian_enable else 'Remove' }} unattended-upgrades", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "options": {"name": "{{ 'Install' if update_management_Debian_enable else 'Remove' }} unattended-upgrades", "become": true}, "module_options": {"pkg": "unattended-upgrades", "state": "{{ 'present' if update_management_Debian_enable else 'absent' }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create auto-upgrades configuration", "module": "template", "index": 1, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "options": {"name": "Create auto-upgrades configuration", "become": true, "when": "update_management_Debian_enable"}, "module_options": {"src": "Debian/20auto-upgrades.j2", "dest": "/etc/apt/apt.conf.d/20auto-upgrades", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create unattended-upgrades configuration", "module": "template", "index": 2, "defined_in": "./role-test/testdata/sbaerlocher-update_management/sbaerlocher.update_management/tasks/distribution/Debian.yml", "options": {"name": "Create unattended-upgrades configuration", "become": true, "when": "update_management_Debian_enable"}, "module_options": {"src": "Debian/50unattended-upgrades.j2", "dest": "/etc/apt/apt.conf.d/50unattended-upgrades", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "sbaerlocher.update_management", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}