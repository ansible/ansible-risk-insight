{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/DavidWittman-redis", "installed_roles": [{"py/object": "struct4.Role", "name": "DavidWittman.redis", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis", "fqcn": "DavidWittman.redis", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "sentinel.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "tasks": [{"py/object": "struct4.Task", "name": "create sentinel working directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel working directory"}, "module_options": {"path": "{{ redis_sentinel_dir }}", "state": "directory", "recurse": true, "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel init script", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel init script", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis_sentinel.init.j2", "default/redis_sentinel.init.j2"], "paths": ["../templates"]}], "when": "redis_as_service and ansible_service_mgr|default() != \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/init.d/sentinel_{{ redis_sentinel_port }}", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel systemd service", "module": "template", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel systemd service", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis_sentinel.service.j2", "default/redis_sentinel.service.j2"], "paths": ["../templates"]}], "register": "sentinel_unit_file", "when": "redis_as_service and ansible_service_mgr|default() == \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/systemd/system/sentinel_{{ redis_sentinel_port }}.service", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create systemd tmpfiles configuration", "module": "template", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create systemd tmpfiles configuration", "when": ["redis_as_service", "ansible_service_mgr|default() == \"systemd\"", "(redis_sentinel_pidfile|dirname).startswith(\"/var/run\") or (redis_sentinel_pidfile|dirname).startswith(\"/run\")"]}, "module_options": {"src": "etc/tmpfiles.d/redis.conf.j2", "dest": "/etc/tmpfiles.d/redis.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "reload systemd daemon", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "reload systemd daemon", "when": ["redis_as_service", "ansible_service_mgr|default() == \"systemd\"", "sentinel_unit_file is changed"]}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "set sentinel to start at boot", "module": "service", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "set sentinel to start at boot", "when": "redis_as_service"}, "module_options": {"name": "sentinel_{{ redis_sentinel_port }}", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if sentinel log directory exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "check if sentinel log directory exists", "register": "sentinel_logdir", "changed_when": false, "when": "redis_sentinel_logfile != '\"\"'"}, "module_options": {"path": "{{ redis_sentinel_logfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel log directory if it does not exist", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel log directory if it does not exist", "when": ["redis_sentinel_logfile != '\"\"'", "not sentinel_logdir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_sentinel_logfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "touch the sentinel log file", "module": "file", "index": 8, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "touch the sentinel log file", "when": "redis_sentinel_logfile != '\"\"'"}, "module_options": {"state": "touch", "path": "{{ redis_sentinel_logfile }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if sentinel pid directory exists", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "check if sentinel pid directory exists", "register": "sentinel_piddir", "changed_when": false, "when": "redis_sentinel_pidfile != '\"\"'"}, "module_options": {"path": "{{ redis_sentinel_pidfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel pid directory if it does not exist", "module": "file", "index": 10, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel pid directory if it does not exist", "when": ["redis_sentinel_pidfile != '\"\"'", "not sentinel_piddir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_sentinel_pidfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel config file", "module": "template", "index": 11, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel config file", "notify": "restart sentinel"}, "module_options": {"src": "redis_sentinel.conf.j2", "dest": "/etc/redis/sentinel_{{ redis_sentinel_port }}.conf", "owner": "{{ redis_user }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "add sentinel init config file", "module": "template", "index": 12, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "add sentinel init config file", "when": "ansible_os_family == \"RedHat\"", "notify": "restart sentinel"}, "module_options": {"dest": "/etc/sysconfig/sentinel_{{ redis_sentinel_port }}", "src": "redis.init.conf.j2"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "add sentinel init config file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "add sentinel init config file", "when": "ansible_os_family == \"Debian\"", "notify": "restart sentinel"}, "module_options": {"dest": "/etc/default/sentinel_{{ redis_sentinel_port }}", "src": "redis.init.conf.j2"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers to apply config changes", "module": "meta", "index": 14, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "flush handlers to apply config changes"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure sentinel is running", "module": "service", "index": 15, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "ensure sentinel is running", "when": "redis_as_service"}, "module_options": {"name": "sentinel_{{ redis_sentinel_port }}", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "dependencies.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "tasks": [{"py/object": "struct4.Task", "name": "install debian dependencies", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install debian dependencies", "when": "ansible_os_family == \"Debian\""}, "module_options": {"pkg": ["gcc", "make", "libc6-dev", "{{ 'libc6-dev-i386' if redis_make_32bit|bool else 'gcc' }}"], "update_cache": true, "cache_valid_time": 86400, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "install redhat dependencies", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install redhat dependencies", "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": ["gcc", "make"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "update libgcc on rhel for 32-bit dependencies", "module": "yum", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "update libgcc on rhel for 32-bit dependencies", "when": "ansible_os_family == \"RedHat\" and redis_make_32bit|bool", "tags": ["skip_ansible_lint"]}, "module_options": {"name": "libgcc", "state": "latest"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "install redhat 32-bit dependencies", "module": "yum", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install redhat 32-bit dependencies", "when": "ansible_os_family == \"RedHat\" and redis_make_32bit|bool", "tags": ["skip_ansible_lint"]}, "module_options": {"name": ["libgcc.i686", "glibc-devel.i686"], "state": "latest"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "install suse dependencies", "module": "zypper", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install suse dependencies", "when": "ansible_os_family == 'Suse'"}, "module_options": {"name": ["gcc", "make", "{{ 'gcc-32bit' if redis_make_32bit|bool else 'gcc' }}", "{{ 'libgcc_s1-32bit' if redis_make_32bit|bool else 'gcc' }}"], "state": "present"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "local_facts.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/local_facts.yml", "tasks": [{"py/object": "struct4.Task", "name": "create facts directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/local_facts.yml", "options": {"name": "create facts directory"}, "module_options": {"path": "/etc/ansible/facts.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis facts", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/local_facts.yml", "options": {"name": "create redis facts"}, "module_options": {"src": "etc/ansible/facts.d/redis.fact.j2", "dest": "/etc/ansible/facts.d/redis.fact"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "check_vars.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/check_vars.yml", "tasks": [{"py/object": "struct4.Task", "name": "check for ansible 1.x", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/check_vars.yml", "options": {"name": "check for ansible 1.x", "when": ["ansible_version.major < 2"]}, "module_options": {"msg": "This role no longer supports Ansible 1.x. The last known good tag for Ansible 1.x support in this role is 1.2.5.\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "check for checksum", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/check_vars.yml", "options": {"name": "check for checksum", "when": ["redis_verify_checksum|bool", "redis_checksum is not defined", "redis_version not in redis_checksums"]}, "module_options": {"msg": "There is no sha1 checksum defined for version {{ redis_version }} in vars/main.yml. Set redis_checksum manually or submit a PR to add this version.\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "download.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "tasks": [{"py/object": "struct4.Task", "name": "set redis checksum", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "set redis checksum", "when": ["redis_verify_checksum|bool", "redis_checksum is not defined", "redis_version in redis_checksums"]}, "module_options": {"redis_checksum": "{{ 'sha1' if redis_checksums[redis_version]|length == 40 else 'sha256' }}:{{ redis_checksums[redis_version] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "download redis", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "download redis", "when": "not redis_tarball"}, "module_options": {"url": "{{ redis_download_url }}", "dest": "/usr/local/src/redis-{{ redis_version }}.tar.gz", "checksum": "{{ redis_checksum|default(omit) }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "upload redis", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "upload redis", "when": "redis_tarball|default(false)"}, "module_options": {"src": "{{ redis_tarball }}", "dest": "/usr/local/src/redis-{{ redis_version }}.tar.gz"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "extract redis tarball", "module": "unarchive", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "extract redis tarball", "when": "not ansible_check_mode"}, "module_options": {"src": "/usr/local/src/redis-{{ redis_version }}.tar.gz", "dest": "/usr/local/src", "creates": "/usr/local/src/redis-{{ redis_version }}/Makefile", "copy": false}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "server.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "tasks": [{"py/object": "struct4.Task", "name": "create redis working directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis working directory"}, "module_options": {"path": "{{ redis_dir }}", "state": "directory", "recurse": true, "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis init script", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis init script", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis.init.j2", "default/redis.init.j2"], "paths": ["../templates"]}], "when": "redis_as_service and ansible_service_mgr|default() != \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/init.d/{{ redis_service_name }}", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis systemd service", "module": "template", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis systemd service", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis.service.j2", "default/redis.service.j2"], "paths": ["../templates"]}], "register": "redis_unit_file", "when": "redis_as_service and ansible_service_mgr|default() == \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/systemd/system/{{ redis_service_name }}.service", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create systemd tmpfiles configuration", "module": "template", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create systemd tmpfiles configuration", "when": ["redis_as_service", "ansible_service_mgr|default() == 'systemd'", "(redis_pidfile|dirname).startswith('/var/run') or (redis_pidfile|dirname).startswith('/run')"]}, "module_options": {"src": "etc/tmpfiles.d/redis.conf.j2", "dest": "/etc/tmpfiles.d/redis.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "reload systemd daemon", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "reload systemd daemon", "when": ["redis_as_service", "ansible_service_mgr|default() == \"systemd\"", "redis_unit_file is changed"]}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "set redis to start at boot", "module": "service", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "set redis to start at boot", "when": "redis_as_service"}, "module_options": {"name": "{{ redis_service_name }}", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if log directory exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "check if log directory exists", "register": "logdir", "changed_when": false, "when": "redis_logfile != '\"\"'"}, "module_options": {"path": "{{ redis_logfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "create log directory if it does not exist", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create log directory if it does not exist", "when": ["redis_logfile != '\"\"'", "not logdir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_logfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create log file if it does not exist", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create log file if it does not exist", "when": "redis_logfile != '\"\"'"}, "module_options": {"dest": "{{ redis_logfile }}", "content": "", "force": false, "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "update permissions of log file if needed", "module": "file", "index": 9, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "update permissions of log file if needed", "when": "redis_logfile != '\"\"'"}, "module_options": {"state": "file", "path": "{{ redis_logfile }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if pid directory exists", "module": "stat", "index": 10, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "check if pid directory exists", "register": "piddir", "changed_when": false, "when": "redis_pidfile != '\"\"'"}, "module_options": {"path": "{{ redis_pidfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "create pid directory if it does not exist", "module": "file", "index": 11, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create pid directory if it does not exist", "when": ["redis_pidfile != '\"\"'", "not piddir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_pidfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis config file", "module": "template", "index": 12, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis config file", "notify": "restart redis"}, "module_options": {"src": "redis.conf.j2", "dest": "/etc/redis/{{ redis_config_file_name }}", "owner": "{{ redis_user }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis init config file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "add redis init config file", "when": "ansible_os_family == \"RedHat\"", "notify": "restart redis"}, "module_options": {"dest": "/etc/sysconfig/{{ redis_service_name }}", "src": "redis.init.conf.j2", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis init config file", "module": "template", "index": 14, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "add redis init config file", "when": "ansible_os_family == \"Debian\"", "notify": "restart redis"}, "module_options": {"dest": "/etc/default/{{ redis_service_name }}", "src": "redis.init.conf.j2", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers to apply config changes", "module": "meta", "index": 15, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "flush handlers to apply config changes"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure redis is running", "module": "service", "index": 16, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "ensure redis is running", "when": "redis_as_service"}, "module_options": {"name": "{{ redis_service_name }}", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "enable overcommit in sysctl", "module": "sysctl", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "enable overcommit in sysctl", "when": "redis_travis_ci is not defined"}, "module_options": {"name": "vm.overcommit_memory", "value": "1", "state": "present", "reload": true, "ignoreerrors": true}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "compile redis", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "compile redis", "args": {"chdir": "/usr/local/src/redis-{{ redis_version }}", "creates": "/usr/local/src/redis-{{ redis_version }}/src/redis-server"}}, "module_options": "umask 0022 && make -j{{ ansible_processor_cores|default(1) + 1 }}{{ ' 32bit' if redis_make_32bit|bool else '' }}{{ ' BUILD_TLS=yes' if redis_make_tls|bool else '' }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis install directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "create redis install directory"}, "module_options": {"path": "{{ redis_install_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if redis user exists (ignore errors)", "module": "command", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "check if redis user exists (ignore errors)", "ignore_errors": true, "changed_when": false, "register": "user_exists"}, "module_options": "id {{ redis_user }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis group", "module": "group", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "add redis group", "when": "user_exists is failed"}, "module_options": {"name": "{{ redis_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis user", "module": "user", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "add redis user", "when": "user_exists is failed"}, "module_options": {"name": "{{ redis_user }}", "group": "{{ redis_group }}", "comment": "Redis", "home": "{{ redis_install_dir }}", "shell": "/bin/false", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "create /etc/redis", "module": "file", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "create /etc/redis"}, "module_options": {"path": "/etc/redis", "state": "directory", "mode": 493, "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create /var/run/redis", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "create /var/run/redis"}, "module_options": {"path": "/var/run/redis", "state": "directory", "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "install redis", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "install redis", "args": {"chdir": "/usr/local/src/redis-{{ redis_version }}", "creates": "{{ redis_install_dir }}/bin/redis-server"}}, "module_options": "umask 0022 && make PREFIX={{ redis_install_dir }} install", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "list redis binaries to add to alternatives", "module": "command", "index": 9, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "list redis binaries to add to alternatives", "register": "redis_binaries", "changed_when": false, "check_mode": false}, "module_options": "ls -1 {{ redis_install_dir }}/bin", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis binaries to alternatives", "module": "alternatives", "index": 10, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "add redis binaries to alternatives", "with_items": "{{ redis_binaries.stdout_lines }}", "when": "redis_binaries is succeeded"}, "module_options": {"name": "{{ item }}", "path": "{{ redis_install_dir }}/bin/{{ item }}", "link": "/usr/bin/{{ item }}"}, "executable": "alternatives", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {}, "module_options": "check_vars.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"tags": ["download"]}, "module_options": "download.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"tags": ["install"]}, "module_options": "dependencies.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"tags": ["install"]}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"when": "not redis_sentinel", "tags": ["config"]}, "module_options": "server.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"when": "redis_sentinel", "tags": ["config"]}, "module_options": "sentinel.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"when": "redis_local_facts|bool"}, "module_options": "local_facts.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create sentinel working directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel working directory"}, "module_options": {"path": "{{ redis_sentinel_dir }}", "state": "directory", "recurse": true, "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create sentinel init script", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel init script", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis_sentinel.init.j2", "default/redis_sentinel.init.j2"], "paths": ["../templates"]}], "when": "redis_as_service and ansible_service_mgr|default() != \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/init.d/sentinel_{{ redis_sentinel_port }}", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "create sentinel systemd service", "module": "template", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel systemd service", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis_sentinel.service.j2", "default/redis_sentinel.service.j2"], "paths": ["../templates"]}], "register": "sentinel_unit_file", "when": "redis_as_service and ansible_service_mgr|default() == \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/systemd/system/sentinel_{{ redis_sentinel_port }}.service", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "create systemd tmpfiles configuration", "module": "template", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create systemd tmpfiles configuration", "when": ["redis_as_service", "ansible_service_mgr|default() == \"systemd\"", "(redis_sentinel_pidfile|dirname).startswith(\"/var/run\") or (redis_sentinel_pidfile|dirname).startswith(\"/run\")"]}, "module_options": {"src": "etc/tmpfiles.d/redis.conf.j2", "dest": "/etc/tmpfiles.d/redis.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "reload systemd daemon", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "reload systemd daemon", "when": ["redis_as_service", "ansible_service_mgr|default() == \"systemd\"", "sentinel_unit_file is changed"]}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "set sentinel to start at boot", "module": "service", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "set sentinel to start at boot", "when": "redis_as_service"}, "module_options": {"name": "sentinel_{{ redis_sentinel_port }}", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "check if sentinel log directory exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "check if sentinel log directory exists", "register": "sentinel_logdir", "changed_when": false, "when": "redis_sentinel_logfile != '\"\"'"}, "module_options": {"path": "{{ redis_sentinel_logfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "create sentinel log directory if it does not exist", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel log directory if it does not exist", "when": ["redis_sentinel_logfile != '\"\"'", "not sentinel_logdir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_sentinel_logfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "touch the sentinel log file", "module": "file", "index": 8, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "touch the sentinel log file", "when": "redis_sentinel_logfile != '\"\"'"}, "module_options": {"state": "touch", "path": "{{ redis_sentinel_logfile }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "check if sentinel pid directory exists", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "check if sentinel pid directory exists", "register": "sentinel_piddir", "changed_when": false, "when": "redis_sentinel_pidfile != '\"\"'"}, "module_options": {"path": "{{ redis_sentinel_pidfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "create sentinel pid directory if it does not exist", "module": "file", "index": 10, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel pid directory if it does not exist", "when": ["redis_sentinel_pidfile != '\"\"'", "not sentinel_piddir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_sentinel_pidfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "create sentinel config file", "module": "template", "index": 11, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel config file", "notify": "restart sentinel"}, "module_options": {"src": "redis_sentinel.conf.j2", "dest": "/etc/redis/sentinel_{{ redis_sentinel_port }}.conf", "owner": "{{ redis_user }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "add sentinel init config file", "module": "template", "index": 12, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "add sentinel init config file", "when": "ansible_os_family == \"RedHat\"", "notify": "restart sentinel"}, "module_options": {"dest": "/etc/sysconfig/sentinel_{{ redis_sentinel_port }}", "src": "redis.init.conf.j2"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "add sentinel init config file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "add sentinel init config file", "when": "ansible_os_family == \"Debian\"", "notify": "restart sentinel"}, "module_options": {"dest": "/etc/default/sentinel_{{ redis_sentinel_port }}", "src": "redis.init.conf.j2"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "flush handlers to apply config changes", "module": "meta", "index": 14, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "flush handlers to apply config changes"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "ensure sentinel is running", "module": "service", "index": 15, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "ensure sentinel is running", "when": "redis_as_service"}, "module_options": {"name": "sentinel_{{ redis_sentinel_port }}", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install debian dependencies", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install debian dependencies", "when": "ansible_os_family == \"Debian\""}, "module_options": {"pkg": ["gcc", "make", "libc6-dev", "{{ 'libc6-dev-i386' if redis_make_32bit|bool else 'gcc' }}"], "update_cache": true, "cache_valid_time": 86400, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "install redhat dependencies", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install redhat dependencies", "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": ["gcc", "make"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "update libgcc on rhel for 32-bit dependencies", "module": "yum", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "update libgcc on rhel for 32-bit dependencies", "when": "ansible_os_family == \"RedHat\" and redis_make_32bit|bool", "tags": ["skip_ansible_lint"]}, "module_options": {"name": "libgcc", "state": "latest"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "install redhat 32-bit dependencies", "module": "yum", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install redhat 32-bit dependencies", "when": "ansible_os_family == \"RedHat\" and redis_make_32bit|bool", "tags": ["skip_ansible_lint"]}, "module_options": {"name": ["libgcc.i686", "glibc-devel.i686"], "state": "latest"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "install suse dependencies", "module": "zypper", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install suse dependencies", "when": "ansible_os_family == 'Suse'"}, "module_options": {"name": ["gcc", "make", "{{ 'gcc-32bit' if redis_make_32bit|bool else 'gcc' }}", "{{ 'libgcc_s1-32bit' if redis_make_32bit|bool else 'gcc' }}"], "state": "present"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/local_facts.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create facts directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/local_facts.yml", "options": {"name": "create facts directory"}, "module_options": {"path": "/etc/ansible/facts.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/local_facts.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create redis facts", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/local_facts.yml", "options": {"name": "create redis facts"}, "module_options": {"src": "etc/ansible/facts.d/redis.fact.j2", "dest": "/etc/ansible/facts.d/redis.fact"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/check_vars.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "check for ansible 1.x", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/check_vars.yml", "options": {"name": "check for ansible 1.x", "when": ["ansible_version.major < 2"]}, "module_options": {"msg": "This role no longer supports Ansible 1.x. The last known good tag for Ansible 1.x support in this role is 1.2.5.\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/check_vars.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "check for checksum", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/check_vars.yml", "options": {"name": "check for checksum", "when": ["redis_verify_checksum|bool", "redis_checksum is not defined", "redis_version not in redis_checksums"]}, "module_options": {"msg": "There is no sha1 checksum defined for version {{ redis_version }} in vars/main.yml. Set redis_checksum manually or submit a PR to add this version.\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "set redis checksum", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "set redis checksum", "when": ["redis_verify_checksum|bool", "redis_checksum is not defined", "redis_version in redis_checksums"]}, "module_options": {"redis_checksum": "{{ 'sha1' if redis_checksums[redis_version]|length == 40 else 'sha256' }}:{{ redis_checksums[redis_version] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "download redis", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "download redis", "when": "not redis_tarball"}, "module_options": {"url": "{{ redis_download_url }}", "dest": "/usr/local/src/redis-{{ redis_version }}.tar.gz", "checksum": "{{ redis_checksum|default(omit) }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "upload redis", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "upload redis", "when": "redis_tarball|default(false)"}, "module_options": {"src": "{{ redis_tarball }}", "dest": "/usr/local/src/redis-{{ redis_version }}.tar.gz"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "extract redis tarball", "module": "unarchive", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "extract redis tarball", "when": "not ansible_check_mode"}, "module_options": {"src": "/usr/local/src/redis-{{ redis_version }}.tar.gz", "dest": "/usr/local/src", "creates": "/usr/local/src/redis-{{ redis_version }}/Makefile", "copy": false}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create redis working directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis working directory"}, "module_options": {"path": "{{ redis_dir }}", "state": "directory", "recurse": true, "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create redis init script", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis init script", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis.init.j2", "default/redis.init.j2"], "paths": ["../templates"]}], "when": "redis_as_service and ansible_service_mgr|default() != \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/init.d/{{ redis_service_name }}", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "create redis systemd service", "module": "template", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis systemd service", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis.service.j2", "default/redis.service.j2"], "paths": ["../templates"]}], "register": "redis_unit_file", "when": "redis_as_service and ansible_service_mgr|default() == \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/systemd/system/{{ redis_service_name }}.service", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "create systemd tmpfiles configuration", "module": "template", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create systemd tmpfiles configuration", "when": ["redis_as_service", "ansible_service_mgr|default() == 'systemd'", "(redis_pidfile|dirname).startswith('/var/run') or (redis_pidfile|dirname).startswith('/run')"]}, "module_options": {"src": "etc/tmpfiles.d/redis.conf.j2", "dest": "/etc/tmpfiles.d/redis.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "reload systemd daemon", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "reload systemd daemon", "when": ["redis_as_service", "ansible_service_mgr|default() == \"systemd\"", "redis_unit_file is changed"]}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "set redis to start at boot", "module": "service", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "set redis to start at boot", "when": "redis_as_service"}, "module_options": {"name": "{{ redis_service_name }}", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "check if log directory exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "check if log directory exists", "register": "logdir", "changed_when": false, "when": "redis_logfile != '\"\"'"}, "module_options": {"path": "{{ redis_logfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "create log directory if it does not exist", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create log directory if it does not exist", "when": ["redis_logfile != '\"\"'", "not logdir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_logfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "create log file if it does not exist", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create log file if it does not exist", "when": "redis_logfile != '\"\"'"}, "module_options": {"dest": "{{ redis_logfile }}", "content": "", "force": false, "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "update permissions of log file if needed", "module": "file", "index": 9, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "update permissions of log file if needed", "when": "redis_logfile != '\"\"'"}, "module_options": {"state": "file", "path": "{{ redis_logfile }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "check if pid directory exists", "module": "stat", "index": 10, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "check if pid directory exists", "register": "piddir", "changed_when": false, "when": "redis_pidfile != '\"\"'"}, "module_options": {"path": "{{ redis_pidfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "create pid directory if it does not exist", "module": "file", "index": 11, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create pid directory if it does not exist", "when": ["redis_pidfile != '\"\"'", "not piddir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_pidfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "create redis config file", "module": "template", "index": 12, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis config file", "notify": "restart redis"}, "module_options": {"src": "redis.conf.j2", "dest": "/etc/redis/{{ redis_config_file_name }}", "owner": "{{ redis_user }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "add redis init config file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "add redis init config file", "when": "ansible_os_family == \"RedHat\"", "notify": "restart redis"}, "module_options": {"dest": "/etc/sysconfig/{{ redis_service_name }}", "src": "redis.init.conf.j2", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "add redis init config file", "module": "template", "index": 14, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "add redis init config file", "when": "ansible_os_family == \"Debian\"", "notify": "restart redis"}, "module_options": {"dest": "/etc/default/{{ redis_service_name }}", "src": "redis.init.conf.j2", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "flush handlers to apply config changes", "module": "meta", "index": 15, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "flush handlers to apply config changes"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "ensure redis is running", "module": "service", "index": 16, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "ensure redis is running", "when": "redis_as_service"}, "module_options": {"name": "{{ redis_service_name }}", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "enable overcommit in sysctl", "module": "sysctl", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "enable overcommit in sysctl", "when": "redis_travis_ci is not defined"}, "module_options": {"name": "vm.overcommit_memory", "value": "1", "state": "present", "reload": true, "ignoreerrors": true}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "compile redis", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "compile redis", "args": {"chdir": "/usr/local/src/redis-{{ redis_version }}", "creates": "/usr/local/src/redis-{{ redis_version }}/src/redis-server"}}, "module_options": "umask 0022 && make -j{{ ansible_processor_cores|default(1) + 1 }}{{ ' 32bit' if redis_make_32bit|bool else '' }}{{ ' BUILD_TLS=yes' if redis_make_tls|bool else '' }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "create redis install directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "create redis install directory"}, "module_options": {"path": "{{ redis_install_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "check if redis user exists (ignore errors)", "module": "command", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "check if redis user exists (ignore errors)", "ignore_errors": true, "changed_when": false, "register": "user_exists"}, "module_options": "id {{ redis_user }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "add redis group", "module": "group", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "add redis group", "when": "user_exists is failed"}, "module_options": {"name": "{{ redis_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "add redis user", "module": "user", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "add redis user", "when": "user_exists is failed"}, "module_options": {"name": "{{ redis_user }}", "group": "{{ redis_group }}", "comment": "Redis", "home": "{{ redis_install_dir }}", "shell": "/bin/false", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "create /etc/redis", "module": "file", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "create /etc/redis"}, "module_options": {"path": "/etc/redis", "state": "directory", "mode": 493, "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "create /var/run/redis", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "create /var/run/redis"}, "module_options": {"path": "/var/run/redis", "state": "directory", "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "install redis", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "install redis", "args": {"chdir": "/usr/local/src/redis-{{ redis_version }}", "creates": "{{ redis_install_dir }}/bin/redis-server"}}, "module_options": "umask 0022 && make PREFIX={{ redis_install_dir }} install", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "list redis binaries to add to alternatives", "module": "command", "index": 9, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "list redis binaries to add to alternatives", "register": "redis_binaries", "changed_when": false, "check_mode": false}, "module_options": "ls -1 {{ redis_install_dir }}/bin", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "add redis binaries to alternatives", "module": "alternatives", "index": 10, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "add redis binaries to alternatives", "with_items": "{{ redis_binaries.stdout_lines }}", "when": "redis_binaries is succeeded"}, "module_options": {"name": "{{ item }}", "path": "{{ redis_install_dir }}/bin/{{ item }}", "link": "/usr/bin/{{ item }}"}, "executable": "alternatives", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {}, "module_options": "check_vars.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"tags": ["download"]}, "module_options": "download.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"tags": ["install"]}, "module_options": "dependencies.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"tags": ["install"]}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"when": "not redis_sentinel", "tags": ["config"]}, "module_options": "server.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"when": "redis_sentinel", "tags": ["config"]}, "module_options": "sentinel.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"when": "redis_local_facts|bool"}, "module_options": "local_facts.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml": {"py/object": "struct4.TaskFile", "name": "sentinel.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "tasks": [{"py/object": "struct4.Task", "name": "create sentinel working directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel working directory"}, "module_options": {"path": "{{ redis_sentinel_dir }}", "state": "directory", "recurse": true, "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel init script", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel init script", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis_sentinel.init.j2", "default/redis_sentinel.init.j2"], "paths": ["../templates"]}], "when": "redis_as_service and ansible_service_mgr|default() != \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/init.d/sentinel_{{ redis_sentinel_port }}", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel systemd service", "module": "template", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel systemd service", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis_sentinel.service.j2", "default/redis_sentinel.service.j2"], "paths": ["../templates"]}], "register": "sentinel_unit_file", "when": "redis_as_service and ansible_service_mgr|default() == \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/systemd/system/sentinel_{{ redis_sentinel_port }}.service", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create systemd tmpfiles configuration", "module": "template", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create systemd tmpfiles configuration", "when": ["redis_as_service", "ansible_service_mgr|default() == \"systemd\"", "(redis_sentinel_pidfile|dirname).startswith(\"/var/run\") or (redis_sentinel_pidfile|dirname).startswith(\"/run\")"]}, "module_options": {"src": "etc/tmpfiles.d/redis.conf.j2", "dest": "/etc/tmpfiles.d/redis.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "reload systemd daemon", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "reload systemd daemon", "when": ["redis_as_service", "ansible_service_mgr|default() == \"systemd\"", "sentinel_unit_file is changed"]}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "set sentinel to start at boot", "module": "service", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "set sentinel to start at boot", "when": "redis_as_service"}, "module_options": {"name": "sentinel_{{ redis_sentinel_port }}", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if sentinel log directory exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "check if sentinel log directory exists", "register": "sentinel_logdir", "changed_when": false, "when": "redis_sentinel_logfile != '\"\"'"}, "module_options": {"path": "{{ redis_sentinel_logfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel log directory if it does not exist", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel log directory if it does not exist", "when": ["redis_sentinel_logfile != '\"\"'", "not sentinel_logdir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_sentinel_logfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "touch the sentinel log file", "module": "file", "index": 8, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "touch the sentinel log file", "when": "redis_sentinel_logfile != '\"\"'"}, "module_options": {"state": "touch", "path": "{{ redis_sentinel_logfile }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if sentinel pid directory exists", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "check if sentinel pid directory exists", "register": "sentinel_piddir", "changed_when": false, "when": "redis_sentinel_pidfile != '\"\"'"}, "module_options": {"path": "{{ redis_sentinel_pidfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel pid directory if it does not exist", "module": "file", "index": 10, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel pid directory if it does not exist", "when": ["redis_sentinel_pidfile != '\"\"'", "not sentinel_piddir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_sentinel_pidfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel config file", "module": "template", "index": 11, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel config file", "notify": "restart sentinel"}, "module_options": {"src": "redis_sentinel.conf.j2", "dest": "/etc/redis/sentinel_{{ redis_sentinel_port }}.conf", "owner": "{{ redis_user }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "add sentinel init config file", "module": "template", "index": 12, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "add sentinel init config file", "when": "ansible_os_family == \"RedHat\"", "notify": "restart sentinel"}, "module_options": {"dest": "/etc/sysconfig/sentinel_{{ redis_sentinel_port }}", "src": "redis.init.conf.j2"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "add sentinel init config file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "add sentinel init config file", "when": "ansible_os_family == \"Debian\"", "notify": "restart sentinel"}, "module_options": {"dest": "/etc/default/sentinel_{{ redis_sentinel_port }}", "src": "redis.init.conf.j2"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers to apply config changes", "module": "meta", "index": 14, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "flush handlers to apply config changes"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure sentinel is running", "module": "service", "index": 15, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "ensure sentinel is running", "when": "redis_as_service"}, "module_options": {"name": "sentinel_{{ redis_sentinel_port }}", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml": {"py/object": "struct4.TaskFile", "name": "dependencies.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "tasks": [{"py/object": "struct4.Task", "name": "install debian dependencies", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install debian dependencies", "when": "ansible_os_family == \"Debian\""}, "module_options": {"pkg": ["gcc", "make", "libc6-dev", "{{ 'libc6-dev-i386' if redis_make_32bit|bool else 'gcc' }}"], "update_cache": true, "cache_valid_time": 86400, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "install redhat dependencies", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install redhat dependencies", "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": ["gcc", "make"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "update libgcc on rhel for 32-bit dependencies", "module": "yum", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "update libgcc on rhel for 32-bit dependencies", "when": "ansible_os_family == \"RedHat\" and redis_make_32bit|bool", "tags": ["skip_ansible_lint"]}, "module_options": {"name": "libgcc", "state": "latest"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "install redhat 32-bit dependencies", "module": "yum", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install redhat 32-bit dependencies", "when": "ansible_os_family == \"RedHat\" and redis_make_32bit|bool", "tags": ["skip_ansible_lint"]}, "module_options": {"name": ["libgcc.i686", "glibc-devel.i686"], "state": "latest"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "install suse dependencies", "module": "zypper", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install suse dependencies", "when": "ansible_os_family == 'Suse'"}, "module_options": {"name": ["gcc", "make", "{{ 'gcc-32bit' if redis_make_32bit|bool else 'gcc' }}", "{{ 'libgcc_s1-32bit' if redis_make_32bit|bool else 'gcc' }}"], "state": "present"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/local_facts.yml": {"py/object": "struct4.TaskFile", "name": "local_facts.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/local_facts.yml", "tasks": [{"py/object": "struct4.Task", "name": "create facts directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/local_facts.yml", "options": {"name": "create facts directory"}, "module_options": {"path": "/etc/ansible/facts.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis facts", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/local_facts.yml", "options": {"name": "create redis facts"}, "module_options": {"src": "etc/ansible/facts.d/redis.fact.j2", "dest": "/etc/ansible/facts.d/redis.fact"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/check_vars.yml": {"py/object": "struct4.TaskFile", "name": "check_vars.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/check_vars.yml", "tasks": [{"py/object": "struct4.Task", "name": "check for ansible 1.x", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/check_vars.yml", "options": {"name": "check for ansible 1.x", "when": ["ansible_version.major < 2"]}, "module_options": {"msg": "This role no longer supports Ansible 1.x. The last known good tag for Ansible 1.x support in this role is 1.2.5.\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "check for checksum", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/check_vars.yml", "options": {"name": "check for checksum", "when": ["redis_verify_checksum|bool", "redis_checksum is not defined", "redis_version not in redis_checksums"]}, "module_options": {"msg": "There is no sha1 checksum defined for version {{ redis_version }} in vars/main.yml. Set redis_checksum manually or submit a PR to add this version.\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml": {"py/object": "struct4.TaskFile", "name": "download.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "tasks": [{"py/object": "struct4.Task", "name": "set redis checksum", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "set redis checksum", "when": ["redis_verify_checksum|bool", "redis_checksum is not defined", "redis_version in redis_checksums"]}, "module_options": {"redis_checksum": "{{ 'sha1' if redis_checksums[redis_version]|length == 40 else 'sha256' }}:{{ redis_checksums[redis_version] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "download redis", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "download redis", "when": "not redis_tarball"}, "module_options": {"url": "{{ redis_download_url }}", "dest": "/usr/local/src/redis-{{ redis_version }}.tar.gz", "checksum": "{{ redis_checksum|default(omit) }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "upload redis", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "upload redis", "when": "redis_tarball|default(false)"}, "module_options": {"src": "{{ redis_tarball }}", "dest": "/usr/local/src/redis-{{ redis_version }}.tar.gz"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "extract redis tarball", "module": "unarchive", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "extract redis tarball", "when": "not ansible_check_mode"}, "module_options": {"src": "/usr/local/src/redis-{{ redis_version }}.tar.gz", "dest": "/usr/local/src", "creates": "/usr/local/src/redis-{{ redis_version }}/Makefile", "copy": false}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml": {"py/object": "struct4.TaskFile", "name": "server.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "tasks": [{"py/object": "struct4.Task", "name": "create redis working directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis working directory"}, "module_options": {"path": "{{ redis_dir }}", "state": "directory", "recurse": true, "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis init script", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis init script", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis.init.j2", "default/redis.init.j2"], "paths": ["../templates"]}], "when": "redis_as_service and ansible_service_mgr|default() != \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/init.d/{{ redis_service_name }}", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis systemd service", "module": "template", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis systemd service", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis.service.j2", "default/redis.service.j2"], "paths": ["../templates"]}], "register": "redis_unit_file", "when": "redis_as_service and ansible_service_mgr|default() == \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/systemd/system/{{ redis_service_name }}.service", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create systemd tmpfiles configuration", "module": "template", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create systemd tmpfiles configuration", "when": ["redis_as_service", "ansible_service_mgr|default() == 'systemd'", "(redis_pidfile|dirname).startswith('/var/run') or (redis_pidfile|dirname).startswith('/run')"]}, "module_options": {"src": "etc/tmpfiles.d/redis.conf.j2", "dest": "/etc/tmpfiles.d/redis.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "reload systemd daemon", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "reload systemd daemon", "when": ["redis_as_service", "ansible_service_mgr|default() == \"systemd\"", "redis_unit_file is changed"]}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "set redis to start at boot", "module": "service", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "set redis to start at boot", "when": "redis_as_service"}, "module_options": {"name": "{{ redis_service_name }}", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if log directory exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "check if log directory exists", "register": "logdir", "changed_when": false, "when": "redis_logfile != '\"\"'"}, "module_options": {"path": "{{ redis_logfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "create log directory if it does not exist", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create log directory if it does not exist", "when": ["redis_logfile != '\"\"'", "not logdir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_logfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create log file if it does not exist", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create log file if it does not exist", "when": "redis_logfile != '\"\"'"}, "module_options": {"dest": "{{ redis_logfile }}", "content": "", "force": false, "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "update permissions of log file if needed", "module": "file", "index": 9, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "update permissions of log file if needed", "when": "redis_logfile != '\"\"'"}, "module_options": {"state": "file", "path": "{{ redis_logfile }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if pid directory exists", "module": "stat", "index": 10, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "check if pid directory exists", "register": "piddir", "changed_when": false, "when": "redis_pidfile != '\"\"'"}, "module_options": {"path": "{{ redis_pidfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "create pid directory if it does not exist", "module": "file", "index": 11, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create pid directory if it does not exist", "when": ["redis_pidfile != '\"\"'", "not piddir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_pidfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis config file", "module": "template", "index": 12, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis config file", "notify": "restart redis"}, "module_options": {"src": "redis.conf.j2", "dest": "/etc/redis/{{ redis_config_file_name }}", "owner": "{{ redis_user }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis init config file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "add redis init config file", "when": "ansible_os_family == \"RedHat\"", "notify": "restart redis"}, "module_options": {"dest": "/etc/sysconfig/{{ redis_service_name }}", "src": "redis.init.conf.j2", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis init config file", "module": "template", "index": 14, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "add redis init config file", "when": "ansible_os_family == \"Debian\"", "notify": "restart redis"}, "module_options": {"dest": "/etc/default/{{ redis_service_name }}", "src": "redis.init.conf.j2", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers to apply config changes", "module": "meta", "index": 15, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "flush handlers to apply config changes"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure redis is running", "module": "service", "index": 16, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "ensure redis is running", "when": "redis_as_service"}, "module_options": {"name": "{{ redis_service_name }}", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml": {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "enable overcommit in sysctl", "module": "sysctl", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "enable overcommit in sysctl", "when": "redis_travis_ci is not defined"}, "module_options": {"name": "vm.overcommit_memory", "value": "1", "state": "present", "reload": true, "ignoreerrors": true}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "compile redis", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "compile redis", "args": {"chdir": "/usr/local/src/redis-{{ redis_version }}", "creates": "/usr/local/src/redis-{{ redis_version }}/src/redis-server"}}, "module_options": "umask 0022 && make -j{{ ansible_processor_cores|default(1) + 1 }}{{ ' 32bit' if redis_make_32bit|bool else '' }}{{ ' BUILD_TLS=yes' if redis_make_tls|bool else '' }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis install directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "create redis install directory"}, "module_options": {"path": "{{ redis_install_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if redis user exists (ignore errors)", "module": "command", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "check if redis user exists (ignore errors)", "ignore_errors": true, "changed_when": false, "register": "user_exists"}, "module_options": "id {{ redis_user }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis group", "module": "group", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "add redis group", "when": "user_exists is failed"}, "module_options": {"name": "{{ redis_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis user", "module": "user", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "add redis user", "when": "user_exists is failed"}, "module_options": {"name": "{{ redis_user }}", "group": "{{ redis_group }}", "comment": "Redis", "home": "{{ redis_install_dir }}", "shell": "/bin/false", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "create /etc/redis", "module": "file", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "create /etc/redis"}, "module_options": {"path": "/etc/redis", "state": "directory", "mode": 493, "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create /var/run/redis", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "create /var/run/redis"}, "module_options": {"path": "/var/run/redis", "state": "directory", "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "install redis", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "install redis", "args": {"chdir": "/usr/local/src/redis-{{ redis_version }}", "creates": "{{ redis_install_dir }}/bin/redis-server"}}, "module_options": "umask 0022 && make PREFIX={{ redis_install_dir }} install", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "list redis binaries to add to alternatives", "module": "command", "index": 9, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "list redis binaries to add to alternatives", "register": "redis_binaries", "changed_when": false, "check_mode": false}, "module_options": "ls -1 {{ redis_install_dir }}/bin", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis binaries to alternatives", "module": "alternatives", "index": 10, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "add redis binaries to alternatives", "with_items": "{{ redis_binaries.stdout_lines }}", "when": "redis_binaries is succeeded"}, "module_options": {"name": "{{ item }}", "path": "{{ redis_install_dir }}/bin/{{ item }}", "link": "/usr/bin/{{ item }}"}, "executable": "alternatives", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {}, "module_options": "check_vars.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"tags": ["download"]}, "module_options": "download.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"tags": ["install"]}, "module_options": "dependencies.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"tags": ["install"]}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"when": "not redis_sentinel", "tags": ["config"]}, "module_options": "server.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"when": "redis_sentinel", "tags": ["config"]}, "module_options": "sentinel.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"when": "redis_local_facts|bool"}, "module_options": "local_facts.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}}, "role_dict": {"DavidWittman.redis": {"py/object": "struct4.Role", "name": "DavidWittman.redis", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis", "fqcn": "DavidWittman.redis", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "sentinel.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "tasks": [{"py/object": "struct4.Task", "name": "create sentinel working directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel working directory"}, "module_options": {"path": "{{ redis_sentinel_dir }}", "state": "directory", "recurse": true, "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel init script", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel init script", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis_sentinel.init.j2", "default/redis_sentinel.init.j2"], "paths": ["../templates"]}], "when": "redis_as_service and ansible_service_mgr|default() != \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/init.d/sentinel_{{ redis_sentinel_port }}", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel systemd service", "module": "template", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel systemd service", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis_sentinel.service.j2", "default/redis_sentinel.service.j2"], "paths": ["../templates"]}], "register": "sentinel_unit_file", "when": "redis_as_service and ansible_service_mgr|default() == \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/systemd/system/sentinel_{{ redis_sentinel_port }}.service", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create systemd tmpfiles configuration", "module": "template", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create systemd tmpfiles configuration", "when": ["redis_as_service", "ansible_service_mgr|default() == \"systemd\"", "(redis_sentinel_pidfile|dirname).startswith(\"/var/run\") or (redis_sentinel_pidfile|dirname).startswith(\"/run\")"]}, "module_options": {"src": "etc/tmpfiles.d/redis.conf.j2", "dest": "/etc/tmpfiles.d/redis.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "reload systemd daemon", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "reload systemd daemon", "when": ["redis_as_service", "ansible_service_mgr|default() == \"systemd\"", "sentinel_unit_file is changed"]}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "set sentinel to start at boot", "module": "service", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "set sentinel to start at boot", "when": "redis_as_service"}, "module_options": {"name": "sentinel_{{ redis_sentinel_port }}", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if sentinel log directory exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "check if sentinel log directory exists", "register": "sentinel_logdir", "changed_when": false, "when": "redis_sentinel_logfile != '\"\"'"}, "module_options": {"path": "{{ redis_sentinel_logfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel log directory if it does not exist", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel log directory if it does not exist", "when": ["redis_sentinel_logfile != '\"\"'", "not sentinel_logdir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_sentinel_logfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "touch the sentinel log file", "module": "file", "index": 8, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "touch the sentinel log file", "when": "redis_sentinel_logfile != '\"\"'"}, "module_options": {"state": "touch", "path": "{{ redis_sentinel_logfile }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if sentinel pid directory exists", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "check if sentinel pid directory exists", "register": "sentinel_piddir", "changed_when": false, "when": "redis_sentinel_pidfile != '\"\"'"}, "module_options": {"path": "{{ redis_sentinel_pidfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel pid directory if it does not exist", "module": "file", "index": 10, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel pid directory if it does not exist", "when": ["redis_sentinel_pidfile != '\"\"'", "not sentinel_piddir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_sentinel_pidfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create sentinel config file", "module": "template", "index": 11, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "create sentinel config file", "notify": "restart sentinel"}, "module_options": {"src": "redis_sentinel.conf.j2", "dest": "/etc/redis/sentinel_{{ redis_sentinel_port }}.conf", "owner": "{{ redis_user }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "add sentinel init config file", "module": "template", "index": 12, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "add sentinel init config file", "when": "ansible_os_family == \"RedHat\"", "notify": "restart sentinel"}, "module_options": {"dest": "/etc/sysconfig/sentinel_{{ redis_sentinel_port }}", "src": "redis.init.conf.j2"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "add sentinel init config file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "add sentinel init config file", "when": "ansible_os_family == \"Debian\"", "notify": "restart sentinel"}, "module_options": {"dest": "/etc/default/sentinel_{{ redis_sentinel_port }}", "src": "redis.init.conf.j2"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers to apply config changes", "module": "meta", "index": 14, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "flush handlers to apply config changes"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure sentinel is running", "module": "service", "index": 15, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/sentinel.yml", "options": {"name": "ensure sentinel is running", "when": "redis_as_service"}, "module_options": {"name": "sentinel_{{ redis_sentinel_port }}", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "dependencies.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "tasks": [{"py/object": "struct4.Task", "name": "install debian dependencies", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install debian dependencies", "when": "ansible_os_family == \"Debian\""}, "module_options": {"pkg": ["gcc", "make", "libc6-dev", "{{ 'libc6-dev-i386' if redis_make_32bit|bool else 'gcc' }}"], "update_cache": true, "cache_valid_time": 86400, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "install redhat dependencies", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install redhat dependencies", "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": ["gcc", "make"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "update libgcc on rhel for 32-bit dependencies", "module": "yum", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "update libgcc on rhel for 32-bit dependencies", "when": "ansible_os_family == \"RedHat\" and redis_make_32bit|bool", "tags": ["skip_ansible_lint"]}, "module_options": {"name": "libgcc", "state": "latest"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "install redhat 32-bit dependencies", "module": "yum", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install redhat 32-bit dependencies", "when": "ansible_os_family == \"RedHat\" and redis_make_32bit|bool", "tags": ["skip_ansible_lint"]}, "module_options": {"name": ["libgcc.i686", "glibc-devel.i686"], "state": "latest"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "install suse dependencies", "module": "zypper", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/dependencies.yml", "options": {"name": "install suse dependencies", "when": "ansible_os_family == 'Suse'"}, "module_options": {"name": ["gcc", "make", "{{ 'gcc-32bit' if redis_make_32bit|bool else 'gcc' }}", "{{ 'libgcc_s1-32bit' if redis_make_32bit|bool else 'gcc' }}"], "state": "present"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "local_facts.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/local_facts.yml", "tasks": [{"py/object": "struct4.Task", "name": "create facts directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/local_facts.yml", "options": {"name": "create facts directory"}, "module_options": {"path": "/etc/ansible/facts.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis facts", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/local_facts.yml", "options": {"name": "create redis facts"}, "module_options": {"src": "etc/ansible/facts.d/redis.fact.j2", "dest": "/etc/ansible/facts.d/redis.fact"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "check_vars.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/check_vars.yml", "tasks": [{"py/object": "struct4.Task", "name": "check for ansible 1.x", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/check_vars.yml", "options": {"name": "check for ansible 1.x", "when": ["ansible_version.major < 2"]}, "module_options": {"msg": "This role no longer supports Ansible 1.x. The last known good tag for Ansible 1.x support in this role is 1.2.5.\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "check for checksum", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/check_vars.yml", "options": {"name": "check for checksum", "when": ["redis_verify_checksum|bool", "redis_checksum is not defined", "redis_version not in redis_checksums"]}, "module_options": {"msg": "There is no sha1 checksum defined for version {{ redis_version }} in vars/main.yml. Set redis_checksum manually or submit a PR to add this version.\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "download.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "tasks": [{"py/object": "struct4.Task", "name": "set redis checksum", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "set redis checksum", "when": ["redis_verify_checksum|bool", "redis_checksum is not defined", "redis_version in redis_checksums"]}, "module_options": {"redis_checksum": "{{ 'sha1' if redis_checksums[redis_version]|length == 40 else 'sha256' }}:{{ redis_checksums[redis_version] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "download redis", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "download redis", "when": "not redis_tarball"}, "module_options": {"url": "{{ redis_download_url }}", "dest": "/usr/local/src/redis-{{ redis_version }}.tar.gz", "checksum": "{{ redis_checksum|default(omit) }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "upload redis", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "upload redis", "when": "redis_tarball|default(false)"}, "module_options": {"src": "{{ redis_tarball }}", "dest": "/usr/local/src/redis-{{ redis_version }}.tar.gz"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "extract redis tarball", "module": "unarchive", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/download.yml", "options": {"name": "extract redis tarball", "when": "not ansible_check_mode"}, "module_options": {"src": "/usr/local/src/redis-{{ redis_version }}.tar.gz", "dest": "/usr/local/src", "creates": "/usr/local/src/redis-{{ redis_version }}/Makefile", "copy": false}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "server.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "tasks": [{"py/object": "struct4.Task", "name": "create redis working directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis working directory"}, "module_options": {"path": "{{ redis_dir }}", "state": "directory", "recurse": true, "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis init script", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis init script", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis.init.j2", "default/redis.init.j2"], "paths": ["../templates"]}], "when": "redis_as_service and ansible_service_mgr|default() != \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/init.d/{{ redis_service_name }}", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis systemd service", "module": "template", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis systemd service", "with_first_found": [{"files": ["{{ ansible_os_family }}/redis.service.j2", "default/redis.service.j2"], "paths": ["../templates"]}], "register": "redis_unit_file", "when": "redis_as_service and ansible_service_mgr|default() == \"systemd\""}, "module_options": {"src": "{{ item }}", "dest": "/etc/systemd/system/{{ redis_service_name }}.service", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create systemd tmpfiles configuration", "module": "template", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create systemd tmpfiles configuration", "when": ["redis_as_service", "ansible_service_mgr|default() == 'systemd'", "(redis_pidfile|dirname).startswith('/var/run') or (redis_pidfile|dirname).startswith('/run')"]}, "module_options": {"src": "etc/tmpfiles.d/redis.conf.j2", "dest": "/etc/tmpfiles.d/redis.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "reload systemd daemon", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "reload systemd daemon", "when": ["redis_as_service", "ansible_service_mgr|default() == \"systemd\"", "redis_unit_file is changed"]}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "set redis to start at boot", "module": "service", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "set redis to start at boot", "when": "redis_as_service"}, "module_options": {"name": "{{ redis_service_name }}", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if log directory exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "check if log directory exists", "register": "logdir", "changed_when": false, "when": "redis_logfile != '\"\"'"}, "module_options": {"path": "{{ redis_logfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "create log directory if it does not exist", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create log directory if it does not exist", "when": ["redis_logfile != '\"\"'", "not logdir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_logfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create log file if it does not exist", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create log file if it does not exist", "when": "redis_logfile != '\"\"'"}, "module_options": {"dest": "{{ redis_logfile }}", "content": "", "force": false, "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "update permissions of log file if needed", "module": "file", "index": 9, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "update permissions of log file if needed", "when": "redis_logfile != '\"\"'"}, "module_options": {"state": "file", "path": "{{ redis_logfile }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if pid directory exists", "module": "stat", "index": 10, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "check if pid directory exists", "register": "piddir", "changed_when": false, "when": "redis_pidfile != '\"\"'"}, "module_options": {"path": "{{ redis_pidfile|dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "create pid directory if it does not exist", "module": "file", "index": 11, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create pid directory if it does not exist", "when": ["redis_pidfile != '\"\"'", "not piddir.stat.exists"]}, "module_options": {"state": "directory", "path": "{{ redis_pidfile|dirname }}", "owner": "{{ redis_user }}", "group": "{{ redis_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis config file", "module": "template", "index": 12, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "create redis config file", "notify": "restart redis"}, "module_options": {"src": "redis.conf.j2", "dest": "/etc/redis/{{ redis_config_file_name }}", "owner": "{{ redis_user }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis init config file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "add redis init config file", "when": "ansible_os_family == \"RedHat\"", "notify": "restart redis"}, "module_options": {"dest": "/etc/sysconfig/{{ redis_service_name }}", "src": "redis.init.conf.j2", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis init config file", "module": "template", "index": 14, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "add redis init config file", "when": "ansible_os_family == \"Debian\"", "notify": "restart redis"}, "module_options": {"dest": "/etc/default/{{ redis_service_name }}", "src": "redis.init.conf.j2", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers to apply config changes", "module": "meta", "index": 15, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "flush handlers to apply config changes"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure redis is running", "module": "service", "index": 16, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/server.yml", "options": {"name": "ensure redis is running", "when": "redis_as_service"}, "module_options": {"name": "{{ redis_service_name }}", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "enable overcommit in sysctl", "module": "sysctl", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "enable overcommit in sysctl", "when": "redis_travis_ci is not defined"}, "module_options": {"name": "vm.overcommit_memory", "value": "1", "state": "present", "reload": true, "ignoreerrors": true}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "compile redis", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "compile redis", "args": {"chdir": "/usr/local/src/redis-{{ redis_version }}", "creates": "/usr/local/src/redis-{{ redis_version }}/src/redis-server"}}, "module_options": "umask 0022 && make -j{{ ansible_processor_cores|default(1) + 1 }}{{ ' 32bit' if redis_make_32bit|bool else '' }}{{ ' BUILD_TLS=yes' if redis_make_tls|bool else '' }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "create redis install directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "create redis install directory"}, "module_options": {"path": "{{ redis_install_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if redis user exists (ignore errors)", "module": "command", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "check if redis user exists (ignore errors)", "ignore_errors": true, "changed_when": false, "register": "user_exists"}, "module_options": "id {{ redis_user }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis group", "module": "group", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "add redis group", "when": "user_exists is failed"}, "module_options": {"name": "{{ redis_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis user", "module": "user", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "add redis user", "when": "user_exists is failed"}, "module_options": {"name": "{{ redis_user }}", "group": "{{ redis_group }}", "comment": "Redis", "home": "{{ redis_install_dir }}", "shell": "/bin/false", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "create /etc/redis", "module": "file", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "create /etc/redis"}, "module_options": {"path": "/etc/redis", "state": "directory", "mode": 493, "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create /var/run/redis", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "create /var/run/redis"}, "module_options": {"path": "/var/run/redis", "state": "directory", "owner": "{{ redis_user }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "install redis", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "install redis", "args": {"chdir": "/usr/local/src/redis-{{ redis_version }}", "creates": "{{ redis_install_dir }}/bin/redis-server"}}, "module_options": "umask 0022 && make PREFIX={{ redis_install_dir }} install", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "list redis binaries to add to alternatives", "module": "command", "index": 9, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "list redis binaries to add to alternatives", "register": "redis_binaries", "changed_when": false, "check_mode": false}, "module_options": "ls -1 {{ redis_install_dir }}/bin", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "add redis binaries to alternatives", "module": "alternatives", "index": 10, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/install.yml", "options": {"name": "add redis binaries to alternatives", "with_items": "{{ redis_binaries.stdout_lines }}", "when": "redis_binaries is succeeded"}, "module_options": {"name": "{{ item }}", "path": "{{ redis_install_dir }}/bin/{{ item }}", "link": "/usr/bin/{{ item }}"}, "executable": "alternatives", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {}, "module_options": "check_vars.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"tags": ["download"]}, "module_options": "download.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 2, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"tags": ["install"]}, "module_options": "dependencies.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 3, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"tags": ["install"]}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 4, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"when": "not redis_sentinel", "tags": ["config"]}, "module_options": "server.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 5, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"when": "redis_sentinel", "tags": ["config"]}, "module_options": "sentinel.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 6, "defined_in": "./role-test/testdata/DavidWittman-redis/DavidWittman.redis/tasks/main.yml", "options": {"when": "redis_local_facts|bool"}, "module_options": "local_facts.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "DavidWittman.redis", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}