{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/dj-wasabi-telegraf", "installed_roles": [{"py/object": "struct4.Role", "name": "dj-wasabi.telegraf", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf", "fqcn": "dj-wasabi.telegraf", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Set name if state == latest", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Set name if state == latest", "when": ["telegraf_agent_package_state != \"latest\""]}, "module_options": {"telegraf_agent_package": "telegraf-{{ telegraf_agent_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Use RHEL 7 packages for Fedora", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "Use RHEL 7 packages for Fedora", "when": ["ansible_distribution == \"Fedora\""]}, "module_options": {"telegraf_redhat_releasever": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Add yum repository", "module": "yum_repository", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Add yum repository", "become": true, "when": ["telegraf_agent_package_method == \"repo\""]}, "module_options": {"name": "influxdb", "description": "InfluxDB Repository - RHEL $releasever", "baseurl": "{{ telegraf_yum_baseurl[ansible_distribution|lower] | default(telegraf_yum_baseurl['default']) }}", "gpgcheck": "{{ telegraf_yum_gpgcheck | default('true') }}", "gpgkey": "{{ telegraf_yum_gpgkey }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Download Telegraf package (online)", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Download Telegraf package (online)", "environment": {"http_proxy": "{{ http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ https_proxy | default(None) | default(omit) }}"}, "when": ["telegraf_agent_package_method == \"online\""]}, "module_options": {"url": "https://dl.influxdata.com/telegraf/releases/{{ telegraf_agent_package_file_rpm }}", "dest": "{{ telegraf_agent_package }}", "use_proxy": "{{ true if http_proxy is defined and http_proxy else false }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Telegraf package", "module": "package", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Install Telegraf package", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "become": true, "notify": "Restart Telegraf"}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Suse.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "tasks": [{"py/object": "struct4.Task", "name": "Suse | Adding Telegraf group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Adding Telegraf group"}, "module_options": {"name": "telegraf", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Adding Telegraf user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Adding Telegraf user", "become": true}, "module_options": {"name": "telegraf", "group": "telegraf", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install repo dependencies", "module": "zypper", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install repo dependencies", "register": "are_telegraf_dependencies_packages_installed", "until": "are_telegraf_dependencies_packages_installed is succeeded", "become": true}, "module_options": {"name": ["python-libxml2", "python-xml"], "update_cache": true, "state": "present"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install basic repo file", "module": "zypper_repository", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install basic repo file", "become": true}, "module_options": {"repo": "http://download.opensuse.org/repositories/devel:/languages:/go/openSUSE_Factory/", "name": "The Go Programming Language (openSUSE_Factory)", "state": "present", "runrefresh": true, "auto_import_keys": true}, "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install Telegraf", "module": "zypper", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install Telegraf", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "become": true}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Create directories for telegraf", "module": "file", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Create directories for telegraf", "with_items": [{"path": "/etc/telegraf/telegraf.d/", "owner": "root"}, {"path": "/var/log/telegraf", "owner": "telegraf"}]}, "module_options": {"path": "{{ item.path }}", "owner": "{{ item.owner }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install init file", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install init file"}, "module_options": {"src": "telegraf.init", "dest": "/etc/init.d/telegraf", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure_windows.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows | Create directory structure", "module": "win_file", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Create directory structure", "with_items": ["{{ telegraf_win_install_dir }}", "{{ telegraf_win_include }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if file is already downloaded", "module": "win_stat", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Check if file is already downloaded", "register": "file_info"}, "module_options": {"path": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Download Telegraf Agent Zip file", "module": "win_get_url", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Download Telegraf Agent Zip file", "when": ["not file_info.stat.exists"]}, "module_options": {"url": "https://dl.influxdata.com/telegraf/releases/telegraf-{{ telegraf_agent_version }}_windows_amd64.zip", "dest": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Unzip file (newer than 1.15)", "module": "win_unzip", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Unzip file (newer than 1.15)", "when": "telegraf_agent_version is version('1.15', '>=')"}, "module_options": {"src": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip", "dest": "{{ telegraf_win_install_dir }}", "creates": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}\\telegraf.exe"}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Move extracted directory (newer than 1.15)", "module": "win_copy", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Move extracted directory (newer than 1.15)", "when": "telegraf_agent_version is version('1.15', '>=')"}, "module_options": {"src": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}\\", "dest": "{{ telegraf_win_install_dir }}\\telegraf", "remote_src": true}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Unzip file", "module": "win_unzip", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Unzip file", "when": "telegraf_agent_version is version('1.15', '<')"}, "module_options": {"src": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip", "dest": "{{ telegraf_win_install_dir }}", "creates": "{{ telegraf_win_install_dir }}\\telegraf\\telegraf.exe", "delete_archive": true}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Configure Telegraf", "module": "win_template", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Configure Telegraf", "notify": "Restart Windows Telegraf"}, "module_options": {"src": "telegraf.conf.j2", "dest": "{{ telegraf_win_install_dir }}\\telegraf\\telegraf.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Copy telegraf extra plugins", "module": "win_template", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Copy telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') != 'absent'"], "notify": "Restart Windows Telegraf"}, "module_options": {"src": "telegraf-extra-plugin.conf.j2", "dest": "{{ telegraf_win_include }}\\{{ item.key }}.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Remove telegraf extra plugins", "module": "win_file", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Remove telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') == 'absent'"], "notify": "Restart Windows Telegraf"}, "module_options": {"path": "{{ telegraf_win_include }}\\{{ item.key }}.conf", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Register Service", "module": "win_command", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Register Service", "register": "telegraf_windows_install", "args": {"creates": "{{ telegraf_win_install_dir }}\\.installed"}}, "module_options": "{{ telegraf_win_install_dir }}\\telegraf\\telegraf.exe {{ telegraf_win_service_args | join(\" \") }}", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Create done file so it won't register itself again", "module": "win_file", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Create done file so it won't register itself again", "when": ["telegraf_windows_install is changed"]}, "module_options": {"path": "{{ telegraf_win_install_dir }}\\.installed", "state": "touch"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto and ensure it is started", "module": "win_service", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Set service startup mode to auto and ensure it is started"}, "module_options": {"name": "Telegraf", "start_mode": "auto", "state": "started"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Cleanup", "module": "win_file", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Cleanup", "when": "telegraf_agent_version is version('1.15', '>=')"}, "module_options": {"path": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure_macos.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "tasks": [{"py/object": "struct4.Task", "name": "Retrieve ec2 facts", "module": "ec2_metadata_facts", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Retrieve ec2 facts", "when": ["telegraf_agent_aws_tags"]}, "module_options": null, "executable": "ec2_metadata_facts", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add prefix path", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Add prefix path", "when": ["ansible_os_family in [\"FreeBSD\", \"Darwin\"]"]}, "module_options": {"telegraf_agent_config_path": "/usr/local/etc"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve all ec2 tags on the instance", "module": "ec2_tag", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Retrieve all ec2 tags on the instance", "when": ["telegraf_agent_aws_tags"], "register": "ec2_tags"}, "module_options": {"region": "{{ ansible_ec2_placement_region }}", "resource": "{{ ansible_ec2_instance_id }}", "state": "list"}, "executable": "ec2_tag", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the template for versions < 0.10.0", "module": "template", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Copy the template for versions < 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '<')"], "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "etc-opt-telegraf-telegraf.conf.j2", "dest": "/etc/opt/telegraf/telegraf.conf", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the template for versions >= 0.10.0", "module": "template", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Copy the template for versions >= 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '>=')"], "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.conf", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if extra plugins directory exists in case of exclusive", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Check if extra plugins directory exists in case of exclusive", "register": "telegraf_directory", "when": ["telegraf_plugins_extra_exclusive"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete telegraf extra plugin path", "module": "file", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Delete telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "absent", "path": "{{ telegraf_agent_config_path }}/telegraf.d/"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create telegraf extra plugin path", "module": "file", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Create telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "directory", "path": "{{ telegraf_agent_config_path }}/telegraf.d/", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy telegraf extra plugins", "module": "template", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Copy telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') != 'absent'"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf-extra-plugin.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove telegraf extra plugins", "module": "file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Remove telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') == 'absent'"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force restart service after reread config", "module": "meta", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Force restart service after reread config"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start Telegraf (If it wasn't running)", "module": "command", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Start Telegraf (If it wasn't running)", "register": "brew_services_start_telegraf", "changed_when": "\"Successfully started `telegraf`\" in brew_services_start_telegraf.stdout", "when": "not telegraf_agent_docker"}, "module_options": "brew services start telegraf", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "MacOS.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/MacOS.yml", "tasks": [{"py/object": "struct4.Task", "name": "MacOS | set package name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/MacOS.yml", "options": {"name": "MacOS | set package name"}, "module_options": {"telegraf_agent_package": "telegraf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MacOS | Install Telegraf package", "module": "package", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/MacOS.yml", "options": {"name": "MacOS | Install Telegraf package", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf"}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Debian | Set name if state != latest", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set name if state != latest", "when": ["telegraf_agent_package_state != \"latest\""]}, "module_options": {"telegraf_agent_package": "telegraf={{ telegraf_agent_version }}-{{ telegraf_agent_version_patch }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set telegraf_agent_package_arch", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set telegraf_agent_package_arch"}, "module_options": {"telegraf_agent_package_arch": "{{ ansible_architecture }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set telegraf_agent_package_arch specific for x86_64", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set telegraf_agent_package_arch specific for x86_64", "when": ["ansible_architecture == \"x86_64\""]}, "module_options": {"telegraf_agent_package_arch": "amd64"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set telegraf_agent_package_arch specific for arm64", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set telegraf_agent_package_arch specific for arm64", "when": ["ansible_architecture == \"arm64\""]}, "module_options": {"telegraf_agent_package_arch": "armhf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Ensure the system can use the HTTPS transport for APT", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Ensure the system can use the HTTPS transport for APT", "register": "apt_https_transport"}, "module_options": {"path": "/usr/lib/apt/methods/https"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install APT HTTPS transport", "module": "apt", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Install APT HTTPS transport", "register": "are_telegraf_dependencies_packages_installed", "until": "are_telegraf_dependencies_packages_installed is succeeded", "when": ["not apt_https_transport.stat.exists"], "become": true}, "module_options": {"name": "apt-transport-https", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Download Telegraf apt key", "module": "apt_key", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Download Telegraf apt key", "register": "are_telegraf_dependencies_keys_installed", "until": "are_telegraf_dependencies_keys_installed is succeeded", "become": true, "when": ["telegraf_agent_package_method == \"repo\""]}, "module_options": {"url": "https://repos.influxdata.com/influxdb.key", "id": "2582E0C5", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Add Telegraf repository (using LSB)", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Add Telegraf repository (using LSB)", "become": true, "when": ["telegraf_agent_package_method == \"repo\"", "ansible_lsb is defined", "ansible_lsb.codename is defined"]}, "module_options": {"repo": "deb https://repos.influxdata.com/{{ ansible_distribution|lower }} {{ ansible_lsb.codename }} stable", "filename": "telegraf", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Add Telegraf repository", "module": "apt_repository", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Add Telegraf repository", "become": true, "when": ["telegraf_agent_package_method == \"repo\"", "ansible_lsb is not defined or ansible_lsb.codename is not defined"]}, "module_options": {"repo": "deb https://repos.influxdata.com/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable", "filename": "telegraf", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Download Telegraf package (online)", "module": "get_url", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Download Telegraf package (online)", "environment": {"http_proxy": "{{ http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ https_proxy | default(None) | default(omit) }}"}, "when": ["telegraf_agent_package_method == \"online\""]}, "module_options": {"url": "https://dl.influxdata.com/telegraf/releases/{{ telegraf_agent_package_file_deb }}", "dest": "{{ telegraf_agent_package_path }}/{{ telegraf_agent_package }}", "use_proxy": "{{ true if http_proxy is defined and http_proxy else false }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Telegraf package (repo)", "module": "apt", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Install Telegraf package (repo)", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf", "become": true, "when": ["telegraf_agent_package_method == \"repo\""]}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Telegraf package (online)", "module": "apt", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Install Telegraf package (online)", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf", "become": true, "when": ["telegraf_agent_package_method == \"online\" or telegraf_agent_package_method == \"offline\""]}, "module_options": {"deb": "{{ telegraf_agent_package_path }}/{{ telegraf_agent_package }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Remove repository (online/offline install)", "module": "file", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Remove repository (online/offline install)", "become": true, "when": ["telegraf_agent_package_method == \"online\" or telegraf_agent_package_method == \"offline\""]}, "module_options": {"path": "/etc/apt/sources.list.d/telegraf.list", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "FreeBSD.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "tasks": [{"py/object": "struct4.Task", "name": "FreeBSD | set package name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | set package name"}, "module_options": {"telegraf_agent_package": "telegraf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "FreeBSD | Install Telegraf package", "module": "pkgng", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | Install Telegraf package", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf"}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "pkgng", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "FreeBSD | add telegraf_flags for extra plugins", "module": "command", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | add telegraf_flags for extra plugins", "tags": ["skip_ansible_lint"]}, "module_options": "sysrc telegraf_flags=\"-quiet -config-directory=/usr/local/etc/telegraf.d\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "FreeBSD | add telegraf to init", "module": "command", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | add telegraf to init", "tags": ["skip_ansible_lint"]}, "module_options": "sysrc telegraf_enable=\"YES\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "docker.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "tasks": [{"py/object": "struct4.Task", "name": "Adding Telegraf group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Adding Telegraf group"}, "module_options": {"name": "telegraf", "state": "present", "gid": "{{ telegraf_gid_docker }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding Telegraf user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Adding Telegraf user", "become": true}, "module_options": {"name": "telegraf", "group": "telegraf", "state": "present", "create_home": false, "home": "/etc/telegraf", "uid": "{{ telegraf_uid_docker }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create /etc/telegraf (home) directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Create /etc/telegraf (home) directory", "become": true}, "module_options": {"path": "/etc/telegraf", "owner": "telegraf", "group": "telegraf", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create /etc/telegraf.d directory", "module": "file", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Create /etc/telegraf.d directory", "become": true}, "module_options": {"path": "/etc/telegraf/telegraf.d", "owner": "telegraf", "group": "telegraf", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Telegraf Docker container is running", "module": "docker_container", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Ensure Telegraf Docker container is running"}, "module_options": {"name": "{{ telegraf_agent_docker_name }}", "image": "telegraf:{{ telegraf_agent_docker_image_version }}", "state": "started", "restart_policy": "{{ telegraf_agent_docker_restart_policy }}", "command": "-config /etc/telegraf/telegraf.conf -config-directory /etc/telegraf/telegraf.d", "network_mode": "{{ telegraf_agent_docker_network_mode }}", "security_opts": ["apparmor:unconfined"], "volumes": ["/etc/telegraf:/etc/telegraf:ro", "/:/hostfs:ro", "/etc:/hostfs/etc:ro", "/proc:/hostfs/proc:ro", "/sys:/hostfs/sys:ro", "/var/run:/var/run:ro"], "env": {"HOST_MOUNT_PREFIX": "/hostfs", "HOST_ETC": "/hostfs/etc", "HOST_PROC": "/hostfs/proc", "HOST_SYS": "/hostfs/sys"}}, "executable": "docker_container", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install on RedHat", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on RedHat", "when": ["ansible_os_family == \"RedHat\" and not telegraf_agent_docker"]}, "module_options": "RedHat.yml", "executable": "RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install on Debian", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on Debian", "when": ["ansible_os_family == \"Debian\" and not telegraf_agent_docker"], "tags": ["telegraf", "packages"]}, "module_options": "Debian.yml", "executable": "Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install on Suse", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on Suse", "when": "ansible_os_family == \"Suse\" and not telegraf_agent_docker"}, "module_options": "Suse.yml", "executable": "Suse.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install on FreeBSD", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on FreeBSD", "when": ["ansible_os_family == \"FreeBSD\" and not telegraf_agent_docker"]}, "module_options": "FreeBSD.yml", "executable": "FreeBSD.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install on MacOS", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on MacOS", "when": ["ansible_os_family == \"Darwin\" and not telegraf_agent_docker"]}, "module_options": "MacOS.yml", "executable": "MacOS.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"when": "telegraf_agent_docker"}, "module_options": "docker.yml", "executable": "docker.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Telegraf", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Configure Telegraf", "when": ["ansible_os_family not in ['Windows', 'Darwin']"]}, "module_options": "configure_linux.yml", "executable": "configure_linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install / Configure telegraf on Windows", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install / Configure telegraf on Windows", "when": ["ansible_os_family == \"Windows\" and not telegraf_agent_docker"]}, "module_options": "configure_windows.yml", "executable": "configure_windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install / Configure telegraf on MacOS", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install / Configure telegraf on MacOS", "when": ["ansible_os_family == \"Darwin\" and not telegraf_agent_docker"]}, "module_options": "configure_macos.yml", "executable": "configure_macos.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure_linux.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Retrieve ec2 facts", "module": "ec2_metadata_facts", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Retrieve ec2 facts", "when": ["telegraf_agent_aws_tags"]}, "module_options": null, "executable": "ec2_metadata_facts", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add prefix path", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Add prefix path", "when": ["ansible_os_family == \"FreeBSD\""]}, "module_options": {"telegraf_agent_config_path": "/usr/local/etc"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve all ec2 tags on the instance", "module": "ec2_tag", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Retrieve all ec2 tags on the instance", "when": ["telegraf_agent_aws_tags"], "register": "ec2_tags"}, "module_options": {"region": "{{ ansible_ec2_placement_region }}", "resource": "{{ ansible_ec2_instance_id }}", "state": "list"}, "executable": "ec2_tag", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the template for versions < 0.10.0", "module": "template", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Copy the template for versions < 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '<')"], "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "etc-opt-telegraf-telegraf.conf.j2", "dest": "/etc/opt/telegraf/telegraf.conf", "owner": "telegraf", "group": "telegraf", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the template for versions >= 0.10.0", "module": "template", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Copy the template for versions >= 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '>=')"], "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.conf", "owner": "telegraf", "group": "telegraf", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if extra plugins directory exists in case of exclusive", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Check if extra plugins directory exists in case of exclusive", "register": "telegraf_directory", "when": ["telegraf_plugins_extra_exclusive"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete telegraf extra plugin path", "module": "file", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Delete telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "absent", "path": "{{ telegraf_agent_config_path }}/telegraf.d/"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create telegraf extra plugin path", "module": "file", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Create telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "directory", "path": "{{ telegraf_agent_config_path }}/telegraf.d/", "owner": "telegraf", "group": "telegraf", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy telegraf extra plugins", "module": "template", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Copy telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') != 'absent'"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf-extra-plugin.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "owner": "telegraf", "group": "telegraf", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove telegraf extra plugins", "module": "file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Remove telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') == 'absent'"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force restart service after reread config", "module": "meta", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Force restart service after reread config"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start Telegraf (If it wasn't running)", "module": "service", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Start Telegraf (If it wasn't running)", "become": true, "when": "not telegraf_agent_docker"}, "module_options": {"name": "telegraf", "state": "{{ telegraf_enabled | ternary('started', 'stopped') }}", "enabled": "{{ telegraf_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add telegraf user to docker group", "module": "user", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Add telegraf user to docker group", "become": true, "notify": ["Restart Telegraf"]}, "module_options": {"name": "telegraf", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install smartmontools", "module": "package", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Install smartmontools", "become": true}, "module_options": {"name": "smartmontools"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find path of smartctl", "module": "command", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Find path of smartctl", "register": "which_smartctl", "ignore_errors": true, "changed_when": false, "become": true}, "module_options": "which smartctl", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure telegraf user can execute smartctl", "module": "blockinfile", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Ensure telegraf user can execute smartctl", "become": true, "notify": ["Restart Telegraf"]}, "module_options": {"marker": "# {mark} ANSIBLE MANAGED BLOCK (Ensure telegraf user can execute smartctl)", "dest": "/etc/sudoers.d/telegraf", "block": "telegraf ALL=(root) NOPASSWD: {{ which_smartctl.stdout }}", "mode": 256, "create": true}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install lm-sensors", "module": "package", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Debian | Install lm-sensors", "become": true, "notify": ["Restart Telegraf"], "when": "ansible_os_family == \"Debian\""}, "module_options": {"name": "lm-sensors"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install lm-sensors", "module": "package", "index": 17, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "RedHat | Install lm-sensors", "become": true, "notify": ["Restart Telegraf"], "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": "lm_sensors"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "RedHat | Set name if state == latest", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Set name if state == latest", "when": ["telegraf_agent_package_state != \"latest\""]}, "module_options": {"telegraf_agent_package": "telegraf-{{ telegraf_agent_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Use RHEL 7 packages for Fedora", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "Use RHEL 7 packages for Fedora", "when": ["ansible_distribution == \"Fedora\""]}, "module_options": {"telegraf_redhat_releasever": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "RedHat | Add yum repository", "module": "yum_repository", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Add yum repository", "become": true, "when": ["telegraf_agent_package_method == \"repo\""]}, "module_options": {"name": "influxdb", "description": "InfluxDB Repository - RHEL $releasever", "baseurl": "{{ telegraf_yum_baseurl[ansible_distribution|lower] | default(telegraf_yum_baseurl['default']) }}", "gpgcheck": "{{ telegraf_yum_gpgcheck | default('true') }}", "gpgkey": "{{ telegraf_yum_gpgkey }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "RedHat | Download Telegraf package (online)", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Download Telegraf package (online)", "environment": {"http_proxy": "{{ http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ https_proxy | default(None) | default(omit) }}"}, "when": ["telegraf_agent_package_method == \"online\""]}, "module_options": {"url": "https://dl.influxdata.com/telegraf/releases/{{ telegraf_agent_package_file_rpm }}", "dest": "{{ telegraf_agent_package }}", "use_proxy": "{{ true if http_proxy is defined and http_proxy else false }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "RedHat | Install Telegraf package", "module": "package", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Install Telegraf package", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "become": true, "notify": "Restart Telegraf"}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Suse | Adding Telegraf group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Adding Telegraf group"}, "module_options": {"name": "telegraf", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Suse | Adding Telegraf user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Adding Telegraf user", "become": true}, "module_options": {"name": "telegraf", "group": "telegraf", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Suse | Install repo dependencies", "module": "zypper", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install repo dependencies", "register": "are_telegraf_dependencies_packages_installed", "until": "are_telegraf_dependencies_packages_installed is succeeded", "become": true}, "module_options": {"name": ["python-libxml2", "python-xml"], "update_cache": true, "state": "present"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Suse | Install basic repo file", "module": "zypper_repository", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install basic repo file", "become": true}, "module_options": {"repo": "http://download.opensuse.org/repositories/devel:/languages:/go/openSUSE_Factory/", "name": "The Go Programming Language (openSUSE_Factory)", "state": "present", "runrefresh": true, "auto_import_keys": true}, "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Suse | Install Telegraf", "module": "zypper", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install Telegraf", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "become": true}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Suse | Create directories for telegraf", "module": "file", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Create directories for telegraf", "with_items": [{"path": "/etc/telegraf/telegraf.d/", "owner": "root"}, {"path": "/var/log/telegraf", "owner": "telegraf"}]}, "module_options": {"path": "{{ item.path }}", "owner": "{{ item.owner }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Suse | Install init file", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install init file"}, "module_options": {"src": "telegraf.init", "dest": "/etc/init.d/telegraf", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Windows | Create directory structure", "module": "win_file", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Create directory structure", "with_items": ["{{ telegraf_win_install_dir }}", "{{ telegraf_win_include }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Windows | Check if file is already downloaded", "module": "win_stat", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Check if file is already downloaded", "register": "file_info"}, "module_options": {"path": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Windows | Download Telegraf Agent Zip file", "module": "win_get_url", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Download Telegraf Agent Zip file", "when": ["not file_info.stat.exists"]}, "module_options": {"url": "https://dl.influxdata.com/telegraf/releases/telegraf-{{ telegraf_agent_version }}_windows_amd64.zip", "dest": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Windows | Unzip file (newer than 1.15)", "module": "win_unzip", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Unzip file (newer than 1.15)", "when": "telegraf_agent_version is version('1.15', '>=')"}, "module_options": {"src": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip", "dest": "{{ telegraf_win_install_dir }}", "creates": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}\\telegraf.exe"}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Windows | Move extracted directory (newer than 1.15)", "module": "win_copy", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Move extracted directory (newer than 1.15)", "when": "telegraf_agent_version is version('1.15', '>=')"}, "module_options": {"src": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}\\", "dest": "{{ telegraf_win_install_dir }}\\telegraf", "remote_src": true}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Windows | Unzip file", "module": "win_unzip", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Unzip file", "when": "telegraf_agent_version is version('1.15', '<')"}, "module_options": {"src": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip", "dest": "{{ telegraf_win_install_dir }}", "creates": "{{ telegraf_win_install_dir }}\\telegraf\\telegraf.exe", "delete_archive": true}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Windows | Configure Telegraf", "module": "win_template", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Configure Telegraf", "notify": "Restart Windows Telegraf"}, "module_options": {"src": "telegraf.conf.j2", "dest": "{{ telegraf_win_install_dir }}\\telegraf\\telegraf.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Windows | Copy telegraf extra plugins", "module": "win_template", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Copy telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') != 'absent'"], "notify": "Restart Windows Telegraf"}, "module_options": {"src": "telegraf-extra-plugin.conf.j2", "dest": "{{ telegraf_win_include }}\\{{ item.key }}.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Windows | Remove telegraf extra plugins", "module": "win_file", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Remove telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') == 'absent'"], "notify": "Restart Windows Telegraf"}, "module_options": {"path": "{{ telegraf_win_include }}\\{{ item.key }}.conf", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Windows | Register Service", "module": "win_command", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Register Service", "register": "telegraf_windows_install", "args": {"creates": "{{ telegraf_win_install_dir }}\\.installed"}}, "module_options": "{{ telegraf_win_install_dir }}\\telegraf\\telegraf.exe {{ telegraf_win_service_args | join(\" \") }}", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Windows | Create done file so it won't register itself again", "module": "win_file", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Create done file so it won't register itself again", "when": ["telegraf_windows_install is changed"]}, "module_options": {"path": "{{ telegraf_win_install_dir }}\\.installed", "state": "touch"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto and ensure it is started", "module": "win_service", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Set service startup mode to auto and ensure it is started"}, "module_options": {"name": "Telegraf", "start_mode": "auto", "state": "started"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Windows | Cleanup", "module": "win_file", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Cleanup", "when": "telegraf_agent_version is version('1.15', '>=')"}, "module_options": {"path": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Retrieve ec2 facts", "module": "ec2_metadata_facts", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Retrieve ec2 facts", "when": ["telegraf_agent_aws_tags"]}, "module_options": null, "executable": "ec2_metadata_facts", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add prefix path", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Add prefix path", "when": ["ansible_os_family in [\"FreeBSD\", \"Darwin\"]"]}, "module_options": {"telegraf_agent_config_path": "/usr/local/etc"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Retrieve all ec2 tags on the instance", "module": "ec2_tag", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Retrieve all ec2 tags on the instance", "when": ["telegraf_agent_aws_tags"], "register": "ec2_tags"}, "module_options": {"region": "{{ ansible_ec2_placement_region }}", "resource": "{{ ansible_ec2_instance_id }}", "state": "list"}, "executable": "ec2_tag", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Copy the template for versions < 0.10.0", "module": "template", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Copy the template for versions < 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '<')"], "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "etc-opt-telegraf-telegraf.conf.j2", "dest": "/etc/opt/telegraf/telegraf.conf", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Copy the template for versions >= 0.10.0", "module": "template", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Copy the template for versions >= 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '>=')"], "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.conf", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Check if extra plugins directory exists in case of exclusive", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Check if extra plugins directory exists in case of exclusive", "register": "telegraf_directory", "when": ["telegraf_plugins_extra_exclusive"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Delete telegraf extra plugin path", "module": "file", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Delete telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "absent", "path": "{{ telegraf_agent_config_path }}/telegraf.d/"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create telegraf extra plugin path", "module": "file", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Create telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "directory", "path": "{{ telegraf_agent_config_path }}/telegraf.d/", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Copy telegraf extra plugins", "module": "template", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Copy telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') != 'absent'"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf-extra-plugin.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Remove telegraf extra plugins", "module": "file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Remove telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') == 'absent'"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Force restart service after reread config", "module": "meta", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Force restart service after reread config"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Start Telegraf (If it wasn't running)", "module": "command", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Start Telegraf (If it wasn't running)", "register": "brew_services_start_telegraf", "changed_when": "\"Successfully started `telegraf`\" in brew_services_start_telegraf.stdout", "when": "not telegraf_agent_docker"}, "module_options": "brew services start telegraf", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/MacOS.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "MacOS | set package name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/MacOS.yml", "options": {"name": "MacOS | set package name"}, "module_options": {"telegraf_agent_package": "telegraf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/MacOS.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "MacOS | Install Telegraf package", "module": "package", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/MacOS.yml", "options": {"name": "MacOS | Install Telegraf package", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf"}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Debian | Set name if state != latest", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set name if state != latest", "when": ["telegraf_agent_package_state != \"latest\""]}, "module_options": {"telegraf_agent_package": "telegraf={{ telegraf_agent_version }}-{{ telegraf_agent_version_patch }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Debian | Set telegraf_agent_package_arch", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set telegraf_agent_package_arch"}, "module_options": {"telegraf_agent_package_arch": "{{ ansible_architecture }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Debian | Set telegraf_agent_package_arch specific for x86_64", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set telegraf_agent_package_arch specific for x86_64", "when": ["ansible_architecture == \"x86_64\""]}, "module_options": {"telegraf_agent_package_arch": "amd64"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Debian | Set telegraf_agent_package_arch specific for arm64", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set telegraf_agent_package_arch specific for arm64", "when": ["ansible_architecture == \"arm64\""]}, "module_options": {"telegraf_agent_package_arch": "armhf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Debian | Ensure the system can use the HTTPS transport for APT", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Ensure the system can use the HTTPS transport for APT", "register": "apt_https_transport"}, "module_options": {"path": "/usr/lib/apt/methods/https"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Debian | Install APT HTTPS transport", "module": "apt", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Install APT HTTPS transport", "register": "are_telegraf_dependencies_packages_installed", "until": "are_telegraf_dependencies_packages_installed is succeeded", "when": ["not apt_https_transport.stat.exists"], "become": true}, "module_options": {"name": "apt-transport-https", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Debian | Download Telegraf apt key", "module": "apt_key", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Download Telegraf apt key", "register": "are_telegraf_dependencies_keys_installed", "until": "are_telegraf_dependencies_keys_installed is succeeded", "become": true, "when": ["telegraf_agent_package_method == \"repo\""]}, "module_options": {"url": "https://repos.influxdata.com/influxdb.key", "id": "2582E0C5", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Debian | Add Telegraf repository (using LSB)", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Add Telegraf repository (using LSB)", "become": true, "when": ["telegraf_agent_package_method == \"repo\"", "ansible_lsb is defined", "ansible_lsb.codename is defined"]}, "module_options": {"repo": "deb https://repos.influxdata.com/{{ ansible_distribution|lower }} {{ ansible_lsb.codename }} stable", "filename": "telegraf", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Debian | Add Telegraf repository", "module": "apt_repository", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Add Telegraf repository", "become": true, "when": ["telegraf_agent_package_method == \"repo\"", "ansible_lsb is not defined or ansible_lsb.codename is not defined"]}, "module_options": {"repo": "deb https://repos.influxdata.com/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable", "filename": "telegraf", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Debian | Download Telegraf package (online)", "module": "get_url", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Download Telegraf package (online)", "environment": {"http_proxy": "{{ http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ https_proxy | default(None) | default(omit) }}"}, "when": ["telegraf_agent_package_method == \"online\""]}, "module_options": {"url": "https://dl.influxdata.com/telegraf/releases/{{ telegraf_agent_package_file_deb }}", "dest": "{{ telegraf_agent_package_path }}/{{ telegraf_agent_package }}", "use_proxy": "{{ true if http_proxy is defined and http_proxy else false }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Debian | Install Telegraf package (repo)", "module": "apt", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Install Telegraf package (repo)", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf", "become": true, "when": ["telegraf_agent_package_method == \"repo\""]}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Debian | Install Telegraf package (online)", "module": "apt", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Install Telegraf package (online)", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf", "become": true, "when": ["telegraf_agent_package_method == \"online\" or telegraf_agent_package_method == \"offline\""]}, "module_options": {"deb": "{{ telegraf_agent_package_path }}/{{ telegraf_agent_package }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Debian | Remove repository (online/offline install)", "module": "file", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Remove repository (online/offline install)", "become": true, "when": ["telegraf_agent_package_method == \"online\" or telegraf_agent_package_method == \"offline\""]}, "module_options": {"path": "/etc/apt/sources.list.d/telegraf.list", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "FreeBSD | set package name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | set package name"}, "module_options": {"telegraf_agent_package": "telegraf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "FreeBSD | Install Telegraf package", "module": "pkgng", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | Install Telegraf package", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf"}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "pkgng", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "FreeBSD | add telegraf_flags for extra plugins", "module": "command", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | add telegraf_flags for extra plugins", "tags": ["skip_ansible_lint"]}, "module_options": "sysrc telegraf_flags=\"-quiet -config-directory=/usr/local/etc/telegraf.d\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "FreeBSD | add telegraf to init", "module": "command", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | add telegraf to init", "tags": ["skip_ansible_lint"]}, "module_options": "sysrc telegraf_enable=\"YES\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Adding Telegraf group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Adding Telegraf group"}, "module_options": {"name": "telegraf", "state": "present", "gid": "{{ telegraf_gid_docker }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Adding Telegraf user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Adding Telegraf user", "become": true}, "module_options": {"name": "telegraf", "group": "telegraf", "state": "present", "create_home": false, "home": "/etc/telegraf", "uid": "{{ telegraf_uid_docker }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create /etc/telegraf (home) directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Create /etc/telegraf (home) directory", "become": true}, "module_options": {"path": "/etc/telegraf", "owner": "telegraf", "group": "telegraf", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create /etc/telegraf.d directory", "module": "file", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Create /etc/telegraf.d directory", "become": true}, "module_options": {"path": "/etc/telegraf/telegraf.d", "owner": "telegraf", "group": "telegraf", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Ensure Telegraf Docker container is running", "module": "docker_container", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Ensure Telegraf Docker container is running"}, "module_options": {"name": "{{ telegraf_agent_docker_name }}", "image": "telegraf:{{ telegraf_agent_docker_image_version }}", "state": "started", "restart_policy": "{{ telegraf_agent_docker_restart_policy }}", "command": "-config /etc/telegraf/telegraf.conf -config-directory /etc/telegraf/telegraf.d", "network_mode": "{{ telegraf_agent_docker_network_mode }}", "security_opts": ["apparmor:unconfined"], "volumes": ["/etc/telegraf:/etc/telegraf:ro", "/:/hostfs:ro", "/etc:/hostfs/etc:ro", "/proc:/hostfs/proc:ro", "/sys:/hostfs/sys:ro", "/var/run:/var/run:ro"], "env": {"HOST_MOUNT_PREFIX": "/hostfs", "HOST_ETC": "/hostfs/etc", "HOST_PROC": "/hostfs/proc", "HOST_SYS": "/hostfs/sys"}}, "executable": "docker_container", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install on RedHat", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on RedHat", "when": ["ansible_os_family == \"RedHat\" and not telegraf_agent_docker"]}, "module_options": "RedHat.yml", "executable": "RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install on Debian", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on Debian", "when": ["ansible_os_family == \"Debian\" and not telegraf_agent_docker"], "tags": ["telegraf", "packages"]}, "module_options": "Debian.yml", "executable": "Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install on Suse", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on Suse", "when": "ansible_os_family == \"Suse\" and not telegraf_agent_docker"}, "module_options": "Suse.yml", "executable": "Suse.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install on FreeBSD", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on FreeBSD", "when": ["ansible_os_family == \"FreeBSD\" and not telegraf_agent_docker"]}, "module_options": "FreeBSD.yml", "executable": "FreeBSD.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install on MacOS", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on MacOS", "when": ["ansible_os_family == \"Darwin\" and not telegraf_agent_docker"]}, "module_options": "MacOS.yml", "executable": "MacOS.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"when": "telegraf_agent_docker"}, "module_options": "docker.yml", "executable": "docker.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Configure Telegraf", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Configure Telegraf", "when": ["ansible_os_family not in ['Windows', 'Darwin']"]}, "module_options": "configure_linux.yml", "executable": "configure_linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Install / Configure telegraf on Windows", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install / Configure telegraf on Windows", "when": ["ansible_os_family == \"Windows\" and not telegraf_agent_docker"]}, "module_options": "configure_windows.yml", "executable": "configure_windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install / Configure telegraf on MacOS", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install / Configure telegraf on MacOS", "when": ["ansible_os_family == \"Darwin\" and not telegraf_agent_docker"]}, "module_options": "configure_macos.yml", "executable": "configure_macos.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Retrieve ec2 facts", "module": "ec2_metadata_facts", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Retrieve ec2 facts", "when": ["telegraf_agent_aws_tags"]}, "module_options": null, "executable": "ec2_metadata_facts", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add prefix path", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Add prefix path", "when": ["ansible_os_family == \"FreeBSD\""]}, "module_options": {"telegraf_agent_config_path": "/usr/local/etc"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Retrieve all ec2 tags on the instance", "module": "ec2_tag", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Retrieve all ec2 tags on the instance", "when": ["telegraf_agent_aws_tags"], "register": "ec2_tags"}, "module_options": {"region": "{{ ansible_ec2_placement_region }}", "resource": "{{ ansible_ec2_instance_id }}", "state": "list"}, "executable": "ec2_tag", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Copy the template for versions < 0.10.0", "module": "template", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Copy the template for versions < 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '<')"], "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "etc-opt-telegraf-telegraf.conf.j2", "dest": "/etc/opt/telegraf/telegraf.conf", "owner": "telegraf", "group": "telegraf", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Copy the template for versions >= 0.10.0", "module": "template", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Copy the template for versions >= 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '>=')"], "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.conf", "owner": "telegraf", "group": "telegraf", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Check if extra plugins directory exists in case of exclusive", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Check if extra plugins directory exists in case of exclusive", "register": "telegraf_directory", "when": ["telegraf_plugins_extra_exclusive"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Delete telegraf extra plugin path", "module": "file", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Delete telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "absent", "path": "{{ telegraf_agent_config_path }}/telegraf.d/"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create telegraf extra plugin path", "module": "file", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Create telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "directory", "path": "{{ telegraf_agent_config_path }}/telegraf.d/", "owner": "telegraf", "group": "telegraf", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Copy telegraf extra plugins", "module": "template", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Copy telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') != 'absent'"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf-extra-plugin.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "owner": "telegraf", "group": "telegraf", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Remove telegraf extra plugins", "module": "file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Remove telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') == 'absent'"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Force restart service after reread config", "module": "meta", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Force restart service after reread config"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Start Telegraf (If it wasn't running)", "module": "service", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Start Telegraf (If it wasn't running)", "become": true, "when": "not telegraf_agent_docker"}, "module_options": {"name": "telegraf", "state": "{{ telegraf_enabled | ternary('started', 'stopped') }}", "enabled": "{{ telegraf_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Add telegraf user to docker group", "module": "user", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Add telegraf user to docker group", "become": true, "notify": ["Restart Telegraf"]}, "module_options": {"name": "telegraf", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Install smartmontools", "module": "package", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Install smartmontools", "become": true}, "module_options": {"name": "smartmontools"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Find path of smartctl", "module": "command", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Find path of smartctl", "register": "which_smartctl", "ignore_errors": true, "changed_when": false, "become": true}, "module_options": "which smartctl", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Ensure telegraf user can execute smartctl", "module": "blockinfile", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Ensure telegraf user can execute smartctl", "become": true, "notify": ["Restart Telegraf"]}, "module_options": {"marker": "# {mark} ANSIBLE MANAGED BLOCK (Ensure telegraf user can execute smartctl)", "dest": "/etc/sudoers.d/telegraf", "block": "telegraf ALL=(root) NOPASSWD: {{ which_smartctl.stdout }}", "mode": 256, "create": true}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Debian | Install lm-sensors", "module": "package", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Debian | Install lm-sensors", "become": true, "notify": ["Restart Telegraf"], "when": "ansible_os_family == \"Debian\""}, "module_options": {"name": "lm-sensors"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "RedHat | Install lm-sensors", "module": "package", "index": 17, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "RedHat | Install lm-sensors", "become": true, "notify": ["Restart Telegraf"], "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": "lm_sensors"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml": {"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Set name if state == latest", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Set name if state == latest", "when": ["telegraf_agent_package_state != \"latest\""]}, "module_options": {"telegraf_agent_package": "telegraf-{{ telegraf_agent_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Use RHEL 7 packages for Fedora", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "Use RHEL 7 packages for Fedora", "when": ["ansible_distribution == \"Fedora\""]}, "module_options": {"telegraf_redhat_releasever": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Add yum repository", "module": "yum_repository", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Add yum repository", "become": true, "when": ["telegraf_agent_package_method == \"repo\""]}, "module_options": {"name": "influxdb", "description": "InfluxDB Repository - RHEL $releasever", "baseurl": "{{ telegraf_yum_baseurl[ansible_distribution|lower] | default(telegraf_yum_baseurl['default']) }}", "gpgcheck": "{{ telegraf_yum_gpgcheck | default('true') }}", "gpgkey": "{{ telegraf_yum_gpgkey }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Download Telegraf package (online)", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Download Telegraf package (online)", "environment": {"http_proxy": "{{ http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ https_proxy | default(None) | default(omit) }}"}, "when": ["telegraf_agent_package_method == \"online\""]}, "module_options": {"url": "https://dl.influxdata.com/telegraf/releases/{{ telegraf_agent_package_file_rpm }}", "dest": "{{ telegraf_agent_package }}", "use_proxy": "{{ true if http_proxy is defined and http_proxy else false }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Telegraf package", "module": "package", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Install Telegraf package", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "become": true, "notify": "Restart Telegraf"}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml": {"py/object": "struct4.TaskFile", "name": "Suse.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "tasks": [{"py/object": "struct4.Task", "name": "Suse | Adding Telegraf group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Adding Telegraf group"}, "module_options": {"name": "telegraf", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Adding Telegraf user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Adding Telegraf user", "become": true}, "module_options": {"name": "telegraf", "group": "telegraf", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install repo dependencies", "module": "zypper", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install repo dependencies", "register": "are_telegraf_dependencies_packages_installed", "until": "are_telegraf_dependencies_packages_installed is succeeded", "become": true}, "module_options": {"name": ["python-libxml2", "python-xml"], "update_cache": true, "state": "present"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install basic repo file", "module": "zypper_repository", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install basic repo file", "become": true}, "module_options": {"repo": "http://download.opensuse.org/repositories/devel:/languages:/go/openSUSE_Factory/", "name": "The Go Programming Language (openSUSE_Factory)", "state": "present", "runrefresh": true, "auto_import_keys": true}, "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install Telegraf", "module": "zypper", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install Telegraf", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "become": true}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Create directories for telegraf", "module": "file", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Create directories for telegraf", "with_items": [{"path": "/etc/telegraf/telegraf.d/", "owner": "root"}, {"path": "/var/log/telegraf", "owner": "telegraf"}]}, "module_options": {"path": "{{ item.path }}", "owner": "{{ item.owner }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install init file", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install init file"}, "module_options": {"src": "telegraf.init", "dest": "/etc/init.d/telegraf", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml": {"py/object": "struct4.TaskFile", "name": "configure_windows.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows | Create directory structure", "module": "win_file", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Create directory structure", "with_items": ["{{ telegraf_win_install_dir }}", "{{ telegraf_win_include }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if file is already downloaded", "module": "win_stat", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Check if file is already downloaded", "register": "file_info"}, "module_options": {"path": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Download Telegraf Agent Zip file", "module": "win_get_url", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Download Telegraf Agent Zip file", "when": ["not file_info.stat.exists"]}, "module_options": {"url": "https://dl.influxdata.com/telegraf/releases/telegraf-{{ telegraf_agent_version }}_windows_amd64.zip", "dest": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Unzip file (newer than 1.15)", "module": "win_unzip", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Unzip file (newer than 1.15)", "when": "telegraf_agent_version is version('1.15', '>=')"}, "module_options": {"src": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip", "dest": "{{ telegraf_win_install_dir }}", "creates": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}\\telegraf.exe"}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Move extracted directory (newer than 1.15)", "module": "win_copy", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Move extracted directory (newer than 1.15)", "when": "telegraf_agent_version is version('1.15', '>=')"}, "module_options": {"src": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}\\", "dest": "{{ telegraf_win_install_dir }}\\telegraf", "remote_src": true}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Unzip file", "module": "win_unzip", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Unzip file", "when": "telegraf_agent_version is version('1.15', '<')"}, "module_options": {"src": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip", "dest": "{{ telegraf_win_install_dir }}", "creates": "{{ telegraf_win_install_dir }}\\telegraf\\telegraf.exe", "delete_archive": true}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Configure Telegraf", "module": "win_template", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Configure Telegraf", "notify": "Restart Windows Telegraf"}, "module_options": {"src": "telegraf.conf.j2", "dest": "{{ telegraf_win_install_dir }}\\telegraf\\telegraf.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Copy telegraf extra plugins", "module": "win_template", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Copy telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') != 'absent'"], "notify": "Restart Windows Telegraf"}, "module_options": {"src": "telegraf-extra-plugin.conf.j2", "dest": "{{ telegraf_win_include }}\\{{ item.key }}.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Remove telegraf extra plugins", "module": "win_file", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Remove telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') == 'absent'"], "notify": "Restart Windows Telegraf"}, "module_options": {"path": "{{ telegraf_win_include }}\\{{ item.key }}.conf", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Register Service", "module": "win_command", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Register Service", "register": "telegraf_windows_install", "args": {"creates": "{{ telegraf_win_install_dir }}\\.installed"}}, "module_options": "{{ telegraf_win_install_dir }}\\telegraf\\telegraf.exe {{ telegraf_win_service_args | join(\" \") }}", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Create done file so it won't register itself again", "module": "win_file", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Create done file so it won't register itself again", "when": ["telegraf_windows_install is changed"]}, "module_options": {"path": "{{ telegraf_win_install_dir }}\\.installed", "state": "touch"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto and ensure it is started", "module": "win_service", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Set service startup mode to auto and ensure it is started"}, "module_options": {"name": "Telegraf", "start_mode": "auto", "state": "started"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Cleanup", "module": "win_file", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Cleanup", "when": "telegraf_agent_version is version('1.15', '>=')"}, "module_options": {"path": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml": {"py/object": "struct4.TaskFile", "name": "configure_macos.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "tasks": [{"py/object": "struct4.Task", "name": "Retrieve ec2 facts", "module": "ec2_metadata_facts", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Retrieve ec2 facts", "when": ["telegraf_agent_aws_tags"]}, "module_options": null, "executable": "ec2_metadata_facts", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add prefix path", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Add prefix path", "when": ["ansible_os_family in [\"FreeBSD\", \"Darwin\"]"]}, "module_options": {"telegraf_agent_config_path": "/usr/local/etc"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve all ec2 tags on the instance", "module": "ec2_tag", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Retrieve all ec2 tags on the instance", "when": ["telegraf_agent_aws_tags"], "register": "ec2_tags"}, "module_options": {"region": "{{ ansible_ec2_placement_region }}", "resource": "{{ ansible_ec2_instance_id }}", "state": "list"}, "executable": "ec2_tag", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the template for versions < 0.10.0", "module": "template", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Copy the template for versions < 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '<')"], "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "etc-opt-telegraf-telegraf.conf.j2", "dest": "/etc/opt/telegraf/telegraf.conf", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the template for versions >= 0.10.0", "module": "template", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Copy the template for versions >= 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '>=')"], "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.conf", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if extra plugins directory exists in case of exclusive", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Check if extra plugins directory exists in case of exclusive", "register": "telegraf_directory", "when": ["telegraf_plugins_extra_exclusive"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete telegraf extra plugin path", "module": "file", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Delete telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "absent", "path": "{{ telegraf_agent_config_path }}/telegraf.d/"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create telegraf extra plugin path", "module": "file", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Create telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "directory", "path": "{{ telegraf_agent_config_path }}/telegraf.d/", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy telegraf extra plugins", "module": "template", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Copy telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') != 'absent'"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf-extra-plugin.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove telegraf extra plugins", "module": "file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Remove telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') == 'absent'"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force restart service after reread config", "module": "meta", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Force restart service after reread config"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start Telegraf (If it wasn't running)", "module": "command", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Start Telegraf (If it wasn't running)", "register": "brew_services_start_telegraf", "changed_when": "\"Successfully started `telegraf`\" in brew_services_start_telegraf.stdout", "when": "not telegraf_agent_docker"}, "module_options": "brew services start telegraf", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/MacOS.yml": {"py/object": "struct4.TaskFile", "name": "MacOS.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/MacOS.yml", "tasks": [{"py/object": "struct4.Task", "name": "MacOS | set package name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/MacOS.yml", "options": {"name": "MacOS | set package name"}, "module_options": {"telegraf_agent_package": "telegraf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MacOS | Install Telegraf package", "module": "package", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/MacOS.yml", "options": {"name": "MacOS | Install Telegraf package", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf"}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml": {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Debian | Set name if state != latest", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set name if state != latest", "when": ["telegraf_agent_package_state != \"latest\""]}, "module_options": {"telegraf_agent_package": "telegraf={{ telegraf_agent_version }}-{{ telegraf_agent_version_patch }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set telegraf_agent_package_arch", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set telegraf_agent_package_arch"}, "module_options": {"telegraf_agent_package_arch": "{{ ansible_architecture }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set telegraf_agent_package_arch specific for x86_64", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set telegraf_agent_package_arch specific for x86_64", "when": ["ansible_architecture == \"x86_64\""]}, "module_options": {"telegraf_agent_package_arch": "amd64"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set telegraf_agent_package_arch specific for arm64", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set telegraf_agent_package_arch specific for arm64", "when": ["ansible_architecture == \"arm64\""]}, "module_options": {"telegraf_agent_package_arch": "armhf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Ensure the system can use the HTTPS transport for APT", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Ensure the system can use the HTTPS transport for APT", "register": "apt_https_transport"}, "module_options": {"path": "/usr/lib/apt/methods/https"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install APT HTTPS transport", "module": "apt", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Install APT HTTPS transport", "register": "are_telegraf_dependencies_packages_installed", "until": "are_telegraf_dependencies_packages_installed is succeeded", "when": ["not apt_https_transport.stat.exists"], "become": true}, "module_options": {"name": "apt-transport-https", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Download Telegraf apt key", "module": "apt_key", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Download Telegraf apt key", "register": "are_telegraf_dependencies_keys_installed", "until": "are_telegraf_dependencies_keys_installed is succeeded", "become": true, "when": ["telegraf_agent_package_method == \"repo\""]}, "module_options": {"url": "https://repos.influxdata.com/influxdb.key", "id": "2582E0C5", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Add Telegraf repository (using LSB)", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Add Telegraf repository (using LSB)", "become": true, "when": ["telegraf_agent_package_method == \"repo\"", "ansible_lsb is defined", "ansible_lsb.codename is defined"]}, "module_options": {"repo": "deb https://repos.influxdata.com/{{ ansible_distribution|lower }} {{ ansible_lsb.codename }} stable", "filename": "telegraf", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Add Telegraf repository", "module": "apt_repository", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Add Telegraf repository", "become": true, "when": ["telegraf_agent_package_method == \"repo\"", "ansible_lsb is not defined or ansible_lsb.codename is not defined"]}, "module_options": {"repo": "deb https://repos.influxdata.com/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable", "filename": "telegraf", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Download Telegraf package (online)", "module": "get_url", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Download Telegraf package (online)", "environment": {"http_proxy": "{{ http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ https_proxy | default(None) | default(omit) }}"}, "when": ["telegraf_agent_package_method == \"online\""]}, "module_options": {"url": "https://dl.influxdata.com/telegraf/releases/{{ telegraf_agent_package_file_deb }}", "dest": "{{ telegraf_agent_package_path }}/{{ telegraf_agent_package }}", "use_proxy": "{{ true if http_proxy is defined and http_proxy else false }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Telegraf package (repo)", "module": "apt", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Install Telegraf package (repo)", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf", "become": true, "when": ["telegraf_agent_package_method == \"repo\""]}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Telegraf package (online)", "module": "apt", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Install Telegraf package (online)", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf", "become": true, "when": ["telegraf_agent_package_method == \"online\" or telegraf_agent_package_method == \"offline\""]}, "module_options": {"deb": "{{ telegraf_agent_package_path }}/{{ telegraf_agent_package }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Remove repository (online/offline install)", "module": "file", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Remove repository (online/offline install)", "become": true, "when": ["telegraf_agent_package_method == \"online\" or telegraf_agent_package_method == \"offline\""]}, "module_options": {"path": "/etc/apt/sources.list.d/telegraf.list", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml": {"py/object": "struct4.TaskFile", "name": "FreeBSD.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "tasks": [{"py/object": "struct4.Task", "name": "FreeBSD | set package name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | set package name"}, "module_options": {"telegraf_agent_package": "telegraf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "FreeBSD | Install Telegraf package", "module": "pkgng", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | Install Telegraf package", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf"}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "pkgng", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "FreeBSD | add telegraf_flags for extra plugins", "module": "command", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | add telegraf_flags for extra plugins", "tags": ["skip_ansible_lint"]}, "module_options": "sysrc telegraf_flags=\"-quiet -config-directory=/usr/local/etc/telegraf.d\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "FreeBSD | add telegraf to init", "module": "command", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | add telegraf to init", "tags": ["skip_ansible_lint"]}, "module_options": "sysrc telegraf_enable=\"YES\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml": {"py/object": "struct4.TaskFile", "name": "docker.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "tasks": [{"py/object": "struct4.Task", "name": "Adding Telegraf group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Adding Telegraf group"}, "module_options": {"name": "telegraf", "state": "present", "gid": "{{ telegraf_gid_docker }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding Telegraf user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Adding Telegraf user", "become": true}, "module_options": {"name": "telegraf", "group": "telegraf", "state": "present", "create_home": false, "home": "/etc/telegraf", "uid": "{{ telegraf_uid_docker }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create /etc/telegraf (home) directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Create /etc/telegraf (home) directory", "become": true}, "module_options": {"path": "/etc/telegraf", "owner": "telegraf", "group": "telegraf", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create /etc/telegraf.d directory", "module": "file", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Create /etc/telegraf.d directory", "become": true}, "module_options": {"path": "/etc/telegraf/telegraf.d", "owner": "telegraf", "group": "telegraf", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Telegraf Docker container is running", "module": "docker_container", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Ensure Telegraf Docker container is running"}, "module_options": {"name": "{{ telegraf_agent_docker_name }}", "image": "telegraf:{{ telegraf_agent_docker_image_version }}", "state": "started", "restart_policy": "{{ telegraf_agent_docker_restart_policy }}", "command": "-config /etc/telegraf/telegraf.conf -config-directory /etc/telegraf/telegraf.d", "network_mode": "{{ telegraf_agent_docker_network_mode }}", "security_opts": ["apparmor:unconfined"], "volumes": ["/etc/telegraf:/etc/telegraf:ro", "/:/hostfs:ro", "/etc:/hostfs/etc:ro", "/proc:/hostfs/proc:ro", "/sys:/hostfs/sys:ro", "/var/run:/var/run:ro"], "env": {"HOST_MOUNT_PREFIX": "/hostfs", "HOST_ETC": "/hostfs/etc", "HOST_PROC": "/hostfs/proc", "HOST_SYS": "/hostfs/sys"}}, "executable": "docker_container", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install on RedHat", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on RedHat", "when": ["ansible_os_family == \"RedHat\" and not telegraf_agent_docker"]}, "module_options": "RedHat.yml", "executable": "RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install on Debian", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on Debian", "when": ["ansible_os_family == \"Debian\" and not telegraf_agent_docker"], "tags": ["telegraf", "packages"]}, "module_options": "Debian.yml", "executable": "Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install on Suse", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on Suse", "when": "ansible_os_family == \"Suse\" and not telegraf_agent_docker"}, "module_options": "Suse.yml", "executable": "Suse.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install on FreeBSD", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on FreeBSD", "when": ["ansible_os_family == \"FreeBSD\" and not telegraf_agent_docker"]}, "module_options": "FreeBSD.yml", "executable": "FreeBSD.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install on MacOS", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on MacOS", "when": ["ansible_os_family == \"Darwin\" and not telegraf_agent_docker"]}, "module_options": "MacOS.yml", "executable": "MacOS.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"when": "telegraf_agent_docker"}, "module_options": "docker.yml", "executable": "docker.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Telegraf", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Configure Telegraf", "when": ["ansible_os_family not in ['Windows', 'Darwin']"]}, "module_options": "configure_linux.yml", "executable": "configure_linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install / Configure telegraf on Windows", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install / Configure telegraf on Windows", "when": ["ansible_os_family == \"Windows\" and not telegraf_agent_docker"]}, "module_options": "configure_windows.yml", "executable": "configure_windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install / Configure telegraf on MacOS", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install / Configure telegraf on MacOS", "when": ["ansible_os_family == \"Darwin\" and not telegraf_agent_docker"]}, "module_options": "configure_macos.yml", "executable": "configure_macos.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml": {"py/object": "struct4.TaskFile", "name": "configure_linux.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Retrieve ec2 facts", "module": "ec2_metadata_facts", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Retrieve ec2 facts", "when": ["telegraf_agent_aws_tags"]}, "module_options": null, "executable": "ec2_metadata_facts", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add prefix path", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Add prefix path", "when": ["ansible_os_family == \"FreeBSD\""]}, "module_options": {"telegraf_agent_config_path": "/usr/local/etc"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve all ec2 tags on the instance", "module": "ec2_tag", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Retrieve all ec2 tags on the instance", "when": ["telegraf_agent_aws_tags"], "register": "ec2_tags"}, "module_options": {"region": "{{ ansible_ec2_placement_region }}", "resource": "{{ ansible_ec2_instance_id }}", "state": "list"}, "executable": "ec2_tag", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the template for versions < 0.10.0", "module": "template", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Copy the template for versions < 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '<')"], "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "etc-opt-telegraf-telegraf.conf.j2", "dest": "/etc/opt/telegraf/telegraf.conf", "owner": "telegraf", "group": "telegraf", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the template for versions >= 0.10.0", "module": "template", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Copy the template for versions >= 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '>=')"], "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.conf", "owner": "telegraf", "group": "telegraf", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if extra plugins directory exists in case of exclusive", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Check if extra plugins directory exists in case of exclusive", "register": "telegraf_directory", "when": ["telegraf_plugins_extra_exclusive"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete telegraf extra plugin path", "module": "file", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Delete telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "absent", "path": "{{ telegraf_agent_config_path }}/telegraf.d/"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create telegraf extra plugin path", "module": "file", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Create telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "directory", "path": "{{ telegraf_agent_config_path }}/telegraf.d/", "owner": "telegraf", "group": "telegraf", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy telegraf extra plugins", "module": "template", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Copy telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') != 'absent'"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf-extra-plugin.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "owner": "telegraf", "group": "telegraf", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove telegraf extra plugins", "module": "file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Remove telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') == 'absent'"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force restart service after reread config", "module": "meta", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Force restart service after reread config"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start Telegraf (If it wasn't running)", "module": "service", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Start Telegraf (If it wasn't running)", "become": true, "when": "not telegraf_agent_docker"}, "module_options": {"name": "telegraf", "state": "{{ telegraf_enabled | ternary('started', 'stopped') }}", "enabled": "{{ telegraf_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add telegraf user to docker group", "module": "user", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Add telegraf user to docker group", "become": true, "notify": ["Restart Telegraf"]}, "module_options": {"name": "telegraf", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install smartmontools", "module": "package", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Install smartmontools", "become": true}, "module_options": {"name": "smartmontools"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find path of smartctl", "module": "command", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Find path of smartctl", "register": "which_smartctl", "ignore_errors": true, "changed_when": false, "become": true}, "module_options": "which smartctl", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure telegraf user can execute smartctl", "module": "blockinfile", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Ensure telegraf user can execute smartctl", "become": true, "notify": ["Restart Telegraf"]}, "module_options": {"marker": "# {mark} ANSIBLE MANAGED BLOCK (Ensure telegraf user can execute smartctl)", "dest": "/etc/sudoers.d/telegraf", "block": "telegraf ALL=(root) NOPASSWD: {{ which_smartctl.stdout }}", "mode": 256, "create": true}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install lm-sensors", "module": "package", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Debian | Install lm-sensors", "become": true, "notify": ["Restart Telegraf"], "when": "ansible_os_family == \"Debian\""}, "module_options": {"name": "lm-sensors"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install lm-sensors", "module": "package", "index": 17, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "RedHat | Install lm-sensors", "become": true, "notify": ["Restart Telegraf"], "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": "lm_sensors"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}}, "role_dict": {"dj-wasabi.telegraf": {"py/object": "struct4.Role", "name": "dj-wasabi.telegraf", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf", "fqcn": "dj-wasabi.telegraf", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Set name if state == latest", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Set name if state == latest", "when": ["telegraf_agent_package_state != \"latest\""]}, "module_options": {"telegraf_agent_package": "telegraf-{{ telegraf_agent_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Use RHEL 7 packages for Fedora", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "Use RHEL 7 packages for Fedora", "when": ["ansible_distribution == \"Fedora\""]}, "module_options": {"telegraf_redhat_releasever": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Add yum repository", "module": "yum_repository", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Add yum repository", "become": true, "when": ["telegraf_agent_package_method == \"repo\""]}, "module_options": {"name": "influxdb", "description": "InfluxDB Repository - RHEL $releasever", "baseurl": "{{ telegraf_yum_baseurl[ansible_distribution|lower] | default(telegraf_yum_baseurl['default']) }}", "gpgcheck": "{{ telegraf_yum_gpgcheck | default('true') }}", "gpgkey": "{{ telegraf_yum_gpgkey }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Download Telegraf package (online)", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Download Telegraf package (online)", "environment": {"http_proxy": "{{ http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ https_proxy | default(None) | default(omit) }}"}, "when": ["telegraf_agent_package_method == \"online\""]}, "module_options": {"url": "https://dl.influxdata.com/telegraf/releases/{{ telegraf_agent_package_file_rpm }}", "dest": "{{ telegraf_agent_package }}", "use_proxy": "{{ true if http_proxy is defined and http_proxy else false }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Telegraf package", "module": "package", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/RedHat.yml", "options": {"name": "RedHat | Install Telegraf package", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "become": true, "notify": "Restart Telegraf"}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Suse.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "tasks": [{"py/object": "struct4.Task", "name": "Suse | Adding Telegraf group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Adding Telegraf group"}, "module_options": {"name": "telegraf", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Adding Telegraf user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Adding Telegraf user", "become": true}, "module_options": {"name": "telegraf", "group": "telegraf", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install repo dependencies", "module": "zypper", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install repo dependencies", "register": "are_telegraf_dependencies_packages_installed", "until": "are_telegraf_dependencies_packages_installed is succeeded", "become": true}, "module_options": {"name": ["python-libxml2", "python-xml"], "update_cache": true, "state": "present"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install basic repo file", "module": "zypper_repository", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install basic repo file", "become": true}, "module_options": {"repo": "http://download.opensuse.org/repositories/devel:/languages:/go/openSUSE_Factory/", "name": "The Go Programming Language (openSUSE_Factory)", "state": "present", "runrefresh": true, "auto_import_keys": true}, "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install Telegraf", "module": "zypper", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install Telegraf", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "become": true}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Create directories for telegraf", "module": "file", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Create directories for telegraf", "with_items": [{"path": "/etc/telegraf/telegraf.d/", "owner": "root"}, {"path": "/var/log/telegraf", "owner": "telegraf"}]}, "module_options": {"path": "{{ item.path }}", "owner": "{{ item.owner }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install init file", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Suse.yml", "options": {"name": "Suse | Install init file"}, "module_options": {"src": "telegraf.init", "dest": "/etc/init.d/telegraf", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure_windows.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows | Create directory structure", "module": "win_file", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Create directory structure", "with_items": ["{{ telegraf_win_install_dir }}", "{{ telegraf_win_include }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if file is already downloaded", "module": "win_stat", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Check if file is already downloaded", "register": "file_info"}, "module_options": {"path": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Download Telegraf Agent Zip file", "module": "win_get_url", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Download Telegraf Agent Zip file", "when": ["not file_info.stat.exists"]}, "module_options": {"url": "https://dl.influxdata.com/telegraf/releases/telegraf-{{ telegraf_agent_version }}_windows_amd64.zip", "dest": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Unzip file (newer than 1.15)", "module": "win_unzip", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Unzip file (newer than 1.15)", "when": "telegraf_agent_version is version('1.15', '>=')"}, "module_options": {"src": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip", "dest": "{{ telegraf_win_install_dir }}", "creates": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}\\telegraf.exe"}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Move extracted directory (newer than 1.15)", "module": "win_copy", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Move extracted directory (newer than 1.15)", "when": "telegraf_agent_version is version('1.15', '>=')"}, "module_options": {"src": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}\\", "dest": "{{ telegraf_win_install_dir }}\\telegraf", "remote_src": true}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Unzip file", "module": "win_unzip", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Unzip file", "when": "telegraf_agent_version is version('1.15', '<')"}, "module_options": {"src": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}_windows_amd64.zip", "dest": "{{ telegraf_win_install_dir }}", "creates": "{{ telegraf_win_install_dir }}\\telegraf\\telegraf.exe", "delete_archive": true}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Configure Telegraf", "module": "win_template", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Configure Telegraf", "notify": "Restart Windows Telegraf"}, "module_options": {"src": "telegraf.conf.j2", "dest": "{{ telegraf_win_install_dir }}\\telegraf\\telegraf.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Copy telegraf extra plugins", "module": "win_template", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Copy telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') != 'absent'"], "notify": "Restart Windows Telegraf"}, "module_options": {"src": "telegraf-extra-plugin.conf.j2", "dest": "{{ telegraf_win_include }}\\{{ item.key }}.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Remove telegraf extra plugins", "module": "win_file", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Remove telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') == 'absent'"], "notify": "Restart Windows Telegraf"}, "module_options": {"path": "{{ telegraf_win_include }}\\{{ item.key }}.conf", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Register Service", "module": "win_command", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Register Service", "register": "telegraf_windows_install", "args": {"creates": "{{ telegraf_win_install_dir }}\\.installed"}}, "module_options": "{{ telegraf_win_install_dir }}\\telegraf\\telegraf.exe {{ telegraf_win_service_args | join(\" \") }}", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Create done file so it won't register itself again", "module": "win_file", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Create done file so it won't register itself again", "when": ["telegraf_windows_install is changed"]}, "module_options": {"path": "{{ telegraf_win_install_dir }}\\.installed", "state": "touch"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto and ensure it is started", "module": "win_service", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Set service startup mode to auto and ensure it is started"}, "module_options": {"name": "Telegraf", "start_mode": "auto", "state": "started"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Cleanup", "module": "win_file", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_windows.yml", "options": {"name": "Windows | Cleanup", "when": "telegraf_agent_version is version('1.15', '>=')"}, "module_options": {"path": "{{ telegraf_win_install_dir }}\\telegraf-{{ telegraf_agent_version }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure_macos.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "tasks": [{"py/object": "struct4.Task", "name": "Retrieve ec2 facts", "module": "ec2_metadata_facts", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Retrieve ec2 facts", "when": ["telegraf_agent_aws_tags"]}, "module_options": null, "executable": "ec2_metadata_facts", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add prefix path", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Add prefix path", "when": ["ansible_os_family in [\"FreeBSD\", \"Darwin\"]"]}, "module_options": {"telegraf_agent_config_path": "/usr/local/etc"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve all ec2 tags on the instance", "module": "ec2_tag", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Retrieve all ec2 tags on the instance", "when": ["telegraf_agent_aws_tags"], "register": "ec2_tags"}, "module_options": {"region": "{{ ansible_ec2_placement_region }}", "resource": "{{ ansible_ec2_instance_id }}", "state": "list"}, "executable": "ec2_tag", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the template for versions < 0.10.0", "module": "template", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Copy the template for versions < 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '<')"], "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "etc-opt-telegraf-telegraf.conf.j2", "dest": "/etc/opt/telegraf/telegraf.conf", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the template for versions >= 0.10.0", "module": "template", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Copy the template for versions >= 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '>=')"], "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.conf", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if extra plugins directory exists in case of exclusive", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Check if extra plugins directory exists in case of exclusive", "register": "telegraf_directory", "when": ["telegraf_plugins_extra_exclusive"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete telegraf extra plugin path", "module": "file", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Delete telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "absent", "path": "{{ telegraf_agent_config_path }}/telegraf.d/"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create telegraf extra plugin path", "module": "file", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Create telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "directory", "path": "{{ telegraf_agent_config_path }}/telegraf.d/", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy telegraf extra plugins", "module": "template", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Copy telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') != 'absent'"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf-extra-plugin.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "owner": "{{ telegraf_mac_user }}", "group": "{{ telegraf_mac_group }}", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove telegraf extra plugins", "module": "file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Remove telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') == 'absent'"], "become": true, "notify": ["Restart MacOS Telegraf", "Restart Telegraf container"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force restart service after reread config", "module": "meta", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Force restart service after reread config"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start Telegraf (If it wasn't running)", "module": "command", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_macos.yml", "options": {"name": "Start Telegraf (If it wasn't running)", "register": "brew_services_start_telegraf", "changed_when": "\"Successfully started `telegraf`\" in brew_services_start_telegraf.stdout", "when": "not telegraf_agent_docker"}, "module_options": "brew services start telegraf", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "MacOS.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/MacOS.yml", "tasks": [{"py/object": "struct4.Task", "name": "MacOS | set package name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/MacOS.yml", "options": {"name": "MacOS | set package name"}, "module_options": {"telegraf_agent_package": "telegraf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MacOS | Install Telegraf package", "module": "package", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/MacOS.yml", "options": {"name": "MacOS | Install Telegraf package", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf"}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Debian | Set name if state != latest", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set name if state != latest", "when": ["telegraf_agent_package_state != \"latest\""]}, "module_options": {"telegraf_agent_package": "telegraf={{ telegraf_agent_version }}-{{ telegraf_agent_version_patch }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set telegraf_agent_package_arch", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set telegraf_agent_package_arch"}, "module_options": {"telegraf_agent_package_arch": "{{ ansible_architecture }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set telegraf_agent_package_arch specific for x86_64", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set telegraf_agent_package_arch specific for x86_64", "when": ["ansible_architecture == \"x86_64\""]}, "module_options": {"telegraf_agent_package_arch": "amd64"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set telegraf_agent_package_arch specific for arm64", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Set telegraf_agent_package_arch specific for arm64", "when": ["ansible_architecture == \"arm64\""]}, "module_options": {"telegraf_agent_package_arch": "armhf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Ensure the system can use the HTTPS transport for APT", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Ensure the system can use the HTTPS transport for APT", "register": "apt_https_transport"}, "module_options": {"path": "/usr/lib/apt/methods/https"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install APT HTTPS transport", "module": "apt", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Install APT HTTPS transport", "register": "are_telegraf_dependencies_packages_installed", "until": "are_telegraf_dependencies_packages_installed is succeeded", "when": ["not apt_https_transport.stat.exists"], "become": true}, "module_options": {"name": "apt-transport-https", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Download Telegraf apt key", "module": "apt_key", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Download Telegraf apt key", "register": "are_telegraf_dependencies_keys_installed", "until": "are_telegraf_dependencies_keys_installed is succeeded", "become": true, "when": ["telegraf_agent_package_method == \"repo\""]}, "module_options": {"url": "https://repos.influxdata.com/influxdb.key", "id": "2582E0C5", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Add Telegraf repository (using LSB)", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Add Telegraf repository (using LSB)", "become": true, "when": ["telegraf_agent_package_method == \"repo\"", "ansible_lsb is defined", "ansible_lsb.codename is defined"]}, "module_options": {"repo": "deb https://repos.influxdata.com/{{ ansible_distribution|lower }} {{ ansible_lsb.codename }} stable", "filename": "telegraf", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Add Telegraf repository", "module": "apt_repository", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Add Telegraf repository", "become": true, "when": ["telegraf_agent_package_method == \"repo\"", "ansible_lsb is not defined or ansible_lsb.codename is not defined"]}, "module_options": {"repo": "deb https://repos.influxdata.com/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable", "filename": "telegraf", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Download Telegraf package (online)", "module": "get_url", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Download Telegraf package (online)", "environment": {"http_proxy": "{{ http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ https_proxy | default(None) | default(omit) }}"}, "when": ["telegraf_agent_package_method == \"online\""]}, "module_options": {"url": "https://dl.influxdata.com/telegraf/releases/{{ telegraf_agent_package_file_deb }}", "dest": "{{ telegraf_agent_package_path }}/{{ telegraf_agent_package }}", "use_proxy": "{{ true if http_proxy is defined and http_proxy else false }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Telegraf package (repo)", "module": "apt", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Install Telegraf package (repo)", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf", "become": true, "when": ["telegraf_agent_package_method == \"repo\""]}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Telegraf package (online)", "module": "apt", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Install Telegraf package (online)", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf", "become": true, "when": ["telegraf_agent_package_method == \"online\" or telegraf_agent_package_method == \"offline\""]}, "module_options": {"deb": "{{ telegraf_agent_package_path }}/{{ telegraf_agent_package }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Remove repository (online/offline install)", "module": "file", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/Debian.yml", "options": {"name": "Debian | Remove repository (online/offline install)", "become": true, "when": ["telegraf_agent_package_method == \"online\" or telegraf_agent_package_method == \"offline\""]}, "module_options": {"path": "/etc/apt/sources.list.d/telegraf.list", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "FreeBSD.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "tasks": [{"py/object": "struct4.Task", "name": "FreeBSD | set package name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | set package name"}, "module_options": {"telegraf_agent_package": "telegraf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "FreeBSD | Install Telegraf package", "module": "pkgng", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | Install Telegraf package", "register": "is_telegraf_package_installed", "until": "is_telegraf_package_installed is succeeded", "notify": "Restart Telegraf"}, "module_options": {"name": "{{ telegraf_agent_package }}", "state": "{{ telegraf_agent_package_state }}"}, "executable": "pkgng", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "FreeBSD | add telegraf_flags for extra plugins", "module": "command", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | add telegraf_flags for extra plugins", "tags": ["skip_ansible_lint"]}, "module_options": "sysrc telegraf_flags=\"-quiet -config-directory=/usr/local/etc/telegraf.d\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "FreeBSD | add telegraf to init", "module": "command", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/FreeBSD.yml", "options": {"name": "FreeBSD | add telegraf to init", "tags": ["skip_ansible_lint"]}, "module_options": "sysrc telegraf_enable=\"YES\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "docker.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "tasks": [{"py/object": "struct4.Task", "name": "Adding Telegraf group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Adding Telegraf group"}, "module_options": {"name": "telegraf", "state": "present", "gid": "{{ telegraf_gid_docker }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding Telegraf user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Adding Telegraf user", "become": true}, "module_options": {"name": "telegraf", "group": "telegraf", "state": "present", "create_home": false, "home": "/etc/telegraf", "uid": "{{ telegraf_uid_docker }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create /etc/telegraf (home) directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Create /etc/telegraf (home) directory", "become": true}, "module_options": {"path": "/etc/telegraf", "owner": "telegraf", "group": "telegraf", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create /etc/telegraf.d directory", "module": "file", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Create /etc/telegraf.d directory", "become": true}, "module_options": {"path": "/etc/telegraf/telegraf.d", "owner": "telegraf", "group": "telegraf", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Telegraf Docker container is running", "module": "docker_container", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/docker.yml", "options": {"name": "Ensure Telegraf Docker container is running"}, "module_options": {"name": "{{ telegraf_agent_docker_name }}", "image": "telegraf:{{ telegraf_agent_docker_image_version }}", "state": "started", "restart_policy": "{{ telegraf_agent_docker_restart_policy }}", "command": "-config /etc/telegraf/telegraf.conf -config-directory /etc/telegraf/telegraf.d", "network_mode": "{{ telegraf_agent_docker_network_mode }}", "security_opts": ["apparmor:unconfined"], "volumes": ["/etc/telegraf:/etc/telegraf:ro", "/:/hostfs:ro", "/etc:/hostfs/etc:ro", "/proc:/hostfs/proc:ro", "/sys:/hostfs/sys:ro", "/var/run:/var/run:ro"], "env": {"HOST_MOUNT_PREFIX": "/hostfs", "HOST_ETC": "/hostfs/etc", "HOST_PROC": "/hostfs/proc", "HOST_SYS": "/hostfs/sys"}}, "executable": "docker_container", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install on RedHat", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on RedHat", "when": ["ansible_os_family == \"RedHat\" and not telegraf_agent_docker"]}, "module_options": "RedHat.yml", "executable": "RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install on Debian", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on Debian", "when": ["ansible_os_family == \"Debian\" and not telegraf_agent_docker"], "tags": ["telegraf", "packages"]}, "module_options": "Debian.yml", "executable": "Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install on Suse", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on Suse", "when": "ansible_os_family == \"Suse\" and not telegraf_agent_docker"}, "module_options": "Suse.yml", "executable": "Suse.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install on FreeBSD", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on FreeBSD", "when": ["ansible_os_family == \"FreeBSD\" and not telegraf_agent_docker"]}, "module_options": "FreeBSD.yml", "executable": "FreeBSD.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install on MacOS", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install on MacOS", "when": ["ansible_os_family == \"Darwin\" and not telegraf_agent_docker"]}, "module_options": "MacOS.yml", "executable": "MacOS.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"when": "telegraf_agent_docker"}, "module_options": "docker.yml", "executable": "docker.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Telegraf", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Configure Telegraf", "when": ["ansible_os_family not in ['Windows', 'Darwin']"]}, "module_options": "configure_linux.yml", "executable": "configure_linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install / Configure telegraf on Windows", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install / Configure telegraf on Windows", "when": ["ansible_os_family == \"Windows\" and not telegraf_agent_docker"]}, "module_options": "configure_windows.yml", "executable": "configure_windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install / Configure telegraf on MacOS", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/main.yml", "options": {"name": "Install / Configure telegraf on MacOS", "when": ["ansible_os_family == \"Darwin\" and not telegraf_agent_docker"]}, "module_options": "configure_macos.yml", "executable": "configure_macos.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure_linux.yml", "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Retrieve ec2 facts", "module": "ec2_metadata_facts", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Retrieve ec2 facts", "when": ["telegraf_agent_aws_tags"]}, "module_options": null, "executable": "ec2_metadata_facts", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add prefix path", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Add prefix path", "when": ["ansible_os_family == \"FreeBSD\""]}, "module_options": {"telegraf_agent_config_path": "/usr/local/etc"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve all ec2 tags on the instance", "module": "ec2_tag", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Retrieve all ec2 tags on the instance", "when": ["telegraf_agent_aws_tags"], "register": "ec2_tags"}, "module_options": {"region": "{{ ansible_ec2_placement_region }}", "resource": "{{ ansible_ec2_instance_id }}", "state": "list"}, "executable": "ec2_tag", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the template for versions < 0.10.0", "module": "template", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Copy the template for versions < 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '<')"], "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "etc-opt-telegraf-telegraf.conf.j2", "dest": "/etc/opt/telegraf/telegraf.conf", "owner": "telegraf", "group": "telegraf", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the template for versions >= 0.10.0", "module": "template", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Copy the template for versions >= 0.10.0", "become": true, "when": ["telegraf_agent_version is version('0.10.0', '>=')"], "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.conf", "owner": "telegraf", "group": "telegraf", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if extra plugins directory exists in case of exclusive", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Check if extra plugins directory exists in case of exclusive", "register": "telegraf_directory", "when": ["telegraf_plugins_extra_exclusive"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete telegraf extra plugin path", "module": "file", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Delete telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "absent", "path": "{{ telegraf_agent_config_path }}/telegraf.d/"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create telegraf extra plugin path", "module": "file", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Create telegraf extra plugin path", "when": ["telegraf_plugins_extra_exclusive", "telegraf_directory.stat.exists"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"state": "directory", "path": "{{ telegraf_agent_config_path }}/telegraf.d/", "owner": "telegraf", "group": "telegraf", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy telegraf extra plugins", "module": "template", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Copy telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') != 'absent'"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"src": "telegraf-extra-plugin.conf.j2", "dest": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "owner": "telegraf", "group": "telegraf", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove telegraf extra plugins", "module": "file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Remove telegraf extra plugins", "with_dict": "{{ telegraf_plugins_extra }}", "loop_control": {"label": "{{ item.key }}"}, "when": ["telegraf_plugins_extra is defined", "telegraf_plugins_extra is iterable", "item.value.state|default('present') == 'absent'"], "become": true, "notify": ["Restart Telegraf", "Restart Telegraf container"]}, "module_options": {"path": "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force restart service after reread config", "module": "meta", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Force restart service after reread config"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start Telegraf (If it wasn't running)", "module": "service", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Start Telegraf (If it wasn't running)", "become": true, "when": "not telegraf_agent_docker"}, "module_options": {"name": "telegraf", "state": "{{ telegraf_enabled | ternary('started', 'stopped') }}", "enabled": "{{ telegraf_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add telegraf user to docker group", "module": "user", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Add telegraf user to docker group", "become": true, "notify": ["Restart Telegraf"]}, "module_options": {"name": "telegraf", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install smartmontools", "module": "package", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Install smartmontools", "become": true}, "module_options": {"name": "smartmontools"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find path of smartctl", "module": "command", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Find path of smartctl", "register": "which_smartctl", "ignore_errors": true, "changed_when": false, "become": true}, "module_options": "which smartctl", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure telegraf user can execute smartctl", "module": "blockinfile", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Ensure telegraf user can execute smartctl", "become": true, "notify": ["Restart Telegraf"]}, "module_options": {"marker": "# {mark} ANSIBLE MANAGED BLOCK (Ensure telegraf user can execute smartctl)", "dest": "/etc/sudoers.d/telegraf", "block": "telegraf ALL=(root) NOPASSWD: {{ which_smartctl.stdout }}", "mode": 256, "create": true}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install lm-sensors", "module": "package", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "Debian | Install lm-sensors", "become": true, "notify": ["Restart Telegraf"], "when": "ansible_os_family == \"Debian\""}, "module_options": {"name": "lm-sensors"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install lm-sensors", "module": "package", "index": 17, "defined_in": "./role-test/testdata/dj-wasabi-telegraf/dj-wasabi.telegraf/tasks/configure_linux.yml", "options": {"name": "RedHat | Install lm-sensors", "become": true, "notify": ["Restart Telegraf"], "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": "lm_sensors"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "dj-wasabi.telegraf", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}