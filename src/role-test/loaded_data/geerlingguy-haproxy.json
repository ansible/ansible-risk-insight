{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/geerlingguy-haproxy", "installed_roles": [{"py/object": "struct4.Role", "name": "geerlingguy.haproxy", "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy", "fqcn": "geerlingguy.haproxy", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure HAProxy is installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Ensure HAProxy is installed."}, "module_options": "name=haproxy state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure HAProxy is enabled (so init script will start it on Debian).", "module": "lineinfile", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Ensure HAProxy is enabled (so init script will start it on Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": {"dest": "/etc/default/haproxy", "regexp": "^ENABLED.+$", "line": "ENABLED=1", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get HAProxy version.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Get HAProxy version.", "register": "haproxy_version_result", "changed_when": false, "check_mode": false}, "module_options": "haproxy -v", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set HAProxy version.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Set HAProxy version."}, "module_options": {"haproxy_version": "{{ haproxy_version_result.stdout_lines[0] | regex_replace(\"^HA-Proxy version ([0-9]\\.[0-9]).*$\", \"\\1\") }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy HAProxy configuration in place.", "module": "template", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Copy HAProxy configuration in place.", "notify": "restart haproxy"}, "module_options": {"src": "haproxy.cfg.j2", "dest": "/etc/haproxy/haproxy.cfg", "mode": 420, "validate": "haproxy -f %s -c -q"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure HAProxy is started and enabled on boot.", "module": "service", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Ensure HAProxy is started and enabled on boot."}, "module_options": "name=haproxy state=started enabled=yes", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.haproxy", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure HAProxy is installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Ensure HAProxy is installed."}, "module_options": "name=haproxy state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure HAProxy is enabled (so init script will start it on Debian).", "module": "lineinfile", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Ensure HAProxy is enabled (so init script will start it on Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": {"dest": "/etc/default/haproxy", "regexp": "^ENABLED.+$", "line": "ENABLED=1", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Get HAProxy version.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Get HAProxy version.", "register": "haproxy_version_result", "changed_when": false, "check_mode": false}, "module_options": "haproxy -v", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Set HAProxy version.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Set HAProxy version."}, "module_options": {"haproxy_version": "{{ haproxy_version_result.stdout_lines[0] | regex_replace(\"^HA-Proxy version ([0-9]\\.[0-9]).*$\", \"\\1\") }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Copy HAProxy configuration in place.", "module": "template", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Copy HAProxy configuration in place.", "notify": "restart haproxy"}, "module_options": {"src": "haproxy.cfg.j2", "dest": "/etc/haproxy/haproxy.cfg", "mode": 420, "validate": "haproxy -f %s -c -q"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Ensure HAProxy is started and enabled on boot.", "module": "service", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Ensure HAProxy is started and enabled on boot."}, "module_options": "name=haproxy state=started enabled=yes", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure HAProxy is installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Ensure HAProxy is installed."}, "module_options": "name=haproxy state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure HAProxy is enabled (so init script will start it on Debian).", "module": "lineinfile", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Ensure HAProxy is enabled (so init script will start it on Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": {"dest": "/etc/default/haproxy", "regexp": "^ENABLED.+$", "line": "ENABLED=1", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get HAProxy version.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Get HAProxy version.", "register": "haproxy_version_result", "changed_when": false, "check_mode": false}, "module_options": "haproxy -v", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set HAProxy version.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Set HAProxy version."}, "module_options": {"haproxy_version": "{{ haproxy_version_result.stdout_lines[0] | regex_replace(\"^HA-Proxy version ([0-9]\\.[0-9]).*$\", \"\\1\") }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy HAProxy configuration in place.", "module": "template", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Copy HAProxy configuration in place.", "notify": "restart haproxy"}, "module_options": {"src": "haproxy.cfg.j2", "dest": "/etc/haproxy/haproxy.cfg", "mode": 420, "validate": "haproxy -f %s -c -q"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure HAProxy is started and enabled on boot.", "module": "service", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Ensure HAProxy is started and enabled on boot."}, "module_options": "name=haproxy state=started enabled=yes", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.haproxy", "used_in": [], "annotations": {}}}, "role_dict": {"geerlingguy.haproxy": {"py/object": "struct4.Role", "name": "geerlingguy.haproxy", "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy", "fqcn": "geerlingguy.haproxy", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure HAProxy is installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Ensure HAProxy is installed."}, "module_options": "name=haproxy state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure HAProxy is enabled (so init script will start it on Debian).", "module": "lineinfile", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Ensure HAProxy is enabled (so init script will start it on Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": {"dest": "/etc/default/haproxy", "regexp": "^ENABLED.+$", "line": "ENABLED=1", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get HAProxy version.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Get HAProxy version.", "register": "haproxy_version_result", "changed_when": false, "check_mode": false}, "module_options": "haproxy -v", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set HAProxy version.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Set HAProxy version."}, "module_options": {"haproxy_version": "{{ haproxy_version_result.stdout_lines[0] | regex_replace(\"^HA-Proxy version ([0-9]\\.[0-9]).*$\", \"\\1\") }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy HAProxy configuration in place.", "module": "template", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Copy HAProxy configuration in place.", "notify": "restart haproxy"}, "module_options": {"src": "haproxy.cfg.j2", "dest": "/etc/haproxy/haproxy.cfg", "mode": 420, "validate": "haproxy -f %s -c -q"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure HAProxy is started and enabled on boot.", "module": "service", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-haproxy/geerlingguy.haproxy/tasks/main.yml", "options": {"name": "Ensure HAProxy is started and enabled on boot."}, "module_options": "name=haproxy state=started enabled=yes", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.haproxy", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}