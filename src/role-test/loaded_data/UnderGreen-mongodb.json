{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/UnderGreen-mongodb", "installed_roles": [{"py/object": "struct4.Role", "name": "UnderGreen.mongodb", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb", "fqcn": "UnderGreen.mongodb", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "install.amazon.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "tasks": [{"py/object": "struct4.Task", "name": "Establish some role-related facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Establish some role-related facts"}, "module_options": {"mongodb_major_version": "{{ mongodb_version[0:3] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add YUM repository", "module": "template", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Add YUM repository", "with_items": "{{ mongodb_major_version }}", "loop_control": {"loop_var": "version_item"}, "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"src": "mongodb.repo.j2", "dest": "/etc/yum.repos.d/mongodb.repo", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install MongoDB package", "module": "yum", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install MongoDB package"}, "module_options": {"name": "{{ mongodb_package }}{% if (mongodb_version | length > 3) %}-{{ mongodb_version }}{% endif %}", "state": "{{ mongodb_package_state }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install numactl package", "module": "yum", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install numactl package", "when": "mongodb_use_numa | bool"}, "module_options": {"name": "numactl", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo package", "module": "yum", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install PyMongo package", "when": "not mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_package }}", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PIP", "module": "yum", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install PIP", "when": "mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_deps }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo from PIP", "module": "pip", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install PyMongo from PIP", "when": "mongodb_pymongo_from_pip"}, "module_options": {"name": "pymongo", "state": "{{ mongodb_pymongo_pip_version is defined | ternary('present', 'latest') }}", "version": "{{ mongodb_pymongo_pip_version | default(omit) }}", "executable": "{{ mongodb_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "mms-agent.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install MMS agent (Debian)", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Install MMS agent (Debian)", "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'"}, "module_options": {"deb": "{{ mongodb_mms_agent_pkg }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install MMS agent (RHEL)", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Install MMS agent (RHEL)", "when": "ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'"}, "module_options": {"name": "{{ mongodb_mms_agent_pkg }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure the MMS agent pt. 1", "module": "file", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Configure the MMS agent pt. 1"}, "module_options": {"state": "directory", "path": "/etc/mongodb-mms", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure the MMS agent pt. 2", "module": "template", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Configure the MMS agent pt. 2", "notify": "mongodb-mms-monitoring-agent restart"}, "module_options": {"src": "monitoring-agent.config.j2", "dest": "/etc/mongodb-mms/monitoring-agent.config", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure that the MMS agent is started", "module": "service", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Ensure that the MMS agent is started"}, "module_options": {"name": "mongodb-mms-monitoring-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "replication_init_auth.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "tasks": [{"py/object": "struct4.Task", "name": "Replication configuration | 1st Pt.", "module": "mongodb_replication", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "options": {"name": "Replication configuration | 1st Pt.", "with_items": ["{{ mongodb_replication_params|default([]) }}"], "register": "mongodb_replica_init", "ignore_errors": true}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_net_port|default(27017) }}", "login_user": "{{ mongodb_root_admin_name }}", "login_password": "{{ mongodb_root_admin_password }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "options": {"when": "mongodb_replica_init is failed"}, "module_options": "auth_initialization.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Replication configuration | 2nd Pt", "module": "mongodb_replication", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "options": {"name": "Replication configuration | 2nd Pt", "when": "mongodb_replica_init is failed", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_net_port|default(27017) }}", "login_user": "{{ mongodb_root_admin_name }}", "login_password": "{{ mongodb_root_admin_password }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "install.redhat.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Establish some role-related facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Establish some role-related facts"}, "module_options": {"mongodb_major_version": "{{ mongodb_version[0:3] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install EPEL release repository", "module": "package", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install EPEL release repository"}, "module_options": {"name": "epel-release", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add YUM repository", "module": "template", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Add YUM repository", "with_items": "{{ mongodb_major_version }}", "loop_control": {"loop_var": "version_item"}, "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"src": "mongodb.repo.j2", "dest": "/etc/yum.repos.d/mongodb.repo", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install MongoDB package", "module": "yum", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install MongoDB package"}, "module_options": {"name": "{{ mongodb_package }}{% if (mongodb_version | length > 3) %}-{{ mongodb_version }}{% endif %}", "state": "{{ mongodb_package_state }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install numactl package", "module": "yum", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install numactl package", "when": "mongodb_use_numa | bool"}, "module_options": {"name": "numactl", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo package", "module": "yum", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install PyMongo package", "when": "not mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_package }}", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PIP", "module": "yum", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"name": "{{ mongodb_pymongo_deps }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo from PIP", "module": "pip", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install PyMongo from PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"name": "pymongo", "state": "{{ mongodb_pymongo_pip_version is defined | ternary('present', 'latest') }}", "version": "{{ mongodb_pymongo_pip_version | default(omit) }}", "executable": "{{ mongodb_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "create mongodb group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "create mongodb group"}, "module_options": {"name": "{{ mongodb_user }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "create mongodb user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "create mongodb user"}, "module_options": {"name": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "set mongodb gid", "module": "group", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "set mongodb gid", "when": "mongodb_gid is defined"}, "module_options": {"name": "{{ mongodb_user }}", "gid": "{{ mongodb_gid }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "set mongodb uid", "module": "user", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "set mongodb uid", "when": "mongodb_uid is defined"}, "module_options": {"name": "{{ mongodb_user }}", "uid": "{{ mongodb_uid }}", "group": "{{ mongodb_user }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create keyFile", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Create keyFile", "when": "mongodb_replication_replset | length > 0"}, "module_options": {"dest": "{{ mongodb_security_keyfile }}", "content": "{{ mongodb_keyfile_content }}", "owner": "{{ mongodb_user }}", "group": "root", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log dir if missing", "module": "file", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Create log dir if missing", "when": "mongodb_systemlog_destination == \"file\""}, "module_options": {"state": "directory", "dest": "{{ mongodb_systemlog_path|dirname }}", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check than logfile exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Check than logfile exists", "register": "logfile_stat", "when": "mongodb_systemlog_destination == \"file\""}, "module_options": "path={{ mongodb_systemlog_path }}", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log if missing", "module": "file", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Create log if missing", "when": "( mongodb_systemlog_destination == \"file\" and logfile_stat is defined and not logfile_stat.stat.exists )"}, "module_options": {"state": "touch", "dest": "{{ mongodb_systemlog_path }}", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 420}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dbpath directory", "module": "file", "index": 8, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Ensure dbpath directory"}, "module_options": {"path": "{{ mongodb_storage_dbpath }}", "state": "directory", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "setype": "mongod_var_lib_t", "recurse": true, "follow": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure mongodb", "module": "template", "index": 9, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Configure mongodb", "notify": ["mongodb restart", "wait when mongodb is started"]}, "module_options": {"src": "mongod.conf.j2", "dest": "/etc/mongod.conf", "backup": true, "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flush all handlers at this point", "module": "meta", "index": 10, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Flush all handlers at this point"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.debian.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Establish some role-related facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Establish some role-related facts"}, "module_options": {"mongodb_major_version": "{{ mongodb_version[0:3] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable transparent huge pages on systemd systems", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Disable transparent huge pages on systemd systems", "when": ["mongodb_disable_transparent_hugepages | bool", "ansible_service_mgr == \"systemd\""]}, "module_options": "disable_transparent_hugepages.yml", "executable": "disable_transparent_hugepages.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add APT key", "module": "apt_key", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add APT key", "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"keyserver": "{{ mongodb_apt_keyserver }}", "id": "{{ mongodb_apt_key_id[mongodb_major_version] }}"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail when used wrong mongodb_version variable", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Fail when used wrong mongodb_version variable", "when": "(mongodb_package == 'mongodb-org' and (mongodb_version is not defined or mongodb_repository[mongodb_major_version] is not defined))"}, "module_options": {"msg": "mongodb_version variable should be '3.6' or '4.0', '4.2' or '4.4'"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add APT repository", "module": "apt_repository", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add APT repository", "with_items": "{{ mongodb_major_version }}", "loop_control": {"loop_var": "version_item"}, "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"repo": "{{ mongodb_repository[version_item] }}", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install MongoDB package", "module": "apt", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install MongoDB package"}, "module_options": {"name": "{{ mongodb_package }}{% if (mongodb_version | length > 3) %}={{ mongodb_version }}{% endif %}", "state": "{{ mongodb_package_state }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if NUMA is available on host", "module": "command", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Check if NUMA is available on host", "register": "numa_available", "ignore_errors": true, "changed_when": false, "check_mode": false, "when": "mongodb_use_numa | bool"}, "module_options": "ls -1 /proc/1/numa_maps", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Don't use NUMA if it is unavailable on host", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Don't use NUMA if it is unavailable on host", "when": "(mongodb_use_numa | bool and numa_available.rc != 0)"}, "module_options": {"mongodb_use_numa": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install numactl package", "module": "apt", "index": 8, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install numactl package", "when": "mongodb_use_numa | bool"}, "module_options": {"name": "numactl", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add systemd configuration if present", "module": "template", "index": 9, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add systemd configuration if present", "when": ["ansible_service_mgr == \"systemd\"", "mongodb_manage_systemd_unit | bool"], "notify": ["reload systemd"]}, "module_options": {"src": "mongodb.service.j2", "dest": "/lib/systemd/system/{{ mongodb_daemon_name }}.service", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add symlink for systemd", "module": "file", "index": 10, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add symlink for systemd", "when": ["ansible_service_mgr == \"systemd\"", "mongodb_manage_systemd_unit | bool"], "notify": ["reload systemd"]}, "module_options": {"src": "/lib/systemd/system/{{ mongodb_daemon_name }}.service", "dest": "/etc/systemd/system/multi-user.target.wants/{{ mongodb_daemon_name }}.service", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Forcefully set mongodb_pymongo_from_pip to false on Debian 10", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Forcefully set mongodb_pymongo_from_pip to false on Debian 10", "when": ["ansible_distribution == 'Debian'", "ansible_distribution_release == 'buster'"]}, "module_options": {"mongodb_pymongo_from_pip": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo package", "module": "apt", "index": 12, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install PyMongo package", "when": "not mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_package }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PIP", "module": "apt", "index": 13, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"pkg": "{{ mongodb_pymongo_deps }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install setuptools (required for ansible 2.7+)", "module": "apt", "index": 14, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install setuptools (required for ansible 2.7+)", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"pkg": "{{ mongodb_python_setuptools }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo from PIP", "module": "pip", "index": 15, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install PyMongo from PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"name": ["pymongo"], "state": "{{ mongodb_pymongo_pip_version is defined | ternary('present', 'latest') }}", "version": "{{ mongodb_pymongo_pip_version | default(omit) }}", "executable": "{{ mongodb_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "replication.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "tasks": [{"py/object": "struct4.Task", "name": "Replication configuration", "module": "mongodb_replication", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "options": {"name": "Replication configuration", "when": "mongodb_security_authorization == 'enabled'", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "login_user": "{{ mongodb_root_admin_name }}", "login_password": "{{ mongodb_root_admin_password }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Replication configuration without auth on master", "module": "mongodb_replication", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "options": {"name": "Replication configuration without auth on master", "when": "( mongodb_security_authorization == 'disabled' and mongodb_master is defined and mongodb_master )", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Replication configuration without auth on replicas and arbiters", "module": "mongodb_replication", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "options": {"name": "Replication configuration without auth on replicas and arbiters", "when": "( mongodb_security_authorization == 'disabled' and ( mongodb_master is not defined or not mongodb_master) )", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "auth_initialization.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "tasks": [{"py/object": "struct4.Task", "name": "Use different mongod.conf for auth initialization", "module": "template", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Use different mongod.conf for auth initialization", "notify": ["mongodb restart", "wait when mongodb is started on localhost"]}, "module_options": {"src": "mongod_init.conf.j2", "dest": "/etc/mongod.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flush all handlers at this point", "module": "meta", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Flush all handlers at this point"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "create administrative user \"{{ mongodb_user_admin_name }}\"", "module": "mongodb_user", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "create administrative user \"{{ mongodb_user_admin_name }}\"", "with_items": [{"name": "{{ mongodb_user_admin_name }}", "password": "{{ mongodb_user_admin_password }}", "roles": "userAdminAnyDatabase"}], "no_log": true}, "module_options": {"database": "admin", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_port": "{{ mongodb_net_port | int }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create administrative user \"{{ mongodb_root_admin_name }}\"", "module": "mongodb_user", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "create administrative user \"{{ mongodb_root_admin_name }}\"", "with_items": [{"name": "{{ mongodb_root_admin_name }}", "password": "{{ mongodb_root_admin_password }}", "roles": "root"}], "no_log": true}, "module_options": {"database": "admin", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_port": "{{ mongodb_net_port | int }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create backup user \"{{ mongodb_root_backup_name }}\"", "module": "mongodb_user", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "create backup user \"{{ mongodb_root_backup_name }}\"", "with_items": [{"name": "{{ mongodb_root_backup_name }}", "password": "{{ mongodb_root_backup_password }}", "roles": "backup,clusterMonitor"}], "no_log": true}, "module_options": {"database": "admin", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_port": "{{ mongodb_net_port | int }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Move back mongod.conf", "module": "template", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Move back mongod.conf", "notify": ["mongodb restart", "wait when mongodb is started"]}, "module_options": {"src": "mongod.conf.j2", "dest": "/etc/mongod.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flush all handlers at this point", "module": "meta", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Flush all handlers at this point"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "disable_transparent_hugepages.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/disable_transparent_hugepages.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create disable transparent hugepages systemd service file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/disable_transparent_hugepages.yml", "options": {"name": "Create disable transparent hugepages systemd service file", "with_first_found": ["disable-transparent-hugepages.{{ ansible_distribution | lower }}.service.j2", "disable-transparent-hugepages.{{ ansible_os_family | lower }}.service.j2"], "notify": "run disable-transparent-hugepages", "when": ["ansible_service_mgr == \"systemd\"", "mongodb_disable_transparent_hugepages | bool"]}, "module_options": {"src": "{{ item }}", "dest": "/etc/systemd/system/disable-transparent-hugepages.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check value of variable mongodb_net_ssl_host", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Check value of variable mongodb_net_ssl_host", "when": "( mongodb_net_ssl_mode == 'requireSSL' and mongodb_net_ssl_host|length == 0 )"}, "module_options": {"msg": "Set mongodb_net_ssl_mode is preferSSL or set valid hostname for mongodb_net_ssl_host!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check value of variable mongodb_login_host", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Check value of variable mongodb_login_host", "when": "( mongodb_net_ssl_mode == 'requireSSL' and mongodb_net_ssl_host != mongodb_login_host and not mongodb_replication_replset )"}, "module_options": {"msg": "Set mongodb_login_host equal mongodb_net_ssl_host!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include OS-specific variables", "with_first_found": ["{{ ansible_distribution_release }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include installation tasks", "module": "include", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include installation tasks", "with_first_found": ["install.{{ ansible_distribution | lower }}.yml", "install.{{ ansible_os_family | lower }}.yml"], "tags": ["mongodb"]}, "module_options": "{{ item }}", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include configuration.yml", "module": "include", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include configuration.yml", "tags": ["mongodb"]}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include replication and auth configuration", "module": "include", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include replication and auth configuration", "when": "( mongodb_replication_replset | length > 0 and mongodb_security_authorization == 'enabled' and mongodb_master is defined and mongodb_master )", "tags": ["mongodb"]}, "module_options": "replication_init_auth.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include replication configuration", "module": "include", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include replication configuration", "when": "mongodb_replication_replset | length > 0", "tags": ["mongodb"]}, "module_options": "replication.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check whether admin user is already exist", "module": "command", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Check whether admin user is already exist", "register": "mongodb_user_admin_check", "changed_when": false, "check_mode": false, "ignore_errors": true, "when": "( mongodb_security_authorization == 'enabled' and not mongodb_replication_replset )", "no_log": true, "tags": ["mongodb"]}, "module_options": "mongo --quiet {{ '--ssl --host ' + mongodb_net_ssl_host if mongodb_net_ssl_mode == 'requireSSL' else '' }} -u {{ mongodb_user_admin_name }} \\\n      -p {{ mongodb_user_admin_password }} --port {{ mongodb_net_port }} --eval 'db.version()' admin\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include authorization configuration", "module": "include", "index": 8, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include authorization configuration", "when": "( mongodb_security_authorization == 'enabled' and not mongodb_replication_replset and mongodb_user_admin_check.rc != 0 )", "tags": ["mongodb"]}, "module_options": "auth_initialization.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "create normal users with replicaset", "module": "mongodb_user", "index": 9, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "create normal users with replicaset", "with_items": ["{{ mongodb_users | default([]) }}"], "when": "( mongodb_replication_replset and mongodb_security_authorization == 'enabled' and mongodb_master is defined and mongodb_master )", "no_log": true, "tags": ["mongodb"]}, "module_options": {"database": "{{ item.database }}", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_user": "{{ mongodb_user_admin_name }}", "login_password": "{{ mongodb_user_admin_password }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create normal users without replicaset", "module": "mongodb_user", "index": 10, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "create normal users without replicaset", "with_items": ["{{ mongodb_users | default([]) }}"], "when": "( mongodb_security_authorization == 'enabled' and not mongodb_replication_replset )", "no_log": true, "tags": ["mongodb"]}, "module_options": {"database": "{{ item.database }}", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_user": "{{ mongodb_user_admin_name }}", "login_password": "{{ mongodb_user_admin_password }}", "login_port": "{{ mongodb_net_port | int }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create oplog user with replicaset", "module": "mongodb_user", "index": 11, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "create oplog user with replicaset", "with_items": ["{{ mongodb_oplog_users | default([]) }}"], "when": "( mongodb_replication_replset | length > 0 and mongodb_security_authorization == 'enabled' and mongodb_master is defined and mongodb_master )", "no_log": true, "tags": ["mongodb"]}, "module_options": {"database": "admin", "user": "{{ item.user }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": [{"db": "local", "role": "read"}], "login_user": "{{ mongodb_user_admin_name }}", "login_password": "{{ mongodb_user_admin_password }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "service started", "module": "service", "index": 12, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "service started"}, "module_options": {"name": "{{ mongodb_daemon_name }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include MMS Agent configuration", "module": "include", "index": 13, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include MMS Agent configuration", "when": "mongodb_mms_api_key | length > 0", "tags": ["mongodb"]}, "module_options": "mms-agent.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}], "modules": [{"py/object": "struct4.Module", "name": "mongodb_replication", "fqcn": "mongodb_replication", "collection": "", "role": "UnderGreen.mongodb", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/library/mongodb_replication.py", "builtin": false, "used_in": ["{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml\", \"index\": 0}", "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml\", \"index\": 1}", "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml\", \"index\": 2}", "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml\", \"index\": 0}", "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml\", \"index\": 2}"], "annotations": {}}], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {"mongodb_replication": {"py/object": "struct4.Module", "name": "mongodb_replication", "fqcn": "mongodb_replication", "collection": "", "role": "UnderGreen.mongodb", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/library/mongodb_replication.py", "builtin": false, "used_in": ["{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml\", \"index\": 0}", "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml\", \"index\": 1}", "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml\", \"index\": 2}", "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml\", \"index\": 0}", "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml\", \"index\": 2}"], "annotations": {}}}, "task_dict": {"{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Establish some role-related facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Establish some role-related facts"}, "module_options": {"mongodb_major_version": "{{ mongodb_version[0:3] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add YUM repository", "module": "template", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Add YUM repository", "with_items": "{{ mongodb_major_version }}", "loop_control": {"loop_var": "version_item"}, "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"src": "mongodb.repo.j2", "dest": "/etc/yum.repos.d/mongodb.repo", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install MongoDB package", "module": "yum", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install MongoDB package"}, "module_options": {"name": "{{ mongodb_package }}{% if (mongodb_version | length > 3) %}-{{ mongodb_version }}{% endif %}", "state": "{{ mongodb_package_state }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install numactl package", "module": "yum", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install numactl package", "when": "mongodb_use_numa | bool"}, "module_options": {"name": "numactl", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install PyMongo package", "module": "yum", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install PyMongo package", "when": "not mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_package }}", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install PIP", "module": "yum", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install PIP", "when": "mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_deps }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Install PyMongo from PIP", "module": "pip", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install PyMongo from PIP", "when": "mongodb_pymongo_from_pip"}, "module_options": {"name": "pymongo", "state": "{{ mongodb_pymongo_pip_version is defined | ternary('present', 'latest') }}", "version": "{{ mongodb_pymongo_pip_version | default(omit) }}", "executable": "{{ mongodb_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install MMS agent (Debian)", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Install MMS agent (Debian)", "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'"}, "module_options": {"deb": "{{ mongodb_mms_agent_pkg }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install MMS agent (RHEL)", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Install MMS agent (RHEL)", "when": "ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'"}, "module_options": {"name": "{{ mongodb_mms_agent_pkg }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Configure the MMS agent pt. 1", "module": "file", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Configure the MMS agent pt. 1"}, "module_options": {"state": "directory", "path": "/etc/mongodb-mms", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Configure the MMS agent pt. 2", "module": "template", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Configure the MMS agent pt. 2", "notify": "mongodb-mms-monitoring-agent restart"}, "module_options": {"src": "monitoring-agent.config.j2", "dest": "/etc/mongodb-mms/monitoring-agent.config", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Ensure that the MMS agent is started", "module": "service", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Ensure that the MMS agent is started"}, "module_options": {"name": "mongodb-mms-monitoring-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Replication configuration | 1st Pt.", "module": "mongodb_replication", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "options": {"name": "Replication configuration | 1st Pt.", "with_items": ["{{ mongodb_replication_params|default([]) }}"], "register": "mongodb_replica_init", "ignore_errors": true}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_net_port|default(27017) }}", "login_user": "{{ mongodb_root_admin_name }}", "login_password": "{{ mongodb_root_admin_password }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "options": {"when": "mongodb_replica_init is failed"}, "module_options": "auth_initialization.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Replication configuration | 2nd Pt", "module": "mongodb_replication", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "options": {"name": "Replication configuration | 2nd Pt", "when": "mongodb_replica_init is failed", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_net_port|default(27017) }}", "login_user": "{{ mongodb_root_admin_name }}", "login_password": "{{ mongodb_root_admin_password }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Establish some role-related facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Establish some role-related facts"}, "module_options": {"mongodb_major_version": "{{ mongodb_version[0:3] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install EPEL release repository", "module": "package", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install EPEL release repository"}, "module_options": {"name": "epel-release", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add YUM repository", "module": "template", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Add YUM repository", "with_items": "{{ mongodb_major_version }}", "loop_control": {"loop_var": "version_item"}, "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"src": "mongodb.repo.j2", "dest": "/etc/yum.repos.d/mongodb.repo", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install MongoDB package", "module": "yum", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install MongoDB package"}, "module_options": {"name": "{{ mongodb_package }}{% if (mongodb_version | length > 3) %}-{{ mongodb_version }}{% endif %}", "state": "{{ mongodb_package_state }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install numactl package", "module": "yum", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install numactl package", "when": "mongodb_use_numa | bool"}, "module_options": {"name": "numactl", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install PyMongo package", "module": "yum", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install PyMongo package", "when": "not mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_package }}", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Install PIP", "module": "yum", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"name": "{{ mongodb_pymongo_deps }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Install PyMongo from PIP", "module": "pip", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install PyMongo from PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"name": "pymongo", "state": "{{ mongodb_pymongo_pip_version is defined | ternary('present', 'latest') }}", "version": "{{ mongodb_pymongo_pip_version | default(omit) }}", "executable": "{{ mongodb_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create mongodb group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "create mongodb group"}, "module_options": {"name": "{{ mongodb_user }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create mongodb user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "create mongodb user"}, "module_options": {"name": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "set mongodb gid", "module": "group", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "set mongodb gid", "when": "mongodb_gid is defined"}, "module_options": {"name": "{{ mongodb_user }}", "gid": "{{ mongodb_gid }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "set mongodb uid", "module": "user", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "set mongodb uid", "when": "mongodb_uid is defined"}, "module_options": {"name": "{{ mongodb_user }}", "uid": "{{ mongodb_uid }}", "group": "{{ mongodb_user }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create keyFile", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Create keyFile", "when": "mongodb_replication_replset | length > 0"}, "module_options": {"dest": "{{ mongodb_security_keyfile }}", "content": "{{ mongodb_keyfile_content }}", "owner": "{{ mongodb_user }}", "group": "root", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create log dir if missing", "module": "file", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Create log dir if missing", "when": "mongodb_systemlog_destination == \"file\""}, "module_options": {"state": "directory", "dest": "{{ mongodb_systemlog_path|dirname }}", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Check than logfile exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Check than logfile exists", "register": "logfile_stat", "when": "mongodb_systemlog_destination == \"file\""}, "module_options": "path={{ mongodb_systemlog_path }}", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create log if missing", "module": "file", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Create log if missing", "when": "( mongodb_systemlog_destination == \"file\" and logfile_stat is defined and not logfile_stat.stat.exists )"}, "module_options": {"state": "touch", "dest": "{{ mongodb_systemlog_path }}", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 420}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Ensure dbpath directory", "module": "file", "index": 8, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Ensure dbpath directory"}, "module_options": {"path": "{{ mongodb_storage_dbpath }}", "state": "directory", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "setype": "mongod_var_lib_t", "recurse": true, "follow": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Configure mongodb", "module": "template", "index": 9, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Configure mongodb", "notify": ["mongodb restart", "wait when mongodb is started"]}, "module_options": {"src": "mongod.conf.j2", "dest": "/etc/mongod.conf", "backup": true, "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Flush all handlers at this point", "module": "meta", "index": 10, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Flush all handlers at this point"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Establish some role-related facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Establish some role-related facts"}, "module_options": {"mongodb_major_version": "{{ mongodb_version[0:3] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Disable transparent huge pages on systemd systems", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Disable transparent huge pages on systemd systems", "when": ["mongodb_disable_transparent_hugepages | bool", "ansible_service_mgr == \"systemd\""]}, "module_options": "disable_transparent_hugepages.yml", "executable": "disable_transparent_hugepages.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add APT key", "module": "apt_key", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add APT key", "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"keyserver": "{{ mongodb_apt_keyserver }}", "id": "{{ mongodb_apt_key_id[mongodb_major_version] }}"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Fail when used wrong mongodb_version variable", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Fail when used wrong mongodb_version variable", "when": "(mongodb_package == 'mongodb-org' and (mongodb_version is not defined or mongodb_repository[mongodb_major_version] is not defined))"}, "module_options": {"msg": "mongodb_version variable should be '3.6' or '4.0', '4.2' or '4.4'"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Add APT repository", "module": "apt_repository", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add APT repository", "with_items": "{{ mongodb_major_version }}", "loop_control": {"loop_var": "version_item"}, "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"repo": "{{ mongodb_repository[version_item] }}", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install MongoDB package", "module": "apt", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install MongoDB package"}, "module_options": {"name": "{{ mongodb_package }}{% if (mongodb_version | length > 3) %}={{ mongodb_version }}{% endif %}", "state": "{{ mongodb_package_state }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Check if NUMA is available on host", "module": "command", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Check if NUMA is available on host", "register": "numa_available", "ignore_errors": true, "changed_when": false, "check_mode": false, "when": "mongodb_use_numa | bool"}, "module_options": "ls -1 /proc/1/numa_maps", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Don't use NUMA if it is unavailable on host", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Don't use NUMA if it is unavailable on host", "when": "(mongodb_use_numa | bool and numa_available.rc != 0)"}, "module_options": {"mongodb_use_numa": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install numactl package", "module": "apt", "index": 8, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install numactl package", "when": "mongodb_use_numa | bool"}, "module_options": {"name": "numactl", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Add systemd configuration if present", "module": "template", "index": 9, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add systemd configuration if present", "when": ["ansible_service_mgr == \"systemd\"", "mongodb_manage_systemd_unit | bool"], "notify": ["reload systemd"]}, "module_options": {"src": "mongodb.service.j2", "dest": "/lib/systemd/system/{{ mongodb_daemon_name }}.service", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Add symlink for systemd", "module": "file", "index": 10, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add symlink for systemd", "when": ["ansible_service_mgr == \"systemd\"", "mongodb_manage_systemd_unit | bool"], "notify": ["reload systemd"]}, "module_options": {"src": "/lib/systemd/system/{{ mongodb_daemon_name }}.service", "dest": "/etc/systemd/system/multi-user.target.wants/{{ mongodb_daemon_name }}.service", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Forcefully set mongodb_pymongo_from_pip to false on Debian 10", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Forcefully set mongodb_pymongo_from_pip to false on Debian 10", "when": ["ansible_distribution == 'Debian'", "ansible_distribution_release == 'buster'"]}, "module_options": {"mongodb_pymongo_from_pip": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Install PyMongo package", "module": "apt", "index": 12, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install PyMongo package", "when": "not mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_package }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Install PIP", "module": "apt", "index": 13, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"pkg": "{{ mongodb_pymongo_deps }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Install setuptools (required for ansible 2.7+)", "module": "apt", "index": 14, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install setuptools (required for ansible 2.7+)", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"pkg": "{{ mongodb_python_setuptools }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Install PyMongo from PIP", "module": "pip", "index": 15, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install PyMongo from PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"name": ["pymongo"], "state": "{{ mongodb_pymongo_pip_version is defined | ternary('present', 'latest') }}", "version": "{{ mongodb_pymongo_pip_version | default(omit) }}", "executable": "{{ mongodb_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Replication configuration", "module": "mongodb_replication", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "options": {"name": "Replication configuration", "when": "mongodb_security_authorization == 'enabled'", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "login_user": "{{ mongodb_root_admin_name }}", "login_password": "{{ mongodb_root_admin_password }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Replication configuration without auth on master", "module": "mongodb_replication", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "options": {"name": "Replication configuration without auth on master", "when": "( mongodb_security_authorization == 'disabled' and mongodb_master is defined and mongodb_master )", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Replication configuration without auth on replicas and arbiters", "module": "mongodb_replication", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "options": {"name": "Replication configuration without auth on replicas and arbiters", "when": "( mongodb_security_authorization == 'disabled' and ( mongodb_master is not defined or not mongodb_master) )", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Use different mongod.conf for auth initialization", "module": "template", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Use different mongod.conf for auth initialization", "notify": ["mongodb restart", "wait when mongodb is started on localhost"]}, "module_options": {"src": "mongod_init.conf.j2", "dest": "/etc/mongod.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Flush all handlers at this point", "module": "meta", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Flush all handlers at this point"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "create administrative user \"{{ mongodb_user_admin_name }}\"", "module": "mongodb_user", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "create administrative user \"{{ mongodb_user_admin_name }}\"", "with_items": [{"name": "{{ mongodb_user_admin_name }}", "password": "{{ mongodb_user_admin_password }}", "roles": "userAdminAnyDatabase"}], "no_log": true}, "module_options": {"database": "admin", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_port": "{{ mongodb_net_port | int }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "create administrative user \"{{ mongodb_root_admin_name }}\"", "module": "mongodb_user", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "create administrative user \"{{ mongodb_root_admin_name }}\"", "with_items": [{"name": "{{ mongodb_root_admin_name }}", "password": "{{ mongodb_root_admin_password }}", "roles": "root"}], "no_log": true}, "module_options": {"database": "admin", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_port": "{{ mongodb_net_port | int }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "create backup user \"{{ mongodb_root_backup_name }}\"", "module": "mongodb_user", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "create backup user \"{{ mongodb_root_backup_name }}\"", "with_items": [{"name": "{{ mongodb_root_backup_name }}", "password": "{{ mongodb_root_backup_password }}", "roles": "backup,clusterMonitor"}], "no_log": true}, "module_options": {"database": "admin", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_port": "{{ mongodb_net_port | int }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Move back mongod.conf", "module": "template", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Move back mongod.conf", "notify": ["mongodb restart", "wait when mongodb is started"]}, "module_options": {"src": "mongod.conf.j2", "dest": "/etc/mongod.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Flush all handlers at this point", "module": "meta", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Flush all handlers at this point"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/disable_transparent_hugepages.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create disable transparent hugepages systemd service file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/disable_transparent_hugepages.yml", "options": {"name": "Create disable transparent hugepages systemd service file", "with_first_found": ["disable-transparent-hugepages.{{ ansible_distribution | lower }}.service.j2", "disable-transparent-hugepages.{{ ansible_os_family | lower }}.service.j2"], "notify": "run disable-transparent-hugepages", "when": ["ansible_service_mgr == \"systemd\"", "mongodb_disable_transparent_hugepages | bool"]}, "module_options": {"src": "{{ item }}", "dest": "/etc/systemd/system/disable-transparent-hugepages.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check value of variable mongodb_net_ssl_host", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Check value of variable mongodb_net_ssl_host", "when": "( mongodb_net_ssl_mode == 'requireSSL' and mongodb_net_ssl_host|length == 0 )"}, "module_options": {"msg": "Set mongodb_net_ssl_mode is preferSSL or set valid hostname for mongodb_net_ssl_host!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Check value of variable mongodb_login_host", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Check value of variable mongodb_login_host", "when": "( mongodb_net_ssl_mode == 'requireSSL' and mongodb_net_ssl_host != mongodb_login_host and not mongodb_replication_replset )"}, "module_options": {"msg": "Set mongodb_login_host equal mongodb_net_ssl_host!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include OS-specific variables", "with_first_found": ["{{ ansible_distribution_release }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Include installation tasks", "module": "include", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include installation tasks", "with_first_found": ["install.{{ ansible_distribution | lower }}.yml", "install.{{ ansible_os_family | lower }}.yml"], "tags": ["mongodb"]}, "module_options": "{{ item }}", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Include configuration.yml", "module": "include", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include configuration.yml", "tags": ["mongodb"]}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Include replication and auth configuration", "module": "include", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include replication and auth configuration", "when": "( mongodb_replication_replset | length > 0 and mongodb_security_authorization == 'enabled' and mongodb_master is defined and mongodb_master )", "tags": ["mongodb"]}, "module_options": "replication_init_auth.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Include replication configuration", "module": "include", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include replication configuration", "when": "mongodb_replication_replset | length > 0", "tags": ["mongodb"]}, "module_options": "replication.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Check whether admin user is already exist", "module": "command", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Check whether admin user is already exist", "register": "mongodb_user_admin_check", "changed_when": false, "check_mode": false, "ignore_errors": true, "when": "( mongodb_security_authorization == 'enabled' and not mongodb_replication_replset )", "no_log": true, "tags": ["mongodb"]}, "module_options": "mongo --quiet {{ '--ssl --host ' + mongodb_net_ssl_host if mongodb_net_ssl_mode == 'requireSSL' else '' }} -u {{ mongodb_user_admin_name }} \\\n      -p {{ mongodb_user_admin_password }} --port {{ mongodb_net_port }} --eval 'db.version()' admin\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Include authorization configuration", "module": "include", "index": 8, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include authorization configuration", "when": "( mongodb_security_authorization == 'enabled' and not mongodb_replication_replset and mongodb_user_admin_check.rc != 0 )", "tags": ["mongodb"]}, "module_options": "auth_initialization.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "create normal users with replicaset", "module": "mongodb_user", "index": 9, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "create normal users with replicaset", "with_items": ["{{ mongodb_users | default([]) }}"], "when": "( mongodb_replication_replset and mongodb_security_authorization == 'enabled' and mongodb_master is defined and mongodb_master )", "no_log": true, "tags": ["mongodb"]}, "module_options": {"database": "{{ item.database }}", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_user": "{{ mongodb_user_admin_name }}", "login_password": "{{ mongodb_user_admin_password }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "create normal users without replicaset", "module": "mongodb_user", "index": 10, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "create normal users without replicaset", "with_items": ["{{ mongodb_users | default([]) }}"], "when": "( mongodb_security_authorization == 'enabled' and not mongodb_replication_replset )", "no_log": true, "tags": ["mongodb"]}, "module_options": {"database": "{{ item.database }}", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_user": "{{ mongodb_user_admin_name }}", "login_password": "{{ mongodb_user_admin_password }}", "login_port": "{{ mongodb_net_port | int }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "create oplog user with replicaset", "module": "mongodb_user", "index": 11, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "create oplog user with replicaset", "with_items": ["{{ mongodb_oplog_users | default([]) }}"], "when": "( mongodb_replication_replset | length > 0 and mongodb_security_authorization == 'enabled' and mongodb_master is defined and mongodb_master )", "no_log": true, "tags": ["mongodb"]}, "module_options": {"database": "admin", "user": "{{ item.user }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": [{"db": "local", "role": "read"}], "login_user": "{{ mongodb_user_admin_name }}", "login_password": "{{ mongodb_user_admin_password }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "service started", "module": "service", "index": 12, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "service started"}, "module_options": {"name": "{{ mongodb_daemon_name }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Include MMS Agent configuration", "module": "include", "index": 13, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include MMS Agent configuration", "when": "mongodb_mms_api_key | length > 0", "tags": ["mongodb"]}, "module_options": "mms-agent.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml": {"py/object": "struct4.TaskFile", "name": "install.amazon.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "tasks": [{"py/object": "struct4.Task", "name": "Establish some role-related facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Establish some role-related facts"}, "module_options": {"mongodb_major_version": "{{ mongodb_version[0:3] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add YUM repository", "module": "template", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Add YUM repository", "with_items": "{{ mongodb_major_version }}", "loop_control": {"loop_var": "version_item"}, "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"src": "mongodb.repo.j2", "dest": "/etc/yum.repos.d/mongodb.repo", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install MongoDB package", "module": "yum", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install MongoDB package"}, "module_options": {"name": "{{ mongodb_package }}{% if (mongodb_version | length > 3) %}-{{ mongodb_version }}{% endif %}", "state": "{{ mongodb_package_state }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install numactl package", "module": "yum", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install numactl package", "when": "mongodb_use_numa | bool"}, "module_options": {"name": "numactl", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo package", "module": "yum", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install PyMongo package", "when": "not mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_package }}", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PIP", "module": "yum", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install PIP", "when": "mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_deps }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo from PIP", "module": "pip", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install PyMongo from PIP", "when": "mongodb_pymongo_from_pip"}, "module_options": {"name": "pymongo", "state": "{{ mongodb_pymongo_pip_version is defined | ternary('present', 'latest') }}", "version": "{{ mongodb_pymongo_pip_version | default(omit) }}", "executable": "{{ mongodb_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml": {"py/object": "struct4.TaskFile", "name": "mms-agent.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install MMS agent (Debian)", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Install MMS agent (Debian)", "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'"}, "module_options": {"deb": "{{ mongodb_mms_agent_pkg }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install MMS agent (RHEL)", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Install MMS agent (RHEL)", "when": "ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'"}, "module_options": {"name": "{{ mongodb_mms_agent_pkg }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure the MMS agent pt. 1", "module": "file", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Configure the MMS agent pt. 1"}, "module_options": {"state": "directory", "path": "/etc/mongodb-mms", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure the MMS agent pt. 2", "module": "template", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Configure the MMS agent pt. 2", "notify": "mongodb-mms-monitoring-agent restart"}, "module_options": {"src": "monitoring-agent.config.j2", "dest": "/etc/mongodb-mms/monitoring-agent.config", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure that the MMS agent is started", "module": "service", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Ensure that the MMS agent is started"}, "module_options": {"name": "mongodb-mms-monitoring-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml": {"py/object": "struct4.TaskFile", "name": "replication_init_auth.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "tasks": [{"py/object": "struct4.Task", "name": "Replication configuration | 1st Pt.", "module": "mongodb_replication", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "options": {"name": "Replication configuration | 1st Pt.", "with_items": ["{{ mongodb_replication_params|default([]) }}"], "register": "mongodb_replica_init", "ignore_errors": true}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_net_port|default(27017) }}", "login_user": "{{ mongodb_root_admin_name }}", "login_password": "{{ mongodb_root_admin_password }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "options": {"when": "mongodb_replica_init is failed"}, "module_options": "auth_initialization.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Replication configuration | 2nd Pt", "module": "mongodb_replication", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "options": {"name": "Replication configuration | 2nd Pt", "when": "mongodb_replica_init is failed", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_net_port|default(27017) }}", "login_user": "{{ mongodb_root_admin_name }}", "login_password": "{{ mongodb_root_admin_password }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml": {"py/object": "struct4.TaskFile", "name": "install.redhat.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Establish some role-related facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Establish some role-related facts"}, "module_options": {"mongodb_major_version": "{{ mongodb_version[0:3] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install EPEL release repository", "module": "package", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install EPEL release repository"}, "module_options": {"name": "epel-release", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add YUM repository", "module": "template", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Add YUM repository", "with_items": "{{ mongodb_major_version }}", "loop_control": {"loop_var": "version_item"}, "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"src": "mongodb.repo.j2", "dest": "/etc/yum.repos.d/mongodb.repo", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install MongoDB package", "module": "yum", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install MongoDB package"}, "module_options": {"name": "{{ mongodb_package }}{% if (mongodb_version | length > 3) %}-{{ mongodb_version }}{% endif %}", "state": "{{ mongodb_package_state }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install numactl package", "module": "yum", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install numactl package", "when": "mongodb_use_numa | bool"}, "module_options": {"name": "numactl", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo package", "module": "yum", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install PyMongo package", "when": "not mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_package }}", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PIP", "module": "yum", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"name": "{{ mongodb_pymongo_deps }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo from PIP", "module": "pip", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install PyMongo from PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"name": "pymongo", "state": "{{ mongodb_pymongo_pip_version is defined | ternary('present', 'latest') }}", "version": "{{ mongodb_pymongo_pip_version | default(omit) }}", "executable": "{{ mongodb_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml": {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "create mongodb group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "create mongodb group"}, "module_options": {"name": "{{ mongodb_user }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "create mongodb user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "create mongodb user"}, "module_options": {"name": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "set mongodb gid", "module": "group", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "set mongodb gid", "when": "mongodb_gid is defined"}, "module_options": {"name": "{{ mongodb_user }}", "gid": "{{ mongodb_gid }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "set mongodb uid", "module": "user", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "set mongodb uid", "when": "mongodb_uid is defined"}, "module_options": {"name": "{{ mongodb_user }}", "uid": "{{ mongodb_uid }}", "group": "{{ mongodb_user }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create keyFile", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Create keyFile", "when": "mongodb_replication_replset | length > 0"}, "module_options": {"dest": "{{ mongodb_security_keyfile }}", "content": "{{ mongodb_keyfile_content }}", "owner": "{{ mongodb_user }}", "group": "root", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log dir if missing", "module": "file", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Create log dir if missing", "when": "mongodb_systemlog_destination == \"file\""}, "module_options": {"state": "directory", "dest": "{{ mongodb_systemlog_path|dirname }}", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check than logfile exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Check than logfile exists", "register": "logfile_stat", "when": "mongodb_systemlog_destination == \"file\""}, "module_options": "path={{ mongodb_systemlog_path }}", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log if missing", "module": "file", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Create log if missing", "when": "( mongodb_systemlog_destination == \"file\" and logfile_stat is defined and not logfile_stat.stat.exists )"}, "module_options": {"state": "touch", "dest": "{{ mongodb_systemlog_path }}", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 420}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dbpath directory", "module": "file", "index": 8, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Ensure dbpath directory"}, "module_options": {"path": "{{ mongodb_storage_dbpath }}", "state": "directory", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "setype": "mongod_var_lib_t", "recurse": true, "follow": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure mongodb", "module": "template", "index": 9, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Configure mongodb", "notify": ["mongodb restart", "wait when mongodb is started"]}, "module_options": {"src": "mongod.conf.j2", "dest": "/etc/mongod.conf", "backup": true, "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flush all handlers at this point", "module": "meta", "index": 10, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Flush all handlers at this point"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml": {"py/object": "struct4.TaskFile", "name": "install.debian.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Establish some role-related facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Establish some role-related facts"}, "module_options": {"mongodb_major_version": "{{ mongodb_version[0:3] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable transparent huge pages on systemd systems", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Disable transparent huge pages on systemd systems", "when": ["mongodb_disable_transparent_hugepages | bool", "ansible_service_mgr == \"systemd\""]}, "module_options": "disable_transparent_hugepages.yml", "executable": "disable_transparent_hugepages.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add APT key", "module": "apt_key", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add APT key", "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"keyserver": "{{ mongodb_apt_keyserver }}", "id": "{{ mongodb_apt_key_id[mongodb_major_version] }}"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail when used wrong mongodb_version variable", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Fail when used wrong mongodb_version variable", "when": "(mongodb_package == 'mongodb-org' and (mongodb_version is not defined or mongodb_repository[mongodb_major_version] is not defined))"}, "module_options": {"msg": "mongodb_version variable should be '3.6' or '4.0', '4.2' or '4.4'"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add APT repository", "module": "apt_repository", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add APT repository", "with_items": "{{ mongodb_major_version }}", "loop_control": {"loop_var": "version_item"}, "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"repo": "{{ mongodb_repository[version_item] }}", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install MongoDB package", "module": "apt", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install MongoDB package"}, "module_options": {"name": "{{ mongodb_package }}{% if (mongodb_version | length > 3) %}={{ mongodb_version }}{% endif %}", "state": "{{ mongodb_package_state }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if NUMA is available on host", "module": "command", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Check if NUMA is available on host", "register": "numa_available", "ignore_errors": true, "changed_when": false, "check_mode": false, "when": "mongodb_use_numa | bool"}, "module_options": "ls -1 /proc/1/numa_maps", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Don't use NUMA if it is unavailable on host", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Don't use NUMA if it is unavailable on host", "when": "(mongodb_use_numa | bool and numa_available.rc != 0)"}, "module_options": {"mongodb_use_numa": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install numactl package", "module": "apt", "index": 8, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install numactl package", "when": "mongodb_use_numa | bool"}, "module_options": {"name": "numactl", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add systemd configuration if present", "module": "template", "index": 9, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add systemd configuration if present", "when": ["ansible_service_mgr == \"systemd\"", "mongodb_manage_systemd_unit | bool"], "notify": ["reload systemd"]}, "module_options": {"src": "mongodb.service.j2", "dest": "/lib/systemd/system/{{ mongodb_daemon_name }}.service", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add symlink for systemd", "module": "file", "index": 10, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add symlink for systemd", "when": ["ansible_service_mgr == \"systemd\"", "mongodb_manage_systemd_unit | bool"], "notify": ["reload systemd"]}, "module_options": {"src": "/lib/systemd/system/{{ mongodb_daemon_name }}.service", "dest": "/etc/systemd/system/multi-user.target.wants/{{ mongodb_daemon_name }}.service", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Forcefully set mongodb_pymongo_from_pip to false on Debian 10", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Forcefully set mongodb_pymongo_from_pip to false on Debian 10", "when": ["ansible_distribution == 'Debian'", "ansible_distribution_release == 'buster'"]}, "module_options": {"mongodb_pymongo_from_pip": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo package", "module": "apt", "index": 12, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install PyMongo package", "when": "not mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_package }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PIP", "module": "apt", "index": 13, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"pkg": "{{ mongodb_pymongo_deps }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install setuptools (required for ansible 2.7+)", "module": "apt", "index": 14, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install setuptools (required for ansible 2.7+)", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"pkg": "{{ mongodb_python_setuptools }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo from PIP", "module": "pip", "index": 15, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install PyMongo from PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"name": ["pymongo"], "state": "{{ mongodb_pymongo_pip_version is defined | ternary('present', 'latest') }}", "version": "{{ mongodb_pymongo_pip_version | default(omit) }}", "executable": "{{ mongodb_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml": {"py/object": "struct4.TaskFile", "name": "replication.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "tasks": [{"py/object": "struct4.Task", "name": "Replication configuration", "module": "mongodb_replication", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "options": {"name": "Replication configuration", "when": "mongodb_security_authorization == 'enabled'", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "login_user": "{{ mongodb_root_admin_name }}", "login_password": "{{ mongodb_root_admin_password }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Replication configuration without auth on master", "module": "mongodb_replication", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "options": {"name": "Replication configuration without auth on master", "when": "( mongodb_security_authorization == 'disabled' and mongodb_master is defined and mongodb_master )", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Replication configuration without auth on replicas and arbiters", "module": "mongodb_replication", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "options": {"name": "Replication configuration without auth on replicas and arbiters", "when": "( mongodb_security_authorization == 'disabled' and ( mongodb_master is not defined or not mongodb_master) )", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml": {"py/object": "struct4.TaskFile", "name": "auth_initialization.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "tasks": [{"py/object": "struct4.Task", "name": "Use different mongod.conf for auth initialization", "module": "template", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Use different mongod.conf for auth initialization", "notify": ["mongodb restart", "wait when mongodb is started on localhost"]}, "module_options": {"src": "mongod_init.conf.j2", "dest": "/etc/mongod.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flush all handlers at this point", "module": "meta", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Flush all handlers at this point"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "create administrative user \"{{ mongodb_user_admin_name }}\"", "module": "mongodb_user", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "create administrative user \"{{ mongodb_user_admin_name }}\"", "with_items": [{"name": "{{ mongodb_user_admin_name }}", "password": "{{ mongodb_user_admin_password }}", "roles": "userAdminAnyDatabase"}], "no_log": true}, "module_options": {"database": "admin", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_port": "{{ mongodb_net_port | int }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create administrative user \"{{ mongodb_root_admin_name }}\"", "module": "mongodb_user", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "create administrative user \"{{ mongodb_root_admin_name }}\"", "with_items": [{"name": "{{ mongodb_root_admin_name }}", "password": "{{ mongodb_root_admin_password }}", "roles": "root"}], "no_log": true}, "module_options": {"database": "admin", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_port": "{{ mongodb_net_port | int }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create backup user \"{{ mongodb_root_backup_name }}\"", "module": "mongodb_user", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "create backup user \"{{ mongodb_root_backup_name }}\"", "with_items": [{"name": "{{ mongodb_root_backup_name }}", "password": "{{ mongodb_root_backup_password }}", "roles": "backup,clusterMonitor"}], "no_log": true}, "module_options": {"database": "admin", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_port": "{{ mongodb_net_port | int }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Move back mongod.conf", "module": "template", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Move back mongod.conf", "notify": ["mongodb restart", "wait when mongodb is started"]}, "module_options": {"src": "mongod.conf.j2", "dest": "/etc/mongod.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flush all handlers at this point", "module": "meta", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Flush all handlers at this point"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/disable_transparent_hugepages.yml": {"py/object": "struct4.TaskFile", "name": "disable_transparent_hugepages.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/disable_transparent_hugepages.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create disable transparent hugepages systemd service file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/disable_transparent_hugepages.yml", "options": {"name": "Create disable transparent hugepages systemd service file", "with_first_found": ["disable-transparent-hugepages.{{ ansible_distribution | lower }}.service.j2", "disable-transparent-hugepages.{{ ansible_os_family | lower }}.service.j2"], "notify": "run disable-transparent-hugepages", "when": ["ansible_service_mgr == \"systemd\"", "mongodb_disable_transparent_hugepages | bool"]}, "module_options": {"src": "{{ item }}", "dest": "/etc/systemd/system/disable-transparent-hugepages.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check value of variable mongodb_net_ssl_host", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Check value of variable mongodb_net_ssl_host", "when": "( mongodb_net_ssl_mode == 'requireSSL' and mongodb_net_ssl_host|length == 0 )"}, "module_options": {"msg": "Set mongodb_net_ssl_mode is preferSSL or set valid hostname for mongodb_net_ssl_host!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check value of variable mongodb_login_host", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Check value of variable mongodb_login_host", "when": "( mongodb_net_ssl_mode == 'requireSSL' and mongodb_net_ssl_host != mongodb_login_host and not mongodb_replication_replset )"}, "module_options": {"msg": "Set mongodb_login_host equal mongodb_net_ssl_host!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include OS-specific variables", "with_first_found": ["{{ ansible_distribution_release }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include installation tasks", "module": "include", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include installation tasks", "with_first_found": ["install.{{ ansible_distribution | lower }}.yml", "install.{{ ansible_os_family | lower }}.yml"], "tags": ["mongodb"]}, "module_options": "{{ item }}", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include configuration.yml", "module": "include", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include configuration.yml", "tags": ["mongodb"]}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include replication and auth configuration", "module": "include", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include replication and auth configuration", "when": "( mongodb_replication_replset | length > 0 and mongodb_security_authorization == 'enabled' and mongodb_master is defined and mongodb_master )", "tags": ["mongodb"]}, "module_options": "replication_init_auth.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include replication configuration", "module": "include", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include replication configuration", "when": "mongodb_replication_replset | length > 0", "tags": ["mongodb"]}, "module_options": "replication.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check whether admin user is already exist", "module": "command", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Check whether admin user is already exist", "register": "mongodb_user_admin_check", "changed_when": false, "check_mode": false, "ignore_errors": true, "when": "( mongodb_security_authorization == 'enabled' and not mongodb_replication_replset )", "no_log": true, "tags": ["mongodb"]}, "module_options": "mongo --quiet {{ '--ssl --host ' + mongodb_net_ssl_host if mongodb_net_ssl_mode == 'requireSSL' else '' }} -u {{ mongodb_user_admin_name }} \\\n      -p {{ mongodb_user_admin_password }} --port {{ mongodb_net_port }} --eval 'db.version()' admin\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include authorization configuration", "module": "include", "index": 8, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include authorization configuration", "when": "( mongodb_security_authorization == 'enabled' and not mongodb_replication_replset and mongodb_user_admin_check.rc != 0 )", "tags": ["mongodb"]}, "module_options": "auth_initialization.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "create normal users with replicaset", "module": "mongodb_user", "index": 9, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "create normal users with replicaset", "with_items": ["{{ mongodb_users | default([]) }}"], "when": "( mongodb_replication_replset and mongodb_security_authorization == 'enabled' and mongodb_master is defined and mongodb_master )", "no_log": true, "tags": ["mongodb"]}, "module_options": {"database": "{{ item.database }}", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_user": "{{ mongodb_user_admin_name }}", "login_password": "{{ mongodb_user_admin_password }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create normal users without replicaset", "module": "mongodb_user", "index": 10, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "create normal users without replicaset", "with_items": ["{{ mongodb_users | default([]) }}"], "when": "( mongodb_security_authorization == 'enabled' and not mongodb_replication_replset )", "no_log": true, "tags": ["mongodb"]}, "module_options": {"database": "{{ item.database }}", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_user": "{{ mongodb_user_admin_name }}", "login_password": "{{ mongodb_user_admin_password }}", "login_port": "{{ mongodb_net_port | int }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create oplog user with replicaset", "module": "mongodb_user", "index": 11, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "create oplog user with replicaset", "with_items": ["{{ mongodb_oplog_users | default([]) }}"], "when": "( mongodb_replication_replset | length > 0 and mongodb_security_authorization == 'enabled' and mongodb_master is defined and mongodb_master )", "no_log": true, "tags": ["mongodb"]}, "module_options": {"database": "admin", "user": "{{ item.user }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": [{"db": "local", "role": "read"}], "login_user": "{{ mongodb_user_admin_name }}", "login_password": "{{ mongodb_user_admin_password }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "service started", "module": "service", "index": 12, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "service started"}, "module_options": {"name": "{{ mongodb_daemon_name }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include MMS Agent configuration", "module": "include", "index": 13, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include MMS Agent configuration", "when": "mongodb_mms_api_key | length > 0", "tags": ["mongodb"]}, "module_options": "mms-agent.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}}, "role_dict": {"UnderGreen.mongodb": {"py/object": "struct4.Role", "name": "UnderGreen.mongodb", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb", "fqcn": "UnderGreen.mongodb", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "install.amazon.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "tasks": [{"py/object": "struct4.Task", "name": "Establish some role-related facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Establish some role-related facts"}, "module_options": {"mongodb_major_version": "{{ mongodb_version[0:3] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add YUM repository", "module": "template", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Add YUM repository", "with_items": "{{ mongodb_major_version }}", "loop_control": {"loop_var": "version_item"}, "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"src": "mongodb.repo.j2", "dest": "/etc/yum.repos.d/mongodb.repo", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install MongoDB package", "module": "yum", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install MongoDB package"}, "module_options": {"name": "{{ mongodb_package }}{% if (mongodb_version | length > 3) %}-{{ mongodb_version }}{% endif %}", "state": "{{ mongodb_package_state }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install numactl package", "module": "yum", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install numactl package", "when": "mongodb_use_numa | bool"}, "module_options": {"name": "numactl", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo package", "module": "yum", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install PyMongo package", "when": "not mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_package }}", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PIP", "module": "yum", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install PIP", "when": "mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_deps }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo from PIP", "module": "pip", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.amazon.yml", "options": {"name": "Install PyMongo from PIP", "when": "mongodb_pymongo_from_pip"}, "module_options": {"name": "pymongo", "state": "{{ mongodb_pymongo_pip_version is defined | ternary('present', 'latest') }}", "version": "{{ mongodb_pymongo_pip_version | default(omit) }}", "executable": "{{ mongodb_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "mms-agent.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install MMS agent (Debian)", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Install MMS agent (Debian)", "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'"}, "module_options": {"deb": "{{ mongodb_mms_agent_pkg }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install MMS agent (RHEL)", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Install MMS agent (RHEL)", "when": "ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'"}, "module_options": {"name": "{{ mongodb_mms_agent_pkg }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure the MMS agent pt. 1", "module": "file", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Configure the MMS agent pt. 1"}, "module_options": {"state": "directory", "path": "/etc/mongodb-mms", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure the MMS agent pt. 2", "module": "template", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Configure the MMS agent pt. 2", "notify": "mongodb-mms-monitoring-agent restart"}, "module_options": {"src": "monitoring-agent.config.j2", "dest": "/etc/mongodb-mms/monitoring-agent.config", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure that the MMS agent is started", "module": "service", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/mms-agent.yml", "options": {"name": "Ensure that the MMS agent is started"}, "module_options": {"name": "mongodb-mms-monitoring-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "replication_init_auth.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "tasks": [{"py/object": "struct4.Task", "name": "Replication configuration | 1st Pt.", "module": "mongodb_replication", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "options": {"name": "Replication configuration | 1st Pt.", "with_items": ["{{ mongodb_replication_params|default([]) }}"], "register": "mongodb_replica_init", "ignore_errors": true}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_net_port|default(27017) }}", "login_user": "{{ mongodb_root_admin_name }}", "login_password": "{{ mongodb_root_admin_password }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "options": {"when": "mongodb_replica_init is failed"}, "module_options": "auth_initialization.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Replication configuration | 2nd Pt", "module": "mongodb_replication", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml", "options": {"name": "Replication configuration | 2nd Pt", "when": "mongodb_replica_init is failed", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_net_port|default(27017) }}", "login_user": "{{ mongodb_root_admin_name }}", "login_password": "{{ mongodb_root_admin_password }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "install.redhat.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Establish some role-related facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Establish some role-related facts"}, "module_options": {"mongodb_major_version": "{{ mongodb_version[0:3] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install EPEL release repository", "module": "package", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install EPEL release repository"}, "module_options": {"name": "epel-release", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add YUM repository", "module": "template", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Add YUM repository", "with_items": "{{ mongodb_major_version }}", "loop_control": {"loop_var": "version_item"}, "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"src": "mongodb.repo.j2", "dest": "/etc/yum.repos.d/mongodb.repo", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install MongoDB package", "module": "yum", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install MongoDB package"}, "module_options": {"name": "{{ mongodb_package }}{% if (mongodb_version | length > 3) %}-{{ mongodb_version }}{% endif %}", "state": "{{ mongodb_package_state }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install numactl package", "module": "yum", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install numactl package", "when": "mongodb_use_numa | bool"}, "module_options": {"name": "numactl", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo package", "module": "yum", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install PyMongo package", "when": "not mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_package }}", "state": "present", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PIP", "module": "yum", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"name": "{{ mongodb_pymongo_deps }}", "lock_timeout": "{{ yum_lock_timeout }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo from PIP", "module": "pip", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.redhat.yml", "options": {"name": "Install PyMongo from PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"name": "pymongo", "state": "{{ mongodb_pymongo_pip_version is defined | ternary('present', 'latest') }}", "version": "{{ mongodb_pymongo_pip_version | default(omit) }}", "executable": "{{ mongodb_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "create mongodb group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "create mongodb group"}, "module_options": {"name": "{{ mongodb_user }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "create mongodb user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "create mongodb user"}, "module_options": {"name": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "set mongodb gid", "module": "group", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "set mongodb gid", "when": "mongodb_gid is defined"}, "module_options": {"name": "{{ mongodb_user }}", "gid": "{{ mongodb_gid }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "set mongodb uid", "module": "user", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "set mongodb uid", "when": "mongodb_uid is defined"}, "module_options": {"name": "{{ mongodb_user }}", "uid": "{{ mongodb_uid }}", "group": "{{ mongodb_user }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create keyFile", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Create keyFile", "when": "mongodb_replication_replset | length > 0"}, "module_options": {"dest": "{{ mongodb_security_keyfile }}", "content": "{{ mongodb_keyfile_content }}", "owner": "{{ mongodb_user }}", "group": "root", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log dir if missing", "module": "file", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Create log dir if missing", "when": "mongodb_systemlog_destination == \"file\""}, "module_options": {"state": "directory", "dest": "{{ mongodb_systemlog_path|dirname }}", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check than logfile exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Check than logfile exists", "register": "logfile_stat", "when": "mongodb_systemlog_destination == \"file\""}, "module_options": "path={{ mongodb_systemlog_path }}", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log if missing", "module": "file", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Create log if missing", "when": "( mongodb_systemlog_destination == \"file\" and logfile_stat is defined and not logfile_stat.stat.exists )"}, "module_options": {"state": "touch", "dest": "{{ mongodb_systemlog_path }}", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "mode": 420}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dbpath directory", "module": "file", "index": 8, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Ensure dbpath directory"}, "module_options": {"path": "{{ mongodb_storage_dbpath }}", "state": "directory", "owner": "{{ mongodb_user }}", "group": "{{ mongodb_user }}", "setype": "mongod_var_lib_t", "recurse": true, "follow": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure mongodb", "module": "template", "index": 9, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Configure mongodb", "notify": ["mongodb restart", "wait when mongodb is started"]}, "module_options": {"src": "mongod.conf.j2", "dest": "/etc/mongod.conf", "backup": true, "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flush all handlers at this point", "module": "meta", "index": 10, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/configure.yml", "options": {"name": "Flush all handlers at this point"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.debian.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Establish some role-related facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Establish some role-related facts"}, "module_options": {"mongodb_major_version": "{{ mongodb_version[0:3] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable transparent huge pages on systemd systems", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Disable transparent huge pages on systemd systems", "when": ["mongodb_disable_transparent_hugepages | bool", "ansible_service_mgr == \"systemd\""]}, "module_options": "disable_transparent_hugepages.yml", "executable": "disable_transparent_hugepages.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add APT key", "module": "apt_key", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add APT key", "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"keyserver": "{{ mongodb_apt_keyserver }}", "id": "{{ mongodb_apt_key_id[mongodb_major_version] }}"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail when used wrong mongodb_version variable", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Fail when used wrong mongodb_version variable", "when": "(mongodb_package == 'mongodb-org' and (mongodb_version is not defined or mongodb_repository[mongodb_major_version] is not defined))"}, "module_options": {"msg": "mongodb_version variable should be '3.6' or '4.0', '4.2' or '4.4'"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add APT repository", "module": "apt_repository", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add APT repository", "with_items": "{{ mongodb_major_version }}", "loop_control": {"loop_var": "version_item"}, "when": "mongodb_package == 'mongodb-org'"}, "module_options": {"repo": "{{ mongodb_repository[version_item] }}", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install MongoDB package", "module": "apt", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install MongoDB package"}, "module_options": {"name": "{{ mongodb_package }}{% if (mongodb_version | length > 3) %}={{ mongodb_version }}{% endif %}", "state": "{{ mongodb_package_state }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if NUMA is available on host", "module": "command", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Check if NUMA is available on host", "register": "numa_available", "ignore_errors": true, "changed_when": false, "check_mode": false, "when": "mongodb_use_numa | bool"}, "module_options": "ls -1 /proc/1/numa_maps", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Don't use NUMA if it is unavailable on host", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Don't use NUMA if it is unavailable on host", "when": "(mongodb_use_numa | bool and numa_available.rc != 0)"}, "module_options": {"mongodb_use_numa": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install numactl package", "module": "apt", "index": 8, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install numactl package", "when": "mongodb_use_numa | bool"}, "module_options": {"name": "numactl", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add systemd configuration if present", "module": "template", "index": 9, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add systemd configuration if present", "when": ["ansible_service_mgr == \"systemd\"", "mongodb_manage_systemd_unit | bool"], "notify": ["reload systemd"]}, "module_options": {"src": "mongodb.service.j2", "dest": "/lib/systemd/system/{{ mongodb_daemon_name }}.service", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add symlink for systemd", "module": "file", "index": 10, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Add symlink for systemd", "when": ["ansible_service_mgr == \"systemd\"", "mongodb_manage_systemd_unit | bool"], "notify": ["reload systemd"]}, "module_options": {"src": "/lib/systemd/system/{{ mongodb_daemon_name }}.service", "dest": "/etc/systemd/system/multi-user.target.wants/{{ mongodb_daemon_name }}.service", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Forcefully set mongodb_pymongo_from_pip to false on Debian 10", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Forcefully set mongodb_pymongo_from_pip to false on Debian 10", "when": ["ansible_distribution == 'Debian'", "ansible_distribution_release == 'buster'"]}, "module_options": {"mongodb_pymongo_from_pip": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo package", "module": "apt", "index": 12, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install PyMongo package", "when": "not mongodb_pymongo_from_pip"}, "module_options": {"name": "{{ mongodb_pymongo_package }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PIP", "module": "apt", "index": 13, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"pkg": "{{ mongodb_pymongo_deps }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install setuptools (required for ansible 2.7+)", "module": "apt", "index": 14, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install setuptools (required for ansible 2.7+)", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"pkg": "{{ mongodb_python_setuptools }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PyMongo from PIP", "module": "pip", "index": 15, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/install.debian.yml", "options": {"name": "Install PyMongo from PIP", "when": "mongodb_pymongo_from_pip | bool"}, "module_options": {"name": ["pymongo"], "state": "{{ mongodb_pymongo_pip_version is defined | ternary('present', 'latest') }}", "version": "{{ mongodb_pymongo_pip_version | default(omit) }}", "executable": "{{ mongodb_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "replication.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "tasks": [{"py/object": "struct4.Task", "name": "Replication configuration", "module": "mongodb_replication", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "options": {"name": "Replication configuration", "when": "mongodb_security_authorization == 'enabled'", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "login_user": "{{ mongodb_root_admin_name }}", "login_password": "{{ mongodb_root_admin_password }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Replication configuration without auth on master", "module": "mongodb_replication", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "options": {"name": "Replication configuration without auth on master", "when": "( mongodb_security_authorization == 'disabled' and mongodb_master is defined and mongodb_master )", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Replication configuration without auth on replicas and arbiters", "module": "mongodb_replication", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml", "options": {"name": "Replication configuration without auth on replicas and arbiters", "when": "( mongodb_security_authorization == 'disabled' and ( mongodb_master is not defined or not mongodb_master) )", "with_items": ["{{ mongodb_replication_params|default([]) }}"]}, "module_options": {"build_indexes": "{{ item.build_indexes|default(omit) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "replica_set": "{{ mongodb_replication_replset }}", "host_name": "{{ item.host_name }}", "host_port": "{{ item.host_port|default(27017) }}", "host_type": "{{ item.host_type|default('replica') }}", "hidden": "{{ item.hidden|default(false) }}", "priority": "{{ item.priority|default(1.0) }}", "votes": "{{ item.votes|default(omit) }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_replication", "executable_type": "Module", "fqcn": "mongodb_replication", "annotations": {"use-non-builtin-module": true}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "auth_initialization.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "tasks": [{"py/object": "struct4.Task", "name": "Use different mongod.conf for auth initialization", "module": "template", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Use different mongod.conf for auth initialization", "notify": ["mongodb restart", "wait when mongodb is started on localhost"]}, "module_options": {"src": "mongod_init.conf.j2", "dest": "/etc/mongod.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flush all handlers at this point", "module": "meta", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Flush all handlers at this point"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "create administrative user \"{{ mongodb_user_admin_name }}\"", "module": "mongodb_user", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "create administrative user \"{{ mongodb_user_admin_name }}\"", "with_items": [{"name": "{{ mongodb_user_admin_name }}", "password": "{{ mongodb_user_admin_password }}", "roles": "userAdminAnyDatabase"}], "no_log": true}, "module_options": {"database": "admin", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_port": "{{ mongodb_net_port | int }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create administrative user \"{{ mongodb_root_admin_name }}\"", "module": "mongodb_user", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "create administrative user \"{{ mongodb_root_admin_name }}\"", "with_items": [{"name": "{{ mongodb_root_admin_name }}", "password": "{{ mongodb_root_admin_password }}", "roles": "root"}], "no_log": true}, "module_options": {"database": "admin", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_port": "{{ mongodb_net_port | int }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create backup user \"{{ mongodb_root_backup_name }}\"", "module": "mongodb_user", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "create backup user \"{{ mongodb_root_backup_name }}\"", "with_items": [{"name": "{{ mongodb_root_backup_name }}", "password": "{{ mongodb_root_backup_password }}", "roles": "backup,clusterMonitor"}], "no_log": true}, "module_options": {"database": "admin", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_port": "{{ mongodb_net_port | int }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Move back mongod.conf", "module": "template", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Move back mongod.conf", "notify": ["mongodb restart", "wait when mongodb is started"]}, "module_options": {"src": "mongod.conf.j2", "dest": "/etc/mongod.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flush all handlers at this point", "module": "meta", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/auth_initialization.yml", "options": {"name": "Flush all handlers at this point"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "disable_transparent_hugepages.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/disable_transparent_hugepages.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create disable transparent hugepages systemd service file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/disable_transparent_hugepages.yml", "options": {"name": "Create disable transparent hugepages systemd service file", "with_first_found": ["disable-transparent-hugepages.{{ ansible_distribution | lower }}.service.j2", "disable-transparent-hugepages.{{ ansible_os_family | lower }}.service.j2"], "notify": "run disable-transparent-hugepages", "when": ["ansible_service_mgr == \"systemd\"", "mongodb_disable_transparent_hugepages | bool"]}, "module_options": {"src": "{{ item }}", "dest": "/etc/systemd/system/disable-transparent-hugepages.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check value of variable mongodb_net_ssl_host", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Check value of variable mongodb_net_ssl_host", "when": "( mongodb_net_ssl_mode == 'requireSSL' and mongodb_net_ssl_host|length == 0 )"}, "module_options": {"msg": "Set mongodb_net_ssl_mode is preferSSL or set valid hostname for mongodb_net_ssl_host!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check value of variable mongodb_login_host", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Check value of variable mongodb_login_host", "when": "( mongodb_net_ssl_mode == 'requireSSL' and mongodb_net_ssl_host != mongodb_login_host and not mongodb_replication_replset )"}, "module_options": {"msg": "Set mongodb_login_host equal mongodb_net_ssl_host!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 2, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include OS-specific variables", "with_first_found": ["{{ ansible_distribution_release }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include installation tasks", "module": "include", "index": 3, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include installation tasks", "with_first_found": ["install.{{ ansible_distribution | lower }}.yml", "install.{{ ansible_os_family | lower }}.yml"], "tags": ["mongodb"]}, "module_options": "{{ item }}", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include configuration.yml", "module": "include", "index": 4, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include configuration.yml", "tags": ["mongodb"]}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include replication and auth configuration", "module": "include", "index": 5, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include replication and auth configuration", "when": "( mongodb_replication_replset | length > 0 and mongodb_security_authorization == 'enabled' and mongodb_master is defined and mongodb_master )", "tags": ["mongodb"]}, "module_options": "replication_init_auth.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include replication configuration", "module": "include", "index": 6, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include replication configuration", "when": "mongodb_replication_replset | length > 0", "tags": ["mongodb"]}, "module_options": "replication.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check whether admin user is already exist", "module": "command", "index": 7, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Check whether admin user is already exist", "register": "mongodb_user_admin_check", "changed_when": false, "check_mode": false, "ignore_errors": true, "when": "( mongodb_security_authorization == 'enabled' and not mongodb_replication_replset )", "no_log": true, "tags": ["mongodb"]}, "module_options": "mongo --quiet {{ '--ssl --host ' + mongodb_net_ssl_host if mongodb_net_ssl_mode == 'requireSSL' else '' }} -u {{ mongodb_user_admin_name }} \\\n      -p {{ mongodb_user_admin_password }} --port {{ mongodb_net_port }} --eval 'db.version()' admin\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include authorization configuration", "module": "include", "index": 8, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include authorization configuration", "when": "( mongodb_security_authorization == 'enabled' and not mongodb_replication_replset and mongodb_user_admin_check.rc != 0 )", "tags": ["mongodb"]}, "module_options": "auth_initialization.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "create normal users with replicaset", "module": "mongodb_user", "index": 9, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "create normal users with replicaset", "with_items": ["{{ mongodb_users | default([]) }}"], "when": "( mongodb_replication_replset and mongodb_security_authorization == 'enabled' and mongodb_master is defined and mongodb_master )", "no_log": true, "tags": ["mongodb"]}, "module_options": {"database": "{{ item.database }}", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_user": "{{ mongodb_user_admin_name }}", "login_password": "{{ mongodb_user_admin_password }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create normal users without replicaset", "module": "mongodb_user", "index": 10, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "create normal users without replicaset", "with_items": ["{{ mongodb_users | default([]) }}"], "when": "( mongodb_security_authorization == 'enabled' and not mongodb_replication_replset )", "no_log": true, "tags": ["mongodb"]}, "module_options": {"database": "{{ item.database }}", "name": "{{ item.name }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": "{{ item.roles }}", "login_user": "{{ mongodb_user_admin_name }}", "login_password": "{{ mongodb_user_admin_password }}", "login_port": "{{ mongodb_net_port | int }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create oplog user with replicaset", "module": "mongodb_user", "index": 11, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "create oplog user with replicaset", "with_items": ["{{ mongodb_oplog_users | default([]) }}"], "when": "( mongodb_replication_replset | length > 0 and mongodb_security_authorization == 'enabled' and mongodb_master is defined and mongodb_master )", "no_log": true, "tags": ["mongodb"]}, "module_options": {"database": "admin", "user": "{{ item.user }}", "password": "{{ item.password }}", "update_password": "{{ mongodb_user_update_password }}", "roles": [{"db": "local", "role": "read"}], "login_user": "{{ mongodb_user_admin_name }}", "login_password": "{{ mongodb_user_admin_password }}", "login_port": "{{ mongodb_login_port|default(27017) }}", "login_host": "{{ mongodb_login_host|default('localhost') }}", "ssl": "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"}, "executable": "mongodb_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "service started", "module": "service", "index": 12, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "service started"}, "module_options": {"name": "{{ mongodb_daemon_name }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include MMS Agent configuration", "module": "include", "index": 13, "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/main.yml", "options": {"name": "Include MMS Agent configuration", "when": "mongodb_mms_api_key | length > 0", "tags": ["mongodb"]}, "module_options": "mms-agent.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "UnderGreen.mongodb", "used_in": [], "annotations": {}}], "modules": [{"py/object": "struct4.Module", "name": "mongodb_replication", "fqcn": "mongodb_replication", "collection": "", "role": "UnderGreen.mongodb", "defined_in": "./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/library/mongodb_replication.py", "builtin": false, "used_in": ["{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml\", \"index\": 0}", "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml\", \"index\": 1}", "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication.yml\", \"index\": 2}", "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml\", \"index\": 0}", "{\"path\": \"./role-test/testdata/UnderGreen-mongodb/UnderGreen.mongodb/tasks/replication_init_auth.yml\", \"index\": 2}"], "annotations": {}}], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}}, "annotations": {}}