{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/lae-netbox", "installed_roles": [{"py/object": "struct4.Role", "name": "lae.netbox", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox", "fqcn": "lae.netbox", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "install_via_stable.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_stable.yml", "tasks": [{"py/object": "struct4.Task", "name": "Download and extract stable NetBox release", "module": "unarchive", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_stable.yml", "options": {"name": "Download and extract stable NetBox release"}, "module_options": {"src": "{{ netbox_stable_uri }}", "dest": "{{ netbox_releases_path }}", "creates": "{{ netbox_stable_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink stable release to current NetBox directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_stable.yml", "options": {"name": "Symlink stable release to current NetBox directory", "notify": ["reload netbox.service"]}, "module_options": {"src": "{{ netbox_stable_path }}", "dest": "{{ netbox_current_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_packages_dnf.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_dnf.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install required packages for selected NetBox configuration", "module": "dnf", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_dnf.yml", "options": {"name": "Install required packages for selected NetBox configuration", "vars": {"_netbox_dnf_packages": ["{{ 'epel-release' if netbox_install_epel else [] }}", "{{ netbox_python_packages }}", "{{ netbox_packages }}", "{{ netbox_ldap_packages if netbox_ldap_enabled else [] }}", "{{ 'git' if netbox_git else [] }}", "{{ 'acl' if ('SUDO_USER' in ansible_env and ansible_env.SUDO_USER != 'root') else [] }}"]}}, "module_options": {"name": "{{ _netbox_dnf_packages | flatten }}", "state": "present", "update_cache": true}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "deploy_netbox.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create NetBox application directories", "module": "file", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Create NetBox application directories", "loop": ["{{ netbox_releases_path }}", "{{ netbox_shared_path }}", "{{ _netbox_config.MEDIA_ROOT }}", "{{ _netbox_config.MEDIA_ROOT }}/image-attachments", "{{ _netbox_config.REPORTS_ROOT }}", "{{ _netbox_config.SCRIPTS_ROOT }}"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {}, "module_options": "install_via_{{ 'git' if netbox_git else 'stable' }}.yml", "executable": "install_via_{{ 'git' if netbox_git else 'stable' }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"when": ["_netbox_config.SECRET_KEY is not defined"]}, "module_options": "generate_secret_key.yml", "executable": "generate_secret_key.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Drop pip constraints file", "module": "template", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Drop pip constraints file"}, "module_options": {"src": "pip_constraints.j2", "dest": "{{ netbox_current_path }}/constraints.txt", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create NetBox virtualenv and install needed Python dependencies", "module": "pip", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Create NetBox virtualenv and install needed Python dependencies", "become": true, "become_user": "{{ netbox_user }}", "retries": 2, "register": "_netbox_virtualenv_setup", "until": "_netbox_virtualenv_setup is succeeded"}, "module_options": {"requirements": "{{ netbox_current_path }}/requirements.txt", "extra_args": "-c {{ netbox_current_path }}/constraints.txt", "virtualenv": "{{ netbox_virtualenv_path }}", "virtualenv_command": "{{ netbox_python_binary }} -m venv"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install selected optional Python dependencies", "module": "pip", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Install selected optional Python dependencies", "become": true, "become_user": "{{ netbox_user }}", "retries": 2, "register": "_netbox_pip_additional_install", "until": "_netbox_pip_additional_install is succeeded", "when": "(_netbox_python_deps | length) > 0", "loop": "{{ _netbox_python_deps }}", "notify": ["restart netbox.service"]}, "module_options": {"name": "{{ item }}", "state": "present", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate NetBox configuration file", "module": "template", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Generate NetBox configuration file", "notify": ["reload netbox.service"]}, "module_options": {"src": "templates/configuration.py.j2", "dest": "{{ netbox_shared_path }}/configuration.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "mode": 416, "validate": "{{ netbox_virtualenv_path }}/bin/python -c \"import py_compile,os; f=r'%s';c='/tmp/' + os.path.basename(os.path.dirname(f)) + '-' + os.path.basename(f) + 'c';py_compile.compile(f, c); os.remove(c)\""}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate LDAP configuration for NetBox if enabled", "module": "template", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Generate LDAP configuration for NetBox if enabled", "notify": ["reload netbox.service"], "when": ["netbox_ldap_enabled"]}, "module_options": {"src": "{{ netbox_ldap_config_template }}", "dest": "{{ netbox_shared_path }}/ldap_config.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "mode": 416, "validate": "{{ netbox_virtualenv_path }}/bin/python -c \"import py_compile,os; f=r'%s';c='/tmp/' + os.path.basename(os.path.dirname(f)) + '-' + os.path.basename(f) + 'c';py_compile.compile(f, c); os.remove(c)\""}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink NetBox configuration file into the active NetBox release", "module": "file", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Symlink NetBox configuration file into the active NetBox release"}, "module_options": {"src": "{{ netbox_shared_path }}/configuration.py", "dest": "{{ netbox_config_path }}/configuration.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink/Remove NetBox LDAP configuration file into/from the active NetBox release", "module": "file", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Symlink/Remove NetBox LDAP configuration file into/from the active NetBox release", "notify": ["reload netbox.service"]}, "module_options": {"src": "{{ netbox_shared_path + '/ldap_config.py' if netbox_ldap_enabled else omit }}", "dest": "{{ netbox_config_path }}/ldap_config.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "{{ 'link' if netbox_ldap_enabled else 'absent' }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy NetBox scripts into SCRIPTS_ROOT", "module": "copy", "index": 10, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Copy NetBox scripts into SCRIPTS_ROOT", "loop": "{{ netbox_scripts }}"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ _netbox_config.SCRIPTS_ROOT }}/{{ item.name }}.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy NetBox reports into REPORTS_ROOT", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Copy NetBox reports into REPORTS_ROOT", "loop": "{{ netbox_reports }}"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ _netbox_config.REPORTS_ROOT }}/{{ item.name }}.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run database migrations for NetBox", "module": "django_manage", "index": 12, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Run database migrations for NetBox"}, "module_options": {"command": "migrate", "app_path": "{{ netbox_current_path }}/netbox", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a super user for NetBox", "module": "shell", "index": 13, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Create a super user for NetBox", "register": "_netbox_superuser_result", "changed_when": "'changed' in _netbox_superuser_result.stdout", "when": ["not netbox_ldap_enabled"]}, "module_options": "printf '{{ netbox_superuser_script }}' |{{ netbox_virtualenv_path }}/bin/python {{ netbox_current_path }}/netbox/manage.py shell", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate static assets for NetBox", "module": "django_manage", "index": 14, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Generate static assets for NetBox"}, "module_options": {"command": "collectstatic", "app_path": "{{ netbox_current_path }}/netbox", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clear expired user sessions in NetBox", "module": "django_manage", "index": 15, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Clear expired user sessions in NetBox"}, "module_options": {"command": "clearsessions", "app_path": "{{ netbox_current_path }}/netbox", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "generate_secret_key.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "tasks": [{"py/object": "struct4.Task", "name": "Generate a SECRET_KEY for NetBox if unspecified", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "options": {"name": "Generate a SECRET_KEY for NetBox if unspecified", "args": {"creates": "{{ netbox_shared_path }}/generated_secret_key", "executable": "/bin/bash"}, "become": true, "become_user": "{{ netbox_user }}"}, "module_options": "set -o pipefail; {{ netbox_python_binary }} {{ netbox_current_path }}/netbox/generate_secret_key.py| tr -d $'\n' > {{ netbox_shared_path }}/generated_secret_key", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Load saved SECRET_KEY", "module": "slurp", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "options": {"name": "Load saved SECRET_KEY", "register": "_netbox_secret_key_file"}, "module_options": {"src": "{{ netbox_shared_path }}/generated_secret_key"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set netbox_config.SECRET_KEY to generated SECRET_KEY", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "options": {"name": "Set netbox_config.SECRET_KEY to generated SECRET_KEY"}, "module_options": {"_netbox_config": "{{ _netbox_config | combine({'SECRET_KEY': _netbox_secret_key_file['content'] | b64decode}) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_packages_yum.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install EPEL repository", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Install EPEL repository", "when": "netbox_install_epel"}, "module_options": {"name": "epel-release", "state": "installed"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install required packages for selected NetBox configuration", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Install required packages for selected NetBox configuration", "vars": {"_netbox_yum_packages": ["{{ netbox_python_packages }}", "{{ netbox_packages }}", "{{ netbox_ldap_packages if netbox_ldap_enabled else [] }}", "{{ 'git' if netbox_git else [] }}", "{{ 'acl' if ('SUDO_USER' in ansible_env and ansible_env.SUDO_USER != 'root') else [] }}"]}}, "module_options": {"name": "{{ _netbox_yum_packages | flatten }}", "state": "present", "update_cache": true}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure pip is available on Red Hat-based distros", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Ensure pip is available on Red Hat-based distros", "register": "_existence_of_pip", "changed_when": "'Successfully installed pip' in _existence_of_pip.stdout"}, "module_options": "{{ netbox_python_binary }} -m pip -V || {{ netbox_python_binary }} -m ensurepip", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install psycopg2/selinux via pip on Red Hat-based distros", "module": "pip", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Install psycopg2/selinux via pip on Red Hat-based distros", "vars": {"ansible_python_interpreter": "{{ netbox_python_binary }}"}, "environment": {"PATH": "/usr/local/bin:{{ _path }}"}}, "module_options": {"name": ["psycopg2-binary", "selinux"], "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_packages_apt.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_apt.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install required packages for selected NetBox configuration", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_apt.yml", "options": {"name": "Install required packages for selected NetBox configuration", "vars": {"_netbox_apt_packages": ["{{ netbox_python_packages }}", "{{ netbox_packages }}", "{{ netbox_ldap_packages if netbox_ldap_enabled else [] }}", "{{ 'git' if netbox_git else [] }}", "{{ 'acl' if ('SUDO_USER' in ansible_env and ansible_env.SUDO_USER != 'root') else [] }}"]}}, "module_options": {"name": "{{ _netbox_apt_packages | flatten }}", "state": "present", "cache_valid_time": 3600, "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "load_variables.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Gather OS specific variables", "with_first_found": ["{{ ansible_distribution|lower }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution|lower }}.yml", "{{ ansible_os_family|lower }}-{{ ansible_distribution_major_version }}.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define netbox_packages", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_packages", "when": "netbox_packages is not defined"}, "module_options": {"netbox_packages": "{{ _netbox_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define netbox_python_packages", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_python_packages", "when": "netbox_python_packages is not defined"}, "module_options": {"netbox_python_packages": "{{ _netbox_python_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define netbox_python_binary", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_python_binary", "when": "netbox_python_binary is not defined"}, "module_options": {"netbox_python_binary": "{{ _netbox_python_binary }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define netbox_ldap_packages", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_ldap_packages", "when": "netbox_ldap_packages is not defined"}, "module_options": {"netbox_ldap_packages": "{{ _netbox_ldap_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define _netbox_config", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define _netbox_config"}, "module_options": {"_netbox_config": "{{ netbox_config }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate list of optional Python dependencies", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Generate list of optional Python dependencies"}, "module_options": {"_netbox_python_deps": ["{{ netbox_napalm_packages if netbox_napalm_enabled else [] }}", "{{ 'django-auth-ldap' if netbox_ldap_enabled else [] }}", "{{ 'django-storages' if _netbox_storages_module is defined else [] }}", "{{ _netbox_storages_map[_netbox_storages_module] if _netbox_storages_module is defined else [] }}", "{{ netbox_pip_packages }}"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flatten that list of dependencies", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Flatten that list of dependencies"}, "module_options": {"_netbox_python_deps": "{{ _netbox_python_deps | flatten }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Identify current execution PATH", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Identify current execution PATH", "register": "_path_exec", "changed_when": false, "check_mode": false}, "module_options": "echo $PATH", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set a fact for current execution PATH", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Set a fact for current execution PATH", "check_mode": false}, "module_options": {"_path": "{{ _path_exec.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Capture the current Python interpreter", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Capture the current Python interpreter", "when": "ansible_python_interpreter is defined"}, "module_options": {"_netbox_global_python": "{{ ansible_python_interpreter }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "validate_variables.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "tasks": [{"py/object": "struct4.Task", "name": "A single NetBox installation scenario must be enabled", "module": "assert", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "A single NetBox installation scenario must be enabled"}, "module_options": {"that": ["netbox_stable or netbox_git", "not (netbox_stable and netbox_git)"], "msg": "Please choose either the stable or git scenario."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "A database host/password or socket must be specified", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "A database host/password or socket must be specified"}, "module_options": {"that": ["netbox_database_socket is defined or (netbox_database_host is defined and netbox_database_password is defined)", "not (netbox_database_socket is defined and netbox_database_host is defined)"], "msg": "Please define either a socket (local) or host/password (TCP)."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "A super user password for NetBox must be specified", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "A super user password for NetBox must be specified"}, "module_options": {"that": ["netbox_superuser_password is defined"], "msg": "Please set an admin password with netbox_superuser_password."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "The netbox_config variable should not configure PostgreSQL/Redis", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "The netbox_config variable should not configure PostgreSQL/Redis"}, "module_options": {"that": ["'DATABASE' not in netbox_config", "'REDIS' not in netbox_config"], "msg": "Please remove the DATABASE and/or REDIS keys in netbox_config and use their dedicated role variables instead."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "netbox_config must specify a list of ALLOWED_HOSTS", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "netbox_config must specify a list of ALLOWED_HOSTS"}, "module_options": {"that": ["'ALLOWED_HOSTS' in netbox_config", "netbox_config.ALLOWED_HOSTS is iterable"], "msg": "Please define ALLOWED_HOSTS in netbox_config."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "NAPALM credentials must be specified in netbox_config if NAPALM is enabled", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "NAPALM credentials must be specified in netbox_config if NAPALM is enabled", "when": "netbox_napalm_enabled | bool"}, "module_options": {"that": ["'NAPALM_USERNAME' in netbox_config", "'NAPALM_PASSWORD' in netbox_config"], "msg": "Please define NAPALM_USERNAME and NAPALM_PASSWORD in netbox_config to use NAPALM."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "NetBox user content directories must be specified", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "NetBox user content directories must be specified"}, "module_options": {"that": ["'MEDIA_ROOT' in netbox_config", "'REPORTS_ROOT' in netbox_config", "'SCRIPTS_ROOT' in netbox_config"], "msg": "Please ensure MEDIA_ROOT/REPORTS_ROOT/SCRIPTS_ROOT are defined in netbox_config."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Script/Report module names should follow PEP8", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "Script/Report module names should follow PEP8"}, "module_options": {"that": ["(netbox_scripts | map(attribute='name') | map('regex_search', '^[a-z][a-z0-9_]*$') | select('string') | list | length) == (netbox_scripts | length)", "(netbox_reports | map(attribute='name') | map('regex_search', '^[a-z][a-z0-9_]*$') | select('string') | list | length) == (netbox_reports | length)"], "msg": "Please ensure that your script/report module names start with a lowercase letter and contain only lowercase letters, numbers, and underscores."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Identify selected storage module", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "Identify selected storage module"}, "module_options": {"_netbox_storages_module": "{{ netbox_config.STORAGE_BACKEND | regex_search('(?<=storages\\.backends\\.).*(?=\\.)') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure storage module is a valid option", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "Ensure storage module is a valid option"}, "module_options": {"that": ["_netbox_storages_module in _netbox_storages_map"], "msg": "Please ensure your STORAGE_BACKEND is correct."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_via_git.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "tasks": [{"py/object": "struct4.Task", "name": "Clone specified NetBox git repository", "module": "git", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Clone specified NetBox git repository", "register": "_netbox_git_repo", "become": true, "become_user": "{{ netbox_user }}"}, "module_options": {"repo": "{{ netbox_git_uri }}", "dest": "{{ netbox_git_repo_path }}", "version": "{{ netbox_git_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create git deployment directory for NetBox", "module": "file", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Create git deployment directory for NetBox"}, "module_options": {"path": "{{ netbox_git_deploy_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of commit 1fb67b7, fixing issue netbox#2239", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Check existence of commit 1fb67b7, fixing issue netbox#2239", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "register": "_netbox_git_contains_issue_2239_fix", "changed_when": false, "failed_when": "_netbox_git_contains_issue_2239_fix.rc not in [0, 1]"}, "module_options": "set -o pipefail; git log --format=%H \"{{ netbox_git_version }}\" | grep ^1fb67b791f1a91c624dae4a1cd256e4cf3ddbb77", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of commit 3590ed3, renaming webhooks to tasks", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Check existence of commit 3590ed3, renaming webhooks to tasks", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "register": "_netbox_git_contains_tasks_rename", "changed_when": false, "failed_when": "_netbox_git_contains_tasks_rename.rc not in [0, 1]"}, "module_options": "set -o pipefail; git log --format=%H \"{{ netbox_git_version }}\" | grep ^3590ed378d161dd724fad2dc73ff56da746352f8", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of commit 90dbe9b, renaming DEFAULT_TIMEOUT to RQ_DEFAULT_TIMEOUT", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Check existence of commit 90dbe9b, renaming DEFAULT_TIMEOUT to RQ_DEFAULT_TIMEOUT", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "register": "_netbox_git_contains_rq_timeout", "changed_when": false, "failed_when": "_netbox_git_contains_rq_timeout.rc not in [0, 1]"}, "module_options": "set -o pipefail; git log --format=%H \"{{ netbox_git_version }}\" | grep ^90dbe9bf60ab3c72be10fd070c65c26dca543ca5", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Archive and extract snapshot of git repository", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Archive and extract snapshot of git repository", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "notify": ["reload netbox.service"], "when": ["_netbox_git_repo is changed"], "become": true, "become_user": "{{ netbox_user }}"}, "module_options": "set -o pipefail; git archive \"{{ netbox_git_version }}\" | tar -x -C \"{{ netbox_git_deploy_path }}\"", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink git repository to current NetBox directory", "module": "file", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Symlink git repository to current NetBox directory"}, "module_options": {"src": "{{ netbox_git_deploy_path }}", "dest": "{{ netbox_current_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "validate_variables.yml", "executable": "validate_variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "load_variables.yml", "executable": "load_variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "install_packages_{{ ansible_pkg_mgr }}.yml", "executable": "install_packages_{{ ansible_pkg_mgr }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Switch Ansible's Python interpreter to Python 3", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Switch Ansible's Python interpreter to Python 3"}, "module_options": {"ansible_python_interpreter": "{{ netbox_python_binary }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Recheck new Python interpreter's version", "module": "setup", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Recheck new Python interpreter's version"}, "module_options": {"gather_subset": "min", "filter": "ansible_python_version"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure the installed Python version is newer than 3.6.0 for NetBox 2.8+", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Ensure the installed Python version is newer than 3.6.0 for NetBox 2.8+", "when": ["netbox_stable and netbox_stable_version is version('2.8.0', '>=') or netbox_git"]}, "module_options": {"that": ["ansible_python_version is version('3.6.0', '>=')"], "msg": "NetBox 2.8.0+ requires Python 3.6+. Please either specify an older NetBox version, upgrade to a newer distribution that provides Python 3.6+, or set netbox_python_binary to an appropriate Python 3.6+ binary.\n"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create NetBox user group", "module": "group", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Create NetBox user group"}, "module_options": {"name": "{{ netbox_group }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create NetBox user and home directory", "module": "user", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Create NetBox user and home directory"}, "module_options": {"name": "{{ netbox_user }}", "group": "{{ netbox_group }}", "home": "{{ netbox_home }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Postgres database exists (via socket)", "module": "postgresql_db", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Ensure Postgres database exists (via socket)", "become": true, "become_user": "{{ netbox_database_user }}", "when": ["netbox_database_socket is defined", "netbox_database_host is not defined"]}, "module_options": {"name": "{{ netbox_database }}", "login_user": "{{ netbox_database_user }}", "login_unix_socket": "{{ netbox_database_socket }}"}, "executable": "postgresql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Postgres database exists (via TCP)", "module": "postgresql_db", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Ensure Postgres database exists (via TCP)", "when": ["netbox_database_socket is not defined", "netbox_database_host is defined"]}, "module_options": {"name": "{{ netbox_database }}", "login_host": "{{ netbox_database_host }}", "port": "{{ netbox_database_port }}", "login_user": "{{ netbox_database_user }}", "login_password": "{{ netbox_database_password }}"}, "executable": "postgresql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 10, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "deploy_netbox.yml", "executable": "deploy_netbox.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install uWSGI via pip", "module": "pip", "index": 11, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install uWSGI via pip", "environment": {"PATH": "/usr/local/bin:{{ _path }}"}, "notify": ["reload netbox.service"], "retries": 2, "register": "_netbox_uwsgi_install", "until": "_netbox_uwsgi_install is succeeded"}, "module_options": {"name": "uwsgi", "state": "{{ 'latest' if netbox_keep_uwsgi_updated else 'present' }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure uWSGI NetBox application", "module": "template", "index": 12, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Configure uWSGI NetBox application", "notify": ["reload netbox.service"]}, "module_options": {"src": "uwsgi.ini.j2", "dest": "{{ netbox_shared_path }}/uwsgi.ini", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install NetBox socket unit file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install NetBox socket unit file", "notify": ["restart netbox.socket"]}, "module_options": {"src": "netbox.socket.j2", "dest": "/lib/systemd/system/netbox.socket"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install NetBox service unit file", "module": "template", "index": 14, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install NetBox service unit file", "notify": ["restart netbox.service"]}, "module_options": {"src": "netbox.service.j2", "dest": "/lib/systemd/system/netbox.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install NetBox-rqworker service unit file", "module": "template", "index": 15, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install NetBox-rqworker service unit file", "notify": ["restart netbox-rqworker.service"]}, "module_options": {"src": "netbox-rqworker.service.j2", "dest": "/lib/systemd/system/netbox-rqworker.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start and enable NetBox' socket and service", "module": "systemd", "index": 16, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Start and enable NetBox' socket and service", "loop": ["netbox.socket", "netbox.service"]}, "module_options": {"name": "{{ item }}", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start and enable netbox-rqworker.service", "module": "systemd", "index": 17, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Start and enable netbox-rqworker.service"}, "module_options": {"name": "netbox-rqworker.service", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restore the previous Ansible Python interpreter", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Restore the previous Ansible Python interpreter"}, "module_options": {"ansible_python_interpreter": "{{ _netbox_global_python if _netbox_global_python is defined else 'auto_legacy' }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Recheck the previous Python interpreter's version", "module": "setup", "index": 19, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Recheck the previous Python interpreter's version"}, "module_options": {"gather_subset": "min", "filter": "ansible_python_version"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_stable.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Download and extract stable NetBox release", "module": "unarchive", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_stable.yml", "options": {"name": "Download and extract stable NetBox release"}, "module_options": {"src": "{{ netbox_stable_uri }}", "dest": "{{ netbox_releases_path }}", "creates": "{{ netbox_stable_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_stable.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Symlink stable release to current NetBox directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_stable.yml", "options": {"name": "Symlink stable release to current NetBox directory", "notify": ["reload netbox.service"]}, "module_options": {"src": "{{ netbox_stable_path }}", "dest": "{{ netbox_current_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_dnf.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install required packages for selected NetBox configuration", "module": "dnf", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_dnf.yml", "options": {"name": "Install required packages for selected NetBox configuration", "vars": {"_netbox_dnf_packages": ["{{ 'epel-release' if netbox_install_epel else [] }}", "{{ netbox_python_packages }}", "{{ netbox_packages }}", "{{ netbox_ldap_packages if netbox_ldap_enabled else [] }}", "{{ 'git' if netbox_git else [] }}", "{{ 'acl' if ('SUDO_USER' in ansible_env and ansible_env.SUDO_USER != 'root') else [] }}"]}}, "module_options": {"name": "{{ _netbox_dnf_packages | flatten }}", "state": "present", "update_cache": true}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create NetBox application directories", "module": "file", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Create NetBox application directories", "loop": ["{{ netbox_releases_path }}", "{{ netbox_shared_path }}", "{{ _netbox_config.MEDIA_ROOT }}", "{{ _netbox_config.MEDIA_ROOT }}/image-attachments", "{{ _netbox_config.REPORTS_ROOT }}", "{{ _netbox_config.SCRIPTS_ROOT }}"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {}, "module_options": "install_via_{{ 'git' if netbox_git else 'stable' }}.yml", "executable": "install_via_{{ 'git' if netbox_git else 'stable' }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"when": ["_netbox_config.SECRET_KEY is not defined"]}, "module_options": "generate_secret_key.yml", "executable": "generate_secret_key.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Drop pip constraints file", "module": "template", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Drop pip constraints file"}, "module_options": {"src": "pip_constraints.j2", "dest": "{{ netbox_current_path }}/constraints.txt", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create NetBox virtualenv and install needed Python dependencies", "module": "pip", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Create NetBox virtualenv and install needed Python dependencies", "become": true, "become_user": "{{ netbox_user }}", "retries": 2, "register": "_netbox_virtualenv_setup", "until": "_netbox_virtualenv_setup is succeeded"}, "module_options": {"requirements": "{{ netbox_current_path }}/requirements.txt", "extra_args": "-c {{ netbox_current_path }}/constraints.txt", "virtualenv": "{{ netbox_virtualenv_path }}", "virtualenv_command": "{{ netbox_python_binary }} -m venv"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install selected optional Python dependencies", "module": "pip", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Install selected optional Python dependencies", "become": true, "become_user": "{{ netbox_user }}", "retries": 2, "register": "_netbox_pip_additional_install", "until": "_netbox_pip_additional_install is succeeded", "when": "(_netbox_python_deps | length) > 0", "loop": "{{ _netbox_python_deps }}", "notify": ["restart netbox.service"]}, "module_options": {"name": "{{ item }}", "state": "present", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Generate NetBox configuration file", "module": "template", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Generate NetBox configuration file", "notify": ["reload netbox.service"]}, "module_options": {"src": "templates/configuration.py.j2", "dest": "{{ netbox_shared_path }}/configuration.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "mode": 416, "validate": "{{ netbox_virtualenv_path }}/bin/python -c \"import py_compile,os; f=r'%s';c='/tmp/' + os.path.basename(os.path.dirname(f)) + '-' + os.path.basename(f) + 'c';py_compile.compile(f, c); os.remove(c)\""}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Generate LDAP configuration for NetBox if enabled", "module": "template", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Generate LDAP configuration for NetBox if enabled", "notify": ["reload netbox.service"], "when": ["netbox_ldap_enabled"]}, "module_options": {"src": "{{ netbox_ldap_config_template }}", "dest": "{{ netbox_shared_path }}/ldap_config.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "mode": 416, "validate": "{{ netbox_virtualenv_path }}/bin/python -c \"import py_compile,os; f=r'%s';c='/tmp/' + os.path.basename(os.path.dirname(f)) + '-' + os.path.basename(f) + 'c';py_compile.compile(f, c); os.remove(c)\""}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Symlink NetBox configuration file into the active NetBox release", "module": "file", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Symlink NetBox configuration file into the active NetBox release"}, "module_options": {"src": "{{ netbox_shared_path }}/configuration.py", "dest": "{{ netbox_config_path }}/configuration.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Symlink/Remove NetBox LDAP configuration file into/from the active NetBox release", "module": "file", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Symlink/Remove NetBox LDAP configuration file into/from the active NetBox release", "notify": ["reload netbox.service"]}, "module_options": {"src": "{{ netbox_shared_path + '/ldap_config.py' if netbox_ldap_enabled else omit }}", "dest": "{{ netbox_config_path }}/ldap_config.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "{{ 'link' if netbox_ldap_enabled else 'absent' }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Copy NetBox scripts into SCRIPTS_ROOT", "module": "copy", "index": 10, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Copy NetBox scripts into SCRIPTS_ROOT", "loop": "{{ netbox_scripts }}"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ _netbox_config.SCRIPTS_ROOT }}/{{ item.name }}.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Copy NetBox reports into REPORTS_ROOT", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Copy NetBox reports into REPORTS_ROOT", "loop": "{{ netbox_reports }}"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ _netbox_config.REPORTS_ROOT }}/{{ item.name }}.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Run database migrations for NetBox", "module": "django_manage", "index": 12, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Run database migrations for NetBox"}, "module_options": {"command": "migrate", "app_path": "{{ netbox_current_path }}/netbox", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create a super user for NetBox", "module": "shell", "index": 13, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Create a super user for NetBox", "register": "_netbox_superuser_result", "changed_when": "'changed' in _netbox_superuser_result.stdout", "when": ["not netbox_ldap_enabled"]}, "module_options": "printf '{{ netbox_superuser_script }}' |{{ netbox_virtualenv_path }}/bin/python {{ netbox_current_path }}/netbox/manage.py shell", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Generate static assets for NetBox", "module": "django_manage", "index": 14, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Generate static assets for NetBox"}, "module_options": {"command": "collectstatic", "app_path": "{{ netbox_current_path }}/netbox", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Clear expired user sessions in NetBox", "module": "django_manage", "index": 15, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Clear expired user sessions in NetBox"}, "module_options": {"command": "clearsessions", "app_path": "{{ netbox_current_path }}/netbox", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Generate a SECRET_KEY for NetBox if unspecified", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "options": {"name": "Generate a SECRET_KEY for NetBox if unspecified", "args": {"creates": "{{ netbox_shared_path }}/generated_secret_key", "executable": "/bin/bash"}, "become": true, "become_user": "{{ netbox_user }}"}, "module_options": "set -o pipefail; {{ netbox_python_binary }} {{ netbox_current_path }}/netbox/generate_secret_key.py| tr -d $'\n' > {{ netbox_shared_path }}/generated_secret_key", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Load saved SECRET_KEY", "module": "slurp", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "options": {"name": "Load saved SECRET_KEY", "register": "_netbox_secret_key_file"}, "module_options": {"src": "{{ netbox_shared_path }}/generated_secret_key"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set netbox_config.SECRET_KEY to generated SECRET_KEY", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "options": {"name": "Set netbox_config.SECRET_KEY to generated SECRET_KEY"}, "module_options": {"_netbox_config": "{{ _netbox_config | combine({'SECRET_KEY': _netbox_secret_key_file['content'] | b64decode}) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install EPEL repository", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Install EPEL repository", "when": "netbox_install_epel"}, "module_options": {"name": "epel-release", "state": "installed"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install required packages for selected NetBox configuration", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Install required packages for selected NetBox configuration", "vars": {"_netbox_yum_packages": ["{{ netbox_python_packages }}", "{{ netbox_packages }}", "{{ netbox_ldap_packages if netbox_ldap_enabled else [] }}", "{{ 'git' if netbox_git else [] }}", "{{ 'acl' if ('SUDO_USER' in ansible_env and ansible_env.SUDO_USER != 'root') else [] }}"]}}, "module_options": {"name": "{{ _netbox_yum_packages | flatten }}", "state": "present", "update_cache": true}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure pip is available on Red Hat-based distros", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Ensure pip is available on Red Hat-based distros", "register": "_existence_of_pip", "changed_when": "'Successfully installed pip' in _existence_of_pip.stdout"}, "module_options": "{{ netbox_python_binary }} -m pip -V || {{ netbox_python_binary }} -m ensurepip", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install psycopg2/selinux via pip on Red Hat-based distros", "module": "pip", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Install psycopg2/selinux via pip on Red Hat-based distros", "vars": {"ansible_python_interpreter": "{{ netbox_python_binary }}"}, "environment": {"PATH": "/usr/local/bin:{{ _path }}"}}, "module_options": {"name": ["psycopg2-binary", "selinux"], "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_apt.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install required packages for selected NetBox configuration", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_apt.yml", "options": {"name": "Install required packages for selected NetBox configuration", "vars": {"_netbox_apt_packages": ["{{ netbox_python_packages }}", "{{ netbox_packages }}", "{{ netbox_ldap_packages if netbox_ldap_enabled else [] }}", "{{ 'git' if netbox_git else [] }}", "{{ 'acl' if ('SUDO_USER' in ansible_env and ansible_env.SUDO_USER != 'root') else [] }}"]}}, "module_options": {"name": "{{ _netbox_apt_packages | flatten }}", "state": "present", "cache_valid_time": 3600, "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Gather OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Gather OS specific variables", "with_first_found": ["{{ ansible_distribution|lower }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution|lower }}.yml", "{{ ansible_os_family|lower }}-{{ ansible_distribution_major_version }}.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Define netbox_packages", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_packages", "when": "netbox_packages is not defined"}, "module_options": {"netbox_packages": "{{ _netbox_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Define netbox_python_packages", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_python_packages", "when": "netbox_python_packages is not defined"}, "module_options": {"netbox_python_packages": "{{ _netbox_python_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Define netbox_python_binary", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_python_binary", "when": "netbox_python_binary is not defined"}, "module_options": {"netbox_python_binary": "{{ _netbox_python_binary }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Define netbox_ldap_packages", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_ldap_packages", "when": "netbox_ldap_packages is not defined"}, "module_options": {"netbox_ldap_packages": "{{ _netbox_ldap_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Define _netbox_config", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define _netbox_config"}, "module_options": {"_netbox_config": "{{ netbox_config }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Generate list of optional Python dependencies", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Generate list of optional Python dependencies"}, "module_options": {"_netbox_python_deps": ["{{ netbox_napalm_packages if netbox_napalm_enabled else [] }}", "{{ 'django-auth-ldap' if netbox_ldap_enabled else [] }}", "{{ 'django-storages' if _netbox_storages_module is defined else [] }}", "{{ _netbox_storages_map[_netbox_storages_module] if _netbox_storages_module is defined else [] }}", "{{ netbox_pip_packages }}"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Flatten that list of dependencies", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Flatten that list of dependencies"}, "module_options": {"_netbox_python_deps": "{{ _netbox_python_deps | flatten }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Identify current execution PATH", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Identify current execution PATH", "register": "_path_exec", "changed_when": false, "check_mode": false}, "module_options": "echo $PATH", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Set a fact for current execution PATH", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Set a fact for current execution PATH", "check_mode": false}, "module_options": {"_path": "{{ _path_exec.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Capture the current Python interpreter", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Capture the current Python interpreter", "when": "ansible_python_interpreter is defined"}, "module_options": {"_netbox_global_python": "{{ ansible_python_interpreter }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "A single NetBox installation scenario must be enabled", "module": "assert", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "A single NetBox installation scenario must be enabled"}, "module_options": {"that": ["netbox_stable or netbox_git", "not (netbox_stable and netbox_git)"], "msg": "Please choose either the stable or git scenario."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "A database host/password or socket must be specified", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "A database host/password or socket must be specified"}, "module_options": {"that": ["netbox_database_socket is defined or (netbox_database_host is defined and netbox_database_password is defined)", "not (netbox_database_socket is defined and netbox_database_host is defined)"], "msg": "Please define either a socket (local) or host/password (TCP)."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "A super user password for NetBox must be specified", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "A super user password for NetBox must be specified"}, "module_options": {"that": ["netbox_superuser_password is defined"], "msg": "Please set an admin password with netbox_superuser_password."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "The netbox_config variable should not configure PostgreSQL/Redis", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "The netbox_config variable should not configure PostgreSQL/Redis"}, "module_options": {"that": ["'DATABASE' not in netbox_config", "'REDIS' not in netbox_config"], "msg": "Please remove the DATABASE and/or REDIS keys in netbox_config and use their dedicated role variables instead."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "netbox_config must specify a list of ALLOWED_HOSTS", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "netbox_config must specify a list of ALLOWED_HOSTS"}, "module_options": {"that": ["'ALLOWED_HOSTS' in netbox_config", "netbox_config.ALLOWED_HOSTS is iterable"], "msg": "Please define ALLOWED_HOSTS in netbox_config."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "NAPALM credentials must be specified in netbox_config if NAPALM is enabled", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "NAPALM credentials must be specified in netbox_config if NAPALM is enabled", "when": "netbox_napalm_enabled | bool"}, "module_options": {"that": ["'NAPALM_USERNAME' in netbox_config", "'NAPALM_PASSWORD' in netbox_config"], "msg": "Please define NAPALM_USERNAME and NAPALM_PASSWORD in netbox_config to use NAPALM."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "NetBox user content directories must be specified", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "NetBox user content directories must be specified"}, "module_options": {"that": ["'MEDIA_ROOT' in netbox_config", "'REPORTS_ROOT' in netbox_config", "'SCRIPTS_ROOT' in netbox_config"], "msg": "Please ensure MEDIA_ROOT/REPORTS_ROOT/SCRIPTS_ROOT are defined in netbox_config."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Script/Report module names should follow PEP8", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "Script/Report module names should follow PEP8"}, "module_options": {"that": ["(netbox_scripts | map(attribute='name') | map('regex_search', '^[a-z][a-z0-9_]*$') | select('string') | list | length) == (netbox_scripts | length)", "(netbox_reports | map(attribute='name') | map('regex_search', '^[a-z][a-z0-9_]*$') | select('string') | list | length) == (netbox_reports | length)"], "msg": "Please ensure that your script/report module names start with a lowercase letter and contain only lowercase letters, numbers, and underscores."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Identify selected storage module", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "Identify selected storage module"}, "module_options": {"_netbox_storages_module": "{{ netbox_config.STORAGE_BACKEND | regex_search('(?<=storages\\.backends\\.).*(?=\\.)') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Ensure storage module is a valid option", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "Ensure storage module is a valid option"}, "module_options": {"that": ["_netbox_storages_module in _netbox_storages_map"], "msg": "Please ensure your STORAGE_BACKEND is correct."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Clone specified NetBox git repository", "module": "git", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Clone specified NetBox git repository", "register": "_netbox_git_repo", "become": true, "become_user": "{{ netbox_user }}"}, "module_options": {"repo": "{{ netbox_git_uri }}", "dest": "{{ netbox_git_repo_path }}", "version": "{{ netbox_git_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create git deployment directory for NetBox", "module": "file", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Create git deployment directory for NetBox"}, "module_options": {"path": "{{ netbox_git_deploy_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check existence of commit 1fb67b7, fixing issue netbox#2239", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Check existence of commit 1fb67b7, fixing issue netbox#2239", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "register": "_netbox_git_contains_issue_2239_fix", "changed_when": false, "failed_when": "_netbox_git_contains_issue_2239_fix.rc not in [0, 1]"}, "module_options": "set -o pipefail; git log --format=%H \"{{ netbox_git_version }}\" | grep ^1fb67b791f1a91c624dae4a1cd256e4cf3ddbb77", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Check existence of commit 3590ed3, renaming webhooks to tasks", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Check existence of commit 3590ed3, renaming webhooks to tasks", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "register": "_netbox_git_contains_tasks_rename", "changed_when": false, "failed_when": "_netbox_git_contains_tasks_rename.rc not in [0, 1]"}, "module_options": "set -o pipefail; git log --format=%H \"{{ netbox_git_version }}\" | grep ^3590ed378d161dd724fad2dc73ff56da746352f8", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Check existence of commit 90dbe9b, renaming DEFAULT_TIMEOUT to RQ_DEFAULT_TIMEOUT", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Check existence of commit 90dbe9b, renaming DEFAULT_TIMEOUT to RQ_DEFAULT_TIMEOUT", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "register": "_netbox_git_contains_rq_timeout", "changed_when": false, "failed_when": "_netbox_git_contains_rq_timeout.rc not in [0, 1]"}, "module_options": "set -o pipefail; git log --format=%H \"{{ netbox_git_version }}\" | grep ^90dbe9bf60ab3c72be10fd070c65c26dca543ca5", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Archive and extract snapshot of git repository", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Archive and extract snapshot of git repository", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "notify": ["reload netbox.service"], "when": ["_netbox_git_repo is changed"], "become": true, "become_user": "{{ netbox_user }}"}, "module_options": "set -o pipefail; git archive \"{{ netbox_git_version }}\" | tar -x -C \"{{ netbox_git_deploy_path }}\"", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Symlink git repository to current NetBox directory", "module": "file", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Symlink git repository to current NetBox directory"}, "module_options": {"src": "{{ netbox_git_deploy_path }}", "dest": "{{ netbox_current_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "validate_variables.yml", "executable": "validate_variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "load_variables.yml", "executable": "load_variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "install_packages_{{ ansible_pkg_mgr }}.yml", "executable": "install_packages_{{ ansible_pkg_mgr }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Switch Ansible's Python interpreter to Python 3", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Switch Ansible's Python interpreter to Python 3"}, "module_options": {"ansible_python_interpreter": "{{ netbox_python_binary }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Recheck new Python interpreter's version", "module": "setup", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Recheck new Python interpreter's version"}, "module_options": {"gather_subset": "min", "filter": "ansible_python_version"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Ensure the installed Python version is newer than 3.6.0 for NetBox 2.8+", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Ensure the installed Python version is newer than 3.6.0 for NetBox 2.8+", "when": ["netbox_stable and netbox_stable_version is version('2.8.0', '>=') or netbox_git"]}, "module_options": {"that": ["ansible_python_version is version('3.6.0', '>=')"], "msg": "NetBox 2.8.0+ requires Python 3.6+. Please either specify an older NetBox version, upgrade to a newer distribution that provides Python 3.6+, or set netbox_python_binary to an appropriate Python 3.6+ binary.\n"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create NetBox user group", "module": "group", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Create NetBox user group"}, "module_options": {"name": "{{ netbox_group }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create NetBox user and home directory", "module": "user", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Create NetBox user and home directory"}, "module_options": {"name": "{{ netbox_user }}", "group": "{{ netbox_group }}", "home": "{{ netbox_home }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Ensure Postgres database exists (via socket)", "module": "postgresql_db", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Ensure Postgres database exists (via socket)", "become": true, "become_user": "{{ netbox_database_user }}", "when": ["netbox_database_socket is defined", "netbox_database_host is not defined"]}, "module_options": {"name": "{{ netbox_database }}", "login_user": "{{ netbox_database_user }}", "login_unix_socket": "{{ netbox_database_socket }}"}, "executable": "postgresql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Ensure Postgres database exists (via TCP)", "module": "postgresql_db", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Ensure Postgres database exists (via TCP)", "when": ["netbox_database_socket is not defined", "netbox_database_host is defined"]}, "module_options": {"name": "{{ netbox_database }}", "login_host": "{{ netbox_database_host }}", "port": "{{ netbox_database_port }}", "login_user": "{{ netbox_database_user }}", "login_password": "{{ netbox_database_password }}"}, "executable": "postgresql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 10, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "deploy_netbox.yml", "executable": "deploy_netbox.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Install uWSGI via pip", "module": "pip", "index": 11, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install uWSGI via pip", "environment": {"PATH": "/usr/local/bin:{{ _path }}"}, "notify": ["reload netbox.service"], "retries": 2, "register": "_netbox_uwsgi_install", "until": "_netbox_uwsgi_install is succeeded"}, "module_options": {"name": "uwsgi", "state": "{{ 'latest' if netbox_keep_uwsgi_updated else 'present' }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Configure uWSGI NetBox application", "module": "template", "index": 12, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Configure uWSGI NetBox application", "notify": ["reload netbox.service"]}, "module_options": {"src": "uwsgi.ini.j2", "dest": "{{ netbox_shared_path }}/uwsgi.ini", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Install NetBox socket unit file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install NetBox socket unit file", "notify": ["restart netbox.socket"]}, "module_options": {"src": "netbox.socket.j2", "dest": "/lib/systemd/system/netbox.socket"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Install NetBox service unit file", "module": "template", "index": 14, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install NetBox service unit file", "notify": ["restart netbox.service"]}, "module_options": {"src": "netbox.service.j2", "dest": "/lib/systemd/system/netbox.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Install NetBox-rqworker service unit file", "module": "template", "index": 15, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install NetBox-rqworker service unit file", "notify": ["restart netbox-rqworker.service"]}, "module_options": {"src": "netbox-rqworker.service.j2", "dest": "/lib/systemd/system/netbox-rqworker.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Start and enable NetBox' socket and service", "module": "systemd", "index": 16, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Start and enable NetBox' socket and service", "loop": ["netbox.socket", "netbox.service"]}, "module_options": {"name": "{{ item }}", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Start and enable netbox-rqworker.service", "module": "systemd", "index": 17, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Start and enable netbox-rqworker.service"}, "module_options": {"name": "netbox-rqworker.service", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Restore the previous Ansible Python interpreter", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Restore the previous Ansible Python interpreter"}, "module_options": {"ansible_python_interpreter": "{{ _netbox_global_python if _netbox_global_python is defined else 'auto_legacy' }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Recheck the previous Python interpreter's version", "module": "setup", "index": 19, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Recheck the previous Python interpreter's version"}, "module_options": {"gather_subset": "min", "filter": "ansible_python_version"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_stable.yml": {"py/object": "struct4.TaskFile", "name": "install_via_stable.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_stable.yml", "tasks": [{"py/object": "struct4.Task", "name": "Download and extract stable NetBox release", "module": "unarchive", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_stable.yml", "options": {"name": "Download and extract stable NetBox release"}, "module_options": {"src": "{{ netbox_stable_uri }}", "dest": "{{ netbox_releases_path }}", "creates": "{{ netbox_stable_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink stable release to current NetBox directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_stable.yml", "options": {"name": "Symlink stable release to current NetBox directory", "notify": ["reload netbox.service"]}, "module_options": {"src": "{{ netbox_stable_path }}", "dest": "{{ netbox_current_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_dnf.yml": {"py/object": "struct4.TaskFile", "name": "install_packages_dnf.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_dnf.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install required packages for selected NetBox configuration", "module": "dnf", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_dnf.yml", "options": {"name": "Install required packages for selected NetBox configuration", "vars": {"_netbox_dnf_packages": ["{{ 'epel-release' if netbox_install_epel else [] }}", "{{ netbox_python_packages }}", "{{ netbox_packages }}", "{{ netbox_ldap_packages if netbox_ldap_enabled else [] }}", "{{ 'git' if netbox_git else [] }}", "{{ 'acl' if ('SUDO_USER' in ansible_env and ansible_env.SUDO_USER != 'root') else [] }}"]}}, "module_options": {"name": "{{ _netbox_dnf_packages | flatten }}", "state": "present", "update_cache": true}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml": {"py/object": "struct4.TaskFile", "name": "deploy_netbox.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create NetBox application directories", "module": "file", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Create NetBox application directories", "loop": ["{{ netbox_releases_path }}", "{{ netbox_shared_path }}", "{{ _netbox_config.MEDIA_ROOT }}", "{{ _netbox_config.MEDIA_ROOT }}/image-attachments", "{{ _netbox_config.REPORTS_ROOT }}", "{{ _netbox_config.SCRIPTS_ROOT }}"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {}, "module_options": "install_via_{{ 'git' if netbox_git else 'stable' }}.yml", "executable": "install_via_{{ 'git' if netbox_git else 'stable' }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"when": ["_netbox_config.SECRET_KEY is not defined"]}, "module_options": "generate_secret_key.yml", "executable": "generate_secret_key.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Drop pip constraints file", "module": "template", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Drop pip constraints file"}, "module_options": {"src": "pip_constraints.j2", "dest": "{{ netbox_current_path }}/constraints.txt", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create NetBox virtualenv and install needed Python dependencies", "module": "pip", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Create NetBox virtualenv and install needed Python dependencies", "become": true, "become_user": "{{ netbox_user }}", "retries": 2, "register": "_netbox_virtualenv_setup", "until": "_netbox_virtualenv_setup is succeeded"}, "module_options": {"requirements": "{{ netbox_current_path }}/requirements.txt", "extra_args": "-c {{ netbox_current_path }}/constraints.txt", "virtualenv": "{{ netbox_virtualenv_path }}", "virtualenv_command": "{{ netbox_python_binary }} -m venv"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install selected optional Python dependencies", "module": "pip", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Install selected optional Python dependencies", "become": true, "become_user": "{{ netbox_user }}", "retries": 2, "register": "_netbox_pip_additional_install", "until": "_netbox_pip_additional_install is succeeded", "when": "(_netbox_python_deps | length) > 0", "loop": "{{ _netbox_python_deps }}", "notify": ["restart netbox.service"]}, "module_options": {"name": "{{ item }}", "state": "present", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate NetBox configuration file", "module": "template", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Generate NetBox configuration file", "notify": ["reload netbox.service"]}, "module_options": {"src": "templates/configuration.py.j2", "dest": "{{ netbox_shared_path }}/configuration.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "mode": 416, "validate": "{{ netbox_virtualenv_path }}/bin/python -c \"import py_compile,os; f=r'%s';c='/tmp/' + os.path.basename(os.path.dirname(f)) + '-' + os.path.basename(f) + 'c';py_compile.compile(f, c); os.remove(c)\""}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate LDAP configuration for NetBox if enabled", "module": "template", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Generate LDAP configuration for NetBox if enabled", "notify": ["reload netbox.service"], "when": ["netbox_ldap_enabled"]}, "module_options": {"src": "{{ netbox_ldap_config_template }}", "dest": "{{ netbox_shared_path }}/ldap_config.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "mode": 416, "validate": "{{ netbox_virtualenv_path }}/bin/python -c \"import py_compile,os; f=r'%s';c='/tmp/' + os.path.basename(os.path.dirname(f)) + '-' + os.path.basename(f) + 'c';py_compile.compile(f, c); os.remove(c)\""}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink NetBox configuration file into the active NetBox release", "module": "file", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Symlink NetBox configuration file into the active NetBox release"}, "module_options": {"src": "{{ netbox_shared_path }}/configuration.py", "dest": "{{ netbox_config_path }}/configuration.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink/Remove NetBox LDAP configuration file into/from the active NetBox release", "module": "file", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Symlink/Remove NetBox LDAP configuration file into/from the active NetBox release", "notify": ["reload netbox.service"]}, "module_options": {"src": "{{ netbox_shared_path + '/ldap_config.py' if netbox_ldap_enabled else omit }}", "dest": "{{ netbox_config_path }}/ldap_config.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "{{ 'link' if netbox_ldap_enabled else 'absent' }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy NetBox scripts into SCRIPTS_ROOT", "module": "copy", "index": 10, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Copy NetBox scripts into SCRIPTS_ROOT", "loop": "{{ netbox_scripts }}"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ _netbox_config.SCRIPTS_ROOT }}/{{ item.name }}.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy NetBox reports into REPORTS_ROOT", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Copy NetBox reports into REPORTS_ROOT", "loop": "{{ netbox_reports }}"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ _netbox_config.REPORTS_ROOT }}/{{ item.name }}.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run database migrations for NetBox", "module": "django_manage", "index": 12, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Run database migrations for NetBox"}, "module_options": {"command": "migrate", "app_path": "{{ netbox_current_path }}/netbox", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a super user for NetBox", "module": "shell", "index": 13, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Create a super user for NetBox", "register": "_netbox_superuser_result", "changed_when": "'changed' in _netbox_superuser_result.stdout", "when": ["not netbox_ldap_enabled"]}, "module_options": "printf '{{ netbox_superuser_script }}' |{{ netbox_virtualenv_path }}/bin/python {{ netbox_current_path }}/netbox/manage.py shell", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate static assets for NetBox", "module": "django_manage", "index": 14, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Generate static assets for NetBox"}, "module_options": {"command": "collectstatic", "app_path": "{{ netbox_current_path }}/netbox", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clear expired user sessions in NetBox", "module": "django_manage", "index": 15, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Clear expired user sessions in NetBox"}, "module_options": {"command": "clearsessions", "app_path": "{{ netbox_current_path }}/netbox", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml": {"py/object": "struct4.TaskFile", "name": "generate_secret_key.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "tasks": [{"py/object": "struct4.Task", "name": "Generate a SECRET_KEY for NetBox if unspecified", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "options": {"name": "Generate a SECRET_KEY for NetBox if unspecified", "args": {"creates": "{{ netbox_shared_path }}/generated_secret_key", "executable": "/bin/bash"}, "become": true, "become_user": "{{ netbox_user }}"}, "module_options": "set -o pipefail; {{ netbox_python_binary }} {{ netbox_current_path }}/netbox/generate_secret_key.py| tr -d $'\n' > {{ netbox_shared_path }}/generated_secret_key", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Load saved SECRET_KEY", "module": "slurp", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "options": {"name": "Load saved SECRET_KEY", "register": "_netbox_secret_key_file"}, "module_options": {"src": "{{ netbox_shared_path }}/generated_secret_key"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set netbox_config.SECRET_KEY to generated SECRET_KEY", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "options": {"name": "Set netbox_config.SECRET_KEY to generated SECRET_KEY"}, "module_options": {"_netbox_config": "{{ _netbox_config | combine({'SECRET_KEY': _netbox_secret_key_file['content'] | b64decode}) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml": {"py/object": "struct4.TaskFile", "name": "install_packages_yum.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install EPEL repository", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Install EPEL repository", "when": "netbox_install_epel"}, "module_options": {"name": "epel-release", "state": "installed"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install required packages for selected NetBox configuration", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Install required packages for selected NetBox configuration", "vars": {"_netbox_yum_packages": ["{{ netbox_python_packages }}", "{{ netbox_packages }}", "{{ netbox_ldap_packages if netbox_ldap_enabled else [] }}", "{{ 'git' if netbox_git else [] }}", "{{ 'acl' if ('SUDO_USER' in ansible_env and ansible_env.SUDO_USER != 'root') else [] }}"]}}, "module_options": {"name": "{{ _netbox_yum_packages | flatten }}", "state": "present", "update_cache": true}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure pip is available on Red Hat-based distros", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Ensure pip is available on Red Hat-based distros", "register": "_existence_of_pip", "changed_when": "'Successfully installed pip' in _existence_of_pip.stdout"}, "module_options": "{{ netbox_python_binary }} -m pip -V || {{ netbox_python_binary }} -m ensurepip", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install psycopg2/selinux via pip on Red Hat-based distros", "module": "pip", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Install psycopg2/selinux via pip on Red Hat-based distros", "vars": {"ansible_python_interpreter": "{{ netbox_python_binary }}"}, "environment": {"PATH": "/usr/local/bin:{{ _path }}"}}, "module_options": {"name": ["psycopg2-binary", "selinux"], "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_apt.yml": {"py/object": "struct4.TaskFile", "name": "install_packages_apt.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_apt.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install required packages for selected NetBox configuration", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_apt.yml", "options": {"name": "Install required packages for selected NetBox configuration", "vars": {"_netbox_apt_packages": ["{{ netbox_python_packages }}", "{{ netbox_packages }}", "{{ netbox_ldap_packages if netbox_ldap_enabled else [] }}", "{{ 'git' if netbox_git else [] }}", "{{ 'acl' if ('SUDO_USER' in ansible_env and ansible_env.SUDO_USER != 'root') else [] }}"]}}, "module_options": {"name": "{{ _netbox_apt_packages | flatten }}", "state": "present", "cache_valid_time": 3600, "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml": {"py/object": "struct4.TaskFile", "name": "load_variables.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Gather OS specific variables", "with_first_found": ["{{ ansible_distribution|lower }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution|lower }}.yml", "{{ ansible_os_family|lower }}-{{ ansible_distribution_major_version }}.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define netbox_packages", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_packages", "when": "netbox_packages is not defined"}, "module_options": {"netbox_packages": "{{ _netbox_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define netbox_python_packages", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_python_packages", "when": "netbox_python_packages is not defined"}, "module_options": {"netbox_python_packages": "{{ _netbox_python_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define netbox_python_binary", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_python_binary", "when": "netbox_python_binary is not defined"}, "module_options": {"netbox_python_binary": "{{ _netbox_python_binary }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define netbox_ldap_packages", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_ldap_packages", "when": "netbox_ldap_packages is not defined"}, "module_options": {"netbox_ldap_packages": "{{ _netbox_ldap_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define _netbox_config", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define _netbox_config"}, "module_options": {"_netbox_config": "{{ netbox_config }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate list of optional Python dependencies", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Generate list of optional Python dependencies"}, "module_options": {"_netbox_python_deps": ["{{ netbox_napalm_packages if netbox_napalm_enabled else [] }}", "{{ 'django-auth-ldap' if netbox_ldap_enabled else [] }}", "{{ 'django-storages' if _netbox_storages_module is defined else [] }}", "{{ _netbox_storages_map[_netbox_storages_module] if _netbox_storages_module is defined else [] }}", "{{ netbox_pip_packages }}"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flatten that list of dependencies", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Flatten that list of dependencies"}, "module_options": {"_netbox_python_deps": "{{ _netbox_python_deps | flatten }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Identify current execution PATH", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Identify current execution PATH", "register": "_path_exec", "changed_when": false, "check_mode": false}, "module_options": "echo $PATH", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set a fact for current execution PATH", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Set a fact for current execution PATH", "check_mode": false}, "module_options": {"_path": "{{ _path_exec.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Capture the current Python interpreter", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Capture the current Python interpreter", "when": "ansible_python_interpreter is defined"}, "module_options": {"_netbox_global_python": "{{ ansible_python_interpreter }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml": {"py/object": "struct4.TaskFile", "name": "validate_variables.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "tasks": [{"py/object": "struct4.Task", "name": "A single NetBox installation scenario must be enabled", "module": "assert", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "A single NetBox installation scenario must be enabled"}, "module_options": {"that": ["netbox_stable or netbox_git", "not (netbox_stable and netbox_git)"], "msg": "Please choose either the stable or git scenario."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "A database host/password or socket must be specified", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "A database host/password or socket must be specified"}, "module_options": {"that": ["netbox_database_socket is defined or (netbox_database_host is defined and netbox_database_password is defined)", "not (netbox_database_socket is defined and netbox_database_host is defined)"], "msg": "Please define either a socket (local) or host/password (TCP)."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "A super user password for NetBox must be specified", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "A super user password for NetBox must be specified"}, "module_options": {"that": ["netbox_superuser_password is defined"], "msg": "Please set an admin password with netbox_superuser_password."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "The netbox_config variable should not configure PostgreSQL/Redis", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "The netbox_config variable should not configure PostgreSQL/Redis"}, "module_options": {"that": ["'DATABASE' not in netbox_config", "'REDIS' not in netbox_config"], "msg": "Please remove the DATABASE and/or REDIS keys in netbox_config and use their dedicated role variables instead."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "netbox_config must specify a list of ALLOWED_HOSTS", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "netbox_config must specify a list of ALLOWED_HOSTS"}, "module_options": {"that": ["'ALLOWED_HOSTS' in netbox_config", "netbox_config.ALLOWED_HOSTS is iterable"], "msg": "Please define ALLOWED_HOSTS in netbox_config."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "NAPALM credentials must be specified in netbox_config if NAPALM is enabled", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "NAPALM credentials must be specified in netbox_config if NAPALM is enabled", "when": "netbox_napalm_enabled | bool"}, "module_options": {"that": ["'NAPALM_USERNAME' in netbox_config", "'NAPALM_PASSWORD' in netbox_config"], "msg": "Please define NAPALM_USERNAME and NAPALM_PASSWORD in netbox_config to use NAPALM."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "NetBox user content directories must be specified", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "NetBox user content directories must be specified"}, "module_options": {"that": ["'MEDIA_ROOT' in netbox_config", "'REPORTS_ROOT' in netbox_config", "'SCRIPTS_ROOT' in netbox_config"], "msg": "Please ensure MEDIA_ROOT/REPORTS_ROOT/SCRIPTS_ROOT are defined in netbox_config."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Script/Report module names should follow PEP8", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "Script/Report module names should follow PEP8"}, "module_options": {"that": ["(netbox_scripts | map(attribute='name') | map('regex_search', '^[a-z][a-z0-9_]*$') | select('string') | list | length) == (netbox_scripts | length)", "(netbox_reports | map(attribute='name') | map('regex_search', '^[a-z][a-z0-9_]*$') | select('string') | list | length) == (netbox_reports | length)"], "msg": "Please ensure that your script/report module names start with a lowercase letter and contain only lowercase letters, numbers, and underscores."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Identify selected storage module", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "Identify selected storage module"}, "module_options": {"_netbox_storages_module": "{{ netbox_config.STORAGE_BACKEND | regex_search('(?<=storages\\.backends\\.).*(?=\\.)') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure storage module is a valid option", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "Ensure storage module is a valid option"}, "module_options": {"that": ["_netbox_storages_module in _netbox_storages_map"], "msg": "Please ensure your STORAGE_BACKEND is correct."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml": {"py/object": "struct4.TaskFile", "name": "install_via_git.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "tasks": [{"py/object": "struct4.Task", "name": "Clone specified NetBox git repository", "module": "git", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Clone specified NetBox git repository", "register": "_netbox_git_repo", "become": true, "become_user": "{{ netbox_user }}"}, "module_options": {"repo": "{{ netbox_git_uri }}", "dest": "{{ netbox_git_repo_path }}", "version": "{{ netbox_git_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create git deployment directory for NetBox", "module": "file", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Create git deployment directory for NetBox"}, "module_options": {"path": "{{ netbox_git_deploy_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of commit 1fb67b7, fixing issue netbox#2239", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Check existence of commit 1fb67b7, fixing issue netbox#2239", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "register": "_netbox_git_contains_issue_2239_fix", "changed_when": false, "failed_when": "_netbox_git_contains_issue_2239_fix.rc not in [0, 1]"}, "module_options": "set -o pipefail; git log --format=%H \"{{ netbox_git_version }}\" | grep ^1fb67b791f1a91c624dae4a1cd256e4cf3ddbb77", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of commit 3590ed3, renaming webhooks to tasks", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Check existence of commit 3590ed3, renaming webhooks to tasks", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "register": "_netbox_git_contains_tasks_rename", "changed_when": false, "failed_when": "_netbox_git_contains_tasks_rename.rc not in [0, 1]"}, "module_options": "set -o pipefail; git log --format=%H \"{{ netbox_git_version }}\" | grep ^3590ed378d161dd724fad2dc73ff56da746352f8", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of commit 90dbe9b, renaming DEFAULT_TIMEOUT to RQ_DEFAULT_TIMEOUT", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Check existence of commit 90dbe9b, renaming DEFAULT_TIMEOUT to RQ_DEFAULT_TIMEOUT", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "register": "_netbox_git_contains_rq_timeout", "changed_when": false, "failed_when": "_netbox_git_contains_rq_timeout.rc not in [0, 1]"}, "module_options": "set -o pipefail; git log --format=%H \"{{ netbox_git_version }}\" | grep ^90dbe9bf60ab3c72be10fd070c65c26dca543ca5", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Archive and extract snapshot of git repository", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Archive and extract snapshot of git repository", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "notify": ["reload netbox.service"], "when": ["_netbox_git_repo is changed"], "become": true, "become_user": "{{ netbox_user }}"}, "module_options": "set -o pipefail; git archive \"{{ netbox_git_version }}\" | tar -x -C \"{{ netbox_git_deploy_path }}\"", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink git repository to current NetBox directory", "module": "file", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Symlink git repository to current NetBox directory"}, "module_options": {"src": "{{ netbox_git_deploy_path }}", "dest": "{{ netbox_current_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "validate_variables.yml", "executable": "validate_variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "load_variables.yml", "executable": "load_variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "install_packages_{{ ansible_pkg_mgr }}.yml", "executable": "install_packages_{{ ansible_pkg_mgr }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Switch Ansible's Python interpreter to Python 3", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Switch Ansible's Python interpreter to Python 3"}, "module_options": {"ansible_python_interpreter": "{{ netbox_python_binary }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Recheck new Python interpreter's version", "module": "setup", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Recheck new Python interpreter's version"}, "module_options": {"gather_subset": "min", "filter": "ansible_python_version"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure the installed Python version is newer than 3.6.0 for NetBox 2.8+", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Ensure the installed Python version is newer than 3.6.0 for NetBox 2.8+", "when": ["netbox_stable and netbox_stable_version is version('2.8.0', '>=') or netbox_git"]}, "module_options": {"that": ["ansible_python_version is version('3.6.0', '>=')"], "msg": "NetBox 2.8.0+ requires Python 3.6+. Please either specify an older NetBox version, upgrade to a newer distribution that provides Python 3.6+, or set netbox_python_binary to an appropriate Python 3.6+ binary.\n"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create NetBox user group", "module": "group", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Create NetBox user group"}, "module_options": {"name": "{{ netbox_group }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create NetBox user and home directory", "module": "user", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Create NetBox user and home directory"}, "module_options": {"name": "{{ netbox_user }}", "group": "{{ netbox_group }}", "home": "{{ netbox_home }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Postgres database exists (via socket)", "module": "postgresql_db", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Ensure Postgres database exists (via socket)", "become": true, "become_user": "{{ netbox_database_user }}", "when": ["netbox_database_socket is defined", "netbox_database_host is not defined"]}, "module_options": {"name": "{{ netbox_database }}", "login_user": "{{ netbox_database_user }}", "login_unix_socket": "{{ netbox_database_socket }}"}, "executable": "postgresql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Postgres database exists (via TCP)", "module": "postgresql_db", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Ensure Postgres database exists (via TCP)", "when": ["netbox_database_socket is not defined", "netbox_database_host is defined"]}, "module_options": {"name": "{{ netbox_database }}", "login_host": "{{ netbox_database_host }}", "port": "{{ netbox_database_port }}", "login_user": "{{ netbox_database_user }}", "login_password": "{{ netbox_database_password }}"}, "executable": "postgresql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 10, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "deploy_netbox.yml", "executable": "deploy_netbox.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install uWSGI via pip", "module": "pip", "index": 11, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install uWSGI via pip", "environment": {"PATH": "/usr/local/bin:{{ _path }}"}, "notify": ["reload netbox.service"], "retries": 2, "register": "_netbox_uwsgi_install", "until": "_netbox_uwsgi_install is succeeded"}, "module_options": {"name": "uwsgi", "state": "{{ 'latest' if netbox_keep_uwsgi_updated else 'present' }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure uWSGI NetBox application", "module": "template", "index": 12, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Configure uWSGI NetBox application", "notify": ["reload netbox.service"]}, "module_options": {"src": "uwsgi.ini.j2", "dest": "{{ netbox_shared_path }}/uwsgi.ini", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install NetBox socket unit file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install NetBox socket unit file", "notify": ["restart netbox.socket"]}, "module_options": {"src": "netbox.socket.j2", "dest": "/lib/systemd/system/netbox.socket"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install NetBox service unit file", "module": "template", "index": 14, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install NetBox service unit file", "notify": ["restart netbox.service"]}, "module_options": {"src": "netbox.service.j2", "dest": "/lib/systemd/system/netbox.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install NetBox-rqworker service unit file", "module": "template", "index": 15, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install NetBox-rqworker service unit file", "notify": ["restart netbox-rqworker.service"]}, "module_options": {"src": "netbox-rqworker.service.j2", "dest": "/lib/systemd/system/netbox-rqworker.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start and enable NetBox' socket and service", "module": "systemd", "index": 16, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Start and enable NetBox' socket and service", "loop": ["netbox.socket", "netbox.service"]}, "module_options": {"name": "{{ item }}", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start and enable netbox-rqworker.service", "module": "systemd", "index": 17, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Start and enable netbox-rqworker.service"}, "module_options": {"name": "netbox-rqworker.service", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restore the previous Ansible Python interpreter", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Restore the previous Ansible Python interpreter"}, "module_options": {"ansible_python_interpreter": "{{ _netbox_global_python if _netbox_global_python is defined else 'auto_legacy' }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Recheck the previous Python interpreter's version", "module": "setup", "index": 19, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Recheck the previous Python interpreter's version"}, "module_options": {"gather_subset": "min", "filter": "ansible_python_version"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}}, "role_dict": {"lae.netbox": {"py/object": "struct4.Role", "name": "lae.netbox", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox", "fqcn": "lae.netbox", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "install_via_stable.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_stable.yml", "tasks": [{"py/object": "struct4.Task", "name": "Download and extract stable NetBox release", "module": "unarchive", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_stable.yml", "options": {"name": "Download and extract stable NetBox release"}, "module_options": {"src": "{{ netbox_stable_uri }}", "dest": "{{ netbox_releases_path }}", "creates": "{{ netbox_stable_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink stable release to current NetBox directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_stable.yml", "options": {"name": "Symlink stable release to current NetBox directory", "notify": ["reload netbox.service"]}, "module_options": {"src": "{{ netbox_stable_path }}", "dest": "{{ netbox_current_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_packages_dnf.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_dnf.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install required packages for selected NetBox configuration", "module": "dnf", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_dnf.yml", "options": {"name": "Install required packages for selected NetBox configuration", "vars": {"_netbox_dnf_packages": ["{{ 'epel-release' if netbox_install_epel else [] }}", "{{ netbox_python_packages }}", "{{ netbox_packages }}", "{{ netbox_ldap_packages if netbox_ldap_enabled else [] }}", "{{ 'git' if netbox_git else [] }}", "{{ 'acl' if ('SUDO_USER' in ansible_env and ansible_env.SUDO_USER != 'root') else [] }}"]}}, "module_options": {"name": "{{ _netbox_dnf_packages | flatten }}", "state": "present", "update_cache": true}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "deploy_netbox.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create NetBox application directories", "module": "file", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Create NetBox application directories", "loop": ["{{ netbox_releases_path }}", "{{ netbox_shared_path }}", "{{ _netbox_config.MEDIA_ROOT }}", "{{ _netbox_config.MEDIA_ROOT }}/image-attachments", "{{ _netbox_config.REPORTS_ROOT }}", "{{ _netbox_config.SCRIPTS_ROOT }}"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {}, "module_options": "install_via_{{ 'git' if netbox_git else 'stable' }}.yml", "executable": "install_via_{{ 'git' if netbox_git else 'stable' }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"when": ["_netbox_config.SECRET_KEY is not defined"]}, "module_options": "generate_secret_key.yml", "executable": "generate_secret_key.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Drop pip constraints file", "module": "template", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Drop pip constraints file"}, "module_options": {"src": "pip_constraints.j2", "dest": "{{ netbox_current_path }}/constraints.txt", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create NetBox virtualenv and install needed Python dependencies", "module": "pip", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Create NetBox virtualenv and install needed Python dependencies", "become": true, "become_user": "{{ netbox_user }}", "retries": 2, "register": "_netbox_virtualenv_setup", "until": "_netbox_virtualenv_setup is succeeded"}, "module_options": {"requirements": "{{ netbox_current_path }}/requirements.txt", "extra_args": "-c {{ netbox_current_path }}/constraints.txt", "virtualenv": "{{ netbox_virtualenv_path }}", "virtualenv_command": "{{ netbox_python_binary }} -m venv"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install selected optional Python dependencies", "module": "pip", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Install selected optional Python dependencies", "become": true, "become_user": "{{ netbox_user }}", "retries": 2, "register": "_netbox_pip_additional_install", "until": "_netbox_pip_additional_install is succeeded", "when": "(_netbox_python_deps | length) > 0", "loop": "{{ _netbox_python_deps }}", "notify": ["restart netbox.service"]}, "module_options": {"name": "{{ item }}", "state": "present", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate NetBox configuration file", "module": "template", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Generate NetBox configuration file", "notify": ["reload netbox.service"]}, "module_options": {"src": "templates/configuration.py.j2", "dest": "{{ netbox_shared_path }}/configuration.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "mode": 416, "validate": "{{ netbox_virtualenv_path }}/bin/python -c \"import py_compile,os; f=r'%s';c='/tmp/' + os.path.basename(os.path.dirname(f)) + '-' + os.path.basename(f) + 'c';py_compile.compile(f, c); os.remove(c)\""}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate LDAP configuration for NetBox if enabled", "module": "template", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Generate LDAP configuration for NetBox if enabled", "notify": ["reload netbox.service"], "when": ["netbox_ldap_enabled"]}, "module_options": {"src": "{{ netbox_ldap_config_template }}", "dest": "{{ netbox_shared_path }}/ldap_config.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "mode": 416, "validate": "{{ netbox_virtualenv_path }}/bin/python -c \"import py_compile,os; f=r'%s';c='/tmp/' + os.path.basename(os.path.dirname(f)) + '-' + os.path.basename(f) + 'c';py_compile.compile(f, c); os.remove(c)\""}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink NetBox configuration file into the active NetBox release", "module": "file", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Symlink NetBox configuration file into the active NetBox release"}, "module_options": {"src": "{{ netbox_shared_path }}/configuration.py", "dest": "{{ netbox_config_path }}/configuration.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink/Remove NetBox LDAP configuration file into/from the active NetBox release", "module": "file", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Symlink/Remove NetBox LDAP configuration file into/from the active NetBox release", "notify": ["reload netbox.service"]}, "module_options": {"src": "{{ netbox_shared_path + '/ldap_config.py' if netbox_ldap_enabled else omit }}", "dest": "{{ netbox_config_path }}/ldap_config.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "{{ 'link' if netbox_ldap_enabled else 'absent' }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy NetBox scripts into SCRIPTS_ROOT", "module": "copy", "index": 10, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Copy NetBox scripts into SCRIPTS_ROOT", "loop": "{{ netbox_scripts }}"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ _netbox_config.SCRIPTS_ROOT }}/{{ item.name }}.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy NetBox reports into REPORTS_ROOT", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Copy NetBox reports into REPORTS_ROOT", "loop": "{{ netbox_reports }}"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ _netbox_config.REPORTS_ROOT }}/{{ item.name }}.py", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run database migrations for NetBox", "module": "django_manage", "index": 12, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Run database migrations for NetBox"}, "module_options": {"command": "migrate", "app_path": "{{ netbox_current_path }}/netbox", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a super user for NetBox", "module": "shell", "index": 13, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Create a super user for NetBox", "register": "_netbox_superuser_result", "changed_when": "'changed' in _netbox_superuser_result.stdout", "when": ["not netbox_ldap_enabled"]}, "module_options": "printf '{{ netbox_superuser_script }}' |{{ netbox_virtualenv_path }}/bin/python {{ netbox_current_path }}/netbox/manage.py shell", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate static assets for NetBox", "module": "django_manage", "index": 14, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Generate static assets for NetBox"}, "module_options": {"command": "collectstatic", "app_path": "{{ netbox_current_path }}/netbox", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clear expired user sessions in NetBox", "module": "django_manage", "index": 15, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/deploy_netbox.yml", "options": {"name": "Clear expired user sessions in NetBox"}, "module_options": {"command": "clearsessions", "app_path": "{{ netbox_current_path }}/netbox", "virtualenv": "{{ netbox_virtualenv_path }}"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "generate_secret_key.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "tasks": [{"py/object": "struct4.Task", "name": "Generate a SECRET_KEY for NetBox if unspecified", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "options": {"name": "Generate a SECRET_KEY for NetBox if unspecified", "args": {"creates": "{{ netbox_shared_path }}/generated_secret_key", "executable": "/bin/bash"}, "become": true, "become_user": "{{ netbox_user }}"}, "module_options": "set -o pipefail; {{ netbox_python_binary }} {{ netbox_current_path }}/netbox/generate_secret_key.py| tr -d $'\n' > {{ netbox_shared_path }}/generated_secret_key", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Load saved SECRET_KEY", "module": "slurp", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "options": {"name": "Load saved SECRET_KEY", "register": "_netbox_secret_key_file"}, "module_options": {"src": "{{ netbox_shared_path }}/generated_secret_key"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set netbox_config.SECRET_KEY to generated SECRET_KEY", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/generate_secret_key.yml", "options": {"name": "Set netbox_config.SECRET_KEY to generated SECRET_KEY"}, "module_options": {"_netbox_config": "{{ _netbox_config | combine({'SECRET_KEY': _netbox_secret_key_file['content'] | b64decode}) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_packages_yum.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install EPEL repository", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Install EPEL repository", "when": "netbox_install_epel"}, "module_options": {"name": "epel-release", "state": "installed"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install required packages for selected NetBox configuration", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Install required packages for selected NetBox configuration", "vars": {"_netbox_yum_packages": ["{{ netbox_python_packages }}", "{{ netbox_packages }}", "{{ netbox_ldap_packages if netbox_ldap_enabled else [] }}", "{{ 'git' if netbox_git else [] }}", "{{ 'acl' if ('SUDO_USER' in ansible_env and ansible_env.SUDO_USER != 'root') else [] }}"]}}, "module_options": {"name": "{{ _netbox_yum_packages | flatten }}", "state": "present", "update_cache": true}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure pip is available on Red Hat-based distros", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Ensure pip is available on Red Hat-based distros", "register": "_existence_of_pip", "changed_when": "'Successfully installed pip' in _existence_of_pip.stdout"}, "module_options": "{{ netbox_python_binary }} -m pip -V || {{ netbox_python_binary }} -m ensurepip", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install psycopg2/selinux via pip on Red Hat-based distros", "module": "pip", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_yum.yml", "options": {"name": "Install psycopg2/selinux via pip on Red Hat-based distros", "vars": {"ansible_python_interpreter": "{{ netbox_python_binary }}"}, "environment": {"PATH": "/usr/local/bin:{{ _path }}"}}, "module_options": {"name": ["psycopg2-binary", "selinux"], "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_packages_apt.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_apt.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install required packages for selected NetBox configuration", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_packages_apt.yml", "options": {"name": "Install required packages for selected NetBox configuration", "vars": {"_netbox_apt_packages": ["{{ netbox_python_packages }}", "{{ netbox_packages }}", "{{ netbox_ldap_packages if netbox_ldap_enabled else [] }}", "{{ 'git' if netbox_git else [] }}", "{{ 'acl' if ('SUDO_USER' in ansible_env and ansible_env.SUDO_USER != 'root') else [] }}"]}}, "module_options": {"name": "{{ _netbox_apt_packages | flatten }}", "state": "present", "cache_valid_time": 3600, "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "load_variables.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Gather OS specific variables", "with_first_found": ["{{ ansible_distribution|lower }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution|lower }}.yml", "{{ ansible_os_family|lower }}-{{ ansible_distribution_major_version }}.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define netbox_packages", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_packages", "when": "netbox_packages is not defined"}, "module_options": {"netbox_packages": "{{ _netbox_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define netbox_python_packages", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_python_packages", "when": "netbox_python_packages is not defined"}, "module_options": {"netbox_python_packages": "{{ _netbox_python_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define netbox_python_binary", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_python_binary", "when": "netbox_python_binary is not defined"}, "module_options": {"netbox_python_binary": "{{ _netbox_python_binary }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define netbox_ldap_packages", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define netbox_ldap_packages", "when": "netbox_ldap_packages is not defined"}, "module_options": {"netbox_ldap_packages": "{{ _netbox_ldap_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define _netbox_config", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Define _netbox_config"}, "module_options": {"_netbox_config": "{{ netbox_config }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate list of optional Python dependencies", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Generate list of optional Python dependencies"}, "module_options": {"_netbox_python_deps": ["{{ netbox_napalm_packages if netbox_napalm_enabled else [] }}", "{{ 'django-auth-ldap' if netbox_ldap_enabled else [] }}", "{{ 'django-storages' if _netbox_storages_module is defined else [] }}", "{{ _netbox_storages_map[_netbox_storages_module] if _netbox_storages_module is defined else [] }}", "{{ netbox_pip_packages }}"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flatten that list of dependencies", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Flatten that list of dependencies"}, "module_options": {"_netbox_python_deps": "{{ _netbox_python_deps | flatten }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Identify current execution PATH", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Identify current execution PATH", "register": "_path_exec", "changed_when": false, "check_mode": false}, "module_options": "echo $PATH", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set a fact for current execution PATH", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Set a fact for current execution PATH", "check_mode": false}, "module_options": {"_path": "{{ _path_exec.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Capture the current Python interpreter", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/load_variables.yml", "options": {"name": "Capture the current Python interpreter", "when": "ansible_python_interpreter is defined"}, "module_options": {"_netbox_global_python": "{{ ansible_python_interpreter }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "validate_variables.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "tasks": [{"py/object": "struct4.Task", "name": "A single NetBox installation scenario must be enabled", "module": "assert", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "A single NetBox installation scenario must be enabled"}, "module_options": {"that": ["netbox_stable or netbox_git", "not (netbox_stable and netbox_git)"], "msg": "Please choose either the stable or git scenario."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "A database host/password or socket must be specified", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "A database host/password or socket must be specified"}, "module_options": {"that": ["netbox_database_socket is defined or (netbox_database_host is defined and netbox_database_password is defined)", "not (netbox_database_socket is defined and netbox_database_host is defined)"], "msg": "Please define either a socket (local) or host/password (TCP)."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "A super user password for NetBox must be specified", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "A super user password for NetBox must be specified"}, "module_options": {"that": ["netbox_superuser_password is defined"], "msg": "Please set an admin password with netbox_superuser_password."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "The netbox_config variable should not configure PostgreSQL/Redis", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "The netbox_config variable should not configure PostgreSQL/Redis"}, "module_options": {"that": ["'DATABASE' not in netbox_config", "'REDIS' not in netbox_config"], "msg": "Please remove the DATABASE and/or REDIS keys in netbox_config and use their dedicated role variables instead."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "netbox_config must specify a list of ALLOWED_HOSTS", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "netbox_config must specify a list of ALLOWED_HOSTS"}, "module_options": {"that": ["'ALLOWED_HOSTS' in netbox_config", "netbox_config.ALLOWED_HOSTS is iterable"], "msg": "Please define ALLOWED_HOSTS in netbox_config."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "NAPALM credentials must be specified in netbox_config if NAPALM is enabled", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "NAPALM credentials must be specified in netbox_config if NAPALM is enabled", "when": "netbox_napalm_enabled | bool"}, "module_options": {"that": ["'NAPALM_USERNAME' in netbox_config", "'NAPALM_PASSWORD' in netbox_config"], "msg": "Please define NAPALM_USERNAME and NAPALM_PASSWORD in netbox_config to use NAPALM."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "NetBox user content directories must be specified", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "NetBox user content directories must be specified"}, "module_options": {"that": ["'MEDIA_ROOT' in netbox_config", "'REPORTS_ROOT' in netbox_config", "'SCRIPTS_ROOT' in netbox_config"], "msg": "Please ensure MEDIA_ROOT/REPORTS_ROOT/SCRIPTS_ROOT are defined in netbox_config."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Script/Report module names should follow PEP8", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "Script/Report module names should follow PEP8"}, "module_options": {"that": ["(netbox_scripts | map(attribute='name') | map('regex_search', '^[a-z][a-z0-9_]*$') | select('string') | list | length) == (netbox_scripts | length)", "(netbox_reports | map(attribute='name') | map('regex_search', '^[a-z][a-z0-9_]*$') | select('string') | list | length) == (netbox_reports | length)"], "msg": "Please ensure that your script/report module names start with a lowercase letter and contain only lowercase letters, numbers, and underscores."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Identify selected storage module", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "Identify selected storage module"}, "module_options": {"_netbox_storages_module": "{{ netbox_config.STORAGE_BACKEND | regex_search('(?<=storages\\.backends\\.).*(?=\\.)') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure storage module is a valid option", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/validate_variables.yml", "options": {"name": "Ensure storage module is a valid option"}, "module_options": {"that": ["_netbox_storages_module in _netbox_storages_map"], "msg": "Please ensure your STORAGE_BACKEND is correct."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_via_git.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "tasks": [{"py/object": "struct4.Task", "name": "Clone specified NetBox git repository", "module": "git", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Clone specified NetBox git repository", "register": "_netbox_git_repo", "become": true, "become_user": "{{ netbox_user }}"}, "module_options": {"repo": "{{ netbox_git_uri }}", "dest": "{{ netbox_git_repo_path }}", "version": "{{ netbox_git_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create git deployment directory for NetBox", "module": "file", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Create git deployment directory for NetBox"}, "module_options": {"path": "{{ netbox_git_deploy_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of commit 1fb67b7, fixing issue netbox#2239", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Check existence of commit 1fb67b7, fixing issue netbox#2239", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "register": "_netbox_git_contains_issue_2239_fix", "changed_when": false, "failed_when": "_netbox_git_contains_issue_2239_fix.rc not in [0, 1]"}, "module_options": "set -o pipefail; git log --format=%H \"{{ netbox_git_version }}\" | grep ^1fb67b791f1a91c624dae4a1cd256e4cf3ddbb77", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of commit 3590ed3, renaming webhooks to tasks", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Check existence of commit 3590ed3, renaming webhooks to tasks", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "register": "_netbox_git_contains_tasks_rename", "changed_when": false, "failed_when": "_netbox_git_contains_tasks_rename.rc not in [0, 1]"}, "module_options": "set -o pipefail; git log --format=%H \"{{ netbox_git_version }}\" | grep ^3590ed378d161dd724fad2dc73ff56da746352f8", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of commit 90dbe9b, renaming DEFAULT_TIMEOUT to RQ_DEFAULT_TIMEOUT", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Check existence of commit 90dbe9b, renaming DEFAULT_TIMEOUT to RQ_DEFAULT_TIMEOUT", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "register": "_netbox_git_contains_rq_timeout", "changed_when": false, "failed_when": "_netbox_git_contains_rq_timeout.rc not in [0, 1]"}, "module_options": "set -o pipefail; git log --format=%H \"{{ netbox_git_version }}\" | grep ^90dbe9bf60ab3c72be10fd070c65c26dca543ca5", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Archive and extract snapshot of git repository", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Archive and extract snapshot of git repository", "args": {"chdir": "{{ netbox_git_repo_path }}", "executable": "/bin/bash"}, "notify": ["reload netbox.service"], "when": ["_netbox_git_repo is changed"], "become": true, "become_user": "{{ netbox_user }}"}, "module_options": "set -o pipefail; git archive \"{{ netbox_git_version }}\" | tar -x -C \"{{ netbox_git_deploy_path }}\"", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink git repository to current NetBox directory", "module": "file", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/install_via_git.yml", "options": {"name": "Symlink git repository to current NetBox directory"}, "module_options": {"src": "{{ netbox_git_deploy_path }}", "dest": "{{ netbox_current_path }}", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "validate_variables.yml", "executable": "validate_variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "load_variables.yml", "executable": "load_variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "install_packages_{{ ansible_pkg_mgr }}.yml", "executable": "install_packages_{{ ansible_pkg_mgr }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Switch Ansible's Python interpreter to Python 3", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Switch Ansible's Python interpreter to Python 3"}, "module_options": {"ansible_python_interpreter": "{{ netbox_python_binary }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Recheck new Python interpreter's version", "module": "setup", "index": 4, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Recheck new Python interpreter's version"}, "module_options": {"gather_subset": "min", "filter": "ansible_python_version"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure the installed Python version is newer than 3.6.0 for NetBox 2.8+", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Ensure the installed Python version is newer than 3.6.0 for NetBox 2.8+", "when": ["netbox_stable and netbox_stable_version is version('2.8.0', '>=') or netbox_git"]}, "module_options": {"that": ["ansible_python_version is version('3.6.0', '>=')"], "msg": "NetBox 2.8.0+ requires Python 3.6+. Please either specify an older NetBox version, upgrade to a newer distribution that provides Python 3.6+, or set netbox_python_binary to an appropriate Python 3.6+ binary.\n"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create NetBox user group", "module": "group", "index": 6, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Create NetBox user group"}, "module_options": {"name": "{{ netbox_group }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create NetBox user and home directory", "module": "user", "index": 7, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Create NetBox user and home directory"}, "module_options": {"name": "{{ netbox_user }}", "group": "{{ netbox_group }}", "home": "{{ netbox_home }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Postgres database exists (via socket)", "module": "postgresql_db", "index": 8, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Ensure Postgres database exists (via socket)", "become": true, "become_user": "{{ netbox_database_user }}", "when": ["netbox_database_socket is defined", "netbox_database_host is not defined"]}, "module_options": {"name": "{{ netbox_database }}", "login_user": "{{ netbox_database_user }}", "login_unix_socket": "{{ netbox_database_socket }}"}, "executable": "postgresql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Postgres database exists (via TCP)", "module": "postgresql_db", "index": 9, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Ensure Postgres database exists (via TCP)", "when": ["netbox_database_socket is not defined", "netbox_database_host is defined"]}, "module_options": {"name": "{{ netbox_database }}", "login_host": "{{ netbox_database_host }}", "port": "{{ netbox_database_port }}", "login_user": "{{ netbox_database_user }}", "login_password": "{{ netbox_database_password }}"}, "executable": "postgresql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 10, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {}, "module_options": "deploy_netbox.yml", "executable": "deploy_netbox.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install uWSGI via pip", "module": "pip", "index": 11, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install uWSGI via pip", "environment": {"PATH": "/usr/local/bin:{{ _path }}"}, "notify": ["reload netbox.service"], "retries": 2, "register": "_netbox_uwsgi_install", "until": "_netbox_uwsgi_install is succeeded"}, "module_options": {"name": "uwsgi", "state": "{{ 'latest' if netbox_keep_uwsgi_updated else 'present' }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure uWSGI NetBox application", "module": "template", "index": 12, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Configure uWSGI NetBox application", "notify": ["reload netbox.service"]}, "module_options": {"src": "uwsgi.ini.j2", "dest": "{{ netbox_shared_path }}/uwsgi.ini", "owner": "{{ netbox_user }}", "group": "{{ netbox_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install NetBox socket unit file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install NetBox socket unit file", "notify": ["restart netbox.socket"]}, "module_options": {"src": "netbox.socket.j2", "dest": "/lib/systemd/system/netbox.socket"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install NetBox service unit file", "module": "template", "index": 14, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install NetBox service unit file", "notify": ["restart netbox.service"]}, "module_options": {"src": "netbox.service.j2", "dest": "/lib/systemd/system/netbox.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install NetBox-rqworker service unit file", "module": "template", "index": 15, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Install NetBox-rqworker service unit file", "notify": ["restart netbox-rqworker.service"]}, "module_options": {"src": "netbox-rqworker.service.j2", "dest": "/lib/systemd/system/netbox-rqworker.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start and enable NetBox' socket and service", "module": "systemd", "index": 16, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Start and enable NetBox' socket and service", "loop": ["netbox.socket", "netbox.service"]}, "module_options": {"name": "{{ item }}", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start and enable netbox-rqworker.service", "module": "systemd", "index": 17, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Start and enable netbox-rqworker.service"}, "module_options": {"name": "netbox-rqworker.service", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restore the previous Ansible Python interpreter", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Restore the previous Ansible Python interpreter"}, "module_options": {"ansible_python_interpreter": "{{ _netbox_global_python if _netbox_global_python is defined else 'auto_legacy' }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Recheck the previous Python interpreter's version", "module": "setup", "index": 19, "defined_in": "./role-test/testdata/lae-netbox/lae.netbox/tasks/main.yml", "options": {"name": "Recheck the previous Python interpreter's version"}, "module_options": {"gather_subset": "min", "filter": "ansible_python_version"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}], "role": "lae.netbox", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}