{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/nickjj-docker", "installed_roles": [{"py/object": "struct4.Role", "name": "nickjj.docker", "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker", "fqcn": "nickjj.docker", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Disable pinned Docker version", "module": "file", "index": 0, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Disable pinned Docker version", "when": "not docker__version | d()"}, "module_options": {"dest": "/etc/apt/preferences.d/docker.pref", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable pinned Docker version", "module": "template", "index": 1, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Enable pinned Docker version", "when": "docker__version | d()"}, "module_options": {"src": "etc/apt/preferences.d/docker.pref.j2", "dest": "/etc/apt/preferences.d/docker.pref", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker's dependencies", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Install Docker's dependencies"}, "module_options": {"name": "{{ docker__package_dependencies + docker__pip_dependencies }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker's public GPG key to the APT keyring", "module": "apt_key", "index": 3, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Add Docker's public GPG key to the APT keyring"}, "module_options": {"id": "{{ docker__apt_key_id }}", "url": "{{ docker__apt_key_url }}"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker's upstream APT repository", "module": "apt_repository", "index": 4, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker's upstream APT repository"}, "module_options": {"repo": "{{ docker__apt_repository }}", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Docker configuration directories", "module": "file", "index": 5, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Create Docker configuration directories", "loop": ["/etc/docker", "/etc/systemd/system/docker.service.d"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "root", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon options (json)", "module": "template", "index": 6, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon options (json)", "when": "docker__default_daemon_json | d() or docker__daemon_json | d()"}, "module_options": {"src": "etc/docker/daemon.json.j2", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker", "module": "apt", "index": 7, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Install Docker"}, "module_options": {"name": "docker-{{ docker__edition }}", "state": "{{ docker__state }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Python packages", "module": "pip", "index": 8, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Install Python packages", "loop": "{{ docker__default_pip_packages + docker__pip_packages }}", "when": "item.name | d()"}, "module_options": {"name": "{{ item.name }}{% if item.version | d() %}=={{ item.version }}{% endif %}\n", "virtualenv": "{{ docker__pip_virtualenv }}", "virtualenv_python": "python3", "state": "{{ item.state | d('present') }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create python3-docker proxy script to access the Virtualenv's interpreter", "module": "template", "index": 9, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Create python3-docker proxy script to access the Virtualenv's interpreter"}, "module_options": {"src": "usr/local/bin/python3-docker.j2", "dest": "/usr/local/bin/python3-docker", "owner": "root", "group": "root", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink selected Python package binaries to /usr/local/bin", "module": "file", "index": 10, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Symlink selected Python package binaries to /usr/local/bin", "loop": "{{ docker__default_pip_packages + docker__pip_packages }}", "when": ["item.state | d(\"present\") != \"absent\"", "item.path | d() and item.src | d()"]}, "module_options": {"path": "{{ item.path }}", "src": "{{ item.src }}", "force": true, "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add user(s) to \"docker\" group", "module": "user", "index": 11, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Add user(s) to \"docker\" group", "loop": "{{ docker__users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon options (flags)", "module": "template", "index": 12, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon options (flags)", "register": "docker__register_daemon_flags", "when": "docker__daemon_flags | d()", "notify": ["Restart Docker"]}, "module_options": {"src": "etc/systemd/system/docker.service.d/options.conf.j2", "dest": "/etc/systemd/system/docker.service.d/options.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon environment variables", "module": "template", "index": 13, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon environment variables", "register": "docker__register_daemon_environment", "when": "docker__daemon_environment | d()", "notify": ["Restart Docker"]}, "module_options": {"src": "etc/systemd/system/docker.service.d/environment.conf.j2", "dest": "/etc/systemd/system/docker.service.d/environment.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure custom systemd unit file override", "module": "template", "index": 14, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure custom systemd unit file override", "register": "docker__register_custom_override", "when": "docker__systemd_override | d()", "notify": ["Restart Docker"]}, "module_options": {"src": "etc/systemd/system/docker.service.d/custom.conf.j2", "dest": "/etc/systemd/system/docker.service.d/custom.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd daemon", "module": "systemd", "index": 15, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Reload systemd daemon", "when": "docker__register_daemon_flags is changed or docker__register_daemon_environment is changed or docker__register_custom_override is changed"}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart Docker now to make sure `docker login` works", "module": "meta", "index": 16, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Restart Docker now to make sure `docker login` works"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Manage Docker registry login credentials", "module": "vars", "index": 17, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Manage Docker registry login credentials", "docker_login": {"registry_url": "{{ item.registry_url | d(omit) }}", "username": "{{ item.username }}", "password": "{{ item.password }}", "email": "{{ item.email | d(omit) }}", "reauthorize": "{{ item.reauthorize | d(omit) }}", "config_path": "{{ item.config_path | d(omit) }}", "state": "{{ item.state | d('present') }}"}, "loop": "{{ docker__registries }}", "when": "item.username | d() and item.password | d()", "become_user": "{{ docker__login_become_user | d('root') }}"}, "module_options": {"ansible_python_interpreter": "{{ '/usr/bin/env python3-docker' }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove Docker related cron jobs", "module": "file", "index": 18, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Remove Docker related cron jobs", "loop": "{{ docker__cron_jobs }}", "when": ["item.state | d(\"present\") == \"absent\"", "item.cron_file | d()"]}, "module_options": {"path": "/etc/cron.d/{{ item.cron_file }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Docker related cron jobs", "module": "cron", "index": 19, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Create Docker related cron jobs", "loop": "{{ docker__cron_jobs }}", "when": ["item.state | d(\"present\") != \"absent\"", "item.name | d() and item.job | d()", "item.schedule | d() and item.cron_file | d()"]}, "module_options": {"name": "{{ item.name }}", "job": "{{ item.job }}", "minute": "{{ item.schedule[0] }}", "hour": "{{ item.schedule[1] }}", "day": "{{ item.schedule[2] }}", "month": "{{ item.schedule[3] }}", "weekday": "{{ item.schedule[4] }}", "cron_file": "{{ item.cron_file }}", "user": "{{ item.user | d('root') }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "nickjj.docker", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Disable pinned Docker version", "module": "file", "index": 0, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Disable pinned Docker version", "when": "not docker__version | d()"}, "module_options": {"dest": "/etc/apt/preferences.d/docker.pref", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Enable pinned Docker version", "module": "template", "index": 1, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Enable pinned Docker version", "when": "docker__version | d()"}, "module_options": {"src": "etc/apt/preferences.d/docker.pref.j2", "dest": "/etc/apt/preferences.d/docker.pref", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install Docker's dependencies", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Install Docker's dependencies"}, "module_options": {"name": "{{ docker__package_dependencies + docker__pip_dependencies }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Add Docker's public GPG key to the APT keyring", "module": "apt_key", "index": 3, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Add Docker's public GPG key to the APT keyring"}, "module_options": {"id": "{{ docker__apt_key_id }}", "url": "{{ docker__apt_key_url }}"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Configure Docker's upstream APT repository", "module": "apt_repository", "index": 4, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker's upstream APT repository"}, "module_options": {"repo": "{{ docker__apt_repository }}", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create Docker configuration directories", "module": "file", "index": 5, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Create Docker configuration directories", "loop": ["/etc/docker", "/etc/systemd/system/docker.service.d"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "root", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Configure Docker daemon options (json)", "module": "template", "index": 6, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon options (json)", "when": "docker__default_daemon_json | d() or docker__daemon_json | d()"}, "module_options": {"src": "etc/docker/daemon.json.j2", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Install Docker", "module": "apt", "index": 7, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Install Docker"}, "module_options": {"name": "docker-{{ docker__edition }}", "state": "{{ docker__state }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install Python packages", "module": "pip", "index": 8, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Install Python packages", "loop": "{{ docker__default_pip_packages + docker__pip_packages }}", "when": "item.name | d()"}, "module_options": {"name": "{{ item.name }}{% if item.version | d() %}=={{ item.version }}{% endif %}\n", "virtualenv": "{{ docker__pip_virtualenv }}", "virtualenv_python": "python3", "state": "{{ item.state | d('present') }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create python3-docker proxy script to access the Virtualenv's interpreter", "module": "template", "index": 9, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Create python3-docker proxy script to access the Virtualenv's interpreter"}, "module_options": {"src": "usr/local/bin/python3-docker.j2", "dest": "/usr/local/bin/python3-docker", "owner": "root", "group": "root", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Symlink selected Python package binaries to /usr/local/bin", "module": "file", "index": 10, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Symlink selected Python package binaries to /usr/local/bin", "loop": "{{ docker__default_pip_packages + docker__pip_packages }}", "when": ["item.state | d(\"present\") != \"absent\"", "item.path | d() and item.src | d()"]}, "module_options": {"path": "{{ item.path }}", "src": "{{ item.src }}", "force": true, "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Add user(s) to \"docker\" group", "module": "user", "index": 11, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Add user(s) to \"docker\" group", "loop": "{{ docker__users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Configure Docker daemon options (flags)", "module": "template", "index": 12, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon options (flags)", "register": "docker__register_daemon_flags", "when": "docker__daemon_flags | d()", "notify": ["Restart Docker"]}, "module_options": {"src": "etc/systemd/system/docker.service.d/options.conf.j2", "dest": "/etc/systemd/system/docker.service.d/options.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Configure Docker daemon environment variables", "module": "template", "index": 13, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon environment variables", "register": "docker__register_daemon_environment", "when": "docker__daemon_environment | d()", "notify": ["Restart Docker"]}, "module_options": {"src": "etc/systemd/system/docker.service.d/environment.conf.j2", "dest": "/etc/systemd/system/docker.service.d/environment.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Configure custom systemd unit file override", "module": "template", "index": 14, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure custom systemd unit file override", "register": "docker__register_custom_override", "when": "docker__systemd_override | d()", "notify": ["Restart Docker"]}, "module_options": {"src": "etc/systemd/system/docker.service.d/custom.conf.j2", "dest": "/etc/systemd/system/docker.service.d/custom.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Reload systemd daemon", "module": "systemd", "index": 15, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Reload systemd daemon", "when": "docker__register_daemon_flags is changed or docker__register_daemon_environment is changed or docker__register_custom_override is changed"}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Restart Docker now to make sure `docker login` works", "module": "meta", "index": 16, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Restart Docker now to make sure `docker login` works"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Manage Docker registry login credentials", "module": "vars", "index": 17, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Manage Docker registry login credentials", "docker_login": {"registry_url": "{{ item.registry_url | d(omit) }}", "username": "{{ item.username }}", "password": "{{ item.password }}", "email": "{{ item.email | d(omit) }}", "reauthorize": "{{ item.reauthorize | d(omit) }}", "config_path": "{{ item.config_path | d(omit) }}", "state": "{{ item.state | d('present') }}"}, "loop": "{{ docker__registries }}", "when": "item.username | d() and item.password | d()", "become_user": "{{ docker__login_become_user | d('root') }}"}, "module_options": {"ansible_python_interpreter": "{{ '/usr/bin/env python3-docker' }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Remove Docker related cron jobs", "module": "file", "index": 18, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Remove Docker related cron jobs", "loop": "{{ docker__cron_jobs }}", "when": ["item.state | d(\"present\") == \"absent\"", "item.cron_file | d()"]}, "module_options": {"path": "/etc/cron.d/{{ item.cron_file }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Create Docker related cron jobs", "module": "cron", "index": 19, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Create Docker related cron jobs", "loop": "{{ docker__cron_jobs }}", "when": ["item.state | d(\"present\") != \"absent\"", "item.name | d() and item.job | d()", "item.schedule | d() and item.cron_file | d()"]}, "module_options": {"name": "{{ item.name }}", "job": "{{ item.job }}", "minute": "{{ item.schedule[0] }}", "hour": "{{ item.schedule[1] }}", "day": "{{ item.schedule[2] }}", "month": "{{ item.schedule[3] }}", "weekday": "{{ item.schedule[4] }}", "cron_file": "{{ item.cron_file }}", "user": "{{ item.user | d('root') }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Disable pinned Docker version", "module": "file", "index": 0, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Disable pinned Docker version", "when": "not docker__version | d()"}, "module_options": {"dest": "/etc/apt/preferences.d/docker.pref", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable pinned Docker version", "module": "template", "index": 1, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Enable pinned Docker version", "when": "docker__version | d()"}, "module_options": {"src": "etc/apt/preferences.d/docker.pref.j2", "dest": "/etc/apt/preferences.d/docker.pref", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker's dependencies", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Install Docker's dependencies"}, "module_options": {"name": "{{ docker__package_dependencies + docker__pip_dependencies }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker's public GPG key to the APT keyring", "module": "apt_key", "index": 3, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Add Docker's public GPG key to the APT keyring"}, "module_options": {"id": "{{ docker__apt_key_id }}", "url": "{{ docker__apt_key_url }}"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker's upstream APT repository", "module": "apt_repository", "index": 4, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker's upstream APT repository"}, "module_options": {"repo": "{{ docker__apt_repository }}", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Docker configuration directories", "module": "file", "index": 5, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Create Docker configuration directories", "loop": ["/etc/docker", "/etc/systemd/system/docker.service.d"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "root", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon options (json)", "module": "template", "index": 6, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon options (json)", "when": "docker__default_daemon_json | d() or docker__daemon_json | d()"}, "module_options": {"src": "etc/docker/daemon.json.j2", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker", "module": "apt", "index": 7, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Install Docker"}, "module_options": {"name": "docker-{{ docker__edition }}", "state": "{{ docker__state }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Python packages", "module": "pip", "index": 8, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Install Python packages", "loop": "{{ docker__default_pip_packages + docker__pip_packages }}", "when": "item.name | d()"}, "module_options": {"name": "{{ item.name }}{% if item.version | d() %}=={{ item.version }}{% endif %}\n", "virtualenv": "{{ docker__pip_virtualenv }}", "virtualenv_python": "python3", "state": "{{ item.state | d('present') }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create python3-docker proxy script to access the Virtualenv's interpreter", "module": "template", "index": 9, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Create python3-docker proxy script to access the Virtualenv's interpreter"}, "module_options": {"src": "usr/local/bin/python3-docker.j2", "dest": "/usr/local/bin/python3-docker", "owner": "root", "group": "root", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink selected Python package binaries to /usr/local/bin", "module": "file", "index": 10, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Symlink selected Python package binaries to /usr/local/bin", "loop": "{{ docker__default_pip_packages + docker__pip_packages }}", "when": ["item.state | d(\"present\") != \"absent\"", "item.path | d() and item.src | d()"]}, "module_options": {"path": "{{ item.path }}", "src": "{{ item.src }}", "force": true, "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add user(s) to \"docker\" group", "module": "user", "index": 11, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Add user(s) to \"docker\" group", "loop": "{{ docker__users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon options (flags)", "module": "template", "index": 12, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon options (flags)", "register": "docker__register_daemon_flags", "when": "docker__daemon_flags | d()", "notify": ["Restart Docker"]}, "module_options": {"src": "etc/systemd/system/docker.service.d/options.conf.j2", "dest": "/etc/systemd/system/docker.service.d/options.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon environment variables", "module": "template", "index": 13, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon environment variables", "register": "docker__register_daemon_environment", "when": "docker__daemon_environment | d()", "notify": ["Restart Docker"]}, "module_options": {"src": "etc/systemd/system/docker.service.d/environment.conf.j2", "dest": "/etc/systemd/system/docker.service.d/environment.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure custom systemd unit file override", "module": "template", "index": 14, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure custom systemd unit file override", "register": "docker__register_custom_override", "when": "docker__systemd_override | d()", "notify": ["Restart Docker"]}, "module_options": {"src": "etc/systemd/system/docker.service.d/custom.conf.j2", "dest": "/etc/systemd/system/docker.service.d/custom.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd daemon", "module": "systemd", "index": 15, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Reload systemd daemon", "when": "docker__register_daemon_flags is changed or docker__register_daemon_environment is changed or docker__register_custom_override is changed"}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart Docker now to make sure `docker login` works", "module": "meta", "index": 16, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Restart Docker now to make sure `docker login` works"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Manage Docker registry login credentials", "module": "vars", "index": 17, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Manage Docker registry login credentials", "docker_login": {"registry_url": "{{ item.registry_url | d(omit) }}", "username": "{{ item.username }}", "password": "{{ item.password }}", "email": "{{ item.email | d(omit) }}", "reauthorize": "{{ item.reauthorize | d(omit) }}", "config_path": "{{ item.config_path | d(omit) }}", "state": "{{ item.state | d('present') }}"}, "loop": "{{ docker__registries }}", "when": "item.username | d() and item.password | d()", "become_user": "{{ docker__login_become_user | d('root') }}"}, "module_options": {"ansible_python_interpreter": "{{ '/usr/bin/env python3-docker' }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove Docker related cron jobs", "module": "file", "index": 18, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Remove Docker related cron jobs", "loop": "{{ docker__cron_jobs }}", "when": ["item.state | d(\"present\") == \"absent\"", "item.cron_file | d()"]}, "module_options": {"path": "/etc/cron.d/{{ item.cron_file }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Docker related cron jobs", "module": "cron", "index": 19, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Create Docker related cron jobs", "loop": "{{ docker__cron_jobs }}", "when": ["item.state | d(\"present\") != \"absent\"", "item.name | d() and item.job | d()", "item.schedule | d() and item.cron_file | d()"]}, "module_options": {"name": "{{ item.name }}", "job": "{{ item.job }}", "minute": "{{ item.schedule[0] }}", "hour": "{{ item.schedule[1] }}", "day": "{{ item.schedule[2] }}", "month": "{{ item.schedule[3] }}", "weekday": "{{ item.schedule[4] }}", "cron_file": "{{ item.cron_file }}", "user": "{{ item.user | d('root') }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "nickjj.docker", "used_in": [], "annotations": {}}}, "role_dict": {"nickjj.docker": {"py/object": "struct4.Role", "name": "nickjj.docker", "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker", "fqcn": "nickjj.docker", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Disable pinned Docker version", "module": "file", "index": 0, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Disable pinned Docker version", "when": "not docker__version | d()"}, "module_options": {"dest": "/etc/apt/preferences.d/docker.pref", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable pinned Docker version", "module": "template", "index": 1, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Enable pinned Docker version", "when": "docker__version | d()"}, "module_options": {"src": "etc/apt/preferences.d/docker.pref.j2", "dest": "/etc/apt/preferences.d/docker.pref", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker's dependencies", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Install Docker's dependencies"}, "module_options": {"name": "{{ docker__package_dependencies + docker__pip_dependencies }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker's public GPG key to the APT keyring", "module": "apt_key", "index": 3, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Add Docker's public GPG key to the APT keyring"}, "module_options": {"id": "{{ docker__apt_key_id }}", "url": "{{ docker__apt_key_url }}"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker's upstream APT repository", "module": "apt_repository", "index": 4, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker's upstream APT repository"}, "module_options": {"repo": "{{ docker__apt_repository }}", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Docker configuration directories", "module": "file", "index": 5, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Create Docker configuration directories", "loop": ["/etc/docker", "/etc/systemd/system/docker.service.d"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "root", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon options (json)", "module": "template", "index": 6, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon options (json)", "when": "docker__default_daemon_json | d() or docker__daemon_json | d()"}, "module_options": {"src": "etc/docker/daemon.json.j2", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker", "module": "apt", "index": 7, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Install Docker"}, "module_options": {"name": "docker-{{ docker__edition }}", "state": "{{ docker__state }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Python packages", "module": "pip", "index": 8, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Install Python packages", "loop": "{{ docker__default_pip_packages + docker__pip_packages }}", "when": "item.name | d()"}, "module_options": {"name": "{{ item.name }}{% if item.version | d() %}=={{ item.version }}{% endif %}\n", "virtualenv": "{{ docker__pip_virtualenv }}", "virtualenv_python": "python3", "state": "{{ item.state | d('present') }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create python3-docker proxy script to access the Virtualenv's interpreter", "module": "template", "index": 9, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Create python3-docker proxy script to access the Virtualenv's interpreter"}, "module_options": {"src": "usr/local/bin/python3-docker.j2", "dest": "/usr/local/bin/python3-docker", "owner": "root", "group": "root", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink selected Python package binaries to /usr/local/bin", "module": "file", "index": 10, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Symlink selected Python package binaries to /usr/local/bin", "loop": "{{ docker__default_pip_packages + docker__pip_packages }}", "when": ["item.state | d(\"present\") != \"absent\"", "item.path | d() and item.src | d()"]}, "module_options": {"path": "{{ item.path }}", "src": "{{ item.src }}", "force": true, "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add user(s) to \"docker\" group", "module": "user", "index": 11, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Add user(s) to \"docker\" group", "loop": "{{ docker__users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon options (flags)", "module": "template", "index": 12, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon options (flags)", "register": "docker__register_daemon_flags", "when": "docker__daemon_flags | d()", "notify": ["Restart Docker"]}, "module_options": {"src": "etc/systemd/system/docker.service.d/options.conf.j2", "dest": "/etc/systemd/system/docker.service.d/options.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon environment variables", "module": "template", "index": 13, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon environment variables", "register": "docker__register_daemon_environment", "when": "docker__daemon_environment | d()", "notify": ["Restart Docker"]}, "module_options": {"src": "etc/systemd/system/docker.service.d/environment.conf.j2", "dest": "/etc/systemd/system/docker.service.d/environment.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure custom systemd unit file override", "module": "template", "index": 14, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Configure custom systemd unit file override", "register": "docker__register_custom_override", "when": "docker__systemd_override | d()", "notify": ["Restart Docker"]}, "module_options": {"src": "etc/systemd/system/docker.service.d/custom.conf.j2", "dest": "/etc/systemd/system/docker.service.d/custom.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd daemon", "module": "systemd", "index": 15, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Reload systemd daemon", "when": "docker__register_daemon_flags is changed or docker__register_daemon_environment is changed or docker__register_custom_override is changed"}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart Docker now to make sure `docker login` works", "module": "meta", "index": 16, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Restart Docker now to make sure `docker login` works"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Manage Docker registry login credentials", "module": "vars", "index": 17, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Manage Docker registry login credentials", "docker_login": {"registry_url": "{{ item.registry_url | d(omit) }}", "username": "{{ item.username }}", "password": "{{ item.password }}", "email": "{{ item.email | d(omit) }}", "reauthorize": "{{ item.reauthorize | d(omit) }}", "config_path": "{{ item.config_path | d(omit) }}", "state": "{{ item.state | d('present') }}"}, "loop": "{{ docker__registries }}", "when": "item.username | d() and item.password | d()", "become_user": "{{ docker__login_become_user | d('root') }}"}, "module_options": {"ansible_python_interpreter": "{{ '/usr/bin/env python3-docker' }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove Docker related cron jobs", "module": "file", "index": 18, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Remove Docker related cron jobs", "loop": "{{ docker__cron_jobs }}", "when": ["item.state | d(\"present\") == \"absent\"", "item.cron_file | d()"]}, "module_options": {"path": "/etc/cron.d/{{ item.cron_file }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Docker related cron jobs", "module": "cron", "index": 19, "defined_in": "./role-test/testdata/nickjj-docker/nickjj.docker/tasks/main.yml", "options": {"name": "Create Docker related cron jobs", "loop": "{{ docker__cron_jobs }}", "when": ["item.state | d(\"present\") != \"absent\"", "item.name | d() and item.job | d()", "item.schedule | d() and item.cron_file | d()"]}, "module_options": {"name": "{{ item.name }}", "job": "{{ item.job }}", "minute": "{{ item.schedule[0] }}", "hour": "{{ item.schedule[1] }}", "day": "{{ item.schedule[2] }}", "month": "{{ item.schedule[3] }}", "weekday": "{{ item.schedule[4] }}", "cron_file": "{{ item.cron_file }}", "user": "{{ item.user | d('root') }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "nickjj.docker", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}