{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/robertdebock-httpd", "installed_roles": [{"py/object": "struct4.Role", "name": "robertdebock.httpd", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd", "fqcn": "robertdebock.httpd", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "assert.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "tasks": [{"py/object": "struct4.Task", "name": "test if httpd_servername is set correctly", "module": "ansible.builtin.assert", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_servername is set correctly"}, "module_options": {"that": ["httpd_servername is defined", "httpd_servername is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_port is set correctly", "module": "ansible.builtin.assert", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_port is set correctly"}, "module_options": {"that": ["httpd_port is defined", "httpd_port is number", "httpd_port > 0", "httpd_port < 65536"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if https_ssl_enable is set correctly", "module": "ansible.builtin.assert", "index": 2, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if https_ssl_enable is set correctly"}, "module_options": {"that": ["https_ssl_enable is defined", "https_ssl_enable is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_ssl_servername is set correctly", "module": "ansible.builtin.assert", "index": 3, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_ssl_servername is set correctly"}, "module_options": {"that": ["httpd_ssl_servername is defined", "httpd_ssl_servername is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_ssl_port is set correctly", "module": "ansible.builtin.assert", "index": 4, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_ssl_port is set correctly"}, "module_options": {"that": ["httpd_ssl_port is defined", "httpd_ssl_port is number", "httpd_ssl_port > 0", "httpd_ssl_port < 65535", "httpd_ssl_port != httpd_port"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_locations is set correctly", "module": "ansible.builtin.assert", "index": 5, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_locations is set correctly", "when": ["httpd_locations is defined"]}, "module_options": {"that": ["httpd_locations is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item in httpd_locations is set correctly", "module": "ansible.builtin.assert", "index": 6, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item in httpd_locations is set correctly", "loop": "{{ httpd_locations }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_locations is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string", "item.location is defined", "item.location is string", "item.backend_url is defined", "item.backend_url is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 7, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_vhosts is set correctly", "when": ["httpd_vhosts is defined"]}, "module_options": {"that": ["httpd_vhosts is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item in httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 8, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item in httpd_vhosts is set correctly", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string", "item.servername is defined", "item.servername is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.create_docroot in httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 9, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.create_docroot in httpd_vhosts is set correctly", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined", "item.create_docroot is defined"]}, "module_options": {"that": ["item.create_docroot is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.serveralias in httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 10, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.serveralias in httpd_vhosts is set correctly", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined", "item.serveralias is defined"]}, "module_options": {"that": ["item.serveralias is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 11, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_directories is set correctly", "when": ["httpd_directories is defined"]}, "module_options": {"that": ["httpd_directories is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.name in httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 12, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.name in httpd_directories is set correctly", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_directories is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string", "item.path is defined", "item.path is string", "item.option is defined or item.allow_override is defined"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.options in httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 13, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.options in httpd_directories is set correctly", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_directories is defined", "item.options is defined"]}, "module_options": {"that": ["item.options is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.allow_override in httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 14, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.allow_override in httpd_directories is set correctly", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_directories is defined", "item.allow_override is defined"]}, "module_options": {"that": ["item.allow_override is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_remove_example is set correctly", "module": "ansible.builtin.assert", "index": 15, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_remove_example is set correctly"}, "module_options": {"that": ["httpd_remove_example is defined", "httpd_remove_example is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "ssl.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "tasks": [{"py/object": "struct4.Task", "name": "install ssl packages", "module": "ansible.builtin.package", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "options": {"name": "install ssl packages"}, "module_options": {"name": "{{ httpd_ssl_packages }}", "state": "present"}, "executable": "ansible.builtin.package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "place configuration", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "options": {"name": "place configuration", "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "ssl.conf.j2", "dest": "{{ httpd_config_directory }}/ssl.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure redirect from http to https", "module": "ansible.builtin.template", "index": 2, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "options": {"name": "configure redirect from http to https", "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "default_vhost.conf.j2", "dest": "{{ httpd_config_directory }}/default_vhost.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "locations.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/locations.yml", "tasks": [{"py/object": "struct4.Task", "name": "enable modules", "module": "community.general.apache2_module", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/locations.yml", "options": {"name": "enable modules", "loop": ["proxy", "proxy_http"], "when": ["ansible_os_family in [ \"Debian\", \"Suse\" ]"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "community.general.apache2_module", "executable_type": "Module", "fqcn": "community.general.apache2_module", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure locations", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/locations.yml", "options": {"name": "configure locations", "loop": "{{ httpd_locations }}", "loop_control": {"label": "{{ item.name }}"}, "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "location.conf.j2", "dest": "{{ httpd_config_directory }}/{{ item.name }}.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "vhosts.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/vhosts.yml", "tasks": [{"py/object": "struct4.Task", "name": "create docroot", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/vhosts.yml", "options": {"name": "create docroot", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined", "item.documentroot is defined", "item.create_docroot is not defined or item.create_docroot"]}, "module_options": {"path": "{{ item.documentroot }}", "state": "directory", "mode": "0755"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure vhosts", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/vhosts.yml", "options": {"name": "configure vhosts", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "vhost.conf.j2", "dest": "{{ httpd_config_directory }}/{{ item.name }}.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "import assert.yml", "module": "ansible.builtin.import_tasks", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import assert.yml", "run_once": true, "delegate_to": "localhost"}, "module_options": "assert.yml", "executable": "assert.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "install apache httpd", "module": "ansible.builtin.package", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "install apache httpd"}, "module_options": {"name": "{{ httpd_packages }}", "state": "present"}, "executable": "ansible.builtin.package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "modify selinux settings", "module": "ansible.posix.seboolean", "index": 2, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "modify selinux settings", "when": ["ansible_selinux.status is defined", "ansible_selinux.status == \"enabled\""], "loop": "{{ httpd_sebooleans }}"}, "module_options": {"name": "{{ item }}", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {}}, {"py/object": "struct4.Task", "name": "allow connections to custom port", "module": "community.general.seport", "index": 3, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "allow connections to custom port", "loop": ["{{ httpd_port }}", "{{ httpd_ssl_port | default(omit) }}"]}, "module_options": {"ports": "{{ item }}", "proto": "tcp", "setype": "http_port_t", "state": "present"}, "executable": "community.general.seport", "executable_type": "Module", "fqcn": "community.general.seport", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure httpd", "module": "ansible.builtin.template", "index": 4, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "configure httpd", "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "{{ httpd_config_src }}", "dest": "{{ httpd_config_dest }}", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "import ssl.yml", "module": "ansible.builtin.import_tasks", "index": 5, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import ssl.yml", "when": ["https_ssl_enable"]}, "module_options": "ssl.yml", "executable": "ssl.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "import locations.yml", "module": "ansible.builtin.import_tasks", "index": 6, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import locations.yml", "when": ["httpd_locations is defined"]}, "module_options": "locations.yml", "executable": "locations.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "import vhosts.yml", "module": "ansible.builtin.import_tasks", "index": 7, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import vhosts.yml", "when": ["httpd_vhosts is defined"]}, "module_options": "vhosts.yml", "executable": "vhosts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure ports", "module": "ansible.builtin.template", "index": 8, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "configure ports", "notify": ["test httpd configuration validity", "restart httpd"], "when": ["ansible_os_family in [ \"Debian\", \"Suse\" ]"]}, "module_options": {"src": "{{ httpd_ports_conf }}.j2", "dest": "{{ httpd_server_root }}/{{ httpd_ports_conf }}", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "import directories.yml", "module": "ansible.builtin.import_tasks", "index": 9, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import directories.yml", "when": ["httpd_directories is defined"]}, "module_options": "directories.yml", "executable": "directories.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers", "module": "ansible.builtin.meta", "index": 10, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "flush handlers"}, "module_options": "flush_handlers", "executable": "ansible.builtin.meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "removing default html", "module": "ansible.builtin.file", "index": 11, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "removing default html", "when": ["httpd_remove_example"]}, "module_options": {"path": "{{ httpd_data_directory }}/index.html", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "start and enable httpd", "module": "ansible.builtin.service", "index": 12, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "start and enable httpd"}, "module_options": {"name": "{{ httpd_service }}", "state": "started", "enabled": true}, "executable": "ansible.builtin.service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "directories.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/directories.yml", "tasks": [{"py/object": "struct4.Task", "name": "create directories", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/directories.yml", "options": {"name": "create directories", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.path }}"}}, "module_options": {"path": "{{ item.path }}", "state": "directory", "mode": "0755"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure directories", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/directories.yml", "options": {"name": "configure directories", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "directory.conf.j2", "dest": "{{ httpd_config_directory }}/{{ item.name }}.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "test if httpd_servername is set correctly", "module": "ansible.builtin.assert", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_servername is set correctly"}, "module_options": {"that": ["httpd_servername is defined", "httpd_servername is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "test if httpd_port is set correctly", "module": "ansible.builtin.assert", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_port is set correctly"}, "module_options": {"that": ["httpd_port is defined", "httpd_port is number", "httpd_port > 0", "httpd_port < 65536"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "test if https_ssl_enable is set correctly", "module": "ansible.builtin.assert", "index": 2, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if https_ssl_enable is set correctly"}, "module_options": {"that": ["https_ssl_enable is defined", "https_ssl_enable is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "test if httpd_ssl_servername is set correctly", "module": "ansible.builtin.assert", "index": 3, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_ssl_servername is set correctly"}, "module_options": {"that": ["httpd_ssl_servername is defined", "httpd_ssl_servername is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "test if httpd_ssl_port is set correctly", "module": "ansible.builtin.assert", "index": 4, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_ssl_port is set correctly"}, "module_options": {"that": ["httpd_ssl_port is defined", "httpd_ssl_port is number", "httpd_ssl_port > 0", "httpd_ssl_port < 65535", "httpd_ssl_port != httpd_port"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "test if httpd_locations is set correctly", "module": "ansible.builtin.assert", "index": 5, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_locations is set correctly", "when": ["httpd_locations is defined"]}, "module_options": {"that": ["httpd_locations is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "test if item in httpd_locations is set correctly", "module": "ansible.builtin.assert", "index": 6, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item in httpd_locations is set correctly", "loop": "{{ httpd_locations }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_locations is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string", "item.location is defined", "item.location is string", "item.backend_url is defined", "item.backend_url is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "test if httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 7, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_vhosts is set correctly", "when": ["httpd_vhosts is defined"]}, "module_options": {"that": ["httpd_vhosts is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "test if item in httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 8, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item in httpd_vhosts is set correctly", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string", "item.servername is defined", "item.servername is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "test if item.create_docroot in httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 9, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.create_docroot in httpd_vhosts is set correctly", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined", "item.create_docroot is defined"]}, "module_options": {"that": ["item.create_docroot is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "test if item.serveralias in httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 10, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.serveralias in httpd_vhosts is set correctly", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined", "item.serveralias is defined"]}, "module_options": {"that": ["item.serveralias is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "test if httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 11, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_directories is set correctly", "when": ["httpd_directories is defined"]}, "module_options": {"that": ["httpd_directories is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "test if item.name in httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 12, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.name in httpd_directories is set correctly", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_directories is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string", "item.path is defined", "item.path is string", "item.option is defined or item.allow_override is defined"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "test if item.options in httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 13, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.options in httpd_directories is set correctly", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_directories is defined", "item.options is defined"]}, "module_options": {"that": ["item.options is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "test if item.allow_override in httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 14, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.allow_override in httpd_directories is set correctly", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_directories is defined", "item.allow_override is defined"]}, "module_options": {"that": ["item.allow_override is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "test if httpd_remove_example is set correctly", "module": "ansible.builtin.assert", "index": 15, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_remove_example is set correctly"}, "module_options": {"that": ["httpd_remove_example is defined", "httpd_remove_example is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install ssl packages", "module": "ansible.builtin.package", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "options": {"name": "install ssl packages"}, "module_options": {"name": "{{ httpd_ssl_packages }}", "state": "present"}, "executable": "ansible.builtin.package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "place configuration", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "options": {"name": "place configuration", "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "ssl.conf.j2", "dest": "{{ httpd_config_directory }}/ssl.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "configure redirect from http to https", "module": "ansible.builtin.template", "index": 2, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "options": {"name": "configure redirect from http to https", "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "default_vhost.conf.j2", "dest": "{{ httpd_config_directory }}/default_vhost.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/locations.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "enable modules", "module": "community.general.apache2_module", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/locations.yml", "options": {"name": "enable modules", "loop": ["proxy", "proxy_http"], "when": ["ansible_os_family in [ \"Debian\", \"Suse\" ]"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "community.general.apache2_module", "executable_type": "Module", "fqcn": "community.general.apache2_module", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/locations.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "configure locations", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/locations.yml", "options": {"name": "configure locations", "loop": "{{ httpd_locations }}", "loop_control": {"label": "{{ item.name }}"}, "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "location.conf.j2", "dest": "{{ httpd_config_directory }}/{{ item.name }}.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/vhosts.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create docroot", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/vhosts.yml", "options": {"name": "create docroot", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined", "item.documentroot is defined", "item.create_docroot is not defined or item.create_docroot"]}, "module_options": {"path": "{{ item.documentroot }}", "state": "directory", "mode": "0755"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/vhosts.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "configure vhosts", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/vhosts.yml", "options": {"name": "configure vhosts", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "vhost.conf.j2", "dest": "{{ httpd_config_directory }}/{{ item.name }}.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "import assert.yml", "module": "ansible.builtin.import_tasks", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import assert.yml", "run_once": true, "delegate_to": "localhost"}, "module_options": "assert.yml", "executable": "assert.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "install apache httpd", "module": "ansible.builtin.package", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "install apache httpd"}, "module_options": {"name": "{{ httpd_packages }}", "state": "present"}, "executable": "ansible.builtin.package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "modify selinux settings", "module": "ansible.posix.seboolean", "index": 2, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "modify selinux settings", "when": ["ansible_selinux.status is defined", "ansible_selinux.status == \"enabled\""], "loop": "{{ httpd_sebooleans }}"}, "module_options": {"name": "{{ item }}", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "allow connections to custom port", "module": "community.general.seport", "index": 3, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "allow connections to custom port", "loop": ["{{ httpd_port }}", "{{ httpd_ssl_port | default(omit) }}"]}, "module_options": {"ports": "{{ item }}", "proto": "tcp", "setype": "http_port_t", "state": "present"}, "executable": "community.general.seport", "executable_type": "Module", "fqcn": "community.general.seport", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "configure httpd", "module": "ansible.builtin.template", "index": 4, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "configure httpd", "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "{{ httpd_config_src }}", "dest": "{{ httpd_config_dest }}", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "import ssl.yml", "module": "ansible.builtin.import_tasks", "index": 5, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import ssl.yml", "when": ["https_ssl_enable"]}, "module_options": "ssl.yml", "executable": "ssl.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "import locations.yml", "module": "ansible.builtin.import_tasks", "index": 6, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import locations.yml", "when": ["httpd_locations is defined"]}, "module_options": "locations.yml", "executable": "locations.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "import vhosts.yml", "module": "ansible.builtin.import_tasks", "index": 7, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import vhosts.yml", "when": ["httpd_vhosts is defined"]}, "module_options": "vhosts.yml", "executable": "vhosts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "configure ports", "module": "ansible.builtin.template", "index": 8, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "configure ports", "notify": ["test httpd configuration validity", "restart httpd"], "when": ["ansible_os_family in [ \"Debian\", \"Suse\" ]"]}, "module_options": {"src": "{{ httpd_ports_conf }}.j2", "dest": "{{ httpd_server_root }}/{{ httpd_ports_conf }}", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "import directories.yml", "module": "ansible.builtin.import_tasks", "index": 9, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import directories.yml", "when": ["httpd_directories is defined"]}, "module_options": "directories.yml", "executable": "directories.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "flush handlers", "module": "ansible.builtin.meta", "index": 10, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "flush handlers"}, "module_options": "flush_handlers", "executable": "ansible.builtin.meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "removing default html", "module": "ansible.builtin.file", "index": 11, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "removing default html", "when": ["httpd_remove_example"]}, "module_options": {"path": "{{ httpd_data_directory }}/index.html", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "start and enable httpd", "module": "ansible.builtin.service", "index": 12, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "start and enable httpd"}, "module_options": {"name": "{{ httpd_service }}", "state": "started", "enabled": true}, "executable": "ansible.builtin.service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/directories.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create directories", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/directories.yml", "options": {"name": "create directories", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.path }}"}}, "module_options": {"path": "{{ item.path }}", "state": "directory", "mode": "0755"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/directories.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "configure directories", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/directories.yml", "options": {"name": "configure directories", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "directory.conf.j2", "dest": "{{ httpd_config_directory }}/{{ item.name }}.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml": {"py/object": "struct4.TaskFile", "name": "assert.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "tasks": [{"py/object": "struct4.Task", "name": "test if httpd_servername is set correctly", "module": "ansible.builtin.assert", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_servername is set correctly"}, "module_options": {"that": ["httpd_servername is defined", "httpd_servername is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_port is set correctly", "module": "ansible.builtin.assert", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_port is set correctly"}, "module_options": {"that": ["httpd_port is defined", "httpd_port is number", "httpd_port > 0", "httpd_port < 65536"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if https_ssl_enable is set correctly", "module": "ansible.builtin.assert", "index": 2, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if https_ssl_enable is set correctly"}, "module_options": {"that": ["https_ssl_enable is defined", "https_ssl_enable is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_ssl_servername is set correctly", "module": "ansible.builtin.assert", "index": 3, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_ssl_servername is set correctly"}, "module_options": {"that": ["httpd_ssl_servername is defined", "httpd_ssl_servername is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_ssl_port is set correctly", "module": "ansible.builtin.assert", "index": 4, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_ssl_port is set correctly"}, "module_options": {"that": ["httpd_ssl_port is defined", "httpd_ssl_port is number", "httpd_ssl_port > 0", "httpd_ssl_port < 65535", "httpd_ssl_port != httpd_port"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_locations is set correctly", "module": "ansible.builtin.assert", "index": 5, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_locations is set correctly", "when": ["httpd_locations is defined"]}, "module_options": {"that": ["httpd_locations is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item in httpd_locations is set correctly", "module": "ansible.builtin.assert", "index": 6, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item in httpd_locations is set correctly", "loop": "{{ httpd_locations }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_locations is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string", "item.location is defined", "item.location is string", "item.backend_url is defined", "item.backend_url is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 7, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_vhosts is set correctly", "when": ["httpd_vhosts is defined"]}, "module_options": {"that": ["httpd_vhosts is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item in httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 8, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item in httpd_vhosts is set correctly", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string", "item.servername is defined", "item.servername is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.create_docroot in httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 9, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.create_docroot in httpd_vhosts is set correctly", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined", "item.create_docroot is defined"]}, "module_options": {"that": ["item.create_docroot is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.serveralias in httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 10, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.serveralias in httpd_vhosts is set correctly", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined", "item.serveralias is defined"]}, "module_options": {"that": ["item.serveralias is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 11, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_directories is set correctly", "when": ["httpd_directories is defined"]}, "module_options": {"that": ["httpd_directories is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.name in httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 12, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.name in httpd_directories is set correctly", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_directories is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string", "item.path is defined", "item.path is string", "item.option is defined or item.allow_override is defined"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.options in httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 13, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.options in httpd_directories is set correctly", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_directories is defined", "item.options is defined"]}, "module_options": {"that": ["item.options is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.allow_override in httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 14, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.allow_override in httpd_directories is set correctly", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_directories is defined", "item.allow_override is defined"]}, "module_options": {"that": ["item.allow_override is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_remove_example is set correctly", "module": "ansible.builtin.assert", "index": 15, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_remove_example is set correctly"}, "module_options": {"that": ["httpd_remove_example is defined", "httpd_remove_example is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml": {"py/object": "struct4.TaskFile", "name": "ssl.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "tasks": [{"py/object": "struct4.Task", "name": "install ssl packages", "module": "ansible.builtin.package", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "options": {"name": "install ssl packages"}, "module_options": {"name": "{{ httpd_ssl_packages }}", "state": "present"}, "executable": "ansible.builtin.package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "place configuration", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "options": {"name": "place configuration", "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "ssl.conf.j2", "dest": "{{ httpd_config_directory }}/ssl.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure redirect from http to https", "module": "ansible.builtin.template", "index": 2, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "options": {"name": "configure redirect from http to https", "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "default_vhost.conf.j2", "dest": "{{ httpd_config_directory }}/default_vhost.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/locations.yml": {"py/object": "struct4.TaskFile", "name": "locations.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/locations.yml", "tasks": [{"py/object": "struct4.Task", "name": "enable modules", "module": "community.general.apache2_module", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/locations.yml", "options": {"name": "enable modules", "loop": ["proxy", "proxy_http"], "when": ["ansible_os_family in [ \"Debian\", \"Suse\" ]"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "community.general.apache2_module", "executable_type": "Module", "fqcn": "community.general.apache2_module", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure locations", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/locations.yml", "options": {"name": "configure locations", "loop": "{{ httpd_locations }}", "loop_control": {"label": "{{ item.name }}"}, "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "location.conf.j2", "dest": "{{ httpd_config_directory }}/{{ item.name }}.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/vhosts.yml": {"py/object": "struct4.TaskFile", "name": "vhosts.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/vhosts.yml", "tasks": [{"py/object": "struct4.Task", "name": "create docroot", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/vhosts.yml", "options": {"name": "create docroot", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined", "item.documentroot is defined", "item.create_docroot is not defined or item.create_docroot"]}, "module_options": {"path": "{{ item.documentroot }}", "state": "directory", "mode": "0755"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure vhosts", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/vhosts.yml", "options": {"name": "configure vhosts", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "vhost.conf.j2", "dest": "{{ httpd_config_directory }}/{{ item.name }}.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "import assert.yml", "module": "ansible.builtin.import_tasks", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import assert.yml", "run_once": true, "delegate_to": "localhost"}, "module_options": "assert.yml", "executable": "assert.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "install apache httpd", "module": "ansible.builtin.package", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "install apache httpd"}, "module_options": {"name": "{{ httpd_packages }}", "state": "present"}, "executable": "ansible.builtin.package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "modify selinux settings", "module": "ansible.posix.seboolean", "index": 2, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "modify selinux settings", "when": ["ansible_selinux.status is defined", "ansible_selinux.status == \"enabled\""], "loop": "{{ httpd_sebooleans }}"}, "module_options": {"name": "{{ item }}", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {}}, {"py/object": "struct4.Task", "name": "allow connections to custom port", "module": "community.general.seport", "index": 3, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "allow connections to custom port", "loop": ["{{ httpd_port }}", "{{ httpd_ssl_port | default(omit) }}"]}, "module_options": {"ports": "{{ item }}", "proto": "tcp", "setype": "http_port_t", "state": "present"}, "executable": "community.general.seport", "executable_type": "Module", "fqcn": "community.general.seport", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure httpd", "module": "ansible.builtin.template", "index": 4, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "configure httpd", "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "{{ httpd_config_src }}", "dest": "{{ httpd_config_dest }}", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "import ssl.yml", "module": "ansible.builtin.import_tasks", "index": 5, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import ssl.yml", "when": ["https_ssl_enable"]}, "module_options": "ssl.yml", "executable": "ssl.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "import locations.yml", "module": "ansible.builtin.import_tasks", "index": 6, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import locations.yml", "when": ["httpd_locations is defined"]}, "module_options": "locations.yml", "executable": "locations.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "import vhosts.yml", "module": "ansible.builtin.import_tasks", "index": 7, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import vhosts.yml", "when": ["httpd_vhosts is defined"]}, "module_options": "vhosts.yml", "executable": "vhosts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure ports", "module": "ansible.builtin.template", "index": 8, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "configure ports", "notify": ["test httpd configuration validity", "restart httpd"], "when": ["ansible_os_family in [ \"Debian\", \"Suse\" ]"]}, "module_options": {"src": "{{ httpd_ports_conf }}.j2", "dest": "{{ httpd_server_root }}/{{ httpd_ports_conf }}", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "import directories.yml", "module": "ansible.builtin.import_tasks", "index": 9, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import directories.yml", "when": ["httpd_directories is defined"]}, "module_options": "directories.yml", "executable": "directories.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers", "module": "ansible.builtin.meta", "index": 10, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "flush handlers"}, "module_options": "flush_handlers", "executable": "ansible.builtin.meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "removing default html", "module": "ansible.builtin.file", "index": 11, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "removing default html", "when": ["httpd_remove_example"]}, "module_options": {"path": "{{ httpd_data_directory }}/index.html", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "start and enable httpd", "module": "ansible.builtin.service", "index": 12, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "start and enable httpd"}, "module_options": {"name": "{{ httpd_service }}", "state": "started", "enabled": true}, "executable": "ansible.builtin.service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/directories.yml": {"py/object": "struct4.TaskFile", "name": "directories.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/directories.yml", "tasks": [{"py/object": "struct4.Task", "name": "create directories", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/directories.yml", "options": {"name": "create directories", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.path }}"}}, "module_options": {"path": "{{ item.path }}", "state": "directory", "mode": "0755"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure directories", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/directories.yml", "options": {"name": "configure directories", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "directory.conf.j2", "dest": "{{ httpd_config_directory }}/{{ item.name }}.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}}, "role_dict": {"robertdebock.httpd": {"py/object": "struct4.Role", "name": "robertdebock.httpd", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd", "fqcn": "robertdebock.httpd", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "assert.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "tasks": [{"py/object": "struct4.Task", "name": "test if httpd_servername is set correctly", "module": "ansible.builtin.assert", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_servername is set correctly"}, "module_options": {"that": ["httpd_servername is defined", "httpd_servername is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_port is set correctly", "module": "ansible.builtin.assert", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_port is set correctly"}, "module_options": {"that": ["httpd_port is defined", "httpd_port is number", "httpd_port > 0", "httpd_port < 65536"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if https_ssl_enable is set correctly", "module": "ansible.builtin.assert", "index": 2, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if https_ssl_enable is set correctly"}, "module_options": {"that": ["https_ssl_enable is defined", "https_ssl_enable is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_ssl_servername is set correctly", "module": "ansible.builtin.assert", "index": 3, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_ssl_servername is set correctly"}, "module_options": {"that": ["httpd_ssl_servername is defined", "httpd_ssl_servername is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_ssl_port is set correctly", "module": "ansible.builtin.assert", "index": 4, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_ssl_port is set correctly"}, "module_options": {"that": ["httpd_ssl_port is defined", "httpd_ssl_port is number", "httpd_ssl_port > 0", "httpd_ssl_port < 65535", "httpd_ssl_port != httpd_port"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_locations is set correctly", "module": "ansible.builtin.assert", "index": 5, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_locations is set correctly", "when": ["httpd_locations is defined"]}, "module_options": {"that": ["httpd_locations is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item in httpd_locations is set correctly", "module": "ansible.builtin.assert", "index": 6, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item in httpd_locations is set correctly", "loop": "{{ httpd_locations }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_locations is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string", "item.location is defined", "item.location is string", "item.backend_url is defined", "item.backend_url is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 7, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_vhosts is set correctly", "when": ["httpd_vhosts is defined"]}, "module_options": {"that": ["httpd_vhosts is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item in httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 8, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item in httpd_vhosts is set correctly", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string", "item.servername is defined", "item.servername is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.create_docroot in httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 9, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.create_docroot in httpd_vhosts is set correctly", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined", "item.create_docroot is defined"]}, "module_options": {"that": ["item.create_docroot is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.serveralias in httpd_vhosts is set correctly", "module": "ansible.builtin.assert", "index": 10, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.serveralias in httpd_vhosts is set correctly", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined", "item.serveralias is defined"]}, "module_options": {"that": ["item.serveralias is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 11, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_directories is set correctly", "when": ["httpd_directories is defined"]}, "module_options": {"that": ["httpd_directories is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.name in httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 12, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.name in httpd_directories is set correctly", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_directories is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string", "item.path is defined", "item.path is string", "item.option is defined or item.allow_override is defined"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.options in httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 13, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.options in httpd_directories is set correctly", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_directories is defined", "item.options is defined"]}, "module_options": {"that": ["item.options is iterable"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if item.allow_override in httpd_directories is set correctly", "module": "ansible.builtin.assert", "index": 14, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if item.allow_override in httpd_directories is set correctly", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_directories is defined", "item.allow_override is defined"]}, "module_options": {"that": ["item.allow_override is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if httpd_remove_example is set correctly", "module": "ansible.builtin.assert", "index": 15, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/assert.yml", "options": {"name": "test if httpd_remove_example is set correctly"}, "module_options": {"that": ["httpd_remove_example is defined", "httpd_remove_example is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "ssl.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "tasks": [{"py/object": "struct4.Task", "name": "install ssl packages", "module": "ansible.builtin.package", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "options": {"name": "install ssl packages"}, "module_options": {"name": "{{ httpd_ssl_packages }}", "state": "present"}, "executable": "ansible.builtin.package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "place configuration", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "options": {"name": "place configuration", "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "ssl.conf.j2", "dest": "{{ httpd_config_directory }}/ssl.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure redirect from http to https", "module": "ansible.builtin.template", "index": 2, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/ssl.yml", "options": {"name": "configure redirect from http to https", "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "default_vhost.conf.j2", "dest": "{{ httpd_config_directory }}/default_vhost.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "locations.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/locations.yml", "tasks": [{"py/object": "struct4.Task", "name": "enable modules", "module": "community.general.apache2_module", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/locations.yml", "options": {"name": "enable modules", "loop": ["proxy", "proxy_http"], "when": ["ansible_os_family in [ \"Debian\", \"Suse\" ]"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "community.general.apache2_module", "executable_type": "Module", "fqcn": "community.general.apache2_module", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure locations", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/locations.yml", "options": {"name": "configure locations", "loop": "{{ httpd_locations }}", "loop_control": {"label": "{{ item.name }}"}, "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "location.conf.j2", "dest": "{{ httpd_config_directory }}/{{ item.name }}.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "vhosts.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/vhosts.yml", "tasks": [{"py/object": "struct4.Task", "name": "create docroot", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/vhosts.yml", "options": {"name": "create docroot", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["httpd_vhosts is defined", "item.documentroot is defined", "item.create_docroot is not defined or item.create_docroot"]}, "module_options": {"path": "{{ item.documentroot }}", "state": "directory", "mode": "0755"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure vhosts", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/vhosts.yml", "options": {"name": "configure vhosts", "loop": "{{ httpd_vhosts }}", "loop_control": {"label": "{{ item.name }}"}, "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "vhost.conf.j2", "dest": "{{ httpd_config_directory }}/{{ item.name }}.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "import assert.yml", "module": "ansible.builtin.import_tasks", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import assert.yml", "run_once": true, "delegate_to": "localhost"}, "module_options": "assert.yml", "executable": "assert.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "install apache httpd", "module": "ansible.builtin.package", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "install apache httpd"}, "module_options": {"name": "{{ httpd_packages }}", "state": "present"}, "executable": "ansible.builtin.package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "modify selinux settings", "module": "ansible.posix.seboolean", "index": 2, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "modify selinux settings", "when": ["ansible_selinux.status is defined", "ansible_selinux.status == \"enabled\""], "loop": "{{ httpd_sebooleans }}"}, "module_options": {"name": "{{ item }}", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {}}, {"py/object": "struct4.Task", "name": "allow connections to custom port", "module": "community.general.seport", "index": 3, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "allow connections to custom port", "loop": ["{{ httpd_port }}", "{{ httpd_ssl_port | default(omit) }}"]}, "module_options": {"ports": "{{ item }}", "proto": "tcp", "setype": "http_port_t", "state": "present"}, "executable": "community.general.seport", "executable_type": "Module", "fqcn": "community.general.seport", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure httpd", "module": "ansible.builtin.template", "index": 4, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "configure httpd", "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "{{ httpd_config_src }}", "dest": "{{ httpd_config_dest }}", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "import ssl.yml", "module": "ansible.builtin.import_tasks", "index": 5, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import ssl.yml", "when": ["https_ssl_enable"]}, "module_options": "ssl.yml", "executable": "ssl.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "import locations.yml", "module": "ansible.builtin.import_tasks", "index": 6, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import locations.yml", "when": ["httpd_locations is defined"]}, "module_options": "locations.yml", "executable": "locations.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "import vhosts.yml", "module": "ansible.builtin.import_tasks", "index": 7, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import vhosts.yml", "when": ["httpd_vhosts is defined"]}, "module_options": "vhosts.yml", "executable": "vhosts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure ports", "module": "ansible.builtin.template", "index": 8, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "configure ports", "notify": ["test httpd configuration validity", "restart httpd"], "when": ["ansible_os_family in [ \"Debian\", \"Suse\" ]"]}, "module_options": {"src": "{{ httpd_ports_conf }}.j2", "dest": "{{ httpd_server_root }}/{{ httpd_ports_conf }}", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "import directories.yml", "module": "ansible.builtin.import_tasks", "index": 9, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "import directories.yml", "when": ["httpd_directories is defined"]}, "module_options": "directories.yml", "executable": "directories.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers", "module": "ansible.builtin.meta", "index": 10, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "flush handlers"}, "module_options": "flush_handlers", "executable": "ansible.builtin.meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "removing default html", "module": "ansible.builtin.file", "index": 11, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "removing default html", "when": ["httpd_remove_example"]}, "module_options": {"path": "{{ httpd_data_directory }}/index.html", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "start and enable httpd", "module": "ansible.builtin.service", "index": 12, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/main.yml", "options": {"name": "start and enable httpd"}, "module_options": {"name": "{{ httpd_service }}", "state": "started", "enabled": true}, "executable": "ansible.builtin.service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "directories.yml", "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/directories.yml", "tasks": [{"py/object": "struct4.Task", "name": "create directories", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/directories.yml", "options": {"name": "create directories", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.path }}"}}, "module_options": {"path": "{{ item.path }}", "state": "directory", "mode": "0755"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure directories", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/robertdebock-httpd/robertdebock.httpd/tasks/directories.yml", "options": {"name": "configure directories", "loop": "{{ httpd_directories }}", "loop_control": {"label": "{{ item.name }}"}, "notify": ["test httpd configuration validity", "restart httpd"]}, "module_options": {"src": "directory.conf.j2", "dest": "{{ httpd_config_directory }}/{{ item.name }}.conf", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "robertdebock.httpd", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}