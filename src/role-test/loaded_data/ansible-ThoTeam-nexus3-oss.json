{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/ansible-ThoTeam-nexus3-oss", "installed_roles": [{"py/object": "struct4.Role", "name": "ansible-ThoTeam.nexus3-oss", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss", "fqcn": "ansible-ThoTeam.nexus3-oss", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "nexus-restore.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "tasks": [{"py/object": "struct4.Task", "name": "Make sure nexus is stopped", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {"name": "Make sure nexus is stopped", "changed_when": true, "notify": ["nexus-service-stop"]}, "module_options": {"msg": "trigger nexus stop"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run restoration script", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {"name": "Run restoration script", "tags": ["skip_ansible_lint"], "notify": ["nexus-service-restart", "wait-for-nexus", "wait-for-nexus-port"]}, "module_options": "nexus-blob-restore.sh {{ nexus_restore_point }} 2>&1 | tee -a {{ nexus_restore_log }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "nexus_install.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set detection method to fixed if we have a var", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set detection method to fixed if we have a var", "when": "nexus_version | length > 0"}, "module_options": {"nexus_version_detected_from": "fixed"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check nexus-latest link stat in {{ nexus_installation_dir }}", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Check nexus-latest link stat in {{ nexus_installation_dir }}", "register": "nexus_latest_link", "check_mode": false}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register current running version if any", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register current running version if any", "when": ["nexus_latest_link.stat.exists | default(false)", "nexus_latest_link.stat.islnk | default(false)"]}, "module_options": {"nexus_version_running": "{{\n  nexus_latest_link.stat.lnk_target\n  | regex_replace('^.*/nexus-(\\d*\\.\\d*\\.\\d*-\\d*)', '\\1')\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register nexus_version from currently installed", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register nexus_version from currently installed", "when": ["nexus_version_running is defined", "not (nexus_upgrade | default(false) | bool)"]}, "module_options": {"nexus_version": "{{ nexus_version_running }}", "nexus_version_detected_from": "installed"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Call latest nexus uri to get redirection", "module": "uri", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Call latest nexus uri to get redirection", "register": "nexus_latest_uri_call", "check_mode": false}, "module_options": {"url": "{{ nexus_download_url }}/latest-unix.tar.gz", "method": "CONNECT", "status_code": 302, "validate_certs": "{{ nexus_download_ssl_verify | default(omit) }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register nexus_version from latest nexus uri redirection", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register nexus_version from latest nexus uri redirection"}, "module_options": {"nexus_version": "{{\n  nexus_latest_uri_call.location\n  | regex_replace(\"^https://.*nexus-(\\d*\\.\\d*\\.\\d*-\\d*)-unix.tar.gz\", \"\\1\")\n}}", "nexus_version_detected_from": "latest"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print info about detected version to use", "module": "vars", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Print info about detected version to use", "debug": {"msg": "{{ version_info.split('\n') }}"}}, "module_options": {"version_info": "Used version: {{ nexus_version }}\nVersion detected from: {{ nexus_version_detected_from }}\nUpgrade allowed: {{ nexus_upgrade | default(false) | bool }}\nCurrent running version: {{ nexus_version_running | default('none') }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register nexus package name", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register nexus package name"}, "module_options": {"nexus_package": "nexus-{{ nexus_version }}-unix.tar.gz"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download nexus_package", "module": "get_url", "index": 8, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Download nexus_package", "notify": ["nexus-service-stop"]}, "module_options": {"url": "{{ nexus_download_url }}/{{ nexus_package }}", "dest": "{{ nexus_download_dir }}/{{ nexus_package }}", "force": false, "validate_certs": "{{ nexus_download_ssl_verify | default(omit) }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Nexus o/s group exists", "module": "group", "index": 9, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure Nexus o/s group exists"}, "module_options": {"name": "{{ nexus_os_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Nexus o/s user exists", "module": "user", "index": 10, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure Nexus o/s user exists"}, "module_options": {"name": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "home": "{{ nexus_os_user_home_dir }}", "shell": "/bin/bash", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Nexus installation directory exists", "module": "file", "index": 11, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure Nexus installation directory exists"}, "module_options": {"path": "{{ nexus_installation_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unpack Nexus download", "module": "unarchive", "index": 12, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Unpack Nexus download", "notify": ["nexus-service-stop"]}, "module_options": {"src": "{{ nexus_download_dir }}/{{ nexus_package }}", "dest": "{{ nexus_installation_dir }}", "creates": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}", "copy": false, "mode": 493}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure proper ownership of nexus installation directory", "module": "file", "index": 13, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure proper ownership of nexus installation directory"}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}", "recurse": true, "mode": "u=rwX,g=rX,o=rX"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update symlink nexus-latest", "module": "file", "index": 14, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Update symlink nexus-latest", "register": "nexus_latest_version", "notify": ["nexus-service-stop"]}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest", "src": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "state": "link", "follow": false}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 15, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unpacked data directory", "module": "file", "index": 16, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Delete unpacked data directory"}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest/data", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get path to default settings", "module": "set_fact", "index": 17, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to default settings", "when": "nexus_version is version_compare('3.1.0', '<')"}, "module_options": {"nexus_default_settings_file": "{{ nexus_installation_dir }}/nexus-latest/etc/org.sonatype.nexus.cfg"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get path to default settings", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to default settings", "when": "nexus_version is version_compare('3.1.0', '>=')"}, "module_options": {"nexus_default_settings_file": "{{ nexus_installation_dir }}/nexus-latest/etc/nexus-default.properties"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get application settings directories", "module": "set_fact", "index": 19, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get application settings directories", "when": "nexus_version is version_compare('3.1.0', '<')"}, "module_options": {"nexus_app_dir_settings_dirs": ["{{ nexus_installation_dir }}/nexus-latest/etc"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get application settings directories", "module": "set_fact", "index": 20, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get application settings directories", "when": "nexus_version is version_compare('3.1.0', '>=')"}, "module_options": {"nexus_app_dir_settings_dirs": ["{{ nexus_installation_dir }}/nexus-latest/etc", "{{ nexus_installation_dir }}/nexus-latest/etc/karaf", "{{ nexus_installation_dir }}/nexus-latest/etc/jetty", "{{ nexus_installation_dir }}/nexus-latest/etc/fabric", "{{ nexus_installation_dir }}/nexus-latest/etc/logback", "{{ nexus_installation_dir }}/nexus-latest/etc/scripts"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get rest API endpoint (v < 3.8.0)", "module": "set_fact", "index": 21, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get rest API endpoint (v < 3.8.0)", "when": "nexus_version is version_compare('3.8.0', '<')"}, "module_options": {"nexus_rest_api_endpoint": "service/siesta/rest/v1/script"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get rest API endpoint (v >= 3.8.0)", "module": "set_fact", "index": 22, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get rest API endpoint (v >= 3.8.0)", "when": "nexus_version is version_compare('3.8.0', '>=')"}, "module_options": {"nexus_rest_api_endpoint": "service/rest/v1/script"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get path to database restore dir (v < 3.11.0)", "module": "set_fact", "index": 23, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to database restore dir (v < 3.11.0)", "when": "nexus_version is version_compare('3.11.0', '<')"}, "module_options": {"nexus_db_restore_dir": "{{ nexus_data_dir }}/backup"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get path to database restore dir (v >= 3.11.0)", "module": "set_fact", "index": 24, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to database restore dir (v >= 3.11.0)", "when": "nexus_version is version_compare('3.11.0', '>=')"}, "module_options": {"nexus_db_restore_dir": "{{ nexus_data_dir }}/restore-from-backup"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow nexus to create first-time install configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "module": "file", "index": 25, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Allow nexus to create first-time install configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "with_items": "{{ nexus_app_dir_settings_dirs }}", "when": "nexus_latest_version.changed", "register": "chown_config_first_time", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": "0755", "recurse": false}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Nexus data directory", "module": "file", "index": 26, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create Nexus data directory"}, "module_options": {"path": "{{ nexus_data_dir }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus data directory", "module": "lineinfile", "index": 27, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus data directory", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Dkaraf.data=.*", "line": "-Dkaraf.data={{ nexus_data_dir }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup JVM logfile directory", "module": "lineinfile", "index": 28, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup JVM logfile directory", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-XX:LogFile=.*", "line": "-XX:LogFile={{ nexus_data_dir }}/log/jvm.log"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus default timezone", "module": "lineinfile", "index": 29, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus default timezone", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Duser.timezone=.*", "line": "-Duser.timezone={{ nexus_timezone }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus JVM min heap size", "module": "lineinfile", "index": 30, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus JVM min heap size", "notify": "nexus-service-stop"}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Xms.*", "line": "-Xms{{ nexus_min_heap_size }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus JVM max heap size", "module": "lineinfile", "index": 31, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus JVM max heap size", "notify": "nexus-service-stop"}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Xmx.*", "line": "-Xmx{{ nexus_max_heap_size }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus JVM max direct memory", "module": "lineinfile", "index": 32, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus JVM max direct memory", "notify": "nexus-service-stop"}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-XX:MaxDirectMemorySize=.*", "line": "-XX:MaxDirectMemorySize={{ nexus_max_direct_memory }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop the admin wizard from running", "module": "lineinfile", "index": 33, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Stop the admin wizard from running", "when": "nexus_version is version_compare('3.17.0', '>=')"}, "module_options": {"path": "{{ nexus_default_settings_file }}", "line": "nexus.onboarding.enabled={{ nexus_onboarding_wizard }}", "create": true, "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Nexus tmp directory", "module": "file", "index": 34, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create Nexus tmp directory"}, "module_options": {"path": "{{ nexus_tmp_dir }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Nexus backup directory", "module": "file", "index": 35, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create Nexus backup directory", "when": "nexus_backup_dir_create | bool"}, "module_options": {"path": "{{ nexus_backup_dir }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus tmp directory", "module": "lineinfile", "index": 36, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus tmp directory", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Djava.io.tmpdir=.*", "line": "-Djava.io.tmpdir={{ nexus_tmp_dir }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set NEXUS_HOME for the service user", "module": "lineinfile", "index": 37, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set NEXUS_HOME for the service user", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_os_user_home_dir }}/.bashrc", "regexp": "^export NEXUS_HOME=.*", "line": "export NEXUS_HOME={{ nexus_installation_dir }}/nexus-latest"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set nexus user", "module": "lineinfile", "index": 38, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus user", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.rc", "regexp": ".*run_as_user=.*", "line": "run_as_user=\"{{ nexus_os_user }}\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set nexus port", "module": "lineinfile", "index": 39, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus port", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^application-port=.*", "line": "application-port={{ nexus_default_port }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set nexus context path", "module": "lineinfile", "index": 40, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus context path", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^nexus-context-path=.*", "line": "nexus-context-path={{ nexus_default_context_path }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set nexus service listening ip to {{ nexus_application_host }}", "module": "lineinfile", "index": 41, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus service listening ip to {{ nexus_application_host }}", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^application-host=.*", "line": "application-host={{ nexus_application_host }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable creating groovy scripts in nexus", "module": "lineinfile", "index": 42, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Enable creating groovy scripts in nexus", "notify": ["nexus-service-stop"], "when": "nexus_version is version_compare('3.21.2', '>=')"}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^nexus.scripts.allowCreation=.*", "line": "nexus.scripts.allowCreation=true"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create systemd service configuration", "module": "template", "index": 43, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create systemd service configuration", "notify": ["systemd-reload"], "when": "ansible_service_mgr == 'systemd'"}, "module_options": {"src": "nexus.service", "dest": "/etc/systemd/system", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create sysv service configuration", "module": "file", "index": 44, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create sysv service configuration", "when": "ansible_service_mgr != 'systemd'"}, "module_options": {"path": "/etc/init.d/nexus", "src": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deploy backup restore script", "module": "template", "index": 45, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Deploy backup restore script"}, "module_options": {"src": "nexus-blob-restore.sh.j2", "dest": "{{ nexus_script_dir }}/nexus-blob-restore.sh", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink backup restore script to /sbin", "module": "file", "index": 46, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Symlink backup restore script to /sbin"}, "module_options": {"src": "{{ nexus_script_dir }}/nexus-blob-restore.sh", "dest": "/sbin/nexus-blob-restore.sh", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if data directory is empty (first-time install)", "module": "command", "index": 47, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Check if data directory is empty (first-time install)", "register": "nexus_data_dir_contents", "check_mode": false, "changed_when": false}, "module_options": "ls --ignore=lost+found {{ nexus_data_dir }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean cache for upgrade process", "module": "file", "index": 48, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Clean cache for upgrade process", "when": "nexus_latest_version.changed and nexus_data_dir_contents.stdout | length > 0", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ nexus_data_dir }}/clean_cache", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 49, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable nexus systemd service and make sure it is started", "module": "systemd", "index": 50, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Enable nexus systemd service and make sure it is started", "notify": ["wait-for-nexus", "wait-for-nexus-port"], "when": "ansible_service_mgr == 'systemd'"}, "module_options": {"name": "nexus.service", "enabled": true, "state": "started", "no_block": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable nexus sysv service and make sure it is started", "module": "service", "index": 51, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Enable nexus sysv service and make sure it is started", "notify": ["wait-for-nexus", "wait-for-nexus-port"], "when": "ansible_service_mgr != 'systemd'"}, "module_options": {"name": "nexus", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 52, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Chown configuration files from {{ nexus_installation_dir }}/nexus-latest/etc back to root", "module": "file", "index": 53, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Chown configuration files from {{ nexus_installation_dir }}/nexus-latest/etc back to root", "when": "chown_config_first_time.changed", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest/etc", "owner": "root", "group": "root", "mode": "a=rX,u+w", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Prevent nexus to create any new configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "module": "file", "index": 54, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Prevent nexus to create any new configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "with_items": "{{ nexus_app_dir_settings_dirs }}"}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "root", "mode": "0755", "recurse": false}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install plugins from remote source", "module": "get_url", "index": 55, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Install plugins from remote source", "with_items": "{{ nexus_plugin_urls }}"}, "module_options": {"url": "{{ item }}", "dest": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}/deploy/"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Access scripts API endpoint with defined admin password", "module": "uri", "index": 56, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Access scripts API endpoint with defined admin password", "register": "nexus_api_head_with_defined_password", "check_mode": false}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}", "method": "HEAD", "user": "admin", "password": "{{ nexus_admin_password }}", "force_basic_auth": true, "status_code": "200, 401", "validate_certs": "{{ nexus_api_validate_certs }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register defined admin password for next operations", "module": "set_fact", "index": 57, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register defined admin password for next operations", "when": "nexus_api_head_with_defined_password.status == 200", "no_log": true}, "module_options": {"current_nexus_admin_password": "{{ nexus_admin_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if admin.password file exists", "module": "stat", "index": 58, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Check if admin.password file exists", "register": "admin_password_file"}, "module_options": {"path": "{{ nexus_data_dir }}/admin.password"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Slurp content of remote generated password file", "module": "slurp", "index": 59, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Slurp content of remote generated password file", "register": "_slurpedpass"}, "module_options": {"src": "{{ nexus_data_dir }}/admin.password"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default password from slurped content", "module": "set_fact", "index": 60, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set default password from slurped content"}, "module_options": {"nexus_default_admin_password": "{{ _slurpedpass.content | b64decode }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Access scripts API endpoint with default admin password", "module": "uri", "index": 61, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Access scripts API endpoint with default admin password", "register": "nexus_api_head_with_default_password", "when": "nexus_api_head_with_defined_password.status == 401"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}", "method": "HEAD", "user": "admin", "password": "{{ nexus_default_admin_password }}", "force_basic_auth": true, "status_code": "200, 401", "validate_certs": "{{ nexus_api_validate_certs }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register default admin password for next operations", "module": "set_fact", "index": 62, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register default admin password for next operations", "when": "(nexus_api_head_with_default_password.status | default(false)) == 200"}, "module_options": {"current_nexus_admin_password": "{{ nexus_default_admin_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure current Nexus password is known", "module": "fail", "index": 63, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure current Nexus password is known", "when": "current_nexus_admin_password is not defined"}, "module_options": {"msg": "Failed to determine current Nexus password (it is neither the default/generated nor the defined password). If you are trying to change nexus_admin_password after first install, please set `-e nexus_default_admin_password=oldPassword` on the ansible-playbook command line. See https://github.com/ansible-ThoTeam/nexus3-oss/blob/master/README.md#change-admin-password-after-first-install"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force (re-)registration of groovy scripts (purge reference dir)", "module": "file", "index": 64, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Force (re-)registration of groovy scripts (purge reference dir)", "when": "nexus_force_groovy_scripts_registration | default(false)"}, "module_options": {"path": "{{ nexus_data_dir }}/groovy-raw-scripts", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directories to hold current groovy scripts for reference", "module": "file", "index": 65, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create directories to hold current groovy scripts for reference", "with_items": ["{{ nexus_data_dir }}/groovy-raw-scripts/current", "{{ nexus_data_dir }}/groovy-raw-scripts/new"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Archive scripts", "module": "archive", "index": 66, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Archive scripts", "become": false, "run_once": true, "delegate_to": "localhost"}, "module_options": {"path": "{{ role_path }}/files/groovy/*", "dest": "/tmp/nexus-upload-groovy-scripts.tar.gz", "mode": 420}, "executable": "archive", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Upload new scripts", "module": "unarchive", "index": 67, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Upload new scripts"}, "module_options": {"src": "/tmp/nexus-upload-groovy-scripts.tar.gz", "dest": "{{ nexus_data_dir }}/groovy-raw-scripts/new/", "mode": 420}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sync new scripts to old and get differences", "module": "shell", "index": 68, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Sync new scripts to old and get differences", "register": "nexus_groovy_files_changed", "check_mode": false, "changed_when": false, "args": {"warn": false, "executable": "/bin/bash"}}, "module_options": "set -o pipefail && rsync -ric {{ nexus_data_dir }}/groovy-raw-scripts/new/ {{ nexus_data_dir }}/groovy-raw-scripts/current/ | cut -d\" \" -f 2 | sed \"s/\\.groovy//g\"\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Declare new or changed groovy scripts in nexus", "module": "include_tasks", "index": 69, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Declare new or changed groovy scripts in nexus", "with_items": "{{ nexus_groovy_files_changed.stdout_lines }}"}, "module_options": "declare_script_each.yml", "executable": "declare_script_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 70, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"vars": {"script_name": "update_admin_password", "args": {"new_password": "{{ nexus_admin_password }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Admin password changed", "module": "set_fact", "index": 71, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Admin password changed", "no_log": true}, "module_options": {"current_nexus_admin_password": "{{ nexus_admin_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clear generated password file from install (nexus > 3.17)", "module": "file", "index": 72, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Clear generated password file from install (nexus > 3.17)", "when": "nexus_version is version_compare('3.17.0', '>=')"}, "module_options": {"path": "{{ nexus_data_dir }}/admin.password", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "declare_script_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/declare_script_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "Removing (potential) previously declared Groovy script {{ item }}", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/declare_script_each.yml", "options": {"name": "Removing (potential) previously declared Groovy script {{ item }}"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}/{{ item }}", "user": "admin", "password": "{{ current_nexus_admin_password }}", "method": "DELETE", "force_basic_auth": true, "status_code": "204,404", "validate_certs": "{{ nexus_api_validate_certs }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Declaring Groovy script {{ item }}", "module": "uri", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/declare_script_each.yml", "options": {"name": "Declaring Groovy script {{ item }}"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}", "user": "admin", "password": "{{ current_nexus_admin_password }}", "body_format": "json", "method": "POST", "force_basic_auth": true, "status_code": 204, "validate_certs": "{{ nexus_api_validate_certs }}", "body": {"name": "{{ item }}", "type": "groovy", "content": "{{ lookup('file', 'groovy/' + item + '.groovy') }}"}}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "process_repos_list.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "tasks": [{"py/object": "struct4.Task", "name": "apply defaults to maven proxy repos", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to maven proxy repos"}, "module_options": {"nexus_repos_maven_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_maven_proxy -%}\n  {{ result.append(_nexus_repos_maven_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to maven hosted repos", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to maven hosted repos"}, "module_options": {"nexus_repos_maven_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_maven_hosted -%}\n  {{ result.append(_nexus_repos_maven_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to maven group repos", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to maven group repos"}, "module_options": {"nexus_repos_maven_group": "{%- set result=[] -%} {%- for repo in nexus_repos_maven_group -%}\n  {{ result.append(_nexus_repos_maven_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add maven repositories to global repos list", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add maven repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_maven_proxy | map('combine', {\"format\": \"maven2\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_maven_hosted | map('combine', {\"format\": \"maven2\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_maven_group | map('combine', {\"format\": \"maven2\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to docker proxy repos", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to docker proxy repos"}, "module_options": {"nexus_repos_docker_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_docker_proxy -%}\n  {{ result.append(_nexus_repos_docker_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to docker hosted repos", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to docker hosted repos"}, "module_options": {"nexus_repos_docker_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_docker_hosted -%}\n  {{ result.append(_nexus_repos_docker_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to docker group repos", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to docker group repos"}, "module_options": {"nexus_repos_docker_group": "{%- set result=[] -%} {%- for repo in nexus_repos_docker_group -%}\n  {{ result.append(_nexus_repos_docker_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add docker repositories to global repos list", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add docker repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_docker_proxy | map('combine', {\"format\": \"docker\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_docker_hosted | map('combine', {\"format\": \"docker\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_docker_group | map('combine', {\"format\": \"docker\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to pypi proxy repos", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to pypi proxy repos"}, "module_options": {"nexus_repos_pypi_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_pypi_proxy -%}\n  {{ result.append(_nexus_repos_pypi_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to pypi hosted repos", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to pypi hosted repos"}, "module_options": {"nexus_repos_pypi_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_pypi_hosted -%}\n  {{ result.append(_nexus_repos_pypi_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to pypi group repos", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to pypi group repos"}, "module_options": {"nexus_repos_pypi_group": "{%- set result=[] -%} {%- for repo in nexus_repos_pypi_group -%}\n  {{ result.append(_nexus_repos_pypi_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add pypi repositories to global repos list", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add pypi repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_pypi_proxy | map('combine', {\"format\": \"pypi\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_pypi_hosted | map('combine', {\"format\": \"pypi\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_pypi_group | map('combine', {\"format\": \"pypi\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to raw proxy repos", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to raw proxy repos"}, "module_options": {"nexus_repos_raw_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_raw_proxy -%}\n  {{ result.append(_nexus_repos_raw_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to raw hosted repos", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to raw hosted repos"}, "module_options": {"nexus_repos_raw_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_raw_hosted -%}\n  {{ result.append(_nexus_repos_raw_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to raw group repos", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to raw group repos"}, "module_options": {"nexus_repos_raw_group": "{%- set result=[] -%} {%- for repo in nexus_repos_raw_group -%}\n  {{ result.append(_nexus_repos_raw_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add raw repositories to global repos list", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add raw repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_raw_proxy | map('combine', {\"format\": \"raw\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_raw_hosted | map('combine', {\"format\": \"raw\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_raw_group | map('combine', {\"format\": \"raw\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to rubygems proxy repos", "module": "set_fact", "index": 16, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to rubygems proxy repos"}, "module_options": {"nexus_repos_rubygems_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_rubygems_proxy -%}\n  {{ result.append(_nexus_repos_rubygems_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to rubygems hosted repos", "module": "set_fact", "index": 17, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to rubygems hosted repos"}, "module_options": {"nexus_repos_rubygems_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_rubygems_hosted -%}\n  {{ result.append(_nexus_repos_rubygems_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to rubygems group repos", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to rubygems group repos"}, "module_options": {"nexus_repos_rubygems_group": "{%- set result=[] -%} {%- for repo in nexus_repos_rubygems_group -%}\n  {{ result.append(_nexus_repos_rubygems_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add rubygems repositories to global repos list", "module": "set_fact", "index": 19, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add rubygems repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_rubygems_proxy | map('combine', {\"format\": \"rubygems\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_rubygems_hosted | map('combine', {\"format\": \"rubygems\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_rubygems_group | map('combine', {\"format\": \"rubygems\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to bower proxy repos", "module": "set_fact", "index": 20, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to bower proxy repos"}, "module_options": {"nexus_repos_bower_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_bower_proxy -%}\n  {{ result.append(_nexus_repos_bower_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to bower hosted repos", "module": "set_fact", "index": 21, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to bower hosted repos"}, "module_options": {"nexus_repos_bower_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_bower_hosted -%}\n  {{ result.append(_nexus_repos_bower_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to bower group repos", "module": "set_fact", "index": 22, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to bower group repos"}, "module_options": {"nexus_repos_bower_group": "{%- set result=[] -%} {%- for repo in nexus_repos_bower_group -%}\n  {{ result.append(_nexus_repos_bower_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add bower repositories to global repos list", "module": "set_fact", "index": 23, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add bower repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_bower_proxy | map('combine', {\"format\": \"bower\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_bower_hosted | map('combine', {\"format\": \"bower\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_bower_group | map('combine', {\"format\": \"bower\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to npm proxy repos", "module": "set_fact", "index": 24, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to npm proxy repos"}, "module_options": {"nexus_repos_npm_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_npm_proxy -%}\n  {{ result.append(_nexus_repos_npm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to npm hosted repos", "module": "set_fact", "index": 25, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to npm hosted repos"}, "module_options": {"nexus_repos_npm_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_npm_hosted -%}\n  {{ result.append(_nexus_repos_npm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to npm group repos", "module": "set_fact", "index": 26, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to npm group repos"}, "module_options": {"nexus_repos_npm_group": "{%- set result=[] -%} {%- for repo in nexus_repos_npm_group -%}\n  {{ result.append(_nexus_repos_npm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add npm repositories to global repos list", "module": "set_fact", "index": 27, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add npm repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_npm_proxy | map('combine', {\"format\": \"npm\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_npm_hosted | map('combine', {\"format\": \"npm\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_npm_group | map('combine', {\"format\": \"npm\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to nuget proxy repos", "module": "set_fact", "index": 28, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to nuget proxy repos"}, "module_options": {"nexus_repos_nuget_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_nuget_proxy -%}\n  {{ result.append(_nexus_repos_nuget_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to nuget hosted repos", "module": "set_fact", "index": 29, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to nuget hosted repos"}, "module_options": {"nexus_repos_nuget_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_nuget_hosted -%}\n  {{ result.append(_nexus_repos_nuget_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to nuget group repos", "module": "set_fact", "index": 30, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to nuget group repos"}, "module_options": {"nexus_repos_nuget_group": "{%- set result=[] -%} {%- for repo in nexus_repos_nuget_group -%}\n  {{ result.append(_nexus_repos_nuget_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add nuget repositories to global repos list", "module": "set_fact", "index": 31, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add nuget repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_nuget_proxy | map('combine', {\"format\": \"nuget\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_nuget_hosted | map('combine', {\"format\": \"nuget\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_nuget_group | map('combine', {\"format\": \"nuget\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to gitlfs hosted repos", "module": "set_fact", "index": 32, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to gitlfs hosted repos"}, "module_options": {"nexus_repos_gitlfs_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_gitlfs_hosted -%}\n  {{ result.append(_nexus_repos_gitlfs_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add gitlfs repositories to global repos list", "module": "set_fact", "index": 33, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add gitlfs repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_gitlfs_hosted | map('combine', {\"format\": \"gitlfs\", \"type\": \"hosted\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to yum proxy repos", "module": "set_fact", "index": 34, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to yum proxy repos"}, "module_options": {"nexus_repos_yum_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_yum_proxy -%}\n  {{ result.append(_nexus_repos_yum_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to yum hosted repos", "module": "set_fact", "index": 35, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to yum hosted repos"}, "module_options": {"nexus_repos_yum_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_yum_hosted -%}\n  {{ result.append(_nexus_repos_yum_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to yum group repos", "module": "set_fact", "index": 36, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to yum group repos"}, "module_options": {"nexus_repos_yum_group": "{%- set result=[] -%} {%- for repo in nexus_repos_yum_group -%}\n  {{ result.append(_nexus_repos_yum_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add yum repositories to global repos list", "module": "set_fact", "index": 37, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add yum repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_yum_proxy | map('combine', {\"format\": \"yum\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_yum_hosted | map('combine', {\"format\": \"yum\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_yum_group | map('combine', {\"format\": \"yum\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to apt proxy repos", "module": "set_fact", "index": 38, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to apt proxy repos"}, "module_options": {"nexus_repos_apt_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_apt_proxy -%}\n  {{ result.append(_nexus_repos_apt_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to apt hosted repos", "module": "set_fact", "index": 39, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to apt hosted repos"}, "module_options": {"nexus_repos_apt_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_apt_hosted -%}\n  {{ result.append(_nexus_repos_apt_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add apt repositories to global repos list", "module": "set_fact", "index": 40, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add apt repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_apt_proxy | map('combine', {\"format\": \"apt\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_apt_hosted | map('combine', {\"format\": \"apt\", \"type\": \"hosted\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to helm proxy repos", "module": "set_fact", "index": 41, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to helm proxy repos"}, "module_options": {"nexus_repos_helm_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_helm_proxy -%}\n  {{ result.append(_nexus_repos_helm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to helm hosted repos", "module": "set_fact", "index": 42, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to helm hosted repos"}, "module_options": {"nexus_repos_helm_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_helm_hosted -%}\n  {{ result.append(_nexus_repos_helm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add helm repositories to global repos list", "module": "set_fact", "index": 43, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add helm repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_helm_proxy | map('combine', {\"format\": \"helm\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_helm_hosted | map('combine', {\"format\": \"helm\", \"type\": \"hosted\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to r proxy repos", "module": "set_fact", "index": 44, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to r proxy repos"}, "module_options": {"nexus_repos_r_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_r_proxy -%}\n  {{ result.append(_nexus_repos_r_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to r hosted repos", "module": "set_fact", "index": 45, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to r hosted repos"}, "module_options": {"nexus_repos_r_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_r_hosted -%}\n  {{ result.append(_nexus_repos_r_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to r group repos", "module": "set_fact", "index": 46, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to r group repos"}, "module_options": {"nexus_repos_r_group": "{%- set result=[] -%} {%- for repo in nexus_repos_r_group -%}\n  {{ result.append(_nexus_repos_r_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add r repositories to global repos list", "module": "set_fact", "index": 47, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add r repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_r_proxy | map('combine', {\"format\": \"r\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_r_hosted | map('combine', {\"format\": \"r\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_r_group | map('combine', {\"format\": \"r\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to p2 proxy repos", "module": "set_fact", "index": 48, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to p2 proxy repos"}, "module_options": {"nexus_repos_p2_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_p2_proxy -%}\n  {{ result.append(_nexus_repos_p2_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add p2 repositories to global repos list", "module": "set_fact", "index": 49, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add p2 repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_p2_proxy | map('combine', {\"format\": \"p2\", \"type\": \"proxy\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to conda proxy repos", "module": "set_fact", "index": 50, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to conda proxy repos"}, "module_options": {"nexus_repos_r_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_conda_proxy -%}\n  {{ result.append(_nexus_repos_conda_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add conda repositories to global repos list", "module": "set_fact", "index": 51, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add conda repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_r_proxy | map('combine', {\"format\": \"conda\", \"type\": \"proxy\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to go proxy repos", "module": "set_fact", "index": 52, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to go proxy repos"}, "module_options": {"nexus_repos_go_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_go_proxy -%}\n  {{ result.append(_nexus_repos_go_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to go group repos", "module": "set_fact", "index": 53, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to go group repos"}, "module_options": {"nexus_repos_go_group": "{%- set result=[] -%} {%- for repo in nexus_repos_go_group -%}\n  {{ result.append(_nexus_repos_go_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add go repositories to global repos list", "module": "set_fact", "index": 54, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add go repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_go_proxy | map('combine', {\"format\": \"go\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_go_group | map('combine', {\"format\": \"go\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "create_task_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/create_task_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/create_task_each.yml", "options": {"vars": {"script_name": "create_task", "args": "{{ item }}"}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup_ldap_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/setup_ldap_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/setup_ldap_each.yml", "options": {"vars": {"script_name": "setup_ldap", "args": {"name": "{{ item.ldap_name }}", "protocol": "{{ item.ldap_protocol }}", "hostname": "{{ item.ldap_hostname }}", "port": "{{ item.ldap_port }}", "use_trust_store": "{{ item.ldap_use_trust_store | default(false) | bool }}", "auth": "{{ item.ldap_auth | default('none') }}", "username": "{{ item.ldap_auth_username | default('') }}", "password": "{{ item.ldap_auth_password | default('') }}", "search_base": "{{ item.ldap_search_base }}", "user_base_dn": "{{ item.ldap_user_base_dn | default('ou=users') }}", "user_ldap_filter": "{{ item.ldap_user_filter | default('') }}", "user_object_class": "{{ item.ldap_user_object_class }}", "user_id_attribute": "{{ item.ldap_user_id_attribute }}", "user_real_name_attribute": "{{ item.ldap_user_real_name_attribute }}", "user_email_attribute": "{{ item.ldap_user_email_attribute }}", "map_groups_as_roles": "{{ item.ldap_map_groups_as_roles | default(false) }}", "map_groups_as_roles_type": "{{ item.ldap_map_groups_as_roles_type | default('static') }}", "user_memberof_attribute": "{{ item.ldap_user_memberof_attribute | default('memberOf') }}", "group_base_dn": "{{ item.ldap_group_base_dn | default('ou=groups') }}", "group_object_class": "{{ item.ldap_group_object_class | default('groupOfNames') }}", "group_id_attribute": "{{ item.ldap_group_id_attribute | default('cn') }}", "group_member_attribute": "{{ item.ldap_group_member_attribute | default('member') }}", "group_member_format": "{{ item.ldap_group_member_format | default('uid=${username},ou=users,dc=yourcompany') }}", "user_subtree": "{{ item.ldap_user_subtree | default(false) }}", "group_subtree": "{{ item.ldap_group_subtree | default(false) }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux-RedHat.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Make sure we have the necessary yum packages available for selinux", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-RedHat.yml", "options": {"name": "Make sure we have the necessary yum packages available for selinux", "vars": {"py_suffix": "{{ \"3\" if ansible_python.version.major == 3 else \"\" }}"}}, "module_options": {"name": ["libselinux-python{{ py_suffix }}", "libsemanage-python{{ py_suffix }}"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "call_script.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/call_script.yml", "tasks": [{"py/object": "struct4.Task", "name": "Calling Groovy script {{ script_name }}", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/call_script.yml", "options": {"name": "Calling Groovy script {{ script_name }}", "register": "script_run", "failed_when": "script_run | nexus_groovy_error | bool", "changed_when": "script_run | nexus_groovy_changed | bool"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}/{{ script_name }}/run", "user": "admin", "password": "{{ current_nexus_admin_password }}", "headers": {"Content-Type": "text/plain"}, "method": "POST", "force_basic_auth": true, "validate_certs": "{{ nexus_api_validate_certs }}", "body": "{{ args | to_json }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Details about runned script if verbose mode is on", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/call_script.yml", "options": {"name": "Details about runned script if verbose mode is on", "when": "not ansible_check_mode"}, "module_options": {"msg": "{{ script_run | nexus_groovy_details }}", "verbosity": 1}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "nexus_purge.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "tasks": [{"py/object": "struct4.Task", "name": "Make sure nexus is stopped", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "Make sure nexus is stopped", "changed_when": true, "notify": ["nexus-service-stop"]}, "module_options": {"msg": "trigger nexus stop"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "get target path of current installed nexus version", "module": "command", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "get target path of current installed nexus version", "register": "nexus_readlink_latest_call", "failed_when": false, "changed_when": false, "check_mode": false}, "module_options": "readlink {{ nexus_installation_dir }}/nexus-latest", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge Nexus", "module": "file", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "Purge Nexus", "with_items": ["{{ nexus_data_dir }}", "{{ nexus_readlink_latest_call.stdout | default(omit) }}", "{{ nexus_restore_log }}", "{{ nexus_installation_dir }}/nexus-latest"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "remove nexus package if present", "module": "package", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "remove nexus package if present"}, "module_options": {"name": "nexus", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux-Debian.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Make sure we have the necessary deb packages available for selinux", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-Debian.yml", "options": {"name": "Make sure we have the necessary deb packages available for selinux", "with_items": ["python-selinux", "python-semanage"]}, "module_options": {"name": "{{ item }}", "update_cache": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "delete_repo_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_repo_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_repo_each.yml", "options": {"vars": {"script_name": "delete_repo", "args": {"name": "{{ item }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "delete_blobstore_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_blobstore_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_blobstore_each.yml", "options": {"vars": {"script_name": "delete_blobstore", "args": "{{ item }}"}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "httpd_reverse_proxy_config.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "tasks": [{"py/object": "struct4.Task", "name": "Copy {{ httpd_package_name }} vhost", "module": "template", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Copy {{ httpd_package_name }} vhost", "notify": ["httpd-service-reload", "wait-for-httpd"]}, "module_options": {"src": "nexus-vhost.conf", "dest": "{{ httpd_config_dir }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy SSL certificate and optional chain file", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Copy SSL certificate and optional chain file", "when": "(httpd_copy_ssl_files | bool) and (item | length > 0)", "notify": ["httpd-service-reload", "wait-for-httpd"], "loop": "{{ [httpd_ssl_certificate_file] + [httpd_ssl_certificate_chain_file | default()] | unique }}"}, "module_options": {"src": "{{ item }}", "dest": "{{ certificate_file_dest }}", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy SSL certificate key file", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Copy SSL certificate key file", "when": "httpd_copy_ssl_files | bool", "notify": ["httpd-service-reload", "wait-for-httpd"]}, "module_options": {"src": "{{ httpd_ssl_certificate_key_file }}", "dest": "{{ certificate_key_dest }}", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setsebool httpd_can_network_connect", "module": "seboolean", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Setsebool httpd_can_network_connect", "when": "ansible_selinux.status is defined and ansible_selinux.status == \"enabled\""}, "module_options": {"name": "httpd_can_network_connect", "persistent": true, "state": true}, "executable": "seboolean", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check requirements and deprecated features/vars", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Check requirements and deprecated features/vars"}, "module_options": "requirements_and_deprecated.yml", "executable": "requirements_and_deprecated.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS specific variables.", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Include OS specific variables."}, "module_options": "configure-{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS specific selinux libs and utils if needed", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Include OS specific selinux libs and utils if needed", "when": "ansible_selinux.status is defined and ansible_selinux.status == \"enabled\""}, "module_options": "selinux-{{ ansible_os_family }}.yml", "executable": "selinux-{{ ansible_os_family }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if SystemD service is installed", "module": "stat", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Check if SystemD service is installed", "register": "nexus_systemd_service_file"}, "module_options": {"path": "/etc/systemd/system/nexus.service"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if sysv service is installed", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Check if sysv service is installed", "register": "nexus_sysv_service_file"}, "module_options": {"path": "/etc/init.d/nexus"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"when": "nexus_purge | default(false) | bool"}, "module_options": "nexus_purge.yml", "executable": "nexus_purge.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Digest splited blob list var", "module": "include_vars", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Digest splited blob list var", "when": "nexus_blob_split | bool"}, "module_options": "blob_vars.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {}, "module_options": "nexus_install.yml", "executable": "nexus_install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"when": "httpd_setup_enable | bool"}, "module_options": "httpd_reverse_proxy_config.yml", "executable": "httpd_reverse_proxy_config.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure nexus http proxy", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure nexus http proxy", "vars": {"script_name": "setup_http_proxy", "args": {"with_http_proxy": "{{ nexus_with_http_proxy }}", "http_proxy_host": "{{ nexus_http_proxy_host }}", "http_proxy_port": "{{ nexus_http_proxy_port }}", "http_proxy_username": "{{ nexus_http_proxy_username }}", "http_proxy_password": "{{ nexus_http_proxy_password }}", "with_https_proxy": "{{ nexus_with_https_proxy }}", "https_proxy_host": "{{ nexus_https_proxy_host }}", "https_proxy_port": "{{ nexus_https_proxy_port }}", "https_proxy_username": "{{ nexus_https_proxy_username }}", "https_proxy_password": "{{ nexus_https_proxy_password }}", "proxy_exclude_hosts": "{{ nexus_proxy_exclude_hosts }}"}}, "when": "nexus_with_http_proxy or nexus_with_https_proxy"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deleting default repositories", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Deleting default repositories", "with_items": ["maven-central", "maven-public", "maven-releases", "maven-snapshots", "nuget-group", "nuget-hosted", "nuget.org-proxy"], "when": "(nexus_data_dir_contents.stdout | length == 0) and nexus_delete_default_repos"}, "module_options": "delete_repo_each.yml", "executable": "delete_repo_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deleting default blobstore", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Deleting default blobstore", "with_items": "{{\n  {'default':{'blob': 'default'}}\n  | combine(nexus_blob_names)\n  | json_query(\"*.{name: blob}\")\n  | list\n  | unique\n}}", "when": "(nexus_data_dir_contents.stdout | length == 0) and nexus_delete_default_blobstore"}, "module_options": "delete_blobstore_each.yml", "executable": "delete_blobstore_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"with_items": "{{ ldap_connections }}"}, "module_options": "setup_ldap_each.yml", "executable": "setup_ldap_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check content selectors", "module": "include_tasks", "index": 13, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check content selectors", "vars": {"script_name": "create_content_selectors_from_list", "args": "{{ nexus_content_selectors }}"}, "when": "nexus_content_selectors | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to privileges", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "apply defaults to privileges"}, "module_options": {"nexus_privileges": "{%- set result=[] -%} {%- for privilege in nexus_privileges -%}\n  {{ result.append(_nexus_privilege_defaults | combine(privilege)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directories for blob stores.", "module": "file", "index": 15, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create directories for blob stores.", "when": "item.path is defined", "loop": "{{ nexus_blobstores }}"}, "module_options": {"path": "{{ item['path'] }}", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "state": "directory", "recurse": "{{ nexus_blobstores_recurse_owner | default(false) | bool }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/Check blobstores", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/Check blobstores", "vars": {"script_name": "create_blobstores_from_list", "args": "{{ nexus_blobstores }}"}, "when": "nexus_blobstores | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restore nexus backup", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Restore nexus backup", "when": "nexus_restore_point is defined"}, "module_options": "nexus-restore.yml", "executable": "nexus-restore.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check cleanup policies", "module": "include_tasks", "index": 18, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check cleanup policies", "vars": {"script_name": "create_cleanup_policies_from_list", "args": "{{ nexus_repos_cleanup_policies }}"}, "when": "nexus_repos_cleanup_policies | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Apply defaults to repositories configurations and process a single list", "module": "include_tasks", "index": 19, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Apply defaults to repositories configurations and process a single list"}, "module_options": "process_repos_list.yml", "executable": "process_repos_list.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create configured repositories", "module": "include_tasks", "index": 20, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create configured repositories", "vars": {"script_name": "create_repos_from_list", "args": "{{ _nexus_repos_global_list }}"}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check privileges", "module": "include_tasks", "index": 21, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check privileges", "vars": {"script_name": "setup_privileges_from_list", "args": "{{ nexus_privileges }}"}, "when": "nexus_privileges | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check roles", "module": "include_tasks", "index": 22, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check roles", "vars": {"script_name": "setup_roles_from_list", "args": "{{ nexus_roles }}"}, "when": "nexus_roles | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check local users", "module": "include_tasks", "index": 23, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check local users", "vars": {"script_name": "setup_users_from_list", "args": "{{ nexus_local_users }}"}, "when": "nexus_local_users | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check ldap users", "module": "include_tasks", "index": 24, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check ldap users", "vars": {"script_name": "setup_ldap_users_from_list", "args": "{{ nexus_ldap_users }}"}, "when": "nexus_ldap_users | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 25, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_anonymous_access", "args": {"anonymous_access": "{{ nexus_anonymous_access }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 26, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_base_url", "args": {"base_url": "{{ nexus_public_scheme }}://{{ nexus_public_hostname }}/"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 27, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_realms", "args": {"nuget_api_key_realm": "{{ nexus_nuget_api_key_realm }}", "npm_bearer_token_realm": "{{ nexus_npm_bearer_token_realm }}", "rut_auth_realm": "{{ nexus_rut_auth_realm }}", "ldap_realm": "{{ nexus_ldap_realm }}", "docker_bearer_token_realm": "{{ nexus_docker_bearer_token_realm }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure RUT Auth header", "module": "include_tasks", "index": 28, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure RUT Auth header", "vars": {"script_name": "setup_capability", "args": {"capability_typeId": "rutauth", "capability_enabled": true, "capability_properties": {"httpHeader": "{{ nexus_rut_auth_header }}"}}}, "when": "nexus_rut_auth_header is defined"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 29, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_email", "args": {"email_server_enabled": "{{ nexus_email_server_enabled }}", "email_server_host": "{{ nexus_email_server_host }}", "email_server_port": "{{ nexus_email_server_port }}", "email_server_username": "{{ nexus_email_server_username }}", "email_server_password": "{{ nexus_email_server_password }}", "email_from_address": "{{ nexus_email_from_address }}", "email_subject_prefix": "{{ nexus_email_subject_prefix }}", "email_tls_enabled": "{{ nexus_email_tls_enabled }}", "email_tls_required": "{{ nexus_email_tls_required }}", "email_ssl_on_connect_enabled": "{{ nexus_email_ssl_on_connect_enabled }}", "email_ssl_check_server_identity_enabled": "{{ nexus_email_ssl_check_server_identity_enabled }}", "email_trust_store_enabled": "{{ nexus_email_trust_store_enabled }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure branding capability", "module": "include_tasks", "index": 30, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure branding capability", "vars": {"script_name": "setup_capability", "args": {"capability_typeId": "rapture.branding", "capability_enabled": "{{ (nexus_branding_footer | length > 0) and (nexus_branding_header | length > 0) }}", "capability_properties": {"footerHtml": "{{ nexus_branding_footer }}", "headerHtml": "{{ nexus_branding_header }}", "footerEnabled": "{{ nexus_branding_footer | length > 0 }}", "headerEnabled": "{{ nexus_branding_header | length > 0 }}"}}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure audit capability", "module": "include_tasks", "index": 31, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure audit capability", "vars": {"script_name": "setup_capability", "args": {"capability_typeId": "audit", "capability_enabled": "{{ nexus_audit_enabled | bool }}", "capability_properties": {}}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define backup task if backup is configured", "module": "set_fact", "index": 32, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Define backup task if backup is configured", "when": "nexus_backup_configure | bool"}, "module_options": {"_nexus_backup_task": [{"name": "db and blobstores backup", "typeId": "script", "schedule_type": "{{ nexus_backup_schedule_type }}", "cron": "{{ nexus_backup_cron }}", "start_date_time": "{{ nexus_backup_start_date_time | default('') }}", "weekly_days": "{{ nexus_backup_weekly_days | default([]) }}", "monthly_days": "{{ nexus_backup_monthly_days | default([]) }}", "taskProperties": {"language": "groovy", "source": "{{ lookup('template', './templates/backup.groovy.j2') }}"}}]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create scheduled tasks (with backup task if relevant)", "module": "include_tasks", "index": 33, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create scheduled tasks (with backup task if relevant)", "with_items": "{{ nexus_scheduled_tasks + _nexus_backup_task | default([]) }}", "when": "nexus_run_provisionning | default(true) | bool"}, "module_options": "create_task_each.yml", "executable": "create_task_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "requirements_and_deprecated.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "tasks": [{"py/object": "struct4.Task", "name": "Try to use jmespath on a test var", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Try to use jmespath on a test var"}, "module_options": {"voidvar": "{{ [] | json_query('[]') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Broken compatibility => nexus_package is now dynamically calculated", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Broken compatibility => nexus_package is now dynamically calculated", "when": "nexus_package is defined"}, "module_options": {"msg": "You have set the variable nexus_package in your playbook. Starting from version 2.2.0 of this role, this is not compatible with the new nexus latest version detection feature and is not supported anymore. Please use the nexus_version variable only."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Broken compatibility => purge var moved to nexus_purge", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Broken compatibility => purge var moved to nexus_purge", "when": "purge is defined"}, "module_options": {"msg": "You have set the purge variable to reset nexus. Starting from version 2.2.3 of this role, this variable has been renamed nexus_purge. Please fix the var name accordingly on you command line call."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Variable refactoring - public_hostname is now nexus_public_hostname", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Variable refactoring - public_hostname is now nexus_public_hostname", "when": "public_hosname | default('') | length > 0 and public_hostname != nexus_public_hostname and nexus_public_hostname == 'nexus.vm'"}, "module_options": {"msg": "Version 2.3.0 of this role introduced a variable name change: public_hostname was renamed to nexus_public_hostname. We have detected that public_hostname is set in your vars ({{ public_hostname }}) and is different from nexus_public_hostname which still has its default value ({{ nexus_public_hostname }}). Fix this by setting a correct value for nexus_public_hostname and remove public_hostname if possible."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Coding standard: proxy_url is not supported anymore for docker proxy repos", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Coding standard: proxy_url is not supported anymore for docker proxy repos", "when": ["nexus_repos_docker_proxy | length > 0", "nexus_repos_docker_proxy | json_query('[?proxy_url]') | list | length > 0"]}, "module_options": {"msg": "proxy_url used to be the variable to configure docker proxy repositories in nexus3-oss role. Since version 2.3.0, all repository configuration use the same standard var remote_url. Please review your configurations in nexus_repos_docker_proxy and rename the variable accordingly."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print debug message about our internal var", "module": "vars", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Print debug message about our internal var", "debug": {"msg": "{{ error_msg.split('\n') }}"}}, "module_options": {"error_msg": "_nexus_repos_global_list is set somewhere in your playbook/inventory.\nThis is an internal var that must be unset when the role starts executing.\nPlease unset _nexus_repos_global_list from your playbook/inventory"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail as we cannot run correctly with internal var set", "module": "fail", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Fail as we cannot run correctly with internal var set"}, "module_options": {"msg": "Unset _nexus_repos_global_list. See debug message above"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Make sure nexus is stopped", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {"name": "Make sure nexus is stopped", "changed_when": true, "notify": ["nexus-service-stop"]}, "module_options": {"msg": "trigger nexus stop"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Run restoration script", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {"name": "Run restoration script", "tags": ["skip_ansible_lint"], "notify": ["nexus-service-restart", "wait-for-nexus", "wait-for-nexus-port"]}, "module_options": "nexus-blob-restore.sh {{ nexus_restore_point }} 2>&1 | tee -a {{ nexus_restore_log }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set detection method to fixed if we have a var", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set detection method to fixed if we have a var", "when": "nexus_version | length > 0"}, "module_options": {"nexus_version_detected_from": "fixed"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Check nexus-latest link stat in {{ nexus_installation_dir }}", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Check nexus-latest link stat in {{ nexus_installation_dir }}", "register": "nexus_latest_link", "check_mode": false}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Register current running version if any", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register current running version if any", "when": ["nexus_latest_link.stat.exists | default(false)", "nexus_latest_link.stat.islnk | default(false)"]}, "module_options": {"nexus_version_running": "{{\n  nexus_latest_link.stat.lnk_target\n  | regex_replace('^.*/nexus-(\\d*\\.\\d*\\.\\d*-\\d*)', '\\1')\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Register nexus_version from currently installed", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register nexus_version from currently installed", "when": ["nexus_version_running is defined", "not (nexus_upgrade | default(false) | bool)"]}, "module_options": {"nexus_version": "{{ nexus_version_running }}", "nexus_version_detected_from": "installed"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Call latest nexus uri to get redirection", "module": "uri", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Call latest nexus uri to get redirection", "register": "nexus_latest_uri_call", "check_mode": false}, "module_options": {"url": "{{ nexus_download_url }}/latest-unix.tar.gz", "method": "CONNECT", "status_code": 302, "validate_certs": "{{ nexus_download_ssl_verify | default(omit) }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Register nexus_version from latest nexus uri redirection", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register nexus_version from latest nexus uri redirection"}, "module_options": {"nexus_version": "{{\n  nexus_latest_uri_call.location\n  | regex_replace(\"^https://.*nexus-(\\d*\\.\\d*\\.\\d*-\\d*)-unix.tar.gz\", \"\\1\")\n}}", "nexus_version_detected_from": "latest"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Print info about detected version to use", "module": "vars", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Print info about detected version to use", "debug": {"msg": "{{ version_info.split('\n') }}"}}, "module_options": {"version_info": "Used version: {{ nexus_version }}\nVersion detected from: {{ nexus_version_detected_from }}\nUpgrade allowed: {{ nexus_upgrade | default(false) | bool }}\nCurrent running version: {{ nexus_version_running | default('none') }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Register nexus package name", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register nexus package name"}, "module_options": {"nexus_package": "nexus-{{ nexus_version }}-unix.tar.gz"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Download nexus_package", "module": "get_url", "index": 8, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Download nexus_package", "notify": ["nexus-service-stop"]}, "module_options": {"url": "{{ nexus_download_url }}/{{ nexus_package }}", "dest": "{{ nexus_download_dir }}/{{ nexus_package }}", "force": false, "validate_certs": "{{ nexus_download_ssl_verify | default(omit) }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Ensure Nexus o/s group exists", "module": "group", "index": 9, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure Nexus o/s group exists"}, "module_options": {"name": "{{ nexus_os_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Ensure Nexus o/s user exists", "module": "user", "index": 10, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure Nexus o/s user exists"}, "module_options": {"name": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "home": "{{ nexus_os_user_home_dir }}", "shell": "/bin/bash", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Ensure Nexus installation directory exists", "module": "file", "index": 11, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure Nexus installation directory exists"}, "module_options": {"path": "{{ nexus_installation_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Unpack Nexus download", "module": "unarchive", "index": 12, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Unpack Nexus download", "notify": ["nexus-service-stop"]}, "module_options": {"src": "{{ nexus_download_dir }}/{{ nexus_package }}", "dest": "{{ nexus_installation_dir }}", "creates": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}", "copy": false, "mode": 493}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Ensure proper ownership of nexus installation directory", "module": "file", "index": 13, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure proper ownership of nexus installation directory"}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}", "recurse": true, "mode": "u=rwX,g=rX,o=rX"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Update symlink nexus-latest", "module": "file", "index": 14, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Update symlink nexus-latest", "register": "nexus_latest_version", "notify": ["nexus-service-stop"]}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest", "src": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "state": "link", "follow": false}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 15, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Delete unpacked data directory", "module": "file", "index": 16, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Delete unpacked data directory"}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest/data", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Get path to default settings", "module": "set_fact", "index": 17, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to default settings", "when": "nexus_version is version_compare('3.1.0', '<')"}, "module_options": {"nexus_default_settings_file": "{{ nexus_installation_dir }}/nexus-latest/etc/org.sonatype.nexus.cfg"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Get path to default settings", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to default settings", "when": "nexus_version is version_compare('3.1.0', '>=')"}, "module_options": {"nexus_default_settings_file": "{{ nexus_installation_dir }}/nexus-latest/etc/nexus-default.properties"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Get application settings directories", "module": "set_fact", "index": 19, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get application settings directories", "when": "nexus_version is version_compare('3.1.0', '<')"}, "module_options": {"nexus_app_dir_settings_dirs": ["{{ nexus_installation_dir }}/nexus-latest/etc"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Get application settings directories", "module": "set_fact", "index": 20, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get application settings directories", "when": "nexus_version is version_compare('3.1.0', '>=')"}, "module_options": {"nexus_app_dir_settings_dirs": ["{{ nexus_installation_dir }}/nexus-latest/etc", "{{ nexus_installation_dir }}/nexus-latest/etc/karaf", "{{ nexus_installation_dir }}/nexus-latest/etc/jetty", "{{ nexus_installation_dir }}/nexus-latest/etc/fabric", "{{ nexus_installation_dir }}/nexus-latest/etc/logback", "{{ nexus_installation_dir }}/nexus-latest/etc/scripts"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Get rest API endpoint (v < 3.8.0)", "module": "set_fact", "index": 21, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get rest API endpoint (v < 3.8.0)", "when": "nexus_version is version_compare('3.8.0', '<')"}, "module_options": {"nexus_rest_api_endpoint": "service/siesta/rest/v1/script"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Get rest API endpoint (v >= 3.8.0)", "module": "set_fact", "index": 22, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get rest API endpoint (v >= 3.8.0)", "when": "nexus_version is version_compare('3.8.0', '>=')"}, "module_options": {"nexus_rest_api_endpoint": "service/rest/v1/script"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Get path to database restore dir (v < 3.11.0)", "module": "set_fact", "index": 23, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to database restore dir (v < 3.11.0)", "when": "nexus_version is version_compare('3.11.0', '<')"}, "module_options": {"nexus_db_restore_dir": "{{ nexus_data_dir }}/backup"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Get path to database restore dir (v >= 3.11.0)", "module": "set_fact", "index": 24, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to database restore dir (v >= 3.11.0)", "when": "nexus_version is version_compare('3.11.0', '>=')"}, "module_options": {"nexus_db_restore_dir": "{{ nexus_data_dir }}/restore-from-backup"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Allow nexus to create first-time install configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "module": "file", "index": 25, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Allow nexus to create first-time install configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "with_items": "{{ nexus_app_dir_settings_dirs }}", "when": "nexus_latest_version.changed", "register": "chown_config_first_time", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": "0755", "recurse": false}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Create Nexus data directory", "module": "file", "index": 26, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create Nexus data directory"}, "module_options": {"path": "{{ nexus_data_dir }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Setup Nexus data directory", "module": "lineinfile", "index": 27, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus data directory", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Dkaraf.data=.*", "line": "-Dkaraf.data={{ nexus_data_dir }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Setup JVM logfile directory", "module": "lineinfile", "index": 28, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup JVM logfile directory", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-XX:LogFile=.*", "line": "-XX:LogFile={{ nexus_data_dir }}/log/jvm.log"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Setup Nexus default timezone", "module": "lineinfile", "index": 29, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus default timezone", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Duser.timezone=.*", "line": "-Duser.timezone={{ nexus_timezone }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Setup Nexus JVM min heap size", "module": "lineinfile", "index": 30, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus JVM min heap size", "notify": "nexus-service-stop"}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Xms.*", "line": "-Xms{{ nexus_min_heap_size }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Setup Nexus JVM max heap size", "module": "lineinfile", "index": 31, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus JVM max heap size", "notify": "nexus-service-stop"}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Xmx.*", "line": "-Xmx{{ nexus_max_heap_size }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Setup Nexus JVM max direct memory", "module": "lineinfile", "index": 32, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus JVM max direct memory", "notify": "nexus-service-stop"}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-XX:MaxDirectMemorySize=.*", "line": "-XX:MaxDirectMemorySize={{ nexus_max_direct_memory }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Stop the admin wizard from running", "module": "lineinfile", "index": 33, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Stop the admin wizard from running", "when": "nexus_version is version_compare('3.17.0', '>=')"}, "module_options": {"path": "{{ nexus_default_settings_file }}", "line": "nexus.onboarding.enabled={{ nexus_onboarding_wizard }}", "create": true, "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Create Nexus tmp directory", "module": "file", "index": 34, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create Nexus tmp directory"}, "module_options": {"path": "{{ nexus_tmp_dir }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Create Nexus backup directory", "module": "file", "index": 35, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create Nexus backup directory", "when": "nexus_backup_dir_create | bool"}, "module_options": {"path": "{{ nexus_backup_dir }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 36}": {"py/object": "struct4.Task", "name": "Setup Nexus tmp directory", "module": "lineinfile", "index": 36, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus tmp directory", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Djava.io.tmpdir=.*", "line": "-Djava.io.tmpdir={{ nexus_tmp_dir }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 37}": {"py/object": "struct4.Task", "name": "Set NEXUS_HOME for the service user", "module": "lineinfile", "index": 37, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set NEXUS_HOME for the service user", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_os_user_home_dir }}/.bashrc", "regexp": "^export NEXUS_HOME=.*", "line": "export NEXUS_HOME={{ nexus_installation_dir }}/nexus-latest"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 38}": {"py/object": "struct4.Task", "name": "Set nexus user", "module": "lineinfile", "index": 38, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus user", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.rc", "regexp": ".*run_as_user=.*", "line": "run_as_user=\"{{ nexus_os_user }}\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 39}": {"py/object": "struct4.Task", "name": "Set nexus port", "module": "lineinfile", "index": 39, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus port", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^application-port=.*", "line": "application-port={{ nexus_default_port }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 40}": {"py/object": "struct4.Task", "name": "Set nexus context path", "module": "lineinfile", "index": 40, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus context path", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^nexus-context-path=.*", "line": "nexus-context-path={{ nexus_default_context_path }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 41}": {"py/object": "struct4.Task", "name": "Set nexus service listening ip to {{ nexus_application_host }}", "module": "lineinfile", "index": 41, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus service listening ip to {{ nexus_application_host }}", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^application-host=.*", "line": "application-host={{ nexus_application_host }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 42}": {"py/object": "struct4.Task", "name": "Enable creating groovy scripts in nexus", "module": "lineinfile", "index": 42, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Enable creating groovy scripts in nexus", "notify": ["nexus-service-stop"], "when": "nexus_version is version_compare('3.21.2', '>=')"}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^nexus.scripts.allowCreation=.*", "line": "nexus.scripts.allowCreation=true"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 43}": {"py/object": "struct4.Task", "name": "Create systemd service configuration", "module": "template", "index": 43, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create systemd service configuration", "notify": ["systemd-reload"], "when": "ansible_service_mgr == 'systemd'"}, "module_options": {"src": "nexus.service", "dest": "/etc/systemd/system", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 44}": {"py/object": "struct4.Task", "name": "Create sysv service configuration", "module": "file", "index": 44, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create sysv service configuration", "when": "ansible_service_mgr != 'systemd'"}, "module_options": {"path": "/etc/init.d/nexus", "src": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 45}": {"py/object": "struct4.Task", "name": "Deploy backup restore script", "module": "template", "index": 45, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Deploy backup restore script"}, "module_options": {"src": "nexus-blob-restore.sh.j2", "dest": "{{ nexus_script_dir }}/nexus-blob-restore.sh", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 46}": {"py/object": "struct4.Task", "name": "Symlink backup restore script to /sbin", "module": "file", "index": 46, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Symlink backup restore script to /sbin"}, "module_options": {"src": "{{ nexus_script_dir }}/nexus-blob-restore.sh", "dest": "/sbin/nexus-blob-restore.sh", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 47}": {"py/object": "struct4.Task", "name": "Check if data directory is empty (first-time install)", "module": "command", "index": 47, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Check if data directory is empty (first-time install)", "register": "nexus_data_dir_contents", "check_mode": false, "changed_when": false}, "module_options": "ls --ignore=lost+found {{ nexus_data_dir }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 48}": {"py/object": "struct4.Task", "name": "Clean cache for upgrade process", "module": "file", "index": 48, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Clean cache for upgrade process", "when": "nexus_latest_version.changed and nexus_data_dir_contents.stdout | length > 0", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ nexus_data_dir }}/clean_cache", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 49}": {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 49, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 50}": {"py/object": "struct4.Task", "name": "Enable nexus systemd service and make sure it is started", "module": "systemd", "index": 50, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Enable nexus systemd service and make sure it is started", "notify": ["wait-for-nexus", "wait-for-nexus-port"], "when": "ansible_service_mgr == 'systemd'"}, "module_options": {"name": "nexus.service", "enabled": true, "state": "started", "no_block": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 51}": {"py/object": "struct4.Task", "name": "Enable nexus sysv service and make sure it is started", "module": "service", "index": 51, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Enable nexus sysv service and make sure it is started", "notify": ["wait-for-nexus", "wait-for-nexus-port"], "when": "ansible_service_mgr != 'systemd'"}, "module_options": {"name": "nexus", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 52}": {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 52, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 53}": {"py/object": "struct4.Task", "name": "Chown configuration files from {{ nexus_installation_dir }}/nexus-latest/etc back to root", "module": "file", "index": 53, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Chown configuration files from {{ nexus_installation_dir }}/nexus-latest/etc back to root", "when": "chown_config_first_time.changed", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest/etc", "owner": "root", "group": "root", "mode": "a=rX,u+w", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 54}": {"py/object": "struct4.Task", "name": "Prevent nexus to create any new configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "module": "file", "index": 54, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Prevent nexus to create any new configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "with_items": "{{ nexus_app_dir_settings_dirs }}"}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "root", "mode": "0755", "recurse": false}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 55}": {"py/object": "struct4.Task", "name": "Install plugins from remote source", "module": "get_url", "index": 55, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Install plugins from remote source", "with_items": "{{ nexus_plugin_urls }}"}, "module_options": {"url": "{{ item }}", "dest": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}/deploy/"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 56}": {"py/object": "struct4.Task", "name": "Access scripts API endpoint with defined admin password", "module": "uri", "index": 56, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Access scripts API endpoint with defined admin password", "register": "nexus_api_head_with_defined_password", "check_mode": false}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}", "method": "HEAD", "user": "admin", "password": "{{ nexus_admin_password }}", "force_basic_auth": true, "status_code": "200, 401", "validate_certs": "{{ nexus_api_validate_certs }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 57}": {"py/object": "struct4.Task", "name": "Register defined admin password for next operations", "module": "set_fact", "index": 57, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register defined admin password for next operations", "when": "nexus_api_head_with_defined_password.status == 200", "no_log": true}, "module_options": {"current_nexus_admin_password": "{{ nexus_admin_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 58}": {"py/object": "struct4.Task", "name": "Check if admin.password file exists", "module": "stat", "index": 58, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Check if admin.password file exists", "register": "admin_password_file"}, "module_options": {"path": "{{ nexus_data_dir }}/admin.password"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 59}": {"py/object": "struct4.Task", "name": "Slurp content of remote generated password file", "module": "slurp", "index": 59, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Slurp content of remote generated password file", "register": "_slurpedpass"}, "module_options": {"src": "{{ nexus_data_dir }}/admin.password"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 60}": {"py/object": "struct4.Task", "name": "Set default password from slurped content", "module": "set_fact", "index": 60, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set default password from slurped content"}, "module_options": {"nexus_default_admin_password": "{{ _slurpedpass.content | b64decode }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 61}": {"py/object": "struct4.Task", "name": "Access scripts API endpoint with default admin password", "module": "uri", "index": 61, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Access scripts API endpoint with default admin password", "register": "nexus_api_head_with_default_password", "when": "nexus_api_head_with_defined_password.status == 401"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}", "method": "HEAD", "user": "admin", "password": "{{ nexus_default_admin_password }}", "force_basic_auth": true, "status_code": "200, 401", "validate_certs": "{{ nexus_api_validate_certs }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 62}": {"py/object": "struct4.Task", "name": "Register default admin password for next operations", "module": "set_fact", "index": 62, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register default admin password for next operations", "when": "(nexus_api_head_with_default_password.status | default(false)) == 200"}, "module_options": {"current_nexus_admin_password": "{{ nexus_default_admin_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 63}": {"py/object": "struct4.Task", "name": "Ensure current Nexus password is known", "module": "fail", "index": 63, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure current Nexus password is known", "when": "current_nexus_admin_password is not defined"}, "module_options": {"msg": "Failed to determine current Nexus password (it is neither the default/generated nor the defined password). If you are trying to change nexus_admin_password after first install, please set `-e nexus_default_admin_password=oldPassword` on the ansible-playbook command line. See https://github.com/ansible-ThoTeam/nexus3-oss/blob/master/README.md#change-admin-password-after-first-install"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 64}": {"py/object": "struct4.Task", "name": "Force (re-)registration of groovy scripts (purge reference dir)", "module": "file", "index": 64, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Force (re-)registration of groovy scripts (purge reference dir)", "when": "nexus_force_groovy_scripts_registration | default(false)"}, "module_options": {"path": "{{ nexus_data_dir }}/groovy-raw-scripts", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 65}": {"py/object": "struct4.Task", "name": "Create directories to hold current groovy scripts for reference", "module": "file", "index": 65, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create directories to hold current groovy scripts for reference", "with_items": ["{{ nexus_data_dir }}/groovy-raw-scripts/current", "{{ nexus_data_dir }}/groovy-raw-scripts/new"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 66}": {"py/object": "struct4.Task", "name": "Archive scripts", "module": "archive", "index": 66, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Archive scripts", "become": false, "run_once": true, "delegate_to": "localhost"}, "module_options": {"path": "{{ role_path }}/files/groovy/*", "dest": "/tmp/nexus-upload-groovy-scripts.tar.gz", "mode": 420}, "executable": "archive", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 67}": {"py/object": "struct4.Task", "name": "Upload new scripts", "module": "unarchive", "index": 67, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Upload new scripts"}, "module_options": {"src": "/tmp/nexus-upload-groovy-scripts.tar.gz", "dest": "{{ nexus_data_dir }}/groovy-raw-scripts/new/", "mode": 420}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 68}": {"py/object": "struct4.Task", "name": "Sync new scripts to old and get differences", "module": "shell", "index": 68, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Sync new scripts to old and get differences", "register": "nexus_groovy_files_changed", "check_mode": false, "changed_when": false, "args": {"warn": false, "executable": "/bin/bash"}}, "module_options": "set -o pipefail && rsync -ric {{ nexus_data_dir }}/groovy-raw-scripts/new/ {{ nexus_data_dir }}/groovy-raw-scripts/current/ | cut -d\" \" -f 2 | sed \"s/\\.groovy//g\"\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 69}": {"py/object": "struct4.Task", "name": "Declare new or changed groovy scripts in nexus", "module": "include_tasks", "index": 69, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Declare new or changed groovy scripts in nexus", "with_items": "{{ nexus_groovy_files_changed.stdout_lines }}"}, "module_options": "declare_script_each.yml", "executable": "declare_script_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 70}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 70, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"vars": {"script_name": "update_admin_password", "args": {"new_password": "{{ nexus_admin_password }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 71}": {"py/object": "struct4.Task", "name": "Admin password changed", "module": "set_fact", "index": 71, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Admin password changed", "no_log": true}, "module_options": {"current_nexus_admin_password": "{{ nexus_admin_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml\", \"index\": 72}": {"py/object": "struct4.Task", "name": "Clear generated password file from install (nexus > 3.17)", "module": "file", "index": 72, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Clear generated password file from install (nexus > 3.17)", "when": "nexus_version is version_compare('3.17.0', '>=')"}, "module_options": {"path": "{{ nexus_data_dir }}/admin.password", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/declare_script_each.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Removing (potential) previously declared Groovy script {{ item }}", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/declare_script_each.yml", "options": {"name": "Removing (potential) previously declared Groovy script {{ item }}"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}/{{ item }}", "user": "admin", "password": "{{ current_nexus_admin_password }}", "method": "DELETE", "force_basic_auth": true, "status_code": "204,404", "validate_certs": "{{ nexus_api_validate_certs }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/declare_script_each.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Declaring Groovy script {{ item }}", "module": "uri", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/declare_script_each.yml", "options": {"name": "Declaring Groovy script {{ item }}"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}", "user": "admin", "password": "{{ current_nexus_admin_password }}", "body_format": "json", "method": "POST", "force_basic_auth": true, "status_code": 204, "validate_certs": "{{ nexus_api_validate_certs }}", "body": {"name": "{{ item }}", "type": "groovy", "content": "{{ lookup('file', 'groovy/' + item + '.groovy') }}"}}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "apply defaults to maven proxy repos", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to maven proxy repos"}, "module_options": {"nexus_repos_maven_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_maven_proxy -%}\n  {{ result.append(_nexus_repos_maven_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "apply defaults to maven hosted repos", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to maven hosted repos"}, "module_options": {"nexus_repos_maven_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_maven_hosted -%}\n  {{ result.append(_nexus_repos_maven_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "apply defaults to maven group repos", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to maven group repos"}, "module_options": {"nexus_repos_maven_group": "{%- set result=[] -%} {%- for repo in nexus_repos_maven_group -%}\n  {{ result.append(_nexus_repos_maven_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Add maven repositories to global repos list", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add maven repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_maven_proxy | map('combine', {\"format\": \"maven2\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_maven_hosted | map('combine', {\"format\": \"maven2\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_maven_group | map('combine', {\"format\": \"maven2\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "apply defaults to docker proxy repos", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to docker proxy repos"}, "module_options": {"nexus_repos_docker_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_docker_proxy -%}\n  {{ result.append(_nexus_repos_docker_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "apply defaults to docker hosted repos", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to docker hosted repos"}, "module_options": {"nexus_repos_docker_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_docker_hosted -%}\n  {{ result.append(_nexus_repos_docker_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "apply defaults to docker group repos", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to docker group repos"}, "module_options": {"nexus_repos_docker_group": "{%- set result=[] -%} {%- for repo in nexus_repos_docker_group -%}\n  {{ result.append(_nexus_repos_docker_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Add docker repositories to global repos list", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add docker repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_docker_proxy | map('combine', {\"format\": \"docker\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_docker_hosted | map('combine', {\"format\": \"docker\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_docker_group | map('combine', {\"format\": \"docker\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "apply defaults to pypi proxy repos", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to pypi proxy repos"}, "module_options": {"nexus_repos_pypi_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_pypi_proxy -%}\n  {{ result.append(_nexus_repos_pypi_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "apply defaults to pypi hosted repos", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to pypi hosted repos"}, "module_options": {"nexus_repos_pypi_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_pypi_hosted -%}\n  {{ result.append(_nexus_repos_pypi_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "apply defaults to pypi group repos", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to pypi group repos"}, "module_options": {"nexus_repos_pypi_group": "{%- set result=[] -%} {%- for repo in nexus_repos_pypi_group -%}\n  {{ result.append(_nexus_repos_pypi_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Add pypi repositories to global repos list", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add pypi repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_pypi_proxy | map('combine', {\"format\": \"pypi\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_pypi_hosted | map('combine', {\"format\": \"pypi\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_pypi_group | map('combine', {\"format\": \"pypi\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "apply defaults to raw proxy repos", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to raw proxy repos"}, "module_options": {"nexus_repos_raw_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_raw_proxy -%}\n  {{ result.append(_nexus_repos_raw_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "apply defaults to raw hosted repos", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to raw hosted repos"}, "module_options": {"nexus_repos_raw_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_raw_hosted -%}\n  {{ result.append(_nexus_repos_raw_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "apply defaults to raw group repos", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to raw group repos"}, "module_options": {"nexus_repos_raw_group": "{%- set result=[] -%} {%- for repo in nexus_repos_raw_group -%}\n  {{ result.append(_nexus_repos_raw_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Add raw repositories to global repos list", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add raw repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_raw_proxy | map('combine', {\"format\": \"raw\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_raw_hosted | map('combine', {\"format\": \"raw\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_raw_group | map('combine', {\"format\": \"raw\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "apply defaults to rubygems proxy repos", "module": "set_fact", "index": 16, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to rubygems proxy repos"}, "module_options": {"nexus_repos_rubygems_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_rubygems_proxy -%}\n  {{ result.append(_nexus_repos_rubygems_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "apply defaults to rubygems hosted repos", "module": "set_fact", "index": 17, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to rubygems hosted repos"}, "module_options": {"nexus_repos_rubygems_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_rubygems_hosted -%}\n  {{ result.append(_nexus_repos_rubygems_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "apply defaults to rubygems group repos", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to rubygems group repos"}, "module_options": {"nexus_repos_rubygems_group": "{%- set result=[] -%} {%- for repo in nexus_repos_rubygems_group -%}\n  {{ result.append(_nexus_repos_rubygems_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Add rubygems repositories to global repos list", "module": "set_fact", "index": 19, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add rubygems repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_rubygems_proxy | map('combine', {\"format\": \"rubygems\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_rubygems_hosted | map('combine', {\"format\": \"rubygems\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_rubygems_group | map('combine', {\"format\": \"rubygems\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "apply defaults to bower proxy repos", "module": "set_fact", "index": 20, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to bower proxy repos"}, "module_options": {"nexus_repos_bower_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_bower_proxy -%}\n  {{ result.append(_nexus_repos_bower_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "apply defaults to bower hosted repos", "module": "set_fact", "index": 21, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to bower hosted repos"}, "module_options": {"nexus_repos_bower_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_bower_hosted -%}\n  {{ result.append(_nexus_repos_bower_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "apply defaults to bower group repos", "module": "set_fact", "index": 22, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to bower group repos"}, "module_options": {"nexus_repos_bower_group": "{%- set result=[] -%} {%- for repo in nexus_repos_bower_group -%}\n  {{ result.append(_nexus_repos_bower_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Add bower repositories to global repos list", "module": "set_fact", "index": 23, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add bower repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_bower_proxy | map('combine', {\"format\": \"bower\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_bower_hosted | map('combine', {\"format\": \"bower\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_bower_group | map('combine', {\"format\": \"bower\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "apply defaults to npm proxy repos", "module": "set_fact", "index": 24, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to npm proxy repos"}, "module_options": {"nexus_repos_npm_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_npm_proxy -%}\n  {{ result.append(_nexus_repos_npm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "apply defaults to npm hosted repos", "module": "set_fact", "index": 25, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to npm hosted repos"}, "module_options": {"nexus_repos_npm_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_npm_hosted -%}\n  {{ result.append(_nexus_repos_npm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "apply defaults to npm group repos", "module": "set_fact", "index": 26, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to npm group repos"}, "module_options": {"nexus_repos_npm_group": "{%- set result=[] -%} {%- for repo in nexus_repos_npm_group -%}\n  {{ result.append(_nexus_repos_npm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Add npm repositories to global repos list", "module": "set_fact", "index": 27, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add npm repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_npm_proxy | map('combine', {\"format\": \"npm\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_npm_hosted | map('combine', {\"format\": \"npm\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_npm_group | map('combine', {\"format\": \"npm\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "apply defaults to nuget proxy repos", "module": "set_fact", "index": 28, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to nuget proxy repos"}, "module_options": {"nexus_repos_nuget_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_nuget_proxy -%}\n  {{ result.append(_nexus_repos_nuget_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "apply defaults to nuget hosted repos", "module": "set_fact", "index": 29, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to nuget hosted repos"}, "module_options": {"nexus_repos_nuget_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_nuget_hosted -%}\n  {{ result.append(_nexus_repos_nuget_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "apply defaults to nuget group repos", "module": "set_fact", "index": 30, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to nuget group repos"}, "module_options": {"nexus_repos_nuget_group": "{%- set result=[] -%} {%- for repo in nexus_repos_nuget_group -%}\n  {{ result.append(_nexus_repos_nuget_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Add nuget repositories to global repos list", "module": "set_fact", "index": 31, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add nuget repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_nuget_proxy | map('combine', {\"format\": \"nuget\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_nuget_hosted | map('combine', {\"format\": \"nuget\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_nuget_group | map('combine', {\"format\": \"nuget\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "apply defaults to gitlfs hosted repos", "module": "set_fact", "index": 32, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to gitlfs hosted repos"}, "module_options": {"nexus_repos_gitlfs_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_gitlfs_hosted -%}\n  {{ result.append(_nexus_repos_gitlfs_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Add gitlfs repositories to global repos list", "module": "set_fact", "index": 33, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add gitlfs repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_gitlfs_hosted | map('combine', {\"format\": \"gitlfs\", \"type\": \"hosted\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "apply defaults to yum proxy repos", "module": "set_fact", "index": 34, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to yum proxy repos"}, "module_options": {"nexus_repos_yum_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_yum_proxy -%}\n  {{ result.append(_nexus_repos_yum_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "apply defaults to yum hosted repos", "module": "set_fact", "index": 35, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to yum hosted repos"}, "module_options": {"nexus_repos_yum_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_yum_hosted -%}\n  {{ result.append(_nexus_repos_yum_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 36}": {"py/object": "struct4.Task", "name": "apply defaults to yum group repos", "module": "set_fact", "index": 36, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to yum group repos"}, "module_options": {"nexus_repos_yum_group": "{%- set result=[] -%} {%- for repo in nexus_repos_yum_group -%}\n  {{ result.append(_nexus_repos_yum_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 37}": {"py/object": "struct4.Task", "name": "Add yum repositories to global repos list", "module": "set_fact", "index": 37, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add yum repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_yum_proxy | map('combine', {\"format\": \"yum\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_yum_hosted | map('combine', {\"format\": \"yum\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_yum_group | map('combine', {\"format\": \"yum\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 38}": {"py/object": "struct4.Task", "name": "apply defaults to apt proxy repos", "module": "set_fact", "index": 38, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to apt proxy repos"}, "module_options": {"nexus_repos_apt_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_apt_proxy -%}\n  {{ result.append(_nexus_repos_apt_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 39}": {"py/object": "struct4.Task", "name": "apply defaults to apt hosted repos", "module": "set_fact", "index": 39, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to apt hosted repos"}, "module_options": {"nexus_repos_apt_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_apt_hosted -%}\n  {{ result.append(_nexus_repos_apt_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 40}": {"py/object": "struct4.Task", "name": "Add apt repositories to global repos list", "module": "set_fact", "index": 40, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add apt repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_apt_proxy | map('combine', {\"format\": \"apt\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_apt_hosted | map('combine', {\"format\": \"apt\", \"type\": \"hosted\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 41}": {"py/object": "struct4.Task", "name": "apply defaults to helm proxy repos", "module": "set_fact", "index": 41, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to helm proxy repos"}, "module_options": {"nexus_repos_helm_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_helm_proxy -%}\n  {{ result.append(_nexus_repos_helm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 42}": {"py/object": "struct4.Task", "name": "apply defaults to helm hosted repos", "module": "set_fact", "index": 42, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to helm hosted repos"}, "module_options": {"nexus_repos_helm_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_helm_hosted -%}\n  {{ result.append(_nexus_repos_helm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 43}": {"py/object": "struct4.Task", "name": "Add helm repositories to global repos list", "module": "set_fact", "index": 43, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add helm repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_helm_proxy | map('combine', {\"format\": \"helm\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_helm_hosted | map('combine', {\"format\": \"helm\", \"type\": \"hosted\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 44}": {"py/object": "struct4.Task", "name": "apply defaults to r proxy repos", "module": "set_fact", "index": 44, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to r proxy repos"}, "module_options": {"nexus_repos_r_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_r_proxy -%}\n  {{ result.append(_nexus_repos_r_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 45}": {"py/object": "struct4.Task", "name": "apply defaults to r hosted repos", "module": "set_fact", "index": 45, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to r hosted repos"}, "module_options": {"nexus_repos_r_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_r_hosted -%}\n  {{ result.append(_nexus_repos_r_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 46}": {"py/object": "struct4.Task", "name": "apply defaults to r group repos", "module": "set_fact", "index": 46, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to r group repos"}, "module_options": {"nexus_repos_r_group": "{%- set result=[] -%} {%- for repo in nexus_repos_r_group -%}\n  {{ result.append(_nexus_repos_r_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 47}": {"py/object": "struct4.Task", "name": "Add r repositories to global repos list", "module": "set_fact", "index": 47, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add r repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_r_proxy | map('combine', {\"format\": \"r\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_r_hosted | map('combine', {\"format\": \"r\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_r_group | map('combine', {\"format\": \"r\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 48}": {"py/object": "struct4.Task", "name": "apply defaults to p2 proxy repos", "module": "set_fact", "index": 48, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to p2 proxy repos"}, "module_options": {"nexus_repos_p2_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_p2_proxy -%}\n  {{ result.append(_nexus_repos_p2_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 49}": {"py/object": "struct4.Task", "name": "Add p2 repositories to global repos list", "module": "set_fact", "index": 49, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add p2 repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_p2_proxy | map('combine', {\"format\": \"p2\", \"type\": \"proxy\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 50}": {"py/object": "struct4.Task", "name": "apply defaults to conda proxy repos", "module": "set_fact", "index": 50, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to conda proxy repos"}, "module_options": {"nexus_repos_r_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_conda_proxy -%}\n  {{ result.append(_nexus_repos_conda_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 51}": {"py/object": "struct4.Task", "name": "Add conda repositories to global repos list", "module": "set_fact", "index": 51, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add conda repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_r_proxy | map('combine', {\"format\": \"conda\", \"type\": \"proxy\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 52}": {"py/object": "struct4.Task", "name": "apply defaults to go proxy repos", "module": "set_fact", "index": 52, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to go proxy repos"}, "module_options": {"nexus_repos_go_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_go_proxy -%}\n  {{ result.append(_nexus_repos_go_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 53}": {"py/object": "struct4.Task", "name": "apply defaults to go group repos", "module": "set_fact", "index": 53, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to go group repos"}, "module_options": {"nexus_repos_go_group": "{%- set result=[] -%} {%- for repo in nexus_repos_go_group -%}\n  {{ result.append(_nexus_repos_go_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml\", \"index\": 54}": {"py/object": "struct4.Task", "name": "Add go repositories to global repos list", "module": "set_fact", "index": 54, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add go repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_go_proxy | map('combine', {\"format\": \"go\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_go_group | map('combine', {\"format\": \"go\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/create_task_each.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/create_task_each.yml", "options": {"vars": {"script_name": "create_task", "args": "{{ item }}"}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/setup_ldap_each.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/setup_ldap_each.yml", "options": {"vars": {"script_name": "setup_ldap", "args": {"name": "{{ item.ldap_name }}", "protocol": "{{ item.ldap_protocol }}", "hostname": "{{ item.ldap_hostname }}", "port": "{{ item.ldap_port }}", "use_trust_store": "{{ item.ldap_use_trust_store | default(false) | bool }}", "auth": "{{ item.ldap_auth | default('none') }}", "username": "{{ item.ldap_auth_username | default('') }}", "password": "{{ item.ldap_auth_password | default('') }}", "search_base": "{{ item.ldap_search_base }}", "user_base_dn": "{{ item.ldap_user_base_dn | default('ou=users') }}", "user_ldap_filter": "{{ item.ldap_user_filter | default('') }}", "user_object_class": "{{ item.ldap_user_object_class }}", "user_id_attribute": "{{ item.ldap_user_id_attribute }}", "user_real_name_attribute": "{{ item.ldap_user_real_name_attribute }}", "user_email_attribute": "{{ item.ldap_user_email_attribute }}", "map_groups_as_roles": "{{ item.ldap_map_groups_as_roles | default(false) }}", "map_groups_as_roles_type": "{{ item.ldap_map_groups_as_roles_type | default('static') }}", "user_memberof_attribute": "{{ item.ldap_user_memberof_attribute | default('memberOf') }}", "group_base_dn": "{{ item.ldap_group_base_dn | default('ou=groups') }}", "group_object_class": "{{ item.ldap_group_object_class | default('groupOfNames') }}", "group_id_attribute": "{{ item.ldap_group_id_attribute | default('cn') }}", "group_member_attribute": "{{ item.ldap_group_member_attribute | default('member') }}", "group_member_format": "{{ item.ldap_group_member_format | default('uid=${username},ou=users,dc=yourcompany') }}", "user_subtree": "{{ item.ldap_user_subtree | default(false) }}", "group_subtree": "{{ item.ldap_group_subtree | default(false) }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Make sure we have the necessary yum packages available for selinux", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-RedHat.yml", "options": {"name": "Make sure we have the necessary yum packages available for selinux", "vars": {"py_suffix": "{{ \"3\" if ansible_python.version.major == 3 else \"\" }}"}}, "module_options": {"name": ["libselinux-python{{ py_suffix }}", "libsemanage-python{{ py_suffix }}"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/call_script.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Calling Groovy script {{ script_name }}", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/call_script.yml", "options": {"name": "Calling Groovy script {{ script_name }}", "register": "script_run", "failed_when": "script_run | nexus_groovy_error | bool", "changed_when": "script_run | nexus_groovy_changed | bool"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}/{{ script_name }}/run", "user": "admin", "password": "{{ current_nexus_admin_password }}", "headers": {"Content-Type": "text/plain"}, "method": "POST", "force_basic_auth": true, "validate_certs": "{{ nexus_api_validate_certs }}", "body": "{{ args | to_json }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/call_script.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Details about runned script if verbose mode is on", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/call_script.yml", "options": {"name": "Details about runned script if verbose mode is on", "when": "not ansible_check_mode"}, "module_options": {"msg": "{{ script_run | nexus_groovy_details }}", "verbosity": 1}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Make sure nexus is stopped", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "Make sure nexus is stopped", "changed_when": true, "notify": ["nexus-service-stop"]}, "module_options": {"msg": "trigger nexus stop"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "get target path of current installed nexus version", "module": "command", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "get target path of current installed nexus version", "register": "nexus_readlink_latest_call", "failed_when": false, "changed_when": false, "check_mode": false}, "module_options": "readlink {{ nexus_installation_dir }}/nexus-latest", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Purge Nexus", "module": "file", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "Purge Nexus", "with_items": ["{{ nexus_data_dir }}", "{{ nexus_readlink_latest_call.stdout | default(omit) }}", "{{ nexus_restore_log }}", "{{ nexus_installation_dir }}/nexus-latest"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "remove nexus package if present", "module": "package", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "remove nexus package if present"}, "module_options": {"name": "nexus", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Make sure we have the necessary deb packages available for selinux", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-Debian.yml", "options": {"name": "Make sure we have the necessary deb packages available for selinux", "with_items": ["python-selinux", "python-semanage"]}, "module_options": {"name": "{{ item }}", "update_cache": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_repo_each.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_repo_each.yml", "options": {"vars": {"script_name": "delete_repo", "args": {"name": "{{ item }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_blobstore_each.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_blobstore_each.yml", "options": {"vars": {"script_name": "delete_blobstore", "args": "{{ item }}"}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Copy {{ httpd_package_name }} vhost", "module": "template", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Copy {{ httpd_package_name }} vhost", "notify": ["httpd-service-reload", "wait-for-httpd"]}, "module_options": {"src": "nexus-vhost.conf", "dest": "{{ httpd_config_dir }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy SSL certificate and optional chain file", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Copy SSL certificate and optional chain file", "when": "(httpd_copy_ssl_files | bool) and (item | length > 0)", "notify": ["httpd-service-reload", "wait-for-httpd"], "loop": "{{ [httpd_ssl_certificate_file] + [httpd_ssl_certificate_chain_file | default()] | unique }}"}, "module_options": {"src": "{{ item }}", "dest": "{{ certificate_file_dest }}", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Copy SSL certificate key file", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Copy SSL certificate key file", "when": "httpd_copy_ssl_files | bool", "notify": ["httpd-service-reload", "wait-for-httpd"]}, "module_options": {"src": "{{ httpd_ssl_certificate_key_file }}", "dest": "{{ certificate_key_dest }}", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Setsebool httpd_can_network_connect", "module": "seboolean", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Setsebool httpd_can_network_connect", "when": "ansible_selinux.status is defined and ansible_selinux.status == \"enabled\""}, "module_options": {"name": "httpd_can_network_connect", "persistent": true, "state": true}, "executable": "seboolean", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check requirements and deprecated features/vars", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Check requirements and deprecated features/vars"}, "module_options": "requirements_and_deprecated.yml", "executable": "requirements_and_deprecated.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Include OS specific variables.", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Include OS specific variables."}, "module_options": "configure-{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Include OS specific selinux libs and utils if needed", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Include OS specific selinux libs and utils if needed", "when": "ansible_selinux.status is defined and ansible_selinux.status == \"enabled\""}, "module_options": "selinux-{{ ansible_os_family }}.yml", "executable": "selinux-{{ ansible_os_family }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Check if SystemD service is installed", "module": "stat", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Check if SystemD service is installed", "register": "nexus_systemd_service_file"}, "module_options": {"path": "/etc/systemd/system/nexus.service"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Check if sysv service is installed", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Check if sysv service is installed", "register": "nexus_sysv_service_file"}, "module_options": {"path": "/etc/init.d/nexus"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"when": "nexus_purge | default(false) | bool"}, "module_options": "nexus_purge.yml", "executable": "nexus_purge.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Digest splited blob list var", "module": "include_vars", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Digest splited blob list var", "when": "nexus_blob_split | bool"}, "module_options": "blob_vars.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {}, "module_options": "nexus_install.yml", "executable": "nexus_install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"when": "httpd_setup_enable | bool"}, "module_options": "httpd_reverse_proxy_config.yml", "executable": "httpd_reverse_proxy_config.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Configure nexus http proxy", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure nexus http proxy", "vars": {"script_name": "setup_http_proxy", "args": {"with_http_proxy": "{{ nexus_with_http_proxy }}", "http_proxy_host": "{{ nexus_http_proxy_host }}", "http_proxy_port": "{{ nexus_http_proxy_port }}", "http_proxy_username": "{{ nexus_http_proxy_username }}", "http_proxy_password": "{{ nexus_http_proxy_password }}", "with_https_proxy": "{{ nexus_with_https_proxy }}", "https_proxy_host": "{{ nexus_https_proxy_host }}", "https_proxy_port": "{{ nexus_https_proxy_port }}", "https_proxy_username": "{{ nexus_https_proxy_username }}", "https_proxy_password": "{{ nexus_https_proxy_password }}", "proxy_exclude_hosts": "{{ nexus_proxy_exclude_hosts }}"}}, "when": "nexus_with_http_proxy or nexus_with_https_proxy"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Deleting default repositories", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Deleting default repositories", "with_items": ["maven-central", "maven-public", "maven-releases", "maven-snapshots", "nuget-group", "nuget-hosted", "nuget.org-proxy"], "when": "(nexus_data_dir_contents.stdout | length == 0) and nexus_delete_default_repos"}, "module_options": "delete_repo_each.yml", "executable": "delete_repo_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Deleting default blobstore", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Deleting default blobstore", "with_items": "{{\n  {'default':{'blob': 'default'}}\n  | combine(nexus_blob_names)\n  | json_query(\"*.{name: blob}\")\n  | list\n  | unique\n}}", "when": "(nexus_data_dir_contents.stdout | length == 0) and nexus_delete_default_blobstore"}, "module_options": "delete_blobstore_each.yml", "executable": "delete_blobstore_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"with_items": "{{ ldap_connections }}"}, "module_options": "setup_ldap_each.yml", "executable": "setup_ldap_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create/check content selectors", "module": "include_tasks", "index": 13, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check content selectors", "vars": {"script_name": "create_content_selectors_from_list", "args": "{{ nexus_content_selectors }}"}, "when": "nexus_content_selectors | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "apply defaults to privileges", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "apply defaults to privileges"}, "module_options": {"nexus_privileges": "{%- set result=[] -%} {%- for privilege in nexus_privileges -%}\n  {{ result.append(_nexus_privilege_defaults | combine(privilege)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Create directories for blob stores.", "module": "file", "index": 15, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create directories for blob stores.", "when": "item.path is defined", "loop": "{{ nexus_blobstores }}"}, "module_options": {"path": "{{ item['path'] }}", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "state": "directory", "recurse": "{{ nexus_blobstores_recurse_owner | default(false) | bool }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Create/Check blobstores", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/Check blobstores", "vars": {"script_name": "create_blobstores_from_list", "args": "{{ nexus_blobstores }}"}, "when": "nexus_blobstores | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Restore nexus backup", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Restore nexus backup", "when": "nexus_restore_point is defined"}, "module_options": "nexus-restore.yml", "executable": "nexus-restore.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Create/check cleanup policies", "module": "include_tasks", "index": 18, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check cleanup policies", "vars": {"script_name": "create_cleanup_policies_from_list", "args": "{{ nexus_repos_cleanup_policies }}"}, "when": "nexus_repos_cleanup_policies | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Apply defaults to repositories configurations and process a single list", "module": "include_tasks", "index": 19, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Apply defaults to repositories configurations and process a single list"}, "module_options": "process_repos_list.yml", "executable": "process_repos_list.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Create configured repositories", "module": "include_tasks", "index": 20, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create configured repositories", "vars": {"script_name": "create_repos_from_list", "args": "{{ _nexus_repos_global_list }}"}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Create/check privileges", "module": "include_tasks", "index": 21, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check privileges", "vars": {"script_name": "setup_privileges_from_list", "args": "{{ nexus_privileges }}"}, "when": "nexus_privileges | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Create/check roles", "module": "include_tasks", "index": 22, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check roles", "vars": {"script_name": "setup_roles_from_list", "args": "{{ nexus_roles }}"}, "when": "nexus_roles | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Create/check local users", "module": "include_tasks", "index": 23, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check local users", "vars": {"script_name": "setup_users_from_list", "args": "{{ nexus_local_users }}"}, "when": "nexus_local_users | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Create/check ldap users", "module": "include_tasks", "index": 24, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check ldap users", "vars": {"script_name": "setup_ldap_users_from_list", "args": "{{ nexus_ldap_users }}"}, "when": "nexus_ldap_users | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 25, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_anonymous_access", "args": {"anonymous_access": "{{ nexus_anonymous_access }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 26, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_base_url", "args": {"base_url": "{{ nexus_public_scheme }}://{{ nexus_public_hostname }}/"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 27, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_realms", "args": {"nuget_api_key_realm": "{{ nexus_nuget_api_key_realm }}", "npm_bearer_token_realm": "{{ nexus_npm_bearer_token_realm }}", "rut_auth_realm": "{{ nexus_rut_auth_realm }}", "ldap_realm": "{{ nexus_ldap_realm }}", "docker_bearer_token_realm": "{{ nexus_docker_bearer_token_realm }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Configure RUT Auth header", "module": "include_tasks", "index": 28, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure RUT Auth header", "vars": {"script_name": "setup_capability", "args": {"capability_typeId": "rutauth", "capability_enabled": true, "capability_properties": {"httpHeader": "{{ nexus_rut_auth_header }}"}}}, "when": "nexus_rut_auth_header is defined"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 29, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_email", "args": {"email_server_enabled": "{{ nexus_email_server_enabled }}", "email_server_host": "{{ nexus_email_server_host }}", "email_server_port": "{{ nexus_email_server_port }}", "email_server_username": "{{ nexus_email_server_username }}", "email_server_password": "{{ nexus_email_server_password }}", "email_from_address": "{{ nexus_email_from_address }}", "email_subject_prefix": "{{ nexus_email_subject_prefix }}", "email_tls_enabled": "{{ nexus_email_tls_enabled }}", "email_tls_required": "{{ nexus_email_tls_required }}", "email_ssl_on_connect_enabled": "{{ nexus_email_ssl_on_connect_enabled }}", "email_ssl_check_server_identity_enabled": "{{ nexus_email_ssl_check_server_identity_enabled }}", "email_trust_store_enabled": "{{ nexus_email_trust_store_enabled }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Configure branding capability", "module": "include_tasks", "index": 30, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure branding capability", "vars": {"script_name": "setup_capability", "args": {"capability_typeId": "rapture.branding", "capability_enabled": "{{ (nexus_branding_footer | length > 0) and (nexus_branding_header | length > 0) }}", "capability_properties": {"footerHtml": "{{ nexus_branding_footer }}", "headerHtml": "{{ nexus_branding_header }}", "footerEnabled": "{{ nexus_branding_footer | length > 0 }}", "headerEnabled": "{{ nexus_branding_header | length > 0 }}"}}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Configure audit capability", "module": "include_tasks", "index": 31, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure audit capability", "vars": {"script_name": "setup_capability", "args": {"capability_typeId": "audit", "capability_enabled": "{{ nexus_audit_enabled | bool }}", "capability_properties": {}}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Define backup task if backup is configured", "module": "set_fact", "index": 32, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Define backup task if backup is configured", "when": "nexus_backup_configure | bool"}, "module_options": {"_nexus_backup_task": [{"name": "db and blobstores backup", "typeId": "script", "schedule_type": "{{ nexus_backup_schedule_type }}", "cron": "{{ nexus_backup_cron }}", "start_date_time": "{{ nexus_backup_start_date_time | default('') }}", "weekly_days": "{{ nexus_backup_weekly_days | default([]) }}", "monthly_days": "{{ nexus_backup_monthly_days | default([]) }}", "taskProperties": {"language": "groovy", "source": "{{ lookup('template', './templates/backup.groovy.j2') }}"}}]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Create scheduled tasks (with backup task if relevant)", "module": "include_tasks", "index": 33, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create scheduled tasks (with backup task if relevant)", "with_items": "{{ nexus_scheduled_tasks + _nexus_backup_task | default([]) }}", "when": "nexus_run_provisionning | default(true) | bool"}, "module_options": "create_task_each.yml", "executable": "create_task_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Try to use jmespath on a test var", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Try to use jmespath on a test var"}, "module_options": {"voidvar": "{{ [] | json_query('[]') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Broken compatibility => nexus_package is now dynamically calculated", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Broken compatibility => nexus_package is now dynamically calculated", "when": "nexus_package is defined"}, "module_options": {"msg": "You have set the variable nexus_package in your playbook. Starting from version 2.2.0 of this role, this is not compatible with the new nexus latest version detection feature and is not supported anymore. Please use the nexus_version variable only."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Broken compatibility => purge var moved to nexus_purge", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Broken compatibility => purge var moved to nexus_purge", "when": "purge is defined"}, "module_options": {"msg": "You have set the purge variable to reset nexus. Starting from version 2.2.3 of this role, this variable has been renamed nexus_purge. Please fix the var name accordingly on you command line call."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Variable refactoring - public_hostname is now nexus_public_hostname", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Variable refactoring - public_hostname is now nexus_public_hostname", "when": "public_hosname | default('') | length > 0 and public_hostname != nexus_public_hostname and nexus_public_hostname == 'nexus.vm'"}, "module_options": {"msg": "Version 2.3.0 of this role introduced a variable name change: public_hostname was renamed to nexus_public_hostname. We have detected that public_hostname is set in your vars ({{ public_hostname }}) and is different from nexus_public_hostname which still has its default value ({{ nexus_public_hostname }}). Fix this by setting a correct value for nexus_public_hostname and remove public_hostname if possible."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Coding standard: proxy_url is not supported anymore for docker proxy repos", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Coding standard: proxy_url is not supported anymore for docker proxy repos", "when": ["nexus_repos_docker_proxy | length > 0", "nexus_repos_docker_proxy | json_query('[?proxy_url]') | list | length > 0"]}, "module_options": {"msg": "proxy_url used to be the variable to configure docker proxy repositories in nexus3-oss role. Since version 2.3.0, all repository configuration use the same standard var remote_url. Please review your configurations in nexus_repos_docker_proxy and rename the variable accordingly."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Print debug message about our internal var", "module": "vars", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Print debug message about our internal var", "debug": {"msg": "{{ error_msg.split('\n') }}"}}, "module_options": {"error_msg": "_nexus_repos_global_list is set somewhere in your playbook/inventory.\nThis is an internal var that must be unset when the role starts executing.\nPlease unset _nexus_repos_global_list from your playbook/inventory"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Fail as we cannot run correctly with internal var set", "module": "fail", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Fail as we cannot run correctly with internal var set"}, "module_options": {"msg": "Unset _nexus_repos_global_list. See debug message above"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml": {"py/object": "struct4.TaskFile", "name": "nexus-restore.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "tasks": [{"py/object": "struct4.Task", "name": "Make sure nexus is stopped", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {"name": "Make sure nexus is stopped", "changed_when": true, "notify": ["nexus-service-stop"]}, "module_options": {"msg": "trigger nexus stop"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run restoration script", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {"name": "Run restoration script", "tags": ["skip_ansible_lint"], "notify": ["nexus-service-restart", "wait-for-nexus", "wait-for-nexus-port"]}, "module_options": "nexus-blob-restore.sh {{ nexus_restore_point }} 2>&1 | tee -a {{ nexus_restore_log }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml": {"py/object": "struct4.TaskFile", "name": "nexus_install.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set detection method to fixed if we have a var", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set detection method to fixed if we have a var", "when": "nexus_version | length > 0"}, "module_options": {"nexus_version_detected_from": "fixed"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check nexus-latest link stat in {{ nexus_installation_dir }}", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Check nexus-latest link stat in {{ nexus_installation_dir }}", "register": "nexus_latest_link", "check_mode": false}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register current running version if any", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register current running version if any", "when": ["nexus_latest_link.stat.exists | default(false)", "nexus_latest_link.stat.islnk | default(false)"]}, "module_options": {"nexus_version_running": "{{\n  nexus_latest_link.stat.lnk_target\n  | regex_replace('^.*/nexus-(\\d*\\.\\d*\\.\\d*-\\d*)', '\\1')\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register nexus_version from currently installed", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register nexus_version from currently installed", "when": ["nexus_version_running is defined", "not (nexus_upgrade | default(false) | bool)"]}, "module_options": {"nexus_version": "{{ nexus_version_running }}", "nexus_version_detected_from": "installed"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Call latest nexus uri to get redirection", "module": "uri", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Call latest nexus uri to get redirection", "register": "nexus_latest_uri_call", "check_mode": false}, "module_options": {"url": "{{ nexus_download_url }}/latest-unix.tar.gz", "method": "CONNECT", "status_code": 302, "validate_certs": "{{ nexus_download_ssl_verify | default(omit) }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register nexus_version from latest nexus uri redirection", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register nexus_version from latest nexus uri redirection"}, "module_options": {"nexus_version": "{{\n  nexus_latest_uri_call.location\n  | regex_replace(\"^https://.*nexus-(\\d*\\.\\d*\\.\\d*-\\d*)-unix.tar.gz\", \"\\1\")\n}}", "nexus_version_detected_from": "latest"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print info about detected version to use", "module": "vars", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Print info about detected version to use", "debug": {"msg": "{{ version_info.split('\n') }}"}}, "module_options": {"version_info": "Used version: {{ nexus_version }}\nVersion detected from: {{ nexus_version_detected_from }}\nUpgrade allowed: {{ nexus_upgrade | default(false) | bool }}\nCurrent running version: {{ nexus_version_running | default('none') }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register nexus package name", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register nexus package name"}, "module_options": {"nexus_package": "nexus-{{ nexus_version }}-unix.tar.gz"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download nexus_package", "module": "get_url", "index": 8, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Download nexus_package", "notify": ["nexus-service-stop"]}, "module_options": {"url": "{{ nexus_download_url }}/{{ nexus_package }}", "dest": "{{ nexus_download_dir }}/{{ nexus_package }}", "force": false, "validate_certs": "{{ nexus_download_ssl_verify | default(omit) }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Nexus o/s group exists", "module": "group", "index": 9, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure Nexus o/s group exists"}, "module_options": {"name": "{{ nexus_os_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Nexus o/s user exists", "module": "user", "index": 10, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure Nexus o/s user exists"}, "module_options": {"name": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "home": "{{ nexus_os_user_home_dir }}", "shell": "/bin/bash", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Nexus installation directory exists", "module": "file", "index": 11, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure Nexus installation directory exists"}, "module_options": {"path": "{{ nexus_installation_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unpack Nexus download", "module": "unarchive", "index": 12, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Unpack Nexus download", "notify": ["nexus-service-stop"]}, "module_options": {"src": "{{ nexus_download_dir }}/{{ nexus_package }}", "dest": "{{ nexus_installation_dir }}", "creates": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}", "copy": false, "mode": 493}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure proper ownership of nexus installation directory", "module": "file", "index": 13, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure proper ownership of nexus installation directory"}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}", "recurse": true, "mode": "u=rwX,g=rX,o=rX"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update symlink nexus-latest", "module": "file", "index": 14, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Update symlink nexus-latest", "register": "nexus_latest_version", "notify": ["nexus-service-stop"]}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest", "src": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "state": "link", "follow": false}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 15, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unpacked data directory", "module": "file", "index": 16, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Delete unpacked data directory"}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest/data", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get path to default settings", "module": "set_fact", "index": 17, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to default settings", "when": "nexus_version is version_compare('3.1.0', '<')"}, "module_options": {"nexus_default_settings_file": "{{ nexus_installation_dir }}/nexus-latest/etc/org.sonatype.nexus.cfg"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get path to default settings", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to default settings", "when": "nexus_version is version_compare('3.1.0', '>=')"}, "module_options": {"nexus_default_settings_file": "{{ nexus_installation_dir }}/nexus-latest/etc/nexus-default.properties"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get application settings directories", "module": "set_fact", "index": 19, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get application settings directories", "when": "nexus_version is version_compare('3.1.0', '<')"}, "module_options": {"nexus_app_dir_settings_dirs": ["{{ nexus_installation_dir }}/nexus-latest/etc"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get application settings directories", "module": "set_fact", "index": 20, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get application settings directories", "when": "nexus_version is version_compare('3.1.0', '>=')"}, "module_options": {"nexus_app_dir_settings_dirs": ["{{ nexus_installation_dir }}/nexus-latest/etc", "{{ nexus_installation_dir }}/nexus-latest/etc/karaf", "{{ nexus_installation_dir }}/nexus-latest/etc/jetty", "{{ nexus_installation_dir }}/nexus-latest/etc/fabric", "{{ nexus_installation_dir }}/nexus-latest/etc/logback", "{{ nexus_installation_dir }}/nexus-latest/etc/scripts"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get rest API endpoint (v < 3.8.0)", "module": "set_fact", "index": 21, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get rest API endpoint (v < 3.8.0)", "when": "nexus_version is version_compare('3.8.0', '<')"}, "module_options": {"nexus_rest_api_endpoint": "service/siesta/rest/v1/script"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get rest API endpoint (v >= 3.8.0)", "module": "set_fact", "index": 22, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get rest API endpoint (v >= 3.8.0)", "when": "nexus_version is version_compare('3.8.0', '>=')"}, "module_options": {"nexus_rest_api_endpoint": "service/rest/v1/script"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get path to database restore dir (v < 3.11.0)", "module": "set_fact", "index": 23, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to database restore dir (v < 3.11.0)", "when": "nexus_version is version_compare('3.11.0', '<')"}, "module_options": {"nexus_db_restore_dir": "{{ nexus_data_dir }}/backup"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get path to database restore dir (v >= 3.11.0)", "module": "set_fact", "index": 24, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to database restore dir (v >= 3.11.0)", "when": "nexus_version is version_compare('3.11.0', '>=')"}, "module_options": {"nexus_db_restore_dir": "{{ nexus_data_dir }}/restore-from-backup"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow nexus to create first-time install configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "module": "file", "index": 25, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Allow nexus to create first-time install configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "with_items": "{{ nexus_app_dir_settings_dirs }}", "when": "nexus_latest_version.changed", "register": "chown_config_first_time", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": "0755", "recurse": false}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Nexus data directory", "module": "file", "index": 26, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create Nexus data directory"}, "module_options": {"path": "{{ nexus_data_dir }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus data directory", "module": "lineinfile", "index": 27, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus data directory", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Dkaraf.data=.*", "line": "-Dkaraf.data={{ nexus_data_dir }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup JVM logfile directory", "module": "lineinfile", "index": 28, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup JVM logfile directory", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-XX:LogFile=.*", "line": "-XX:LogFile={{ nexus_data_dir }}/log/jvm.log"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus default timezone", "module": "lineinfile", "index": 29, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus default timezone", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Duser.timezone=.*", "line": "-Duser.timezone={{ nexus_timezone }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus JVM min heap size", "module": "lineinfile", "index": 30, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus JVM min heap size", "notify": "nexus-service-stop"}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Xms.*", "line": "-Xms{{ nexus_min_heap_size }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus JVM max heap size", "module": "lineinfile", "index": 31, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus JVM max heap size", "notify": "nexus-service-stop"}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Xmx.*", "line": "-Xmx{{ nexus_max_heap_size }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus JVM max direct memory", "module": "lineinfile", "index": 32, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus JVM max direct memory", "notify": "nexus-service-stop"}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-XX:MaxDirectMemorySize=.*", "line": "-XX:MaxDirectMemorySize={{ nexus_max_direct_memory }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop the admin wizard from running", "module": "lineinfile", "index": 33, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Stop the admin wizard from running", "when": "nexus_version is version_compare('3.17.0', '>=')"}, "module_options": {"path": "{{ nexus_default_settings_file }}", "line": "nexus.onboarding.enabled={{ nexus_onboarding_wizard }}", "create": true, "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Nexus tmp directory", "module": "file", "index": 34, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create Nexus tmp directory"}, "module_options": {"path": "{{ nexus_tmp_dir }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Nexus backup directory", "module": "file", "index": 35, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create Nexus backup directory", "when": "nexus_backup_dir_create | bool"}, "module_options": {"path": "{{ nexus_backup_dir }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus tmp directory", "module": "lineinfile", "index": 36, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus tmp directory", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Djava.io.tmpdir=.*", "line": "-Djava.io.tmpdir={{ nexus_tmp_dir }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set NEXUS_HOME for the service user", "module": "lineinfile", "index": 37, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set NEXUS_HOME for the service user", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_os_user_home_dir }}/.bashrc", "regexp": "^export NEXUS_HOME=.*", "line": "export NEXUS_HOME={{ nexus_installation_dir }}/nexus-latest"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set nexus user", "module": "lineinfile", "index": 38, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus user", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.rc", "regexp": ".*run_as_user=.*", "line": "run_as_user=\"{{ nexus_os_user }}\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set nexus port", "module": "lineinfile", "index": 39, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus port", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^application-port=.*", "line": "application-port={{ nexus_default_port }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set nexus context path", "module": "lineinfile", "index": 40, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus context path", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^nexus-context-path=.*", "line": "nexus-context-path={{ nexus_default_context_path }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set nexus service listening ip to {{ nexus_application_host }}", "module": "lineinfile", "index": 41, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus service listening ip to {{ nexus_application_host }}", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^application-host=.*", "line": "application-host={{ nexus_application_host }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable creating groovy scripts in nexus", "module": "lineinfile", "index": 42, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Enable creating groovy scripts in nexus", "notify": ["nexus-service-stop"], "when": "nexus_version is version_compare('3.21.2', '>=')"}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^nexus.scripts.allowCreation=.*", "line": "nexus.scripts.allowCreation=true"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create systemd service configuration", "module": "template", "index": 43, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create systemd service configuration", "notify": ["systemd-reload"], "when": "ansible_service_mgr == 'systemd'"}, "module_options": {"src": "nexus.service", "dest": "/etc/systemd/system", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create sysv service configuration", "module": "file", "index": 44, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create sysv service configuration", "when": "ansible_service_mgr != 'systemd'"}, "module_options": {"path": "/etc/init.d/nexus", "src": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deploy backup restore script", "module": "template", "index": 45, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Deploy backup restore script"}, "module_options": {"src": "nexus-blob-restore.sh.j2", "dest": "{{ nexus_script_dir }}/nexus-blob-restore.sh", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink backup restore script to /sbin", "module": "file", "index": 46, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Symlink backup restore script to /sbin"}, "module_options": {"src": "{{ nexus_script_dir }}/nexus-blob-restore.sh", "dest": "/sbin/nexus-blob-restore.sh", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if data directory is empty (first-time install)", "module": "command", "index": 47, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Check if data directory is empty (first-time install)", "register": "nexus_data_dir_contents", "check_mode": false, "changed_when": false}, "module_options": "ls --ignore=lost+found {{ nexus_data_dir }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean cache for upgrade process", "module": "file", "index": 48, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Clean cache for upgrade process", "when": "nexus_latest_version.changed and nexus_data_dir_contents.stdout | length > 0", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ nexus_data_dir }}/clean_cache", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 49, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable nexus systemd service and make sure it is started", "module": "systemd", "index": 50, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Enable nexus systemd service and make sure it is started", "notify": ["wait-for-nexus", "wait-for-nexus-port"], "when": "ansible_service_mgr == 'systemd'"}, "module_options": {"name": "nexus.service", "enabled": true, "state": "started", "no_block": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable nexus sysv service and make sure it is started", "module": "service", "index": 51, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Enable nexus sysv service and make sure it is started", "notify": ["wait-for-nexus", "wait-for-nexus-port"], "when": "ansible_service_mgr != 'systemd'"}, "module_options": {"name": "nexus", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 52, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Chown configuration files from {{ nexus_installation_dir }}/nexus-latest/etc back to root", "module": "file", "index": 53, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Chown configuration files from {{ nexus_installation_dir }}/nexus-latest/etc back to root", "when": "chown_config_first_time.changed", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest/etc", "owner": "root", "group": "root", "mode": "a=rX,u+w", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Prevent nexus to create any new configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "module": "file", "index": 54, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Prevent nexus to create any new configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "with_items": "{{ nexus_app_dir_settings_dirs }}"}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "root", "mode": "0755", "recurse": false}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install plugins from remote source", "module": "get_url", "index": 55, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Install plugins from remote source", "with_items": "{{ nexus_plugin_urls }}"}, "module_options": {"url": "{{ item }}", "dest": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}/deploy/"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Access scripts API endpoint with defined admin password", "module": "uri", "index": 56, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Access scripts API endpoint with defined admin password", "register": "nexus_api_head_with_defined_password", "check_mode": false}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}", "method": "HEAD", "user": "admin", "password": "{{ nexus_admin_password }}", "force_basic_auth": true, "status_code": "200, 401", "validate_certs": "{{ nexus_api_validate_certs }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register defined admin password for next operations", "module": "set_fact", "index": 57, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register defined admin password for next operations", "when": "nexus_api_head_with_defined_password.status == 200", "no_log": true}, "module_options": {"current_nexus_admin_password": "{{ nexus_admin_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if admin.password file exists", "module": "stat", "index": 58, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Check if admin.password file exists", "register": "admin_password_file"}, "module_options": {"path": "{{ nexus_data_dir }}/admin.password"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Slurp content of remote generated password file", "module": "slurp", "index": 59, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Slurp content of remote generated password file", "register": "_slurpedpass"}, "module_options": {"src": "{{ nexus_data_dir }}/admin.password"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default password from slurped content", "module": "set_fact", "index": 60, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set default password from slurped content"}, "module_options": {"nexus_default_admin_password": "{{ _slurpedpass.content | b64decode }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Access scripts API endpoint with default admin password", "module": "uri", "index": 61, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Access scripts API endpoint with default admin password", "register": "nexus_api_head_with_default_password", "when": "nexus_api_head_with_defined_password.status == 401"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}", "method": "HEAD", "user": "admin", "password": "{{ nexus_default_admin_password }}", "force_basic_auth": true, "status_code": "200, 401", "validate_certs": "{{ nexus_api_validate_certs }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register default admin password for next operations", "module": "set_fact", "index": 62, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register default admin password for next operations", "when": "(nexus_api_head_with_default_password.status | default(false)) == 200"}, "module_options": {"current_nexus_admin_password": "{{ nexus_default_admin_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure current Nexus password is known", "module": "fail", "index": 63, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure current Nexus password is known", "when": "current_nexus_admin_password is not defined"}, "module_options": {"msg": "Failed to determine current Nexus password (it is neither the default/generated nor the defined password). If you are trying to change nexus_admin_password after first install, please set `-e nexus_default_admin_password=oldPassword` on the ansible-playbook command line. See https://github.com/ansible-ThoTeam/nexus3-oss/blob/master/README.md#change-admin-password-after-first-install"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force (re-)registration of groovy scripts (purge reference dir)", "module": "file", "index": 64, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Force (re-)registration of groovy scripts (purge reference dir)", "when": "nexus_force_groovy_scripts_registration | default(false)"}, "module_options": {"path": "{{ nexus_data_dir }}/groovy-raw-scripts", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directories to hold current groovy scripts for reference", "module": "file", "index": 65, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create directories to hold current groovy scripts for reference", "with_items": ["{{ nexus_data_dir }}/groovy-raw-scripts/current", "{{ nexus_data_dir }}/groovy-raw-scripts/new"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Archive scripts", "module": "archive", "index": 66, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Archive scripts", "become": false, "run_once": true, "delegate_to": "localhost"}, "module_options": {"path": "{{ role_path }}/files/groovy/*", "dest": "/tmp/nexus-upload-groovy-scripts.tar.gz", "mode": 420}, "executable": "archive", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Upload new scripts", "module": "unarchive", "index": 67, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Upload new scripts"}, "module_options": {"src": "/tmp/nexus-upload-groovy-scripts.tar.gz", "dest": "{{ nexus_data_dir }}/groovy-raw-scripts/new/", "mode": 420}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sync new scripts to old and get differences", "module": "shell", "index": 68, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Sync new scripts to old and get differences", "register": "nexus_groovy_files_changed", "check_mode": false, "changed_when": false, "args": {"warn": false, "executable": "/bin/bash"}}, "module_options": "set -o pipefail && rsync -ric {{ nexus_data_dir }}/groovy-raw-scripts/new/ {{ nexus_data_dir }}/groovy-raw-scripts/current/ | cut -d\" \" -f 2 | sed \"s/\\.groovy//g\"\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Declare new or changed groovy scripts in nexus", "module": "include_tasks", "index": 69, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Declare new or changed groovy scripts in nexus", "with_items": "{{ nexus_groovy_files_changed.stdout_lines }}"}, "module_options": "declare_script_each.yml", "executable": "declare_script_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 70, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"vars": {"script_name": "update_admin_password", "args": {"new_password": "{{ nexus_admin_password }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Admin password changed", "module": "set_fact", "index": 71, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Admin password changed", "no_log": true}, "module_options": {"current_nexus_admin_password": "{{ nexus_admin_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clear generated password file from install (nexus > 3.17)", "module": "file", "index": 72, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Clear generated password file from install (nexus > 3.17)", "when": "nexus_version is version_compare('3.17.0', '>=')"}, "module_options": {"path": "{{ nexus_data_dir }}/admin.password", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/declare_script_each.yml": {"py/object": "struct4.TaskFile", "name": "declare_script_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/declare_script_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "Removing (potential) previously declared Groovy script {{ item }}", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/declare_script_each.yml", "options": {"name": "Removing (potential) previously declared Groovy script {{ item }}"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}/{{ item }}", "user": "admin", "password": "{{ current_nexus_admin_password }}", "method": "DELETE", "force_basic_auth": true, "status_code": "204,404", "validate_certs": "{{ nexus_api_validate_certs }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Declaring Groovy script {{ item }}", "module": "uri", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/declare_script_each.yml", "options": {"name": "Declaring Groovy script {{ item }}"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}", "user": "admin", "password": "{{ current_nexus_admin_password }}", "body_format": "json", "method": "POST", "force_basic_auth": true, "status_code": 204, "validate_certs": "{{ nexus_api_validate_certs }}", "body": {"name": "{{ item }}", "type": "groovy", "content": "{{ lookup('file', 'groovy/' + item + '.groovy') }}"}}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml": {"py/object": "struct4.TaskFile", "name": "process_repos_list.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "tasks": [{"py/object": "struct4.Task", "name": "apply defaults to maven proxy repos", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to maven proxy repos"}, "module_options": {"nexus_repos_maven_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_maven_proxy -%}\n  {{ result.append(_nexus_repos_maven_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to maven hosted repos", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to maven hosted repos"}, "module_options": {"nexus_repos_maven_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_maven_hosted -%}\n  {{ result.append(_nexus_repos_maven_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to maven group repos", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to maven group repos"}, "module_options": {"nexus_repos_maven_group": "{%- set result=[] -%} {%- for repo in nexus_repos_maven_group -%}\n  {{ result.append(_nexus_repos_maven_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add maven repositories to global repos list", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add maven repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_maven_proxy | map('combine', {\"format\": \"maven2\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_maven_hosted | map('combine', {\"format\": \"maven2\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_maven_group | map('combine', {\"format\": \"maven2\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to docker proxy repos", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to docker proxy repos"}, "module_options": {"nexus_repos_docker_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_docker_proxy -%}\n  {{ result.append(_nexus_repos_docker_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to docker hosted repos", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to docker hosted repos"}, "module_options": {"nexus_repos_docker_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_docker_hosted -%}\n  {{ result.append(_nexus_repos_docker_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to docker group repos", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to docker group repos"}, "module_options": {"nexus_repos_docker_group": "{%- set result=[] -%} {%- for repo in nexus_repos_docker_group -%}\n  {{ result.append(_nexus_repos_docker_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add docker repositories to global repos list", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add docker repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_docker_proxy | map('combine', {\"format\": \"docker\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_docker_hosted | map('combine', {\"format\": \"docker\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_docker_group | map('combine', {\"format\": \"docker\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to pypi proxy repos", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to pypi proxy repos"}, "module_options": {"nexus_repos_pypi_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_pypi_proxy -%}\n  {{ result.append(_nexus_repos_pypi_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to pypi hosted repos", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to pypi hosted repos"}, "module_options": {"nexus_repos_pypi_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_pypi_hosted -%}\n  {{ result.append(_nexus_repos_pypi_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to pypi group repos", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to pypi group repos"}, "module_options": {"nexus_repos_pypi_group": "{%- set result=[] -%} {%- for repo in nexus_repos_pypi_group -%}\n  {{ result.append(_nexus_repos_pypi_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add pypi repositories to global repos list", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add pypi repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_pypi_proxy | map('combine', {\"format\": \"pypi\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_pypi_hosted | map('combine', {\"format\": \"pypi\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_pypi_group | map('combine', {\"format\": \"pypi\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to raw proxy repos", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to raw proxy repos"}, "module_options": {"nexus_repos_raw_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_raw_proxy -%}\n  {{ result.append(_nexus_repos_raw_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to raw hosted repos", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to raw hosted repos"}, "module_options": {"nexus_repos_raw_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_raw_hosted -%}\n  {{ result.append(_nexus_repos_raw_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to raw group repos", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to raw group repos"}, "module_options": {"nexus_repos_raw_group": "{%- set result=[] -%} {%- for repo in nexus_repos_raw_group -%}\n  {{ result.append(_nexus_repos_raw_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add raw repositories to global repos list", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add raw repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_raw_proxy | map('combine', {\"format\": \"raw\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_raw_hosted | map('combine', {\"format\": \"raw\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_raw_group | map('combine', {\"format\": \"raw\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to rubygems proxy repos", "module": "set_fact", "index": 16, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to rubygems proxy repos"}, "module_options": {"nexus_repos_rubygems_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_rubygems_proxy -%}\n  {{ result.append(_nexus_repos_rubygems_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to rubygems hosted repos", "module": "set_fact", "index": 17, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to rubygems hosted repos"}, "module_options": {"nexus_repos_rubygems_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_rubygems_hosted -%}\n  {{ result.append(_nexus_repos_rubygems_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to rubygems group repos", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to rubygems group repos"}, "module_options": {"nexus_repos_rubygems_group": "{%- set result=[] -%} {%- for repo in nexus_repos_rubygems_group -%}\n  {{ result.append(_nexus_repos_rubygems_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add rubygems repositories to global repos list", "module": "set_fact", "index": 19, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add rubygems repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_rubygems_proxy | map('combine', {\"format\": \"rubygems\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_rubygems_hosted | map('combine', {\"format\": \"rubygems\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_rubygems_group | map('combine', {\"format\": \"rubygems\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to bower proxy repos", "module": "set_fact", "index": 20, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to bower proxy repos"}, "module_options": {"nexus_repos_bower_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_bower_proxy -%}\n  {{ result.append(_nexus_repos_bower_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to bower hosted repos", "module": "set_fact", "index": 21, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to bower hosted repos"}, "module_options": {"nexus_repos_bower_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_bower_hosted -%}\n  {{ result.append(_nexus_repos_bower_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to bower group repos", "module": "set_fact", "index": 22, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to bower group repos"}, "module_options": {"nexus_repos_bower_group": "{%- set result=[] -%} {%- for repo in nexus_repos_bower_group -%}\n  {{ result.append(_nexus_repos_bower_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add bower repositories to global repos list", "module": "set_fact", "index": 23, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add bower repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_bower_proxy | map('combine', {\"format\": \"bower\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_bower_hosted | map('combine', {\"format\": \"bower\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_bower_group | map('combine', {\"format\": \"bower\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to npm proxy repos", "module": "set_fact", "index": 24, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to npm proxy repos"}, "module_options": {"nexus_repos_npm_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_npm_proxy -%}\n  {{ result.append(_nexus_repos_npm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to npm hosted repos", "module": "set_fact", "index": 25, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to npm hosted repos"}, "module_options": {"nexus_repos_npm_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_npm_hosted -%}\n  {{ result.append(_nexus_repos_npm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to npm group repos", "module": "set_fact", "index": 26, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to npm group repos"}, "module_options": {"nexus_repos_npm_group": "{%- set result=[] -%} {%- for repo in nexus_repos_npm_group -%}\n  {{ result.append(_nexus_repos_npm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add npm repositories to global repos list", "module": "set_fact", "index": 27, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add npm repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_npm_proxy | map('combine', {\"format\": \"npm\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_npm_hosted | map('combine', {\"format\": \"npm\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_npm_group | map('combine', {\"format\": \"npm\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to nuget proxy repos", "module": "set_fact", "index": 28, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to nuget proxy repos"}, "module_options": {"nexus_repos_nuget_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_nuget_proxy -%}\n  {{ result.append(_nexus_repos_nuget_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to nuget hosted repos", "module": "set_fact", "index": 29, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to nuget hosted repos"}, "module_options": {"nexus_repos_nuget_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_nuget_hosted -%}\n  {{ result.append(_nexus_repos_nuget_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to nuget group repos", "module": "set_fact", "index": 30, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to nuget group repos"}, "module_options": {"nexus_repos_nuget_group": "{%- set result=[] -%} {%- for repo in nexus_repos_nuget_group -%}\n  {{ result.append(_nexus_repos_nuget_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add nuget repositories to global repos list", "module": "set_fact", "index": 31, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add nuget repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_nuget_proxy | map('combine', {\"format\": \"nuget\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_nuget_hosted | map('combine', {\"format\": \"nuget\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_nuget_group | map('combine', {\"format\": \"nuget\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to gitlfs hosted repos", "module": "set_fact", "index": 32, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to gitlfs hosted repos"}, "module_options": {"nexus_repos_gitlfs_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_gitlfs_hosted -%}\n  {{ result.append(_nexus_repos_gitlfs_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add gitlfs repositories to global repos list", "module": "set_fact", "index": 33, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add gitlfs repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_gitlfs_hosted | map('combine', {\"format\": \"gitlfs\", \"type\": \"hosted\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to yum proxy repos", "module": "set_fact", "index": 34, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to yum proxy repos"}, "module_options": {"nexus_repos_yum_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_yum_proxy -%}\n  {{ result.append(_nexus_repos_yum_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to yum hosted repos", "module": "set_fact", "index": 35, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to yum hosted repos"}, "module_options": {"nexus_repos_yum_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_yum_hosted -%}\n  {{ result.append(_nexus_repos_yum_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to yum group repos", "module": "set_fact", "index": 36, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to yum group repos"}, "module_options": {"nexus_repos_yum_group": "{%- set result=[] -%} {%- for repo in nexus_repos_yum_group -%}\n  {{ result.append(_nexus_repos_yum_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add yum repositories to global repos list", "module": "set_fact", "index": 37, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add yum repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_yum_proxy | map('combine', {\"format\": \"yum\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_yum_hosted | map('combine', {\"format\": \"yum\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_yum_group | map('combine', {\"format\": \"yum\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to apt proxy repos", "module": "set_fact", "index": 38, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to apt proxy repos"}, "module_options": {"nexus_repos_apt_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_apt_proxy -%}\n  {{ result.append(_nexus_repos_apt_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to apt hosted repos", "module": "set_fact", "index": 39, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to apt hosted repos"}, "module_options": {"nexus_repos_apt_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_apt_hosted -%}\n  {{ result.append(_nexus_repos_apt_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add apt repositories to global repos list", "module": "set_fact", "index": 40, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add apt repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_apt_proxy | map('combine', {\"format\": \"apt\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_apt_hosted | map('combine', {\"format\": \"apt\", \"type\": \"hosted\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to helm proxy repos", "module": "set_fact", "index": 41, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to helm proxy repos"}, "module_options": {"nexus_repos_helm_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_helm_proxy -%}\n  {{ result.append(_nexus_repos_helm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to helm hosted repos", "module": "set_fact", "index": 42, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to helm hosted repos"}, "module_options": {"nexus_repos_helm_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_helm_hosted -%}\n  {{ result.append(_nexus_repos_helm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add helm repositories to global repos list", "module": "set_fact", "index": 43, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add helm repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_helm_proxy | map('combine', {\"format\": \"helm\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_helm_hosted | map('combine', {\"format\": \"helm\", \"type\": \"hosted\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to r proxy repos", "module": "set_fact", "index": 44, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to r proxy repos"}, "module_options": {"nexus_repos_r_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_r_proxy -%}\n  {{ result.append(_nexus_repos_r_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to r hosted repos", "module": "set_fact", "index": 45, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to r hosted repos"}, "module_options": {"nexus_repos_r_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_r_hosted -%}\n  {{ result.append(_nexus_repos_r_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to r group repos", "module": "set_fact", "index": 46, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to r group repos"}, "module_options": {"nexus_repos_r_group": "{%- set result=[] -%} {%- for repo in nexus_repos_r_group -%}\n  {{ result.append(_nexus_repos_r_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add r repositories to global repos list", "module": "set_fact", "index": 47, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add r repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_r_proxy | map('combine', {\"format\": \"r\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_r_hosted | map('combine', {\"format\": \"r\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_r_group | map('combine', {\"format\": \"r\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to p2 proxy repos", "module": "set_fact", "index": 48, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to p2 proxy repos"}, "module_options": {"nexus_repos_p2_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_p2_proxy -%}\n  {{ result.append(_nexus_repos_p2_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add p2 repositories to global repos list", "module": "set_fact", "index": 49, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add p2 repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_p2_proxy | map('combine', {\"format\": \"p2\", \"type\": \"proxy\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to conda proxy repos", "module": "set_fact", "index": 50, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to conda proxy repos"}, "module_options": {"nexus_repos_r_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_conda_proxy -%}\n  {{ result.append(_nexus_repos_conda_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add conda repositories to global repos list", "module": "set_fact", "index": 51, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add conda repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_r_proxy | map('combine', {\"format\": \"conda\", \"type\": \"proxy\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to go proxy repos", "module": "set_fact", "index": 52, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to go proxy repos"}, "module_options": {"nexus_repos_go_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_go_proxy -%}\n  {{ result.append(_nexus_repos_go_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to go group repos", "module": "set_fact", "index": 53, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to go group repos"}, "module_options": {"nexus_repos_go_group": "{%- set result=[] -%} {%- for repo in nexus_repos_go_group -%}\n  {{ result.append(_nexus_repos_go_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add go repositories to global repos list", "module": "set_fact", "index": 54, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add go repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_go_proxy | map('combine', {\"format\": \"go\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_go_group | map('combine', {\"format\": \"go\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/create_task_each.yml": {"py/object": "struct4.TaskFile", "name": "create_task_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/create_task_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/create_task_each.yml", "options": {"vars": {"script_name": "create_task", "args": "{{ item }}"}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/setup_ldap_each.yml": {"py/object": "struct4.TaskFile", "name": "setup_ldap_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/setup_ldap_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/setup_ldap_each.yml", "options": {"vars": {"script_name": "setup_ldap", "args": {"name": "{{ item.ldap_name }}", "protocol": "{{ item.ldap_protocol }}", "hostname": "{{ item.ldap_hostname }}", "port": "{{ item.ldap_port }}", "use_trust_store": "{{ item.ldap_use_trust_store | default(false) | bool }}", "auth": "{{ item.ldap_auth | default('none') }}", "username": "{{ item.ldap_auth_username | default('') }}", "password": "{{ item.ldap_auth_password | default('') }}", "search_base": "{{ item.ldap_search_base }}", "user_base_dn": "{{ item.ldap_user_base_dn | default('ou=users') }}", "user_ldap_filter": "{{ item.ldap_user_filter | default('') }}", "user_object_class": "{{ item.ldap_user_object_class }}", "user_id_attribute": "{{ item.ldap_user_id_attribute }}", "user_real_name_attribute": "{{ item.ldap_user_real_name_attribute }}", "user_email_attribute": "{{ item.ldap_user_email_attribute }}", "map_groups_as_roles": "{{ item.ldap_map_groups_as_roles | default(false) }}", "map_groups_as_roles_type": "{{ item.ldap_map_groups_as_roles_type | default('static') }}", "user_memberof_attribute": "{{ item.ldap_user_memberof_attribute | default('memberOf') }}", "group_base_dn": "{{ item.ldap_group_base_dn | default('ou=groups') }}", "group_object_class": "{{ item.ldap_group_object_class | default('groupOfNames') }}", "group_id_attribute": "{{ item.ldap_group_id_attribute | default('cn') }}", "group_member_attribute": "{{ item.ldap_group_member_attribute | default('member') }}", "group_member_format": "{{ item.ldap_group_member_format | default('uid=${username},ou=users,dc=yourcompany') }}", "user_subtree": "{{ item.ldap_user_subtree | default(false) }}", "group_subtree": "{{ item.ldap_group_subtree | default(false) }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-RedHat.yml": {"py/object": "struct4.TaskFile", "name": "selinux-RedHat.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Make sure we have the necessary yum packages available for selinux", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-RedHat.yml", "options": {"name": "Make sure we have the necessary yum packages available for selinux", "vars": {"py_suffix": "{{ \"3\" if ansible_python.version.major == 3 else \"\" }}"}}, "module_options": {"name": ["libselinux-python{{ py_suffix }}", "libsemanage-python{{ py_suffix }}"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/call_script.yml": {"py/object": "struct4.TaskFile", "name": "call_script.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/call_script.yml", "tasks": [{"py/object": "struct4.Task", "name": "Calling Groovy script {{ script_name }}", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/call_script.yml", "options": {"name": "Calling Groovy script {{ script_name }}", "register": "script_run", "failed_when": "script_run | nexus_groovy_error | bool", "changed_when": "script_run | nexus_groovy_changed | bool"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}/{{ script_name }}/run", "user": "admin", "password": "{{ current_nexus_admin_password }}", "headers": {"Content-Type": "text/plain"}, "method": "POST", "force_basic_auth": true, "validate_certs": "{{ nexus_api_validate_certs }}", "body": "{{ args | to_json }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Details about runned script if verbose mode is on", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/call_script.yml", "options": {"name": "Details about runned script if verbose mode is on", "when": "not ansible_check_mode"}, "module_options": {"msg": "{{ script_run | nexus_groovy_details }}", "verbosity": 1}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml": {"py/object": "struct4.TaskFile", "name": "nexus_purge.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "tasks": [{"py/object": "struct4.Task", "name": "Make sure nexus is stopped", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "Make sure nexus is stopped", "changed_when": true, "notify": ["nexus-service-stop"]}, "module_options": {"msg": "trigger nexus stop"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "get target path of current installed nexus version", "module": "command", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "get target path of current installed nexus version", "register": "nexus_readlink_latest_call", "failed_when": false, "changed_when": false, "check_mode": false}, "module_options": "readlink {{ nexus_installation_dir }}/nexus-latest", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge Nexus", "module": "file", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "Purge Nexus", "with_items": ["{{ nexus_data_dir }}", "{{ nexus_readlink_latest_call.stdout | default(omit) }}", "{{ nexus_restore_log }}", "{{ nexus_installation_dir }}/nexus-latest"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "remove nexus package if present", "module": "package", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "remove nexus package if present"}, "module_options": {"name": "nexus", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-Debian.yml": {"py/object": "struct4.TaskFile", "name": "selinux-Debian.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Make sure we have the necessary deb packages available for selinux", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-Debian.yml", "options": {"name": "Make sure we have the necessary deb packages available for selinux", "with_items": ["python-selinux", "python-semanage"]}, "module_options": {"name": "{{ item }}", "update_cache": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_repo_each.yml": {"py/object": "struct4.TaskFile", "name": "delete_repo_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_repo_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_repo_each.yml", "options": {"vars": {"script_name": "delete_repo", "args": {"name": "{{ item }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_blobstore_each.yml": {"py/object": "struct4.TaskFile", "name": "delete_blobstore_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_blobstore_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_blobstore_each.yml", "options": {"vars": {"script_name": "delete_blobstore", "args": "{{ item }}"}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml": {"py/object": "struct4.TaskFile", "name": "httpd_reverse_proxy_config.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "tasks": [{"py/object": "struct4.Task", "name": "Copy {{ httpd_package_name }} vhost", "module": "template", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Copy {{ httpd_package_name }} vhost", "notify": ["httpd-service-reload", "wait-for-httpd"]}, "module_options": {"src": "nexus-vhost.conf", "dest": "{{ httpd_config_dir }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy SSL certificate and optional chain file", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Copy SSL certificate and optional chain file", "when": "(httpd_copy_ssl_files | bool) and (item | length > 0)", "notify": ["httpd-service-reload", "wait-for-httpd"], "loop": "{{ [httpd_ssl_certificate_file] + [httpd_ssl_certificate_chain_file | default()] | unique }}"}, "module_options": {"src": "{{ item }}", "dest": "{{ certificate_file_dest }}", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy SSL certificate key file", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Copy SSL certificate key file", "when": "httpd_copy_ssl_files | bool", "notify": ["httpd-service-reload", "wait-for-httpd"]}, "module_options": {"src": "{{ httpd_ssl_certificate_key_file }}", "dest": "{{ certificate_key_dest }}", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setsebool httpd_can_network_connect", "module": "seboolean", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Setsebool httpd_can_network_connect", "when": "ansible_selinux.status is defined and ansible_selinux.status == \"enabled\""}, "module_options": {"name": "httpd_can_network_connect", "persistent": true, "state": true}, "executable": "seboolean", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check requirements and deprecated features/vars", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Check requirements and deprecated features/vars"}, "module_options": "requirements_and_deprecated.yml", "executable": "requirements_and_deprecated.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS specific variables.", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Include OS specific variables."}, "module_options": "configure-{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS specific selinux libs and utils if needed", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Include OS specific selinux libs and utils if needed", "when": "ansible_selinux.status is defined and ansible_selinux.status == \"enabled\""}, "module_options": "selinux-{{ ansible_os_family }}.yml", "executable": "selinux-{{ ansible_os_family }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if SystemD service is installed", "module": "stat", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Check if SystemD service is installed", "register": "nexus_systemd_service_file"}, "module_options": {"path": "/etc/systemd/system/nexus.service"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if sysv service is installed", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Check if sysv service is installed", "register": "nexus_sysv_service_file"}, "module_options": {"path": "/etc/init.d/nexus"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"when": "nexus_purge | default(false) | bool"}, "module_options": "nexus_purge.yml", "executable": "nexus_purge.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Digest splited blob list var", "module": "include_vars", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Digest splited blob list var", "when": "nexus_blob_split | bool"}, "module_options": "blob_vars.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {}, "module_options": "nexus_install.yml", "executable": "nexus_install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"when": "httpd_setup_enable | bool"}, "module_options": "httpd_reverse_proxy_config.yml", "executable": "httpd_reverse_proxy_config.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure nexus http proxy", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure nexus http proxy", "vars": {"script_name": "setup_http_proxy", "args": {"with_http_proxy": "{{ nexus_with_http_proxy }}", "http_proxy_host": "{{ nexus_http_proxy_host }}", "http_proxy_port": "{{ nexus_http_proxy_port }}", "http_proxy_username": "{{ nexus_http_proxy_username }}", "http_proxy_password": "{{ nexus_http_proxy_password }}", "with_https_proxy": "{{ nexus_with_https_proxy }}", "https_proxy_host": "{{ nexus_https_proxy_host }}", "https_proxy_port": "{{ nexus_https_proxy_port }}", "https_proxy_username": "{{ nexus_https_proxy_username }}", "https_proxy_password": "{{ nexus_https_proxy_password }}", "proxy_exclude_hosts": "{{ nexus_proxy_exclude_hosts }}"}}, "when": "nexus_with_http_proxy or nexus_with_https_proxy"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deleting default repositories", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Deleting default repositories", "with_items": ["maven-central", "maven-public", "maven-releases", "maven-snapshots", "nuget-group", "nuget-hosted", "nuget.org-proxy"], "when": "(nexus_data_dir_contents.stdout | length == 0) and nexus_delete_default_repos"}, "module_options": "delete_repo_each.yml", "executable": "delete_repo_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deleting default blobstore", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Deleting default blobstore", "with_items": "{{\n  {'default':{'blob': 'default'}}\n  | combine(nexus_blob_names)\n  | json_query(\"*.{name: blob}\")\n  | list\n  | unique\n}}", "when": "(nexus_data_dir_contents.stdout | length == 0) and nexus_delete_default_blobstore"}, "module_options": "delete_blobstore_each.yml", "executable": "delete_blobstore_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"with_items": "{{ ldap_connections }}"}, "module_options": "setup_ldap_each.yml", "executable": "setup_ldap_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check content selectors", "module": "include_tasks", "index": 13, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check content selectors", "vars": {"script_name": "create_content_selectors_from_list", "args": "{{ nexus_content_selectors }}"}, "when": "nexus_content_selectors | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to privileges", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "apply defaults to privileges"}, "module_options": {"nexus_privileges": "{%- set result=[] -%} {%- for privilege in nexus_privileges -%}\n  {{ result.append(_nexus_privilege_defaults | combine(privilege)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directories for blob stores.", "module": "file", "index": 15, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create directories for blob stores.", "when": "item.path is defined", "loop": "{{ nexus_blobstores }}"}, "module_options": {"path": "{{ item['path'] }}", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "state": "directory", "recurse": "{{ nexus_blobstores_recurse_owner | default(false) | bool }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/Check blobstores", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/Check blobstores", "vars": {"script_name": "create_blobstores_from_list", "args": "{{ nexus_blobstores }}"}, "when": "nexus_blobstores | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restore nexus backup", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Restore nexus backup", "when": "nexus_restore_point is defined"}, "module_options": "nexus-restore.yml", "executable": "nexus-restore.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check cleanup policies", "module": "include_tasks", "index": 18, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check cleanup policies", "vars": {"script_name": "create_cleanup_policies_from_list", "args": "{{ nexus_repos_cleanup_policies }}"}, "when": "nexus_repos_cleanup_policies | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Apply defaults to repositories configurations and process a single list", "module": "include_tasks", "index": 19, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Apply defaults to repositories configurations and process a single list"}, "module_options": "process_repos_list.yml", "executable": "process_repos_list.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create configured repositories", "module": "include_tasks", "index": 20, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create configured repositories", "vars": {"script_name": "create_repos_from_list", "args": "{{ _nexus_repos_global_list }}"}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check privileges", "module": "include_tasks", "index": 21, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check privileges", "vars": {"script_name": "setup_privileges_from_list", "args": "{{ nexus_privileges }}"}, "when": "nexus_privileges | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check roles", "module": "include_tasks", "index": 22, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check roles", "vars": {"script_name": "setup_roles_from_list", "args": "{{ nexus_roles }}"}, "when": "nexus_roles | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check local users", "module": "include_tasks", "index": 23, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check local users", "vars": {"script_name": "setup_users_from_list", "args": "{{ nexus_local_users }}"}, "when": "nexus_local_users | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check ldap users", "module": "include_tasks", "index": 24, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check ldap users", "vars": {"script_name": "setup_ldap_users_from_list", "args": "{{ nexus_ldap_users }}"}, "when": "nexus_ldap_users | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 25, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_anonymous_access", "args": {"anonymous_access": "{{ nexus_anonymous_access }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 26, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_base_url", "args": {"base_url": "{{ nexus_public_scheme }}://{{ nexus_public_hostname }}/"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 27, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_realms", "args": {"nuget_api_key_realm": "{{ nexus_nuget_api_key_realm }}", "npm_bearer_token_realm": "{{ nexus_npm_bearer_token_realm }}", "rut_auth_realm": "{{ nexus_rut_auth_realm }}", "ldap_realm": "{{ nexus_ldap_realm }}", "docker_bearer_token_realm": "{{ nexus_docker_bearer_token_realm }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure RUT Auth header", "module": "include_tasks", "index": 28, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure RUT Auth header", "vars": {"script_name": "setup_capability", "args": {"capability_typeId": "rutauth", "capability_enabled": true, "capability_properties": {"httpHeader": "{{ nexus_rut_auth_header }}"}}}, "when": "nexus_rut_auth_header is defined"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 29, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_email", "args": {"email_server_enabled": "{{ nexus_email_server_enabled }}", "email_server_host": "{{ nexus_email_server_host }}", "email_server_port": "{{ nexus_email_server_port }}", "email_server_username": "{{ nexus_email_server_username }}", "email_server_password": "{{ nexus_email_server_password }}", "email_from_address": "{{ nexus_email_from_address }}", "email_subject_prefix": "{{ nexus_email_subject_prefix }}", "email_tls_enabled": "{{ nexus_email_tls_enabled }}", "email_tls_required": "{{ nexus_email_tls_required }}", "email_ssl_on_connect_enabled": "{{ nexus_email_ssl_on_connect_enabled }}", "email_ssl_check_server_identity_enabled": "{{ nexus_email_ssl_check_server_identity_enabled }}", "email_trust_store_enabled": "{{ nexus_email_trust_store_enabled }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure branding capability", "module": "include_tasks", "index": 30, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure branding capability", "vars": {"script_name": "setup_capability", "args": {"capability_typeId": "rapture.branding", "capability_enabled": "{{ (nexus_branding_footer | length > 0) and (nexus_branding_header | length > 0) }}", "capability_properties": {"footerHtml": "{{ nexus_branding_footer }}", "headerHtml": "{{ nexus_branding_header }}", "footerEnabled": "{{ nexus_branding_footer | length > 0 }}", "headerEnabled": "{{ nexus_branding_header | length > 0 }}"}}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure audit capability", "module": "include_tasks", "index": 31, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure audit capability", "vars": {"script_name": "setup_capability", "args": {"capability_typeId": "audit", "capability_enabled": "{{ nexus_audit_enabled | bool }}", "capability_properties": {}}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define backup task if backup is configured", "module": "set_fact", "index": 32, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Define backup task if backup is configured", "when": "nexus_backup_configure | bool"}, "module_options": {"_nexus_backup_task": [{"name": "db and blobstores backup", "typeId": "script", "schedule_type": "{{ nexus_backup_schedule_type }}", "cron": "{{ nexus_backup_cron }}", "start_date_time": "{{ nexus_backup_start_date_time | default('') }}", "weekly_days": "{{ nexus_backup_weekly_days | default([]) }}", "monthly_days": "{{ nexus_backup_monthly_days | default([]) }}", "taskProperties": {"language": "groovy", "source": "{{ lookup('template', './templates/backup.groovy.j2') }}"}}]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create scheduled tasks (with backup task if relevant)", "module": "include_tasks", "index": 33, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create scheduled tasks (with backup task if relevant)", "with_items": "{{ nexus_scheduled_tasks + _nexus_backup_task | default([]) }}", "when": "nexus_run_provisionning | default(true) | bool"}, "module_options": "create_task_each.yml", "executable": "create_task_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml": {"py/object": "struct4.TaskFile", "name": "requirements_and_deprecated.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "tasks": [{"py/object": "struct4.Task", "name": "Try to use jmespath on a test var", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Try to use jmespath on a test var"}, "module_options": {"voidvar": "{{ [] | json_query('[]') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Broken compatibility => nexus_package is now dynamically calculated", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Broken compatibility => nexus_package is now dynamically calculated", "when": "nexus_package is defined"}, "module_options": {"msg": "You have set the variable nexus_package in your playbook. Starting from version 2.2.0 of this role, this is not compatible with the new nexus latest version detection feature and is not supported anymore. Please use the nexus_version variable only."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Broken compatibility => purge var moved to nexus_purge", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Broken compatibility => purge var moved to nexus_purge", "when": "purge is defined"}, "module_options": {"msg": "You have set the purge variable to reset nexus. Starting from version 2.2.3 of this role, this variable has been renamed nexus_purge. Please fix the var name accordingly on you command line call."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Variable refactoring - public_hostname is now nexus_public_hostname", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Variable refactoring - public_hostname is now nexus_public_hostname", "when": "public_hosname | default('') | length > 0 and public_hostname != nexus_public_hostname and nexus_public_hostname == 'nexus.vm'"}, "module_options": {"msg": "Version 2.3.0 of this role introduced a variable name change: public_hostname was renamed to nexus_public_hostname. We have detected that public_hostname is set in your vars ({{ public_hostname }}) and is different from nexus_public_hostname which still has its default value ({{ nexus_public_hostname }}). Fix this by setting a correct value for nexus_public_hostname and remove public_hostname if possible."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Coding standard: proxy_url is not supported anymore for docker proxy repos", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Coding standard: proxy_url is not supported anymore for docker proxy repos", "when": ["nexus_repos_docker_proxy | length > 0", "nexus_repos_docker_proxy | json_query('[?proxy_url]') | list | length > 0"]}, "module_options": {"msg": "proxy_url used to be the variable to configure docker proxy repositories in nexus3-oss role. Since version 2.3.0, all repository configuration use the same standard var remote_url. Please review your configurations in nexus_repos_docker_proxy and rename the variable accordingly."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print debug message about our internal var", "module": "vars", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Print debug message about our internal var", "debug": {"msg": "{{ error_msg.split('\n') }}"}}, "module_options": {"error_msg": "_nexus_repos_global_list is set somewhere in your playbook/inventory.\nThis is an internal var that must be unset when the role starts executing.\nPlease unset _nexus_repos_global_list from your playbook/inventory"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail as we cannot run correctly with internal var set", "module": "fail", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Fail as we cannot run correctly with internal var set"}, "module_options": {"msg": "Unset _nexus_repos_global_list. See debug message above"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}}, "role_dict": {"ansible-ThoTeam.nexus3-oss": {"py/object": "struct4.Role", "name": "ansible-ThoTeam.nexus3-oss", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss", "fqcn": "ansible-ThoTeam.nexus3-oss", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "nexus-restore.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "tasks": [{"py/object": "struct4.Task", "name": "Make sure nexus is stopped", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {"name": "Make sure nexus is stopped", "changed_when": true, "notify": ["nexus-service-stop"]}, "module_options": {"msg": "trigger nexus stop"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run restoration script", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {"name": "Run restoration script", "tags": ["skip_ansible_lint"], "notify": ["nexus-service-restart", "wait-for-nexus", "wait-for-nexus-port"]}, "module_options": "nexus-blob-restore.sh {{ nexus_restore_point }} 2>&1 | tee -a {{ nexus_restore_log }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus-restore.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "nexus_install.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set detection method to fixed if we have a var", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set detection method to fixed if we have a var", "when": "nexus_version | length > 0"}, "module_options": {"nexus_version_detected_from": "fixed"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check nexus-latest link stat in {{ nexus_installation_dir }}", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Check nexus-latest link stat in {{ nexus_installation_dir }}", "register": "nexus_latest_link", "check_mode": false}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register current running version if any", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register current running version if any", "when": ["nexus_latest_link.stat.exists | default(false)", "nexus_latest_link.stat.islnk | default(false)"]}, "module_options": {"nexus_version_running": "{{\n  nexus_latest_link.stat.lnk_target\n  | regex_replace('^.*/nexus-(\\d*\\.\\d*\\.\\d*-\\d*)', '\\1')\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register nexus_version from currently installed", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register nexus_version from currently installed", "when": ["nexus_version_running is defined", "not (nexus_upgrade | default(false) | bool)"]}, "module_options": {"nexus_version": "{{ nexus_version_running }}", "nexus_version_detected_from": "installed"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Call latest nexus uri to get redirection", "module": "uri", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Call latest nexus uri to get redirection", "register": "nexus_latest_uri_call", "check_mode": false}, "module_options": {"url": "{{ nexus_download_url }}/latest-unix.tar.gz", "method": "CONNECT", "status_code": 302, "validate_certs": "{{ nexus_download_ssl_verify | default(omit) }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register nexus_version from latest nexus uri redirection", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register nexus_version from latest nexus uri redirection"}, "module_options": {"nexus_version": "{{\n  nexus_latest_uri_call.location\n  | regex_replace(\"^https://.*nexus-(\\d*\\.\\d*\\.\\d*-\\d*)-unix.tar.gz\", \"\\1\")\n}}", "nexus_version_detected_from": "latest"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print info about detected version to use", "module": "vars", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Print info about detected version to use", "debug": {"msg": "{{ version_info.split('\n') }}"}}, "module_options": {"version_info": "Used version: {{ nexus_version }}\nVersion detected from: {{ nexus_version_detected_from }}\nUpgrade allowed: {{ nexus_upgrade | default(false) | bool }}\nCurrent running version: {{ nexus_version_running | default('none') }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register nexus package name", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register nexus package name"}, "module_options": {"nexus_package": "nexus-{{ nexus_version }}-unix.tar.gz"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download nexus_package", "module": "get_url", "index": 8, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Download nexus_package", "notify": ["nexus-service-stop"]}, "module_options": {"url": "{{ nexus_download_url }}/{{ nexus_package }}", "dest": "{{ nexus_download_dir }}/{{ nexus_package }}", "force": false, "validate_certs": "{{ nexus_download_ssl_verify | default(omit) }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Nexus o/s group exists", "module": "group", "index": 9, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure Nexus o/s group exists"}, "module_options": {"name": "{{ nexus_os_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Nexus o/s user exists", "module": "user", "index": 10, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure Nexus o/s user exists"}, "module_options": {"name": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "home": "{{ nexus_os_user_home_dir }}", "shell": "/bin/bash", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Nexus installation directory exists", "module": "file", "index": 11, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure Nexus installation directory exists"}, "module_options": {"path": "{{ nexus_installation_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unpack Nexus download", "module": "unarchive", "index": 12, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Unpack Nexus download", "notify": ["nexus-service-stop"]}, "module_options": {"src": "{{ nexus_download_dir }}/{{ nexus_package }}", "dest": "{{ nexus_installation_dir }}", "creates": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}", "copy": false, "mode": 493}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure proper ownership of nexus installation directory", "module": "file", "index": 13, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure proper ownership of nexus installation directory"}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}", "recurse": true, "mode": "u=rwX,g=rX,o=rX"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update symlink nexus-latest", "module": "file", "index": 14, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Update symlink nexus-latest", "register": "nexus_latest_version", "notify": ["nexus-service-stop"]}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest", "src": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "state": "link", "follow": false}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 15, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unpacked data directory", "module": "file", "index": 16, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Delete unpacked data directory"}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest/data", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get path to default settings", "module": "set_fact", "index": 17, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to default settings", "when": "nexus_version is version_compare('3.1.0', '<')"}, "module_options": {"nexus_default_settings_file": "{{ nexus_installation_dir }}/nexus-latest/etc/org.sonatype.nexus.cfg"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get path to default settings", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to default settings", "when": "nexus_version is version_compare('3.1.0', '>=')"}, "module_options": {"nexus_default_settings_file": "{{ nexus_installation_dir }}/nexus-latest/etc/nexus-default.properties"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get application settings directories", "module": "set_fact", "index": 19, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get application settings directories", "when": "nexus_version is version_compare('3.1.0', '<')"}, "module_options": {"nexus_app_dir_settings_dirs": ["{{ nexus_installation_dir }}/nexus-latest/etc"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get application settings directories", "module": "set_fact", "index": 20, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get application settings directories", "when": "nexus_version is version_compare('3.1.0', '>=')"}, "module_options": {"nexus_app_dir_settings_dirs": ["{{ nexus_installation_dir }}/nexus-latest/etc", "{{ nexus_installation_dir }}/nexus-latest/etc/karaf", "{{ nexus_installation_dir }}/nexus-latest/etc/jetty", "{{ nexus_installation_dir }}/nexus-latest/etc/fabric", "{{ nexus_installation_dir }}/nexus-latest/etc/logback", "{{ nexus_installation_dir }}/nexus-latest/etc/scripts"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get rest API endpoint (v < 3.8.0)", "module": "set_fact", "index": 21, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get rest API endpoint (v < 3.8.0)", "when": "nexus_version is version_compare('3.8.0', '<')"}, "module_options": {"nexus_rest_api_endpoint": "service/siesta/rest/v1/script"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get rest API endpoint (v >= 3.8.0)", "module": "set_fact", "index": 22, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get rest API endpoint (v >= 3.8.0)", "when": "nexus_version is version_compare('3.8.0', '>=')"}, "module_options": {"nexus_rest_api_endpoint": "service/rest/v1/script"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get path to database restore dir (v < 3.11.0)", "module": "set_fact", "index": 23, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to database restore dir (v < 3.11.0)", "when": "nexus_version is version_compare('3.11.0', '<')"}, "module_options": {"nexus_db_restore_dir": "{{ nexus_data_dir }}/backup"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get path to database restore dir (v >= 3.11.0)", "module": "set_fact", "index": 24, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Get path to database restore dir (v >= 3.11.0)", "when": "nexus_version is version_compare('3.11.0', '>=')"}, "module_options": {"nexus_db_restore_dir": "{{ nexus_data_dir }}/restore-from-backup"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow nexus to create first-time install configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "module": "file", "index": 25, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Allow nexus to create first-time install configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "with_items": "{{ nexus_app_dir_settings_dirs }}", "when": "nexus_latest_version.changed", "register": "chown_config_first_time", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": "0755", "recurse": false}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Nexus data directory", "module": "file", "index": 26, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create Nexus data directory"}, "module_options": {"path": "{{ nexus_data_dir }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus data directory", "module": "lineinfile", "index": 27, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus data directory", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Dkaraf.data=.*", "line": "-Dkaraf.data={{ nexus_data_dir }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup JVM logfile directory", "module": "lineinfile", "index": 28, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup JVM logfile directory", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-XX:LogFile=.*", "line": "-XX:LogFile={{ nexus_data_dir }}/log/jvm.log"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus default timezone", "module": "lineinfile", "index": 29, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus default timezone", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Duser.timezone=.*", "line": "-Duser.timezone={{ nexus_timezone }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus JVM min heap size", "module": "lineinfile", "index": 30, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus JVM min heap size", "notify": "nexus-service-stop"}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Xms.*", "line": "-Xms{{ nexus_min_heap_size }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus JVM max heap size", "module": "lineinfile", "index": 31, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus JVM max heap size", "notify": "nexus-service-stop"}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Xmx.*", "line": "-Xmx{{ nexus_max_heap_size }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus JVM max direct memory", "module": "lineinfile", "index": 32, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus JVM max direct memory", "notify": "nexus-service-stop"}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-XX:MaxDirectMemorySize=.*", "line": "-XX:MaxDirectMemorySize={{ nexus_max_direct_memory }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop the admin wizard from running", "module": "lineinfile", "index": 33, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Stop the admin wizard from running", "when": "nexus_version is version_compare('3.17.0', '>=')"}, "module_options": {"path": "{{ nexus_default_settings_file }}", "line": "nexus.onboarding.enabled={{ nexus_onboarding_wizard }}", "create": true, "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Nexus tmp directory", "module": "file", "index": 34, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create Nexus tmp directory"}, "module_options": {"path": "{{ nexus_tmp_dir }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Nexus backup directory", "module": "file", "index": 35, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create Nexus backup directory", "when": "nexus_backup_dir_create | bool"}, "module_options": {"path": "{{ nexus_backup_dir }}", "state": "directory", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup Nexus tmp directory", "module": "lineinfile", "index": 36, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Setup Nexus tmp directory", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions", "regexp": "^-Djava.io.tmpdir=.*", "line": "-Djava.io.tmpdir={{ nexus_tmp_dir }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set NEXUS_HOME for the service user", "module": "lineinfile", "index": 37, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set NEXUS_HOME for the service user", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_os_user_home_dir }}/.bashrc", "regexp": "^export NEXUS_HOME=.*", "line": "export NEXUS_HOME={{ nexus_installation_dir }}/nexus-latest"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set nexus user", "module": "lineinfile", "index": 38, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus user", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.rc", "regexp": ".*run_as_user=.*", "line": "run_as_user=\"{{ nexus_os_user }}\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set nexus port", "module": "lineinfile", "index": 39, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus port", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^application-port=.*", "line": "application-port={{ nexus_default_port }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set nexus context path", "module": "lineinfile", "index": 40, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus context path", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^nexus-context-path=.*", "line": "nexus-context-path={{ nexus_default_context_path }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set nexus service listening ip to {{ nexus_application_host }}", "module": "lineinfile", "index": 41, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set nexus service listening ip to {{ nexus_application_host }}", "notify": ["nexus-service-stop"]}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^application-host=.*", "line": "application-host={{ nexus_application_host }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable creating groovy scripts in nexus", "module": "lineinfile", "index": 42, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Enable creating groovy scripts in nexus", "notify": ["nexus-service-stop"], "when": "nexus_version is version_compare('3.21.2', '>=')"}, "module_options": {"dest": "{{ nexus_default_settings_file }}", "regexp": "^nexus.scripts.allowCreation=.*", "line": "nexus.scripts.allowCreation=true"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create systemd service configuration", "module": "template", "index": 43, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create systemd service configuration", "notify": ["systemd-reload"], "when": "ansible_service_mgr == 'systemd'"}, "module_options": {"src": "nexus.service", "dest": "/etc/systemd/system", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create sysv service configuration", "module": "file", "index": 44, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create sysv service configuration", "when": "ansible_service_mgr != 'systemd'"}, "module_options": {"path": "/etc/init.d/nexus", "src": "{{ nexus_installation_dir }}/nexus-latest/bin/nexus", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deploy backup restore script", "module": "template", "index": 45, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Deploy backup restore script"}, "module_options": {"src": "nexus-blob-restore.sh.j2", "dest": "{{ nexus_script_dir }}/nexus-blob-restore.sh", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink backup restore script to /sbin", "module": "file", "index": 46, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Symlink backup restore script to /sbin"}, "module_options": {"src": "{{ nexus_script_dir }}/nexus-blob-restore.sh", "dest": "/sbin/nexus-blob-restore.sh", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if data directory is empty (first-time install)", "module": "command", "index": 47, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Check if data directory is empty (first-time install)", "register": "nexus_data_dir_contents", "check_mode": false, "changed_when": false}, "module_options": "ls --ignore=lost+found {{ nexus_data_dir }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean cache for upgrade process", "module": "file", "index": 48, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Clean cache for upgrade process", "when": "nexus_latest_version.changed and nexus_data_dir_contents.stdout | length > 0", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ nexus_data_dir }}/clean_cache", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 49, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable nexus systemd service and make sure it is started", "module": "systemd", "index": 50, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Enable nexus systemd service and make sure it is started", "notify": ["wait-for-nexus", "wait-for-nexus-port"], "when": "ansible_service_mgr == 'systemd'"}, "module_options": {"name": "nexus.service", "enabled": true, "state": "started", "no_block": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable nexus sysv service and make sure it is started", "module": "service", "index": 51, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Enable nexus sysv service and make sure it is started", "notify": ["wait-for-nexus", "wait-for-nexus-port"], "when": "ansible_service_mgr != 'systemd'"}, "module_options": {"name": "nexus", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 52, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Chown configuration files from {{ nexus_installation_dir }}/nexus-latest/etc back to root", "module": "file", "index": 53, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Chown configuration files from {{ nexus_installation_dir }}/nexus-latest/etc back to root", "when": "chown_config_first_time.changed", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ nexus_installation_dir }}/nexus-latest/etc", "owner": "root", "group": "root", "mode": "a=rX,u+w", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Prevent nexus to create any new configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "module": "file", "index": 54, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Prevent nexus to create any new configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc", "with_items": "{{ nexus_app_dir_settings_dirs }}"}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "root", "mode": "0755", "recurse": false}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install plugins from remote source", "module": "get_url", "index": 55, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Install plugins from remote source", "with_items": "{{ nexus_plugin_urls }}"}, "module_options": {"url": "{{ item }}", "dest": "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}/deploy/"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Access scripts API endpoint with defined admin password", "module": "uri", "index": 56, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Access scripts API endpoint with defined admin password", "register": "nexus_api_head_with_defined_password", "check_mode": false}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}", "method": "HEAD", "user": "admin", "password": "{{ nexus_admin_password }}", "force_basic_auth": true, "status_code": "200, 401", "validate_certs": "{{ nexus_api_validate_certs }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register defined admin password for next operations", "module": "set_fact", "index": 57, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register defined admin password for next operations", "when": "nexus_api_head_with_defined_password.status == 200", "no_log": true}, "module_options": {"current_nexus_admin_password": "{{ nexus_admin_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if admin.password file exists", "module": "stat", "index": 58, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Check if admin.password file exists", "register": "admin_password_file"}, "module_options": {"path": "{{ nexus_data_dir }}/admin.password"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Slurp content of remote generated password file", "module": "slurp", "index": 59, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Slurp content of remote generated password file", "register": "_slurpedpass"}, "module_options": {"src": "{{ nexus_data_dir }}/admin.password"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default password from slurped content", "module": "set_fact", "index": 60, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Set default password from slurped content"}, "module_options": {"nexus_default_admin_password": "{{ _slurpedpass.content | b64decode }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Access scripts API endpoint with default admin password", "module": "uri", "index": 61, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Access scripts API endpoint with default admin password", "register": "nexus_api_head_with_default_password", "when": "nexus_api_head_with_defined_password.status == 401"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}", "method": "HEAD", "user": "admin", "password": "{{ nexus_default_admin_password }}", "force_basic_auth": true, "status_code": "200, 401", "validate_certs": "{{ nexus_api_validate_certs }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register default admin password for next operations", "module": "set_fact", "index": 62, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Register default admin password for next operations", "when": "(nexus_api_head_with_default_password.status | default(false)) == 200"}, "module_options": {"current_nexus_admin_password": "{{ nexus_default_admin_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure current Nexus password is known", "module": "fail", "index": 63, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Ensure current Nexus password is known", "when": "current_nexus_admin_password is not defined"}, "module_options": {"msg": "Failed to determine current Nexus password (it is neither the default/generated nor the defined password). If you are trying to change nexus_admin_password after first install, please set `-e nexus_default_admin_password=oldPassword` on the ansible-playbook command line. See https://github.com/ansible-ThoTeam/nexus3-oss/blob/master/README.md#change-admin-password-after-first-install"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force (re-)registration of groovy scripts (purge reference dir)", "module": "file", "index": 64, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Force (re-)registration of groovy scripts (purge reference dir)", "when": "nexus_force_groovy_scripts_registration | default(false)"}, "module_options": {"path": "{{ nexus_data_dir }}/groovy-raw-scripts", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directories to hold current groovy scripts for reference", "module": "file", "index": 65, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Create directories to hold current groovy scripts for reference", "with_items": ["{{ nexus_data_dir }}/groovy-raw-scripts/current", "{{ nexus_data_dir }}/groovy-raw-scripts/new"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Archive scripts", "module": "archive", "index": 66, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Archive scripts", "become": false, "run_once": true, "delegate_to": "localhost"}, "module_options": {"path": "{{ role_path }}/files/groovy/*", "dest": "/tmp/nexus-upload-groovy-scripts.tar.gz", "mode": 420}, "executable": "archive", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Upload new scripts", "module": "unarchive", "index": 67, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Upload new scripts"}, "module_options": {"src": "/tmp/nexus-upload-groovy-scripts.tar.gz", "dest": "{{ nexus_data_dir }}/groovy-raw-scripts/new/", "mode": 420}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sync new scripts to old and get differences", "module": "shell", "index": 68, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Sync new scripts to old and get differences", "register": "nexus_groovy_files_changed", "check_mode": false, "changed_when": false, "args": {"warn": false, "executable": "/bin/bash"}}, "module_options": "set -o pipefail && rsync -ric {{ nexus_data_dir }}/groovy-raw-scripts/new/ {{ nexus_data_dir }}/groovy-raw-scripts/current/ | cut -d\" \" -f 2 | sed \"s/\\.groovy//g\"\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Declare new or changed groovy scripts in nexus", "module": "include_tasks", "index": 69, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Declare new or changed groovy scripts in nexus", "with_items": "{{ nexus_groovy_files_changed.stdout_lines }}"}, "module_options": "declare_script_each.yml", "executable": "declare_script_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 70, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"vars": {"script_name": "update_admin_password", "args": {"new_password": "{{ nexus_admin_password }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Admin password changed", "module": "set_fact", "index": 71, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Admin password changed", "no_log": true}, "module_options": {"current_nexus_admin_password": "{{ nexus_admin_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clear generated password file from install (nexus > 3.17)", "module": "file", "index": 72, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_install.yml", "options": {"name": "Clear generated password file from install (nexus > 3.17)", "when": "nexus_version is version_compare('3.17.0', '>=')"}, "module_options": {"path": "{{ nexus_data_dir }}/admin.password", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "declare_script_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/declare_script_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "Removing (potential) previously declared Groovy script {{ item }}", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/declare_script_each.yml", "options": {"name": "Removing (potential) previously declared Groovy script {{ item }}"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}/{{ item }}", "user": "admin", "password": "{{ current_nexus_admin_password }}", "method": "DELETE", "force_basic_auth": true, "status_code": "204,404", "validate_certs": "{{ nexus_api_validate_certs }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Declaring Groovy script {{ item }}", "module": "uri", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/declare_script_each.yml", "options": {"name": "Declaring Groovy script {{ item }}"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}", "user": "admin", "password": "{{ current_nexus_admin_password }}", "body_format": "json", "method": "POST", "force_basic_auth": true, "status_code": 204, "validate_certs": "{{ nexus_api_validate_certs }}", "body": {"name": "{{ item }}", "type": "groovy", "content": "{{ lookup('file', 'groovy/' + item + '.groovy') }}"}}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "process_repos_list.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "tasks": [{"py/object": "struct4.Task", "name": "apply defaults to maven proxy repos", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to maven proxy repos"}, "module_options": {"nexus_repos_maven_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_maven_proxy -%}\n  {{ result.append(_nexus_repos_maven_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to maven hosted repos", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to maven hosted repos"}, "module_options": {"nexus_repos_maven_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_maven_hosted -%}\n  {{ result.append(_nexus_repos_maven_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to maven group repos", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to maven group repos"}, "module_options": {"nexus_repos_maven_group": "{%- set result=[] -%} {%- for repo in nexus_repos_maven_group -%}\n  {{ result.append(_nexus_repos_maven_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add maven repositories to global repos list", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add maven repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_maven_proxy | map('combine', {\"format\": \"maven2\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_maven_hosted | map('combine', {\"format\": \"maven2\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_maven_group | map('combine', {\"format\": \"maven2\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to docker proxy repos", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to docker proxy repos"}, "module_options": {"nexus_repos_docker_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_docker_proxy -%}\n  {{ result.append(_nexus_repos_docker_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to docker hosted repos", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to docker hosted repos"}, "module_options": {"nexus_repos_docker_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_docker_hosted -%}\n  {{ result.append(_nexus_repos_docker_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to docker group repos", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to docker group repos"}, "module_options": {"nexus_repos_docker_group": "{%- set result=[] -%} {%- for repo in nexus_repos_docker_group -%}\n  {{ result.append(_nexus_repos_docker_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add docker repositories to global repos list", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add docker repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_docker_proxy | map('combine', {\"format\": \"docker\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_docker_hosted | map('combine', {\"format\": \"docker\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_docker_group | map('combine', {\"format\": \"docker\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to pypi proxy repos", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to pypi proxy repos"}, "module_options": {"nexus_repos_pypi_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_pypi_proxy -%}\n  {{ result.append(_nexus_repos_pypi_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to pypi hosted repos", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to pypi hosted repos"}, "module_options": {"nexus_repos_pypi_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_pypi_hosted -%}\n  {{ result.append(_nexus_repos_pypi_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to pypi group repos", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to pypi group repos"}, "module_options": {"nexus_repos_pypi_group": "{%- set result=[] -%} {%- for repo in nexus_repos_pypi_group -%}\n  {{ result.append(_nexus_repos_pypi_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add pypi repositories to global repos list", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add pypi repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_pypi_proxy | map('combine', {\"format\": \"pypi\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_pypi_hosted | map('combine', {\"format\": \"pypi\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_pypi_group | map('combine', {\"format\": \"pypi\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to raw proxy repos", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to raw proxy repos"}, "module_options": {"nexus_repos_raw_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_raw_proxy -%}\n  {{ result.append(_nexus_repos_raw_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to raw hosted repos", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to raw hosted repos"}, "module_options": {"nexus_repos_raw_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_raw_hosted -%}\n  {{ result.append(_nexus_repos_raw_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to raw group repos", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to raw group repos"}, "module_options": {"nexus_repos_raw_group": "{%- set result=[] -%} {%- for repo in nexus_repos_raw_group -%}\n  {{ result.append(_nexus_repos_raw_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add raw repositories to global repos list", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add raw repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_raw_proxy | map('combine', {\"format\": \"raw\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_raw_hosted | map('combine', {\"format\": \"raw\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_raw_group | map('combine', {\"format\": \"raw\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to rubygems proxy repos", "module": "set_fact", "index": 16, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to rubygems proxy repos"}, "module_options": {"nexus_repos_rubygems_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_rubygems_proxy -%}\n  {{ result.append(_nexus_repos_rubygems_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to rubygems hosted repos", "module": "set_fact", "index": 17, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to rubygems hosted repos"}, "module_options": {"nexus_repos_rubygems_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_rubygems_hosted -%}\n  {{ result.append(_nexus_repos_rubygems_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to rubygems group repos", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to rubygems group repos"}, "module_options": {"nexus_repos_rubygems_group": "{%- set result=[] -%} {%- for repo in nexus_repos_rubygems_group -%}\n  {{ result.append(_nexus_repos_rubygems_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add rubygems repositories to global repos list", "module": "set_fact", "index": 19, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add rubygems repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_rubygems_proxy | map('combine', {\"format\": \"rubygems\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_rubygems_hosted | map('combine', {\"format\": \"rubygems\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_rubygems_group | map('combine', {\"format\": \"rubygems\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to bower proxy repos", "module": "set_fact", "index": 20, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to bower proxy repos"}, "module_options": {"nexus_repos_bower_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_bower_proxy -%}\n  {{ result.append(_nexus_repos_bower_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to bower hosted repos", "module": "set_fact", "index": 21, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to bower hosted repos"}, "module_options": {"nexus_repos_bower_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_bower_hosted -%}\n  {{ result.append(_nexus_repos_bower_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to bower group repos", "module": "set_fact", "index": 22, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to bower group repos"}, "module_options": {"nexus_repos_bower_group": "{%- set result=[] -%} {%- for repo in nexus_repos_bower_group -%}\n  {{ result.append(_nexus_repos_bower_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add bower repositories to global repos list", "module": "set_fact", "index": 23, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add bower repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_bower_proxy | map('combine', {\"format\": \"bower\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_bower_hosted | map('combine', {\"format\": \"bower\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_bower_group | map('combine', {\"format\": \"bower\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to npm proxy repos", "module": "set_fact", "index": 24, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to npm proxy repos"}, "module_options": {"nexus_repos_npm_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_npm_proxy -%}\n  {{ result.append(_nexus_repos_npm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to npm hosted repos", "module": "set_fact", "index": 25, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to npm hosted repos"}, "module_options": {"nexus_repos_npm_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_npm_hosted -%}\n  {{ result.append(_nexus_repos_npm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to npm group repos", "module": "set_fact", "index": 26, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to npm group repos"}, "module_options": {"nexus_repos_npm_group": "{%- set result=[] -%} {%- for repo in nexus_repos_npm_group -%}\n  {{ result.append(_nexus_repos_npm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add npm repositories to global repos list", "module": "set_fact", "index": 27, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add npm repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_npm_proxy | map('combine', {\"format\": \"npm\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_npm_hosted | map('combine', {\"format\": \"npm\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_npm_group | map('combine', {\"format\": \"npm\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to nuget proxy repos", "module": "set_fact", "index": 28, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to nuget proxy repos"}, "module_options": {"nexus_repos_nuget_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_nuget_proxy -%}\n  {{ result.append(_nexus_repos_nuget_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to nuget hosted repos", "module": "set_fact", "index": 29, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to nuget hosted repos"}, "module_options": {"nexus_repos_nuget_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_nuget_hosted -%}\n  {{ result.append(_nexus_repos_nuget_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to nuget group repos", "module": "set_fact", "index": 30, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to nuget group repos"}, "module_options": {"nexus_repos_nuget_group": "{%- set result=[] -%} {%- for repo in nexus_repos_nuget_group -%}\n  {{ result.append(_nexus_repos_nuget_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add nuget repositories to global repos list", "module": "set_fact", "index": 31, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add nuget repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_nuget_proxy | map('combine', {\"format\": \"nuget\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_nuget_hosted | map('combine', {\"format\": \"nuget\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_nuget_group | map('combine', {\"format\": \"nuget\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to gitlfs hosted repos", "module": "set_fact", "index": 32, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to gitlfs hosted repos"}, "module_options": {"nexus_repos_gitlfs_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_gitlfs_hosted -%}\n  {{ result.append(_nexus_repos_gitlfs_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add gitlfs repositories to global repos list", "module": "set_fact", "index": 33, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add gitlfs repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_gitlfs_hosted | map('combine', {\"format\": \"gitlfs\", \"type\": \"hosted\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to yum proxy repos", "module": "set_fact", "index": 34, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to yum proxy repos"}, "module_options": {"nexus_repos_yum_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_yum_proxy -%}\n  {{ result.append(_nexus_repos_yum_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to yum hosted repos", "module": "set_fact", "index": 35, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to yum hosted repos"}, "module_options": {"nexus_repos_yum_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_yum_hosted -%}\n  {{ result.append(_nexus_repos_yum_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to yum group repos", "module": "set_fact", "index": 36, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to yum group repos"}, "module_options": {"nexus_repos_yum_group": "{%- set result=[] -%} {%- for repo in nexus_repos_yum_group -%}\n  {{ result.append(_nexus_repos_yum_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add yum repositories to global repos list", "module": "set_fact", "index": 37, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add yum repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_yum_proxy | map('combine', {\"format\": \"yum\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_yum_hosted | map('combine', {\"format\": \"yum\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_yum_group | map('combine', {\"format\": \"yum\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to apt proxy repos", "module": "set_fact", "index": 38, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to apt proxy repos"}, "module_options": {"nexus_repos_apt_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_apt_proxy -%}\n  {{ result.append(_nexus_repos_apt_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to apt hosted repos", "module": "set_fact", "index": 39, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to apt hosted repos"}, "module_options": {"nexus_repos_apt_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_apt_hosted -%}\n  {{ result.append(_nexus_repos_apt_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add apt repositories to global repos list", "module": "set_fact", "index": 40, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add apt repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_apt_proxy | map('combine', {\"format\": \"apt\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_apt_hosted | map('combine', {\"format\": \"apt\", \"type\": \"hosted\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to helm proxy repos", "module": "set_fact", "index": 41, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to helm proxy repos"}, "module_options": {"nexus_repos_helm_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_helm_proxy -%}\n  {{ result.append(_nexus_repos_helm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to helm hosted repos", "module": "set_fact", "index": 42, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to helm hosted repos"}, "module_options": {"nexus_repos_helm_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_helm_hosted -%}\n  {{ result.append(_nexus_repos_helm_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add helm repositories to global repos list", "module": "set_fact", "index": 43, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add helm repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_helm_proxy | map('combine', {\"format\": \"helm\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_helm_hosted | map('combine', {\"format\": \"helm\", \"type\": \"hosted\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to r proxy repos", "module": "set_fact", "index": 44, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to r proxy repos"}, "module_options": {"nexus_repos_r_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_r_proxy -%}\n  {{ result.append(_nexus_repos_r_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to r hosted repos", "module": "set_fact", "index": 45, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to r hosted repos"}, "module_options": {"nexus_repos_r_hosted": "{%- set result=[] -%} {%- for repo in nexus_repos_r_hosted -%}\n  {{ result.append(_nexus_repos_r_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to r group repos", "module": "set_fact", "index": 46, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to r group repos"}, "module_options": {"nexus_repos_r_group": "{%- set result=[] -%} {%- for repo in nexus_repos_r_group -%}\n  {{ result.append(_nexus_repos_r_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add r repositories to global repos list", "module": "set_fact", "index": 47, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add r repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_r_proxy | map('combine', {\"format\": \"r\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_r_hosted | map('combine', {\"format\": \"r\", \"type\": \"hosted\"}) | list)\n  +\n  (nexus_repos_r_group | map('combine', {\"format\": \"r\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to p2 proxy repos", "module": "set_fact", "index": 48, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to p2 proxy repos"}, "module_options": {"nexus_repos_p2_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_p2_proxy -%}\n  {{ result.append(_nexus_repos_p2_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add p2 repositories to global repos list", "module": "set_fact", "index": 49, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add p2 repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_p2_proxy | map('combine', {\"format\": \"p2\", \"type\": \"proxy\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to conda proxy repos", "module": "set_fact", "index": 50, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to conda proxy repos"}, "module_options": {"nexus_repos_r_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_conda_proxy -%}\n  {{ result.append(_nexus_repos_conda_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add conda repositories to global repos list", "module": "set_fact", "index": 51, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add conda repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_r_proxy | map('combine', {\"format\": \"conda\", \"type\": \"proxy\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to go proxy repos", "module": "set_fact", "index": 52, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to go proxy repos"}, "module_options": {"nexus_repos_go_proxy": "{%- set result=[] -%} {%- for repo in nexus_repos_go_proxy -%}\n  {{ result.append(_nexus_repos_go_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to go group repos", "module": "set_fact", "index": 53, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "apply defaults to go group repos"}, "module_options": {"nexus_repos_go_group": "{%- set result=[] -%} {%- for repo in nexus_repos_go_group -%}\n  {{ result.append(_nexus_repos_go_defaults | combine(repo)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add go repositories to global repos list", "module": "set_fact", "index": 54, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/process_repos_list.yml", "options": {"name": "Add go repositories to global repos list"}, "module_options": {"_nexus_repos_global_list": "{{\n  _nexus_repos_global_list | default([])\n  +\n  (nexus_repos_go_proxy | map('combine', {\"format\": \"go\", \"type\": \"proxy\"}) | list)\n  +\n  (nexus_repos_go_group | map('combine', {\"format\": \"go\", \"type\": \"group\"}) | list)\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "create_task_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/create_task_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/create_task_each.yml", "options": {"vars": {"script_name": "create_task", "args": "{{ item }}"}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup_ldap_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/setup_ldap_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/setup_ldap_each.yml", "options": {"vars": {"script_name": "setup_ldap", "args": {"name": "{{ item.ldap_name }}", "protocol": "{{ item.ldap_protocol }}", "hostname": "{{ item.ldap_hostname }}", "port": "{{ item.ldap_port }}", "use_trust_store": "{{ item.ldap_use_trust_store | default(false) | bool }}", "auth": "{{ item.ldap_auth | default('none') }}", "username": "{{ item.ldap_auth_username | default('') }}", "password": "{{ item.ldap_auth_password | default('') }}", "search_base": "{{ item.ldap_search_base }}", "user_base_dn": "{{ item.ldap_user_base_dn | default('ou=users') }}", "user_ldap_filter": "{{ item.ldap_user_filter | default('') }}", "user_object_class": "{{ item.ldap_user_object_class }}", "user_id_attribute": "{{ item.ldap_user_id_attribute }}", "user_real_name_attribute": "{{ item.ldap_user_real_name_attribute }}", "user_email_attribute": "{{ item.ldap_user_email_attribute }}", "map_groups_as_roles": "{{ item.ldap_map_groups_as_roles | default(false) }}", "map_groups_as_roles_type": "{{ item.ldap_map_groups_as_roles_type | default('static') }}", "user_memberof_attribute": "{{ item.ldap_user_memberof_attribute | default('memberOf') }}", "group_base_dn": "{{ item.ldap_group_base_dn | default('ou=groups') }}", "group_object_class": "{{ item.ldap_group_object_class | default('groupOfNames') }}", "group_id_attribute": "{{ item.ldap_group_id_attribute | default('cn') }}", "group_member_attribute": "{{ item.ldap_group_member_attribute | default('member') }}", "group_member_format": "{{ item.ldap_group_member_format | default('uid=${username},ou=users,dc=yourcompany') }}", "user_subtree": "{{ item.ldap_user_subtree | default(false) }}", "group_subtree": "{{ item.ldap_group_subtree | default(false) }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux-RedHat.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Make sure we have the necessary yum packages available for selinux", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-RedHat.yml", "options": {"name": "Make sure we have the necessary yum packages available for selinux", "vars": {"py_suffix": "{{ \"3\" if ansible_python.version.major == 3 else \"\" }}"}}, "module_options": {"name": ["libselinux-python{{ py_suffix }}", "libsemanage-python{{ py_suffix }}"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "call_script.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/call_script.yml", "tasks": [{"py/object": "struct4.Task", "name": "Calling Groovy script {{ script_name }}", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/call_script.yml", "options": {"name": "Calling Groovy script {{ script_name }}", "register": "script_run", "failed_when": "script_run | nexus_groovy_error | bool", "changed_when": "script_run | nexus_groovy_changed | bool"}, "module_options": {"url": "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}{{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}/{{ script_name }}/run", "user": "admin", "password": "{{ current_nexus_admin_password }}", "headers": {"Content-Type": "text/plain"}, "method": "POST", "force_basic_auth": true, "validate_certs": "{{ nexus_api_validate_certs }}", "body": "{{ args | to_json }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Details about runned script if verbose mode is on", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/call_script.yml", "options": {"name": "Details about runned script if verbose mode is on", "when": "not ansible_check_mode"}, "module_options": {"msg": "{{ script_run | nexus_groovy_details }}", "verbosity": 1}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "nexus_purge.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "tasks": [{"py/object": "struct4.Task", "name": "Make sure nexus is stopped", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "Make sure nexus is stopped", "changed_when": true, "notify": ["nexus-service-stop"]}, "module_options": {"msg": "trigger nexus stop"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "get target path of current installed nexus version", "module": "command", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "get target path of current installed nexus version", "register": "nexus_readlink_latest_call", "failed_when": false, "changed_when": false, "check_mode": false}, "module_options": "readlink {{ nexus_installation_dir }}/nexus-latest", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge Nexus", "module": "file", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "Purge Nexus", "with_items": ["{{ nexus_data_dir }}", "{{ nexus_readlink_latest_call.stdout | default(omit) }}", "{{ nexus_restore_log }}", "{{ nexus_installation_dir }}/nexus-latest"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "remove nexus package if present", "module": "package", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/nexus_purge.yml", "options": {"name": "remove nexus package if present"}, "module_options": {"name": "nexus", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux-Debian.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Make sure we have the necessary deb packages available for selinux", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/selinux-Debian.yml", "options": {"name": "Make sure we have the necessary deb packages available for selinux", "with_items": ["python-selinux", "python-semanage"]}, "module_options": {"name": "{{ item }}", "update_cache": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "delete_repo_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_repo_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_repo_each.yml", "options": {"vars": {"script_name": "delete_repo", "args": {"name": "{{ item }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "delete_blobstore_each.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_blobstore_each.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/delete_blobstore_each.yml", "options": {"vars": {"script_name": "delete_blobstore", "args": "{{ item }}"}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "httpd_reverse_proxy_config.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "tasks": [{"py/object": "struct4.Task", "name": "Copy {{ httpd_package_name }} vhost", "module": "template", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Copy {{ httpd_package_name }} vhost", "notify": ["httpd-service-reload", "wait-for-httpd"]}, "module_options": {"src": "nexus-vhost.conf", "dest": "{{ httpd_config_dir }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy SSL certificate and optional chain file", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Copy SSL certificate and optional chain file", "when": "(httpd_copy_ssl_files | bool) and (item | length > 0)", "notify": ["httpd-service-reload", "wait-for-httpd"], "loop": "{{ [httpd_ssl_certificate_file] + [httpd_ssl_certificate_chain_file | default()] | unique }}"}, "module_options": {"src": "{{ item }}", "dest": "{{ certificate_file_dest }}", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy SSL certificate key file", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Copy SSL certificate key file", "when": "httpd_copy_ssl_files | bool", "notify": ["httpd-service-reload", "wait-for-httpd"]}, "module_options": {"src": "{{ httpd_ssl_certificate_key_file }}", "dest": "{{ certificate_key_dest }}", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setsebool httpd_can_network_connect", "module": "seboolean", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {"name": "Setsebool httpd_can_network_connect", "when": "ansible_selinux.status is defined and ansible_selinux.status == \"enabled\""}, "module_options": {"name": "httpd_can_network_connect", "persistent": true, "state": true}, "executable": "seboolean", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/httpd_reverse_proxy_config.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check requirements and deprecated features/vars", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Check requirements and deprecated features/vars"}, "module_options": "requirements_and_deprecated.yml", "executable": "requirements_and_deprecated.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS specific variables.", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Include OS specific variables."}, "module_options": "configure-{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS specific selinux libs and utils if needed", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Include OS specific selinux libs and utils if needed", "when": "ansible_selinux.status is defined and ansible_selinux.status == \"enabled\""}, "module_options": "selinux-{{ ansible_os_family }}.yml", "executable": "selinux-{{ ansible_os_family }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if SystemD service is installed", "module": "stat", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Check if SystemD service is installed", "register": "nexus_systemd_service_file"}, "module_options": {"path": "/etc/systemd/system/nexus.service"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if sysv service is installed", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Check if sysv service is installed", "register": "nexus_sysv_service_file"}, "module_options": {"path": "/etc/init.d/nexus"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"when": "nexus_purge | default(false) | bool"}, "module_options": "nexus_purge.yml", "executable": "nexus_purge.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Digest splited blob list var", "module": "include_vars", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Digest splited blob list var", "when": "nexus_blob_split | bool"}, "module_options": "blob_vars.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {}, "module_options": "nexus_install.yml", "executable": "nexus_install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"when": "httpd_setup_enable | bool"}, "module_options": "httpd_reverse_proxy_config.yml", "executable": "httpd_reverse_proxy_config.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure nexus http proxy", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure nexus http proxy", "vars": {"script_name": "setup_http_proxy", "args": {"with_http_proxy": "{{ nexus_with_http_proxy }}", "http_proxy_host": "{{ nexus_http_proxy_host }}", "http_proxy_port": "{{ nexus_http_proxy_port }}", "http_proxy_username": "{{ nexus_http_proxy_username }}", "http_proxy_password": "{{ nexus_http_proxy_password }}", "with_https_proxy": "{{ nexus_with_https_proxy }}", "https_proxy_host": "{{ nexus_https_proxy_host }}", "https_proxy_port": "{{ nexus_https_proxy_port }}", "https_proxy_username": "{{ nexus_https_proxy_username }}", "https_proxy_password": "{{ nexus_https_proxy_password }}", "proxy_exclude_hosts": "{{ nexus_proxy_exclude_hosts }}"}}, "when": "nexus_with_http_proxy or nexus_with_https_proxy"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deleting default repositories", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Deleting default repositories", "with_items": ["maven-central", "maven-public", "maven-releases", "maven-snapshots", "nuget-group", "nuget-hosted", "nuget.org-proxy"], "when": "(nexus_data_dir_contents.stdout | length == 0) and nexus_delete_default_repos"}, "module_options": "delete_repo_each.yml", "executable": "delete_repo_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deleting default blobstore", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Deleting default blobstore", "with_items": "{{\n  {'default':{'blob': 'default'}}\n  | combine(nexus_blob_names)\n  | json_query(\"*.{name: blob}\")\n  | list\n  | unique\n}}", "when": "(nexus_data_dir_contents.stdout | length == 0) and nexus_delete_default_blobstore"}, "module_options": "delete_blobstore_each.yml", "executable": "delete_blobstore_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"with_items": "{{ ldap_connections }}"}, "module_options": "setup_ldap_each.yml", "executable": "setup_ldap_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check content selectors", "module": "include_tasks", "index": 13, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check content selectors", "vars": {"script_name": "create_content_selectors_from_list", "args": "{{ nexus_content_selectors }}"}, "when": "nexus_content_selectors | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "apply defaults to privileges", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "apply defaults to privileges"}, "module_options": {"nexus_privileges": "{%- set result=[] -%} {%- for privilege in nexus_privileges -%}\n  {{ result.append(_nexus_privilege_defaults | combine(privilege)) }}\n{%- endfor -%} {{ result | to_json | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directories for blob stores.", "module": "file", "index": 15, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create directories for blob stores.", "when": "item.path is defined", "loop": "{{ nexus_blobstores }}"}, "module_options": {"path": "{{ item['path'] }}", "owner": "{{ nexus_os_user }}", "group": "{{ nexus_os_group }}", "state": "directory", "recurse": "{{ nexus_blobstores_recurse_owner | default(false) | bool }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/Check blobstores", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/Check blobstores", "vars": {"script_name": "create_blobstores_from_list", "args": "{{ nexus_blobstores }}"}, "when": "nexus_blobstores | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restore nexus backup", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Restore nexus backup", "when": "nexus_restore_point is defined"}, "module_options": "nexus-restore.yml", "executable": "nexus-restore.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check cleanup policies", "module": "include_tasks", "index": 18, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check cleanup policies", "vars": {"script_name": "create_cleanup_policies_from_list", "args": "{{ nexus_repos_cleanup_policies }}"}, "when": "nexus_repos_cleanup_policies | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Apply defaults to repositories configurations and process a single list", "module": "include_tasks", "index": 19, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Apply defaults to repositories configurations and process a single list"}, "module_options": "process_repos_list.yml", "executable": "process_repos_list.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create configured repositories", "module": "include_tasks", "index": 20, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create configured repositories", "vars": {"script_name": "create_repos_from_list", "args": "{{ _nexus_repos_global_list }}"}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check privileges", "module": "include_tasks", "index": 21, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check privileges", "vars": {"script_name": "setup_privileges_from_list", "args": "{{ nexus_privileges }}"}, "when": "nexus_privileges | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check roles", "module": "include_tasks", "index": 22, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check roles", "vars": {"script_name": "setup_roles_from_list", "args": "{{ nexus_roles }}"}, "when": "nexus_roles | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check local users", "module": "include_tasks", "index": 23, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check local users", "vars": {"script_name": "setup_users_from_list", "args": "{{ nexus_local_users }}"}, "when": "nexus_local_users | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create/check ldap users", "module": "include_tasks", "index": 24, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create/check ldap users", "vars": {"script_name": "setup_ldap_users_from_list", "args": "{{ nexus_ldap_users }}"}, "when": "nexus_ldap_users | length > 0"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 25, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_anonymous_access", "args": {"anonymous_access": "{{ nexus_anonymous_access }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 26, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_base_url", "args": {"base_url": "{{ nexus_public_scheme }}://{{ nexus_public_hostname }}/"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 27, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_realms", "args": {"nuget_api_key_realm": "{{ nexus_nuget_api_key_realm }}", "npm_bearer_token_realm": "{{ nexus_npm_bearer_token_realm }}", "rut_auth_realm": "{{ nexus_rut_auth_realm }}", "ldap_realm": "{{ nexus_ldap_realm }}", "docker_bearer_token_realm": "{{ nexus_docker_bearer_token_realm }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure RUT Auth header", "module": "include_tasks", "index": 28, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure RUT Auth header", "vars": {"script_name": "setup_capability", "args": {"capability_typeId": "rutauth", "capability_enabled": true, "capability_properties": {"httpHeader": "{{ nexus_rut_auth_header }}"}}}, "when": "nexus_rut_auth_header is defined"}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 29, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"vars": {"script_name": "setup_email", "args": {"email_server_enabled": "{{ nexus_email_server_enabled }}", "email_server_host": "{{ nexus_email_server_host }}", "email_server_port": "{{ nexus_email_server_port }}", "email_server_username": "{{ nexus_email_server_username }}", "email_server_password": "{{ nexus_email_server_password }}", "email_from_address": "{{ nexus_email_from_address }}", "email_subject_prefix": "{{ nexus_email_subject_prefix }}", "email_tls_enabled": "{{ nexus_email_tls_enabled }}", "email_tls_required": "{{ nexus_email_tls_required }}", "email_ssl_on_connect_enabled": "{{ nexus_email_ssl_on_connect_enabled }}", "email_ssl_check_server_identity_enabled": "{{ nexus_email_ssl_check_server_identity_enabled }}", "email_trust_store_enabled": "{{ nexus_email_trust_store_enabled }}"}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure branding capability", "module": "include_tasks", "index": 30, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure branding capability", "vars": {"script_name": "setup_capability", "args": {"capability_typeId": "rapture.branding", "capability_enabled": "{{ (nexus_branding_footer | length > 0) and (nexus_branding_header | length > 0) }}", "capability_properties": {"footerHtml": "{{ nexus_branding_footer }}", "headerHtml": "{{ nexus_branding_header }}", "footerEnabled": "{{ nexus_branding_footer | length > 0 }}", "headerEnabled": "{{ nexus_branding_header | length > 0 }}"}}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure audit capability", "module": "include_tasks", "index": 31, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Configure audit capability", "vars": {"script_name": "setup_capability", "args": {"capability_typeId": "audit", "capability_enabled": "{{ nexus_audit_enabled | bool }}", "capability_properties": {}}}}, "module_options": "call_script.yml", "executable": "call_script.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define backup task if backup is configured", "module": "set_fact", "index": 32, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Define backup task if backup is configured", "when": "nexus_backup_configure | bool"}, "module_options": {"_nexus_backup_task": [{"name": "db and blobstores backup", "typeId": "script", "schedule_type": "{{ nexus_backup_schedule_type }}", "cron": "{{ nexus_backup_cron }}", "start_date_time": "{{ nexus_backup_start_date_time | default('') }}", "weekly_days": "{{ nexus_backup_weekly_days | default([]) }}", "monthly_days": "{{ nexus_backup_monthly_days | default([]) }}", "taskProperties": {"language": "groovy", "source": "{{ lookup('template', './templates/backup.groovy.j2') }}"}}]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create scheduled tasks (with backup task if relevant)", "module": "include_tasks", "index": 33, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/main.yml", "options": {"name": "Create scheduled tasks (with backup task if relevant)", "with_items": "{{ nexus_scheduled_tasks + _nexus_backup_task | default([]) }}", "when": "nexus_run_provisionning | default(true) | bool"}, "module_options": "create_task_each.yml", "executable": "create_task_each.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "requirements_and_deprecated.yml", "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "tasks": [{"py/object": "struct4.Task", "name": "Try to use jmespath on a test var", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Try to use jmespath on a test var"}, "module_options": {"voidvar": "{{ [] | json_query('[]') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Broken compatibility => nexus_package is now dynamically calculated", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Broken compatibility => nexus_package is now dynamically calculated", "when": "nexus_package is defined"}, "module_options": {"msg": "You have set the variable nexus_package in your playbook. Starting from version 2.2.0 of this role, this is not compatible with the new nexus latest version detection feature and is not supported anymore. Please use the nexus_version variable only."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Broken compatibility => purge var moved to nexus_purge", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Broken compatibility => purge var moved to nexus_purge", "when": "purge is defined"}, "module_options": {"msg": "You have set the purge variable to reset nexus. Starting from version 2.2.3 of this role, this variable has been renamed nexus_purge. Please fix the var name accordingly on you command line call."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Variable refactoring - public_hostname is now nexus_public_hostname", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Variable refactoring - public_hostname is now nexus_public_hostname", "when": "public_hosname | default('') | length > 0 and public_hostname != nexus_public_hostname and nexus_public_hostname == 'nexus.vm'"}, "module_options": {"msg": "Version 2.3.0 of this role introduced a variable name change: public_hostname was renamed to nexus_public_hostname. We have detected that public_hostname is set in your vars ({{ public_hostname }}) and is different from nexus_public_hostname which still has its default value ({{ nexus_public_hostname }}). Fix this by setting a correct value for nexus_public_hostname and remove public_hostname if possible."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Coding standard: proxy_url is not supported anymore for docker proxy repos", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Coding standard: proxy_url is not supported anymore for docker proxy repos", "when": ["nexus_repos_docker_proxy | length > 0", "nexus_repos_docker_proxy | json_query('[?proxy_url]') | list | length > 0"]}, "module_options": {"msg": "proxy_url used to be the variable to configure docker proxy repositories in nexus3-oss role. Since version 2.3.0, all repository configuration use the same standard var remote_url. Please review your configurations in nexus_repos_docker_proxy and rename the variable accordingly."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print debug message about our internal var", "module": "vars", "index": 5, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Print debug message about our internal var", "debug": {"msg": "{{ error_msg.split('\n') }}"}}, "module_options": {"error_msg": "_nexus_repos_global_list is set somewhere in your playbook/inventory.\nThis is an internal var that must be unset when the role starts executing.\nPlease unset _nexus_repos_global_list from your playbook/inventory"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail as we cannot run correctly with internal var set", "module": "fail", "index": 6, "defined_in": "./role-test/testdata/ansible-ThoTeam-nexus3-oss/ansible-ThoTeam.nexus3-oss/tasks/requirements_and_deprecated.yml", "options": {"name": "Fail as we cannot run correctly with internal var set"}, "module_options": {"msg": "Unset _nexus_repos_global_list. See debug message above"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "ansible-ThoTeam.nexus3-oss", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}