{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/arillso-sshd", "installed_roles": [{"py/object": "struct4.Role", "name": "arillso.sshd", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd", "fqcn": "arillso.sshd", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows : Install OpenSSH", "module": "sbaerlocher.windows.win_capability", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Install OpenSSH", "become_method": "runas", "become_user": "System", "become": true}, "module_options": {"name": "OpenSSH.Server~~~~0.0.1.0"}, "executable": "sbaerlocher.windows.win_capability", "executable_type": "Module", "fqcn": "sbaerlocher.windows.win_capability", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Get openssh-version", "module": "win_shell", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Get openssh-version", "changed_when": false, "register": "sshd_verstion_string", "check_mode": false}, "module_options": "ssh -V", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Set openssh-version", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Set openssh-version"}, "module_options": {"sshd_version": {"stdout": "{{ sshd_verstion_string.stderr | regex_search(\"(\\d{1,2}\\.\\d{1,2})(?!\\.)\") }}"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Include tasks to create crypo-vars", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Include tasks to create crypo-vars"}, "module_options": "subtasks/crypto.yml", "executable": "subtasks/crypto.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Set the default shell to PowerShell", "module": "win_regedit", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Set the default shell to PowerShell"}, "module_options": {"path": "HKLM:\\SOFTWARE\\OpenSSH", "name": "DefaultShell", "data": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe", "type": "string", "state": "present"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Create sshd_config", "module": "win_template", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Create sshd_config", "notify": "restart windows sshd"}, "module_options": {"src": "opensshd.conf.j2", "dest": "C:\\ProgramData\\ssh\\sshd_config"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Create revoked_keys", "module": "template", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Create revoked_keys", "notify": "restart windows sshd"}, "module_options": {"src": "revoked_keys.j2", "dest": "C:\\ProgramData\\ssh\\revoked_keys"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Linux : get openssh-version", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : get openssh-version", "args": {"executable": "/bin/bash"}, "changed_when": false, "register": "sshd_version", "check_mode": false}, "module_options": "set -o pipefail && ssh -V 2>&1 | sed -r 's/.*_([0-9]*\\.[0-9]).*/\\1/g'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : include tasks to create crypo-vars", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : include tasks to create crypo-vars"}, "module_options": "subtasks/crypto.yml", "executable": "subtasks/crypto.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "LInux : create revoked_keys and set permissions to root/600", "module": "template", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "LInux : create revoked_keys and set permissions to root/600", "become": true, "notify": "restart linux sshd", "when": "ssh_server_hardening | bool"}, "module_options": {"src": "revoked_keys.j2", "dest": "/etc/ssh/revoked_keys", "mode": "0600", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : create sshd_config and set permissions to root/600", "module": "template", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : create sshd_config and set permissions to root/600", "become": true, "notify": "restart linux sshd", "when": "ssh_server_hardening | bool"}, "module_options": {"src": "opensshd.conf.j2", "dest": "/etc/ssh/sshd_config", "mode": "0600", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}", "validate": "/usr/sbin/sshd -T -C user=root -C host=localhost -C addr=localhost -f %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : create ssh_config and set permissions to root/644", "module": "template", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : create ssh_config and set permissions to root/644", "become": true, "when": "ssh_client_hardening | bool"}, "module_options": {"src": "openssh.conf.j2", "dest": "/etc/ssh/ssh_config", "mode": "0644", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : Check if {{ sshd_moduli_file }} contains weak DH parameters", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : Check if {{ sshd_moduli_file }} contains weak DH parameters", "register": "sshd_register_moduli", "changed_when": false, "check_mode": false}, "module_options": "awk '$5 < {{ sshd_moduli_minimum }}' {{ sshd_moduli_file }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : Remove all small primes", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : Remove all small primes", "notify": "restart linux sshd", "when": "sshd_register_moduli.stdout"}, "module_options": "awk '$5 >= {{ sshd_moduli_minimum }}' {{ sshd_moduli_file }} > {{ sshd_moduli_file }}.new ; [ -r {{ sshd_moduli_file }}.new -a -s {{ sshd_moduli_file }}.new ] && mv {{ sshd_moduli_file }}.new {{ sshd_moduli_file }} || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : Include tasks to setup ca keys and principals", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : Include tasks to setup ca keys and principals", "when": "ssh_trusted_user_ca_keys_file | length > 0"}, "module_options": "subtasks/ca_keys_and_principals.yml", "executable": "subtasks/ca_keys_and_principals.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : include tasks to setup 2FA", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : include tasks to setup 2FA", "when": ["ssh_use_pam | bool", "ssh_challengeresponseauthentication | bool", "ssh_google_auth | bool"]}, "module_options": "subtasks/2fa.yml", "executable": "subtasks/2fa.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : include selinux specific tasks", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : include selinux specific tasks", "when": "ansible_selinux and ansible_selinux.status == \"enabled\""}, "module_options": "subtasks/selinux.yml", "executable": "subtasks/selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "install selinux dependencies when selinux is installed", "module": "package", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "install selinux dependencies when selinux is installed", "become": true, "with_items": ["{{ ssh_selinux_dependency_packages }}"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "authorize {{ ssh_server_ports }} ports for selinux", "module": "seport", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "authorize {{ ssh_server_ports }} ports for selinux", "become": true, "with_items": ["{{ ssh_server_ports }}"]}, "module_options": {"ports": "{{ item }}", "proto": "tcp", "setype": "ssh_port_t", "state": "present"}, "executable": "seport", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if ssh_password module is already installed", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "check if ssh_password module is already installed", "become": true, "args": {"executable": "/bin/bash"}, "register": "ssh_password_module", "failed_when": false, "changed_when": false, "check_mode": false}, "module_options": "set -o pipefail && semodule -l | grep ssh_password", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create selinux custom policy drop folder", "module": "file", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "Create selinux custom policy drop folder", "become": true}, "module_options": {"path": "{{ ssh_custom_selinux_dir }}", "state": "directory", "owner": "root", "group": "root", "mode": "0750"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Distributing custom selinux policies", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "Distributing custom selinux policies", "become": true}, "module_options": {"src": "ssh_password", "dest": "{{ ssh_custom_selinux_dir }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "check and compile policy", "module": "command", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "check and compile policy", "become": true}, "module_options": "checkmodule -M -m -o {{ ssh_custom_selinux_dir }}/ssh_password.mod {{ ssh_custom_selinux_dir }}/ssh_password", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "create selinux policy module package", "module": "command", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "create selinux policy module package", "become": true}, "module_options": "semodule_package -o {{ ssh_custom_selinux_dir }}/ssh_password.pp  -m {{ ssh_custom_selinux_dir }}/ssh_password.mod", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "install selinux policy", "module": "command", "index": 7, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "install selinux policy", "become": true}, "module_options": "semodule -i {{ ssh_custom_selinux_dir }}/ssh_password.pp", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "remove selinux-policy when Pam is used, because Allowing sshd to read the shadow file directly is considered a potential security risk", "module": "command", "index": 8, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "remove selinux-policy when Pam is used, because Allowing sshd to read the shadow file directly is considered a potential security risk", "become": true, "when": "ssh_use_pam | bool and ssh_password_module.stdout.find('ssh_password') == 0"}, "module_options": "semodule -r ssh_password", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "ca_keys_and_principals.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set ssh CA pub keys", "module": "template", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "options": {"name": "Set ssh CA pub keys", "become": true, "notify": "restart linux sshd"}, "module_options": {"src": "trusted_user_ca_keys.j2", "dest": "{{ ssh_trusted_user_ca_keys_file }}", "mode": "0644", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create ssh authorized principals directories", "module": "file", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "options": {"name": "Create ssh authorized principals directories", "become": true, "with_items": "{{ ssh_authorized_principals }}"}, "module_options": {"path": "{{ item.path | dirname }}", "mode": "{{ item.directorymode | default(0700) }}", "owner": "{{ item.directoryowner | default(ssh_owner) }}", "group": "{{ item.directorygroup | default(ssh_group) }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set ssh authorized principals", "module": "template", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "options": {"name": "Set ssh authorized principals", "become": true, "with_items": "{{ ssh_authorized_principals }}"}, "module_options": {"src": "authorized_principals.j2", "dest": "{{ item.path }}", "mode": "{{ item.filemode | default(0600) }}", "owner": "{{ item.owner| default(ssh_owner) }}", "group": "{{ item.group | default(ssh_group) }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "2fa.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install google authenticator PAM module", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Install google authenticator PAM module", "become": true, "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'"}, "module_options": {"name": "libpam-google-authenticator", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install google authenticator PAM module", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Install google authenticator PAM module", "become": true, "when": "ansible_os_family == 'RedHat' or ansible_os_family == 'Oracle Linux'"}, "module_options": {"name": "google-authenticator", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add google auth module to PAM", "module": "pamd", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Add google auth module to PAM", "become": true}, "module_options": {"name": "sshd", "type": "auth", "control": "required", "module_path": "pam_google_authenticator.so"}, "executable": "pamd", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove password auth from PAM", "module": "pamd", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Remove password auth from PAM", "become": true, "when": "ansible_distribution == 'RedHat' or ansible_distribution == 'Oracle Linux' or ansible_distribution == 'Amazon'"}, "module_options": {"name": "sshd", "type": "auth", "control": "substack", "module_path": "password-auth", "state": "absent"}, "executable": "pamd", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove password auth from PAM", "module": "replace", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Remove password auth from PAM", "become": true, "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'"}, "module_options": {"dest": "/etc/pam.d/sshd", "regexp": "^@include common-auth", "replace": "#@include common-auth"}, "executable": "replace", "executable_type": "Module", "fqcn": "ansible.builtin.replace", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "crypto.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "tasks": [{"py/object": "struct4.Task", "name": "set hostkeys according to openssh-version", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set hostkeys according to openssh-version", "when": "sshd_version.stdout >= '6.3' and not ssh_host_key_files"}, "module_options": {"ssh_host_key_files": ["{{ sshd_config_path }}/ssh_host_rsa_key", "{{ sshd_config_path }}/ssh_host_ecdsa_key", "{{ sshd_config_path }}/ssh_host_ed25519_key"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set hostkeys according to openssh-version", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set hostkeys according to openssh-version", "when": "sshd_version.stdout >= '6.0' and not ssh_host_key_files"}, "module_options": {"ssh_host_key_files": ["{{ sshd_config_path }}/ssh_host_rsa_key", "{{ sshd_config_path }}/ssh_host_ecdsa_key"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set hostkeys according to openssh-version", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set hostkeys according to openssh-version", "when": "sshd_version.stdout >= '5.3' and not ssh_host_key_files"}, "module_options": {"ssh_host_key_files": ["{{ sshd_config_path }}/ssh_host_rsa_key"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set macs according to openssh-version if openssh >= 7.6", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version if openssh >= 7.6", "when": "sshd_version.stdout >= '7.6' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_76_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set macs according to openssh-version if openssh >= 6.6", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version if openssh >= 6.6", "when": "sshd_version.stdout >= '6.6' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_66_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set macs according to openssh-version", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version", "when": "sshd_version.stdout >= '5.9' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_59_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set macs according to openssh-version", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version", "when": "sshd_version.stdout >= '5.3' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_53_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set ciphers according to openssh-version if openssh >= 6.6", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set ciphers according to openssh-version if openssh >= 6.6", "when": "sshd_version.stdout >= '6.6' and not ssh_ciphers"}, "module_options": {"ssh_ciphers": "{{ ssh_ciphers_66_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set ciphers according to openssh-version", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set ciphers according to openssh-version", "when": "sshd_version.stdout >= '5.3' and not ssh_ciphers"}, "module_options": {"ssh_ciphers": "{{ ssh_ciphers_53_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set kex according to openssh-version if openssh >= 6.6", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set kex according to openssh-version if openssh >= 6.6", "when": "sshd_version.stdout >= '6.6' and not ssh_kex"}, "module_options": {"ssh_kex": "{{ ssh_kex_66_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set kex according to openssh-version", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set kex according to openssh-version", "when": "sshd_version.stdout >= '5.9' and not ssh_kex"}, "module_options": {"ssh_kex": "{{ ssh_kex_59_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Windows : Install OpenSSH", "module": "sbaerlocher.windows.win_capability", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Install OpenSSH", "become_method": "runas", "become_user": "System", "become": true}, "module_options": {"name": "OpenSSH.Server~~~~0.0.1.0"}, "executable": "sbaerlocher.windows.win_capability", "executable_type": "Module", "fqcn": "sbaerlocher.windows.win_capability", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Windows : Get openssh-version", "module": "win_shell", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Get openssh-version", "changed_when": false, "register": "sshd_verstion_string", "check_mode": false}, "module_options": "ssh -V", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Windows : Set openssh-version", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Set openssh-version"}, "module_options": {"sshd_version": {"stdout": "{{ sshd_verstion_string.stderr | regex_search(\"(\\d{1,2}\\.\\d{1,2})(?!\\.)\") }}"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Windows : Include tasks to create crypo-vars", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Include tasks to create crypo-vars"}, "module_options": "subtasks/crypto.yml", "executable": "subtasks/crypto.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Windows : Set the default shell to PowerShell", "module": "win_regedit", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Set the default shell to PowerShell"}, "module_options": {"path": "HKLM:\\SOFTWARE\\OpenSSH", "name": "DefaultShell", "data": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe", "type": "string", "state": "present"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Windows : Create sshd_config", "module": "win_template", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Create sshd_config", "notify": "restart windows sshd"}, "module_options": {"src": "opensshd.conf.j2", "dest": "C:\\ProgramData\\ssh\\sshd_config"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Windows : Create revoked_keys", "module": "template", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Create revoked_keys", "notify": "restart windows sshd"}, "module_options": {"src": "revoked_keys.j2", "dest": "C:\\ProgramData\\ssh\\revoked_keys"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Linux : get openssh-version", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : get openssh-version", "args": {"executable": "/bin/bash"}, "changed_when": false, "register": "sshd_version", "check_mode": false}, "module_options": "set -o pipefail && ssh -V 2>&1 | sed -r 's/.*_([0-9]*\\.[0-9]).*/\\1/g'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Linux : include tasks to create crypo-vars", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : include tasks to create crypo-vars"}, "module_options": "subtasks/crypto.yml", "executable": "subtasks/crypto.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "LInux : create revoked_keys and set permissions to root/600", "module": "template", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "LInux : create revoked_keys and set permissions to root/600", "become": true, "notify": "restart linux sshd", "when": "ssh_server_hardening | bool"}, "module_options": {"src": "revoked_keys.j2", "dest": "/etc/ssh/revoked_keys", "mode": "0600", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Linux : create sshd_config and set permissions to root/600", "module": "template", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : create sshd_config and set permissions to root/600", "become": true, "notify": "restart linux sshd", "when": "ssh_server_hardening | bool"}, "module_options": {"src": "opensshd.conf.j2", "dest": "/etc/ssh/sshd_config", "mode": "0600", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}", "validate": "/usr/sbin/sshd -T -C user=root -C host=localhost -C addr=localhost -f %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Linux : create ssh_config and set permissions to root/644", "module": "template", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : create ssh_config and set permissions to root/644", "become": true, "when": "ssh_client_hardening | bool"}, "module_options": {"src": "openssh.conf.j2", "dest": "/etc/ssh/ssh_config", "mode": "0644", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Linux : Check if {{ sshd_moduli_file }} contains weak DH parameters", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : Check if {{ sshd_moduli_file }} contains weak DH parameters", "register": "sshd_register_moduli", "changed_when": false, "check_mode": false}, "module_options": "awk '$5 < {{ sshd_moduli_minimum }}' {{ sshd_moduli_file }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Linux : Remove all small primes", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : Remove all small primes", "notify": "restart linux sshd", "when": "sshd_register_moduli.stdout"}, "module_options": "awk '$5 >= {{ sshd_moduli_minimum }}' {{ sshd_moduli_file }} > {{ sshd_moduli_file }}.new ; [ -r {{ sshd_moduli_file }}.new -a -s {{ sshd_moduli_file }}.new ] && mv {{ sshd_moduli_file }}.new {{ sshd_moduli_file }} || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Linux : Include tasks to setup ca keys and principals", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : Include tasks to setup ca keys and principals", "when": "ssh_trusted_user_ca_keys_file | length > 0"}, "module_options": "subtasks/ca_keys_and_principals.yml", "executable": "subtasks/ca_keys_and_principals.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Linux : include tasks to setup 2FA", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : include tasks to setup 2FA", "when": ["ssh_use_pam | bool", "ssh_challengeresponseauthentication | bool", "ssh_google_auth | bool"]}, "module_options": "subtasks/2fa.yml", "executable": "subtasks/2fa.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Linux : include selinux specific tasks", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : include selinux specific tasks", "when": "ansible_selinux and ansible_selinux.status == \"enabled\""}, "module_options": "subtasks/selinux.yml", "executable": "subtasks/selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install selinux dependencies when selinux is installed", "module": "package", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "install selinux dependencies when selinux is installed", "become": true, "with_items": ["{{ ssh_selinux_dependency_packages }}"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "authorize {{ ssh_server_ports }} ports for selinux", "module": "seport", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "authorize {{ ssh_server_ports }} ports for selinux", "become": true, "with_items": ["{{ ssh_server_ports }}"]}, "module_options": {"ports": "{{ item }}", "proto": "tcp", "setype": "ssh_port_t", "state": "present"}, "executable": "seport", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "check if ssh_password module is already installed", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "check if ssh_password module is already installed", "become": true, "args": {"executable": "/bin/bash"}, "register": "ssh_password_module", "failed_when": false, "changed_when": false, "check_mode": false}, "module_options": "set -o pipefail && semodule -l | grep ssh_password", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create selinux custom policy drop folder", "module": "file", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "Create selinux custom policy drop folder", "become": true}, "module_options": {"path": "{{ ssh_custom_selinux_dir }}", "state": "directory", "owner": "root", "group": "root", "mode": "0750"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Distributing custom selinux policies", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "Distributing custom selinux policies", "become": true}, "module_options": {"src": "ssh_password", "dest": "{{ ssh_custom_selinux_dir }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "check and compile policy", "module": "command", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "check and compile policy", "become": true}, "module_options": "checkmodule -M -m -o {{ ssh_custom_selinux_dir }}/ssh_password.mod {{ ssh_custom_selinux_dir }}/ssh_password", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "create selinux policy module package", "module": "command", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "create selinux policy module package", "become": true}, "module_options": "semodule_package -o {{ ssh_custom_selinux_dir }}/ssh_password.pp  -m {{ ssh_custom_selinux_dir }}/ssh_password.mod", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "install selinux policy", "module": "command", "index": 7, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "install selinux policy", "become": true}, "module_options": "semodule -i {{ ssh_custom_selinux_dir }}/ssh_password.pp", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "remove selinux-policy when Pam is used, because Allowing sshd to read the shadow file directly is considered a potential security risk", "module": "command", "index": 8, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "remove selinux-policy when Pam is used, because Allowing sshd to read the shadow file directly is considered a potential security risk", "become": true, "when": "ssh_use_pam | bool and ssh_password_module.stdout.find('ssh_password') == 0"}, "module_options": "semodule -r ssh_password", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set ssh CA pub keys", "module": "template", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "options": {"name": "Set ssh CA pub keys", "become": true, "notify": "restart linux sshd"}, "module_options": {"src": "trusted_user_ca_keys.j2", "dest": "{{ ssh_trusted_user_ca_keys_file }}", "mode": "0644", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create ssh authorized principals directories", "module": "file", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "options": {"name": "Create ssh authorized principals directories", "become": true, "with_items": "{{ ssh_authorized_principals }}"}, "module_options": {"path": "{{ item.path | dirname }}", "mode": "{{ item.directorymode | default(0700) }}", "owner": "{{ item.directoryowner | default(ssh_owner) }}", "group": "{{ item.directorygroup | default(ssh_group) }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set ssh authorized principals", "module": "template", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "options": {"name": "Set ssh authorized principals", "become": true, "with_items": "{{ ssh_authorized_principals }}"}, "module_options": {"src": "authorized_principals.j2", "dest": "{{ item.path }}", "mode": "{{ item.filemode | default(0600) }}", "owner": "{{ item.owner| default(ssh_owner) }}", "group": "{{ item.group | default(ssh_group) }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install google authenticator PAM module", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Install google authenticator PAM module", "become": true, "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'"}, "module_options": {"name": "libpam-google-authenticator", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install google authenticator PAM module", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Install google authenticator PAM module", "become": true, "when": "ansible_os_family == 'RedHat' or ansible_os_family == 'Oracle Linux'"}, "module_options": {"name": "google-authenticator", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add google auth module to PAM", "module": "pamd", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Add google auth module to PAM", "become": true}, "module_options": {"name": "sshd", "type": "auth", "control": "required", "module_path": "pam_google_authenticator.so"}, "executable": "pamd", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Remove password auth from PAM", "module": "pamd", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Remove password auth from PAM", "become": true, "when": "ansible_distribution == 'RedHat' or ansible_distribution == 'Oracle Linux' or ansible_distribution == 'Amazon'"}, "module_options": {"name": "sshd", "type": "auth", "control": "substack", "module_path": "password-auth", "state": "absent"}, "executable": "pamd", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Remove password auth from PAM", "module": "replace", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Remove password auth from PAM", "become": true, "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'"}, "module_options": {"dest": "/etc/pam.d/sshd", "regexp": "^@include common-auth", "replace": "#@include common-auth"}, "executable": "replace", "executable_type": "Module", "fqcn": "ansible.builtin.replace", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "set hostkeys according to openssh-version", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set hostkeys according to openssh-version", "when": "sshd_version.stdout >= '6.3' and not ssh_host_key_files"}, "module_options": {"ssh_host_key_files": ["{{ sshd_config_path }}/ssh_host_rsa_key", "{{ sshd_config_path }}/ssh_host_ecdsa_key", "{{ sshd_config_path }}/ssh_host_ed25519_key"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "set hostkeys according to openssh-version", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set hostkeys according to openssh-version", "when": "sshd_version.stdout >= '6.0' and not ssh_host_key_files"}, "module_options": {"ssh_host_key_files": ["{{ sshd_config_path }}/ssh_host_rsa_key", "{{ sshd_config_path }}/ssh_host_ecdsa_key"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "set hostkeys according to openssh-version", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set hostkeys according to openssh-version", "when": "sshd_version.stdout >= '5.3' and not ssh_host_key_files"}, "module_options": {"ssh_host_key_files": ["{{ sshd_config_path }}/ssh_host_rsa_key"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "set macs according to openssh-version if openssh >= 7.6", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version if openssh >= 7.6", "when": "sshd_version.stdout >= '7.6' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_76_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "set macs according to openssh-version if openssh >= 6.6", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version if openssh >= 6.6", "when": "sshd_version.stdout >= '6.6' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_66_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "set macs according to openssh-version", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version", "when": "sshd_version.stdout >= '5.9' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_59_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "set macs according to openssh-version", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version", "when": "sshd_version.stdout >= '5.3' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_53_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "set ciphers according to openssh-version if openssh >= 6.6", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set ciphers according to openssh-version if openssh >= 6.6", "when": "sshd_version.stdout >= '6.6' and not ssh_ciphers"}, "module_options": {"ssh_ciphers": "{{ ssh_ciphers_66_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "set ciphers according to openssh-version", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set ciphers according to openssh-version", "when": "sshd_version.stdout >= '5.3' and not ssh_ciphers"}, "module_options": {"ssh_ciphers": "{{ ssh_ciphers_53_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "set kex according to openssh-version if openssh >= 6.6", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set kex according to openssh-version if openssh >= 6.6", "when": "sshd_version.stdout >= '6.6' and not ssh_kex"}, "module_options": {"ssh_kex": "{{ ssh_kex_66_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "set kex according to openssh-version", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set kex according to openssh-version", "when": "sshd_version.stdout >= '5.9' and not ssh_kex"}, "module_options": {"ssh_kex": "{{ ssh_kex_59_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/arillso-sshd/arillso.sshd/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml": {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows : Install OpenSSH", "module": "sbaerlocher.windows.win_capability", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Install OpenSSH", "become_method": "runas", "become_user": "System", "become": true}, "module_options": {"name": "OpenSSH.Server~~~~0.0.1.0"}, "executable": "sbaerlocher.windows.win_capability", "executable_type": "Module", "fqcn": "sbaerlocher.windows.win_capability", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Get openssh-version", "module": "win_shell", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Get openssh-version", "changed_when": false, "register": "sshd_verstion_string", "check_mode": false}, "module_options": "ssh -V", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Set openssh-version", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Set openssh-version"}, "module_options": {"sshd_version": {"stdout": "{{ sshd_verstion_string.stderr | regex_search(\"(\\d{1,2}\\.\\d{1,2})(?!\\.)\") }}"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Include tasks to create crypo-vars", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Include tasks to create crypo-vars"}, "module_options": "subtasks/crypto.yml", "executable": "subtasks/crypto.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Set the default shell to PowerShell", "module": "win_regedit", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Set the default shell to PowerShell"}, "module_options": {"path": "HKLM:\\SOFTWARE\\OpenSSH", "name": "DefaultShell", "data": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe", "type": "string", "state": "present"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Create sshd_config", "module": "win_template", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Create sshd_config", "notify": "restart windows sshd"}, "module_options": {"src": "opensshd.conf.j2", "dest": "C:\\ProgramData\\ssh\\sshd_config"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Create revoked_keys", "module": "template", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Create revoked_keys", "notify": "restart windows sshd"}, "module_options": {"src": "revoked_keys.j2", "dest": "C:\\ProgramData\\ssh\\revoked_keys"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml": {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Linux : get openssh-version", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : get openssh-version", "args": {"executable": "/bin/bash"}, "changed_when": false, "register": "sshd_version", "check_mode": false}, "module_options": "set -o pipefail && ssh -V 2>&1 | sed -r 's/.*_([0-9]*\\.[0-9]).*/\\1/g'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : include tasks to create crypo-vars", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : include tasks to create crypo-vars"}, "module_options": "subtasks/crypto.yml", "executable": "subtasks/crypto.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "LInux : create revoked_keys and set permissions to root/600", "module": "template", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "LInux : create revoked_keys and set permissions to root/600", "become": true, "notify": "restart linux sshd", "when": "ssh_server_hardening | bool"}, "module_options": {"src": "revoked_keys.j2", "dest": "/etc/ssh/revoked_keys", "mode": "0600", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : create sshd_config and set permissions to root/600", "module": "template", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : create sshd_config and set permissions to root/600", "become": true, "notify": "restart linux sshd", "when": "ssh_server_hardening | bool"}, "module_options": {"src": "opensshd.conf.j2", "dest": "/etc/ssh/sshd_config", "mode": "0600", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}", "validate": "/usr/sbin/sshd -T -C user=root -C host=localhost -C addr=localhost -f %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : create ssh_config and set permissions to root/644", "module": "template", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : create ssh_config and set permissions to root/644", "become": true, "when": "ssh_client_hardening | bool"}, "module_options": {"src": "openssh.conf.j2", "dest": "/etc/ssh/ssh_config", "mode": "0644", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : Check if {{ sshd_moduli_file }} contains weak DH parameters", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : Check if {{ sshd_moduli_file }} contains weak DH parameters", "register": "sshd_register_moduli", "changed_when": false, "check_mode": false}, "module_options": "awk '$5 < {{ sshd_moduli_minimum }}' {{ sshd_moduli_file }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : Remove all small primes", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : Remove all small primes", "notify": "restart linux sshd", "when": "sshd_register_moduli.stdout"}, "module_options": "awk '$5 >= {{ sshd_moduli_minimum }}' {{ sshd_moduli_file }} > {{ sshd_moduli_file }}.new ; [ -r {{ sshd_moduli_file }}.new -a -s {{ sshd_moduli_file }}.new ] && mv {{ sshd_moduli_file }}.new {{ sshd_moduli_file }} || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : Include tasks to setup ca keys and principals", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : Include tasks to setup ca keys and principals", "when": "ssh_trusted_user_ca_keys_file | length > 0"}, "module_options": "subtasks/ca_keys_and_principals.yml", "executable": "subtasks/ca_keys_and_principals.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : include tasks to setup 2FA", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : include tasks to setup 2FA", "when": ["ssh_use_pam | bool", "ssh_challengeresponseauthentication | bool", "ssh_google_auth | bool"]}, "module_options": "subtasks/2fa.yml", "executable": "subtasks/2fa.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : include selinux specific tasks", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : include selinux specific tasks", "when": "ansible_selinux and ansible_selinux.status == \"enabled\""}, "module_options": "subtasks/selinux.yml", "executable": "subtasks/selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml": {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "install selinux dependencies when selinux is installed", "module": "package", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "install selinux dependencies when selinux is installed", "become": true, "with_items": ["{{ ssh_selinux_dependency_packages }}"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "authorize {{ ssh_server_ports }} ports for selinux", "module": "seport", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "authorize {{ ssh_server_ports }} ports for selinux", "become": true, "with_items": ["{{ ssh_server_ports }}"]}, "module_options": {"ports": "{{ item }}", "proto": "tcp", "setype": "ssh_port_t", "state": "present"}, "executable": "seport", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if ssh_password module is already installed", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "check if ssh_password module is already installed", "become": true, "args": {"executable": "/bin/bash"}, "register": "ssh_password_module", "failed_when": false, "changed_when": false, "check_mode": false}, "module_options": "set -o pipefail && semodule -l | grep ssh_password", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create selinux custom policy drop folder", "module": "file", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "Create selinux custom policy drop folder", "become": true}, "module_options": {"path": "{{ ssh_custom_selinux_dir }}", "state": "directory", "owner": "root", "group": "root", "mode": "0750"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Distributing custom selinux policies", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "Distributing custom selinux policies", "become": true}, "module_options": {"src": "ssh_password", "dest": "{{ ssh_custom_selinux_dir }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "check and compile policy", "module": "command", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "check and compile policy", "become": true}, "module_options": "checkmodule -M -m -o {{ ssh_custom_selinux_dir }}/ssh_password.mod {{ ssh_custom_selinux_dir }}/ssh_password", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "create selinux policy module package", "module": "command", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "create selinux policy module package", "become": true}, "module_options": "semodule_package -o {{ ssh_custom_selinux_dir }}/ssh_password.pp  -m {{ ssh_custom_selinux_dir }}/ssh_password.mod", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "install selinux policy", "module": "command", "index": 7, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "install selinux policy", "become": true}, "module_options": "semodule -i {{ ssh_custom_selinux_dir }}/ssh_password.pp", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "remove selinux-policy when Pam is used, because Allowing sshd to read the shadow file directly is considered a potential security risk", "module": "command", "index": 8, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "remove selinux-policy when Pam is used, because Allowing sshd to read the shadow file directly is considered a potential security risk", "become": true, "when": "ssh_use_pam | bool and ssh_password_module.stdout.find('ssh_password') == 0"}, "module_options": "semodule -r ssh_password", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml": {"py/object": "struct4.TaskFile", "name": "ca_keys_and_principals.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set ssh CA pub keys", "module": "template", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "options": {"name": "Set ssh CA pub keys", "become": true, "notify": "restart linux sshd"}, "module_options": {"src": "trusted_user_ca_keys.j2", "dest": "{{ ssh_trusted_user_ca_keys_file }}", "mode": "0644", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create ssh authorized principals directories", "module": "file", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "options": {"name": "Create ssh authorized principals directories", "become": true, "with_items": "{{ ssh_authorized_principals }}"}, "module_options": {"path": "{{ item.path | dirname }}", "mode": "{{ item.directorymode | default(0700) }}", "owner": "{{ item.directoryowner | default(ssh_owner) }}", "group": "{{ item.directorygroup | default(ssh_group) }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set ssh authorized principals", "module": "template", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "options": {"name": "Set ssh authorized principals", "become": true, "with_items": "{{ ssh_authorized_principals }}"}, "module_options": {"src": "authorized_principals.j2", "dest": "{{ item.path }}", "mode": "{{ item.filemode | default(0600) }}", "owner": "{{ item.owner| default(ssh_owner) }}", "group": "{{ item.group | default(ssh_group) }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml": {"py/object": "struct4.TaskFile", "name": "2fa.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install google authenticator PAM module", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Install google authenticator PAM module", "become": true, "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'"}, "module_options": {"name": "libpam-google-authenticator", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install google authenticator PAM module", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Install google authenticator PAM module", "become": true, "when": "ansible_os_family == 'RedHat' or ansible_os_family == 'Oracle Linux'"}, "module_options": {"name": "google-authenticator", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add google auth module to PAM", "module": "pamd", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Add google auth module to PAM", "become": true}, "module_options": {"name": "sshd", "type": "auth", "control": "required", "module_path": "pam_google_authenticator.so"}, "executable": "pamd", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove password auth from PAM", "module": "pamd", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Remove password auth from PAM", "become": true, "when": "ansible_distribution == 'RedHat' or ansible_distribution == 'Oracle Linux' or ansible_distribution == 'Amazon'"}, "module_options": {"name": "sshd", "type": "auth", "control": "substack", "module_path": "password-auth", "state": "absent"}, "executable": "pamd", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove password auth from PAM", "module": "replace", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Remove password auth from PAM", "become": true, "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'"}, "module_options": {"dest": "/etc/pam.d/sshd", "regexp": "^@include common-auth", "replace": "#@include common-auth"}, "executable": "replace", "executable_type": "Module", "fqcn": "ansible.builtin.replace", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml": {"py/object": "struct4.TaskFile", "name": "crypto.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "tasks": [{"py/object": "struct4.Task", "name": "set hostkeys according to openssh-version", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set hostkeys according to openssh-version", "when": "sshd_version.stdout >= '6.3' and not ssh_host_key_files"}, "module_options": {"ssh_host_key_files": ["{{ sshd_config_path }}/ssh_host_rsa_key", "{{ sshd_config_path }}/ssh_host_ecdsa_key", "{{ sshd_config_path }}/ssh_host_ed25519_key"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set hostkeys according to openssh-version", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set hostkeys according to openssh-version", "when": "sshd_version.stdout >= '6.0' and not ssh_host_key_files"}, "module_options": {"ssh_host_key_files": ["{{ sshd_config_path }}/ssh_host_rsa_key", "{{ sshd_config_path }}/ssh_host_ecdsa_key"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set hostkeys according to openssh-version", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set hostkeys according to openssh-version", "when": "sshd_version.stdout >= '5.3' and not ssh_host_key_files"}, "module_options": {"ssh_host_key_files": ["{{ sshd_config_path }}/ssh_host_rsa_key"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set macs according to openssh-version if openssh >= 7.6", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version if openssh >= 7.6", "when": "sshd_version.stdout >= '7.6' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_76_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set macs according to openssh-version if openssh >= 6.6", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version if openssh >= 6.6", "when": "sshd_version.stdout >= '6.6' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_66_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set macs according to openssh-version", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version", "when": "sshd_version.stdout >= '5.9' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_59_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set macs according to openssh-version", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version", "when": "sshd_version.stdout >= '5.3' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_53_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set ciphers according to openssh-version if openssh >= 6.6", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set ciphers according to openssh-version if openssh >= 6.6", "when": "sshd_version.stdout >= '6.6' and not ssh_ciphers"}, "module_options": {"ssh_ciphers": "{{ ssh_ciphers_66_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set ciphers according to openssh-version", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set ciphers according to openssh-version", "when": "sshd_version.stdout >= '5.3' and not ssh_ciphers"}, "module_options": {"ssh_ciphers": "{{ ssh_ciphers_53_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set kex according to openssh-version if openssh >= 6.6", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set kex according to openssh-version if openssh >= 6.6", "when": "sshd_version.stdout >= '6.6' and not ssh_kex"}, "module_options": {"ssh_kex": "{{ ssh_kex_66_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set kex according to openssh-version", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set kex according to openssh-version", "when": "sshd_version.stdout >= '5.9' and not ssh_kex"}, "module_options": {"ssh_kex": "{{ ssh_kex_59_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}}, "role_dict": {"arillso.sshd": {"py/object": "struct4.Role", "name": "arillso.sshd", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd", "fqcn": "arillso.sshd", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows : Install OpenSSH", "module": "sbaerlocher.windows.win_capability", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Install OpenSSH", "become_method": "runas", "become_user": "System", "become": true}, "module_options": {"name": "OpenSSH.Server~~~~0.0.1.0"}, "executable": "sbaerlocher.windows.win_capability", "executable_type": "Module", "fqcn": "sbaerlocher.windows.win_capability", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Get openssh-version", "module": "win_shell", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Get openssh-version", "changed_when": false, "register": "sshd_verstion_string", "check_mode": false}, "module_options": "ssh -V", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Set openssh-version", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Set openssh-version"}, "module_options": {"sshd_version": {"stdout": "{{ sshd_verstion_string.stderr | regex_search(\"(\\d{1,2}\\.\\d{1,2})(?!\\.)\") }}"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Include tasks to create crypo-vars", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Include tasks to create crypo-vars"}, "module_options": "subtasks/crypto.yml", "executable": "subtasks/crypto.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Set the default shell to PowerShell", "module": "win_regedit", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Set the default shell to PowerShell"}, "module_options": {"path": "HKLM:\\SOFTWARE\\OpenSSH", "name": "DefaultShell", "data": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe", "type": "string", "state": "present"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Create sshd_config", "module": "win_template", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Create sshd_config", "notify": "restart windows sshd"}, "module_options": {"src": "opensshd.conf.j2", "dest": "C:\\ProgramData\\ssh\\sshd_config"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : Create revoked_keys", "module": "template", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Windows.yml", "options": {"name": "Windows : Create revoked_keys", "notify": "restart windows sshd"}, "module_options": {"src": "revoked_keys.j2", "dest": "C:\\ProgramData\\ssh\\revoked_keys"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Linux : get openssh-version", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : get openssh-version", "args": {"executable": "/bin/bash"}, "changed_when": false, "register": "sshd_version", "check_mode": false}, "module_options": "set -o pipefail && ssh -V 2>&1 | sed -r 's/.*_([0-9]*\\.[0-9]).*/\\1/g'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : include tasks to create crypo-vars", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : include tasks to create crypo-vars"}, "module_options": "subtasks/crypto.yml", "executable": "subtasks/crypto.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "LInux : create revoked_keys and set permissions to root/600", "module": "template", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "LInux : create revoked_keys and set permissions to root/600", "become": true, "notify": "restart linux sshd", "when": "ssh_server_hardening | bool"}, "module_options": {"src": "revoked_keys.j2", "dest": "/etc/ssh/revoked_keys", "mode": "0600", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : create sshd_config and set permissions to root/600", "module": "template", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : create sshd_config and set permissions to root/600", "become": true, "notify": "restart linux sshd", "when": "ssh_server_hardening | bool"}, "module_options": {"src": "opensshd.conf.j2", "dest": "/etc/ssh/sshd_config", "mode": "0600", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}", "validate": "/usr/sbin/sshd -T -C user=root -C host=localhost -C addr=localhost -f %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : create ssh_config and set permissions to root/644", "module": "template", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : create ssh_config and set permissions to root/644", "become": true, "when": "ssh_client_hardening | bool"}, "module_options": {"src": "openssh.conf.j2", "dest": "/etc/ssh/ssh_config", "mode": "0644", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : Check if {{ sshd_moduli_file }} contains weak DH parameters", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : Check if {{ sshd_moduli_file }} contains weak DH parameters", "register": "sshd_register_moduli", "changed_when": false, "check_mode": false}, "module_options": "awk '$5 < {{ sshd_moduli_minimum }}' {{ sshd_moduli_file }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : Remove all small primes", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : Remove all small primes", "notify": "restart linux sshd", "when": "sshd_register_moduli.stdout"}, "module_options": "awk '$5 >= {{ sshd_moduli_minimum }}' {{ sshd_moduli_file }} > {{ sshd_moduli_file }}.new ; [ -r {{ sshd_moduli_file }}.new -a -s {{ sshd_moduli_file }}.new ] && mv {{ sshd_moduli_file }}.new {{ sshd_moduli_file }} || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : Include tasks to setup ca keys and principals", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : Include tasks to setup ca keys and principals", "when": "ssh_trusted_user_ca_keys_file | length > 0"}, "module_options": "subtasks/ca_keys_and_principals.yml", "executable": "subtasks/ca_keys_and_principals.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : include tasks to setup 2FA", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : include tasks to setup 2FA", "when": ["ssh_use_pam | bool", "ssh_challengeresponseauthentication | bool", "ssh_google_auth | bool"]}, "module_options": "subtasks/2fa.yml", "executable": "subtasks/2fa.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : include selinux specific tasks", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/Linux.yml", "options": {"name": "Linux : include selinux specific tasks", "when": "ansible_selinux and ansible_selinux.status == \"enabled\""}, "module_options": "subtasks/selinux.yml", "executable": "subtasks/selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "install selinux dependencies when selinux is installed", "module": "package", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "install selinux dependencies when selinux is installed", "become": true, "with_items": ["{{ ssh_selinux_dependency_packages }}"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "authorize {{ ssh_server_ports }} ports for selinux", "module": "seport", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "authorize {{ ssh_server_ports }} ports for selinux", "become": true, "with_items": ["{{ ssh_server_ports }}"]}, "module_options": {"ports": "{{ item }}", "proto": "tcp", "setype": "ssh_port_t", "state": "present"}, "executable": "seport", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "check if ssh_password module is already installed", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "check if ssh_password module is already installed", "become": true, "args": {"executable": "/bin/bash"}, "register": "ssh_password_module", "failed_when": false, "changed_when": false, "check_mode": false}, "module_options": "set -o pipefail && semodule -l | grep ssh_password", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create selinux custom policy drop folder", "module": "file", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "Create selinux custom policy drop folder", "become": true}, "module_options": {"path": "{{ ssh_custom_selinux_dir }}", "state": "directory", "owner": "root", "group": "root", "mode": "0750"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Distributing custom selinux policies", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "Distributing custom selinux policies", "become": true}, "module_options": {"src": "ssh_password", "dest": "{{ ssh_custom_selinux_dir }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "check and compile policy", "module": "command", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "check and compile policy", "become": true}, "module_options": "checkmodule -M -m -o {{ ssh_custom_selinux_dir }}/ssh_password.mod {{ ssh_custom_selinux_dir }}/ssh_password", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "create selinux policy module package", "module": "command", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "create selinux policy module package", "become": true}, "module_options": "semodule_package -o {{ ssh_custom_selinux_dir }}/ssh_password.pp  -m {{ ssh_custom_selinux_dir }}/ssh_password.mod", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "install selinux policy", "module": "command", "index": 7, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "install selinux policy", "become": true}, "module_options": "semodule -i {{ ssh_custom_selinux_dir }}/ssh_password.pp", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "remove selinux-policy when Pam is used, because Allowing sshd to read the shadow file directly is considered a potential security risk", "module": "command", "index": 8, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/selinux.yml", "options": {"name": "remove selinux-policy when Pam is used, because Allowing sshd to read the shadow file directly is considered a potential security risk", "become": true, "when": "ssh_use_pam | bool and ssh_password_module.stdout.find('ssh_password') == 0"}, "module_options": "semodule -r ssh_password", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "ca_keys_and_principals.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set ssh CA pub keys", "module": "template", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "options": {"name": "Set ssh CA pub keys", "become": true, "notify": "restart linux sshd"}, "module_options": {"src": "trusted_user_ca_keys.j2", "dest": "{{ ssh_trusted_user_ca_keys_file }}", "mode": "0644", "owner": "{{ ssh_owner }}", "group": "{{ ssh_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create ssh authorized principals directories", "module": "file", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "options": {"name": "Create ssh authorized principals directories", "become": true, "with_items": "{{ ssh_authorized_principals }}"}, "module_options": {"path": "{{ item.path | dirname }}", "mode": "{{ item.directorymode | default(0700) }}", "owner": "{{ item.directoryowner | default(ssh_owner) }}", "group": "{{ item.directorygroup | default(ssh_group) }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set ssh authorized principals", "module": "template", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/ca_keys_and_principals.yml", "options": {"name": "Set ssh authorized principals", "become": true, "with_items": "{{ ssh_authorized_principals }}"}, "module_options": {"src": "authorized_principals.j2", "dest": "{{ item.path }}", "mode": "{{ item.filemode | default(0600) }}", "owner": "{{ item.owner| default(ssh_owner) }}", "group": "{{ item.group | default(ssh_group) }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "2fa.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install google authenticator PAM module", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Install google authenticator PAM module", "become": true, "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'"}, "module_options": {"name": "libpam-google-authenticator", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install google authenticator PAM module", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Install google authenticator PAM module", "become": true, "when": "ansible_os_family == 'RedHat' or ansible_os_family == 'Oracle Linux'"}, "module_options": {"name": "google-authenticator", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add google auth module to PAM", "module": "pamd", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Add google auth module to PAM", "become": true}, "module_options": {"name": "sshd", "type": "auth", "control": "required", "module_path": "pam_google_authenticator.so"}, "executable": "pamd", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove password auth from PAM", "module": "pamd", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Remove password auth from PAM", "become": true, "when": "ansible_distribution == 'RedHat' or ansible_distribution == 'Oracle Linux' or ansible_distribution == 'Amazon'"}, "module_options": {"name": "sshd", "type": "auth", "control": "substack", "module_path": "password-auth", "state": "absent"}, "executable": "pamd", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove password auth from PAM", "module": "replace", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/2fa.yml", "options": {"name": "Remove password auth from PAM", "become": true, "when": "ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'"}, "module_options": {"dest": "/etc/pam.d/sshd", "regexp": "^@include common-auth", "replace": "#@include common-auth"}, "executable": "replace", "executable_type": "Module", "fqcn": "ansible.builtin.replace", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "crypto.yml", "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "tasks": [{"py/object": "struct4.Task", "name": "set hostkeys according to openssh-version", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set hostkeys according to openssh-version", "when": "sshd_version.stdout >= '6.3' and not ssh_host_key_files"}, "module_options": {"ssh_host_key_files": ["{{ sshd_config_path }}/ssh_host_rsa_key", "{{ sshd_config_path }}/ssh_host_ecdsa_key", "{{ sshd_config_path }}/ssh_host_ed25519_key"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set hostkeys according to openssh-version", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set hostkeys according to openssh-version", "when": "sshd_version.stdout >= '6.0' and not ssh_host_key_files"}, "module_options": {"ssh_host_key_files": ["{{ sshd_config_path }}/ssh_host_rsa_key", "{{ sshd_config_path }}/ssh_host_ecdsa_key"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set hostkeys according to openssh-version", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set hostkeys according to openssh-version", "when": "sshd_version.stdout >= '5.3' and not ssh_host_key_files"}, "module_options": {"ssh_host_key_files": ["{{ sshd_config_path }}/ssh_host_rsa_key"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set macs according to openssh-version if openssh >= 7.6", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version if openssh >= 7.6", "when": "sshd_version.stdout >= '7.6' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_76_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set macs according to openssh-version if openssh >= 6.6", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version if openssh >= 6.6", "when": "sshd_version.stdout >= '6.6' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_66_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set macs according to openssh-version", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version", "when": "sshd_version.stdout >= '5.9' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_59_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set macs according to openssh-version", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set macs according to openssh-version", "when": "sshd_version.stdout >= '5.3' and not ssh_macs"}, "module_options": {"ssh_macs": "{{ ssh_macs_53_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set ciphers according to openssh-version if openssh >= 6.6", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set ciphers according to openssh-version if openssh >= 6.6", "when": "sshd_version.stdout >= '6.6' and not ssh_ciphers"}, "module_options": {"ssh_ciphers": "{{ ssh_ciphers_66_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set ciphers according to openssh-version", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set ciphers according to openssh-version", "when": "sshd_version.stdout >= '5.3' and not ssh_ciphers"}, "module_options": {"ssh_ciphers": "{{ ssh_ciphers_53_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set kex according to openssh-version if openssh >= 6.6", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set kex according to openssh-version if openssh >= 6.6", "when": "sshd_version.stdout >= '6.6' and not ssh_kex"}, "module_options": {"ssh_kex": "{{ ssh_kex_66_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set kex according to openssh-version", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/arillso-sshd/arillso.sshd/tasks/distribution/subtasks/crypto.yml", "options": {"name": "set kex according to openssh-version", "when": "sshd_version.stdout >= '5.9' and not ssh_kex"}, "module_options": {"ssh_kex": "{{ ssh_kex_59_default }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "arillso.sshd", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}