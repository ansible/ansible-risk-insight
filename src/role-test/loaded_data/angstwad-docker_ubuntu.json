{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/angstwad-docker_ubuntu", "installed_roles": [{"py/object": "struct4.Role", "name": "angstwad.docker_ubuntu", "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu", "fqcn": "angstwad.docker_ubuntu", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "kernel_check_and_update.yml", "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install backported trusty kernel onto 12.04", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install backported trusty kernel onto 12.04", "register": "kernel_result", "when": "ansible_distribution_version is version_compare('12.04', '=')"}, "module_options": {"pkg": ["linux-image-generic-lts-trusty", "linux-headers-generic-lts-trusty"], "state": "{{ kernel_pkg_state }}", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Xorg packages for backported kernels (very optional)", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install Xorg packages for backported kernels (very optional)", "register": "xorg_pkg_result", "when": "install_xorg_pkgs and (kernel_result is changed or kernel_result is succeeded)"}, "module_options": {"pkg": ["xserver-xorg-lts-trusty", "libgl1-mesa-glx-lts-trusty"], "state": "installed", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install latest kernel for Ubuntu 13.04+", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install latest kernel for Ubuntu 13.04+", "when": "ansible_distribution_version is version_compare('13.04', '=') or ansible_distribution_version is version_compare('13.10', '=') or install_kernel_extras"}, "module_options": {"pkg": ["linux-image-extra-{{ ansible_kernel }}", "linux-image-extra-virtual"], "state": "{{ kernel_pkg_state }}", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install cgroup-lite for Ubuntu 13.10", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install cgroup-lite for Ubuntu 13.10", "register": "cgroup_lite_result", "when": "ansible_distribution_version is version_compare('13.10', '=')"}, "module_options": {"pkg": "cgroup-lite", "state": "{{ cgroup_lite_pkg_state }}", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reboot instance", "module": "command", "index": 4, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Reboot instance", "register": "reboot_result", "when": "(ansible_distribution_version is version_compare('12.04', '=') and kernel_result is changed) or (ansible_distribution_version is version_compare('13.10', '=') and cgroup_lite_result is changed) or xorg_pkg_result is changed"}, "module_options": "/sbin/shutdown -r now", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Wait for instance to come online (10 minute timeout)", "module": "wait_for", "index": 5, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Wait for instance to come online (10 minute timeout)", "become": false, "delegate_to": "localhost", "when": "(ansible_distribution_version is version_compare('12.04', '=') and reboot_result is changed) or (ansible_distribution_version is version_compare('13.10', '=') and cgroup_lite_result is changed)"}, "module_options": {"host": "{{ ansible_ssh_host|default(inventory_hostname) }}", "port": "{{ ansible_ssh_port|default(ssh_port) }}", "delay": 30, "timeout": 600, "state": "started"}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}], "role": "angstwad.docker_ubuntu", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include proper python vars file", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Include proper python vars file"}, "module_options": "{{ python_vars_file }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a supported release of Ubuntu", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fail if not a supported release of Ubuntu", "when": "ansible_lsb.id|lower == \"ubuntu\" and ansible_distribution_version is version_compare('14.04', '<')"}, "module_options": {"msg": "{{ ansible_distribution_version }} is not an acceptable version of Ubuntu for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of Debian", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fail if not a new release of Debian", "when": "ansible_lsb.id|lower == \"debian\" and ansible_distribution_version is version_compare('8.5', '<')"}, "module_options": {"msg": "{{ ansible_distribution_version }} is not an acceptable version of Debian for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if using python3 with Ansible<2.3", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fail if using python3 with Ansible<2.3", "when": "ansible_version.full is version_compare('2.3', '<') and ansible_python_interpreter is defined and 'python3' in ansible_python_interpreter"}, "module_options": {"msg": "Ansible 2.3+ is required to use Python3 interpreter."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update kernel, kernel extras, Xorg pkgs, and related tasks", "module": "include", "index": 4, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Update kernel, kernel extras, Xorg pkgs, and related tasks", "when": "kernel_update_and_reboot_permitted or install_kernel_extras"}, "module_options": "kernel_check_and_update.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall old versions of Docker", "module": "apt", "index": 5, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Uninstall old versions of Docker", "when": "uninstall_previous_docker_versions"}, "module_options": {"name": ["docker", "docker-engine", "docker.io"], "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install linux-image-extra-* packages to enable AuFS driver", "module": "apt", "index": 6, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install linux-image-extra-* packages to enable AuFS driver", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "docker_aufs_enabled and ansible_distribution_version is version_compare('14.04', '==') and ansible_kernel is version_compare('4.4', '<')", "register": "linux_image_extra_install", "ignore_errors": true}, "module_options": {"pkg": ["linux-image-extra-{{ ansible_kernel }}", "linux-image-extra-virtual"], "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try again to install linux-image-extra if previous attempt failed", "module": "apt", "index": 7, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Try again to install linux-image-extra if previous attempt failed", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "linux_image_extra_install is failed"}, "module_options": {"pkg": "linux-image-extra-{{ ansible_kernel.split('-')[:-1]|join('-') }}*", "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dirmngr is available", "module": "apt", "index": 8, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Ensure dirmngr is available", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"pkg": "{{ apt_dirmngr_pkg }}", "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker repository key", "module": "apt_key", "index": 9, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Add Docker repository key", "register": "add_repository_key", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "ignore_errors": true}, "module_options": {"id": "{{ apt_key_sig }}", "keyserver": "{{ apt_key_url }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Alternative | Add Docker repository key", "module": "command", "index": 10, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Alternative | Add Docker repository key", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "add_repository_key is failed"}, "module_options": "apt-key adv --fetch-keys {{ apt_key_url }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "HTTPS APT transport for Docker repository", "module": "apt", "index": 11, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "HTTPS APT transport for Docker repository", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"name": "apt-transport-https", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker repository and update apt cache", "module": "apt_repository", "index": 12, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Add Docker repository and update apt cache", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"repo": "{{ apt_repository }}", "mode": "644", "update_cache": true, "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install (or update) docker-cli package", "module": "apt", "index": 13, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install (or update) docker-cli package", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"name": "{{ docker_cli_pkg_name }}", "state": "{{ 'latest' if update_docker_package else 'present' }}", "update_cache": "{{ update_docker_package }}", "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install (or update) docker package", "module": "apt", "index": 14, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install (or update) docker package", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"name": "{{ docker_pkg_name }}", "state": "{{ 'latest' if update_docker_package else 'present' }}", "update_cache": "{{ update_docker_package }}", "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd playbook var", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set systemd playbook var", "changed_when": false, "tags": "always"}, "module_options": {"is_systemd": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd playbook var", "module": "set_fact", "index": 16, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set systemd playbook var", "when": "( ansible_distribution == \"Ubuntu\" and ansible_distribution_version is version_compare('15.04', '>=') or ansible_distribution == \"Debian\" )", "tags": "always"}, "module_options": {"is_systemd": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker_http_proxy_defined flag", "module": "set_fact", "index": 17, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker_http_proxy_defined flag", "tags": "proxy"}, "module_options": {"docker_http_proxy_defined": "{{ docker_http_proxy is defined and docker_http_proxy is not none and docker_http_proxy | length > 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker_https_proxy_defined flag", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker_https_proxy_defined flag", "tags": "proxy"}, "module_options": {"docker_https_proxy_defined": "{{ docker_https_proxy is defined and docker_https_proxy is not none and docker_https_proxy | length > 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker_no_proxy_defined flag", "module": "set_fact", "index": 19, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker_no_proxy_defined flag", "tags": "proxy"}, "module_options": {"docker_no_proxy_defined": "{{ docker_no_proxy is defined and docker_no_proxy is not none and docker_no_proxy | length > 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Creates override directory (systemd)", "module": "file", "index": 20, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Creates override directory (systemd)", "when": ["is_systemd"], "tags": "proxy"}, "module_options": {"path": "/etc/systemd/system/docker.service.d", "state": "{{ (daemon_json is not none or docker_http_proxy_defined or docker_https_proxy_defined or docker_no_proxy_defined) | ternary('directory', 'absent') }}", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker daemon override (systemd)", "module": "copy", "index": 21, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker daemon override (systemd)", "notify": ["Reload systemd", "Restart docker"], "when": "daemon_json is not none and is_systemd"}, "module_options": {"content": "[Service]\nExecStart=\nExecStart=/usr/bin/dockerd\n", "dest": "/etc/systemd/system/docker.service.d/override.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure /etc/docker is present", "module": "file", "index": 22, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Ensure /etc/docker is present"}, "module_options": {"path": "/etc/docker", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set /etc/docker/daemon.json", "module": "copy", "index": 23, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set /etc/docker/daemon.json", "notify": ["Restart docker"], "when": "daemon_json is not none"}, "module_options": {"content": "{{ daemon_json | to_nice_json }}", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix DNS in docker.io", "module": "lineinfile", "index": 24, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fix DNS in docker.io", "register": "dns_fix", "notify": "Restart dockerio", "when": "docker_pkg_name == 'docker.io'"}, "module_options": {"dest": "{{ docker_defaults_file_path }}", "regexp": "DOCKER_OPTS=", "line": "DOCKER_OPTS=\"--dns {{ ansible_docker0.ipv4.address }}\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 25, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "pause for a second", "module": "pause", "index": 26, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "pause for a second", "when": "dns_fix is changed"}, "module_options": {"seconds": 1}, "executable": "pause", "executable_type": "Module", "fqcn": "ansible.builtin.pause", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install {{ _python_packages | join(', ') }} packages with apt", "module": "apt", "index": 27, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install {{ _python_packages | join(', ') }} packages with apt", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"pkg": "{{ _python_packages }}", "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Docker-compose version downgrade", "module": "debug", "index": 28, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Docker-compose version downgrade", "when": "pip_install_docker_compose and _pip_version_docker_compose != pip_version_docker_compose"}, "module_options": {"msg": "Downgrading docker-compose version to {{ _pip_version_docker_compose }} because of docker-compose > 1.10 requiring docker python package (instead of the docker-py one) which is incompatible with the docker_container module in Ansible < 2.3"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean previous docker-py package if installing docker.", "module": "pip", "index": 29, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Clean previous docker-py package if installing docker.", "when": "(_pip_install_docker or pip_install_docker_compose) and _pip_docker_package_name == 'docker'"}, "module_options": {"name": "docker-py", "state": "absent", "executable": "{{ _pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean previous docker package if installing docker-py.", "module": "pip", "index": 30, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Clean previous docker package if installing docker-py.", "when": "(_pip_install_docker or pip_install_docker_compose) and _pip_docker_package_name == 'docker-py'"}, "module_options": {"name": "docker", "state": "absent", "executable": "{{ _pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pip, setuptools, docker-py and docker-compose with pip", "module": "pip", "index": 31, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install pip, setuptools, docker-py and docker-compose with pip", "with_items": [{"name": "pip", "version": "{{ pip_version_pip }}", "install": "{{ pip_install_pip }}"}, {"name": "setuptools", "version": "{{ pip_version_setuptools }}", "install": "{{ pip_install_setuptools }}"}, {"name": "{{ _pip_docker_package_name }}", "version": "{{ pip_version_docker }}", "install": "{{ _pip_install_docker }}"}, {"name": "docker-compose", "version": "{{ _pip_version_docker_compose }}", "install": "{{ pip_install_docker_compose }}"}], "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "item.install|bool"}, "module_options": {"name": "{{ item.name }}", "state": "{{ 'latest' if item.version=='latest' else 'present' }}", "version": "{{ item.version if item.version!='latest' else omit }}", "executable": "{{ _pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if /etc/updatedb.conf exists", "module": "stat", "index": 32, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Check if /etc/updatedb.conf exists", "register": "updatedb_conf_exists"}, "module_options": {"path": "/etc/updatedb.conf"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure updatedb does not index /var/lib/docker", "module": "lineinfile", "index": 33, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Ensure updatedb does not index /var/lib/docker", "when": "updatedb_conf_exists.stat.exists"}, "module_options": {"dest": "/etc/updatedb.conf", "state": "present", "backrefs": true, "regexp": "^PRUNEPATHS=\"(/var/lib/docker )?(.*)\"$", "line": "PRUNEPATHS=\"/var/lib/docker \\2\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if /etc/default/ufw exists", "module": "stat", "index": 34, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Check if /etc/default/ufw exists", "register": "ufw_default_exists"}, "module_options": {"path": "/etc/default/ufw"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change ufw default forward policy from drop to accept", "module": "lineinfile", "index": 35, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Change ufw default forward policy from drop to accept", "when": "ufw_default_exists.stat.exists"}, "module_options": {"dest": "/etc/default/ufw", "regexp": "^DEFAULT_FORWARD_POLICY=", "line": "DEFAULT_FORWARD_POLICY=\"ACCEPT\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker HTTP_PROXY if docker_http_proxy defined", "module": "lineinfile", "index": 36, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker HTTP_PROXY if docker_http_proxy defined", "when": ["not is_systemd"], "notify": ["Restart docker"], "tags": "proxy"}, "module_options": {"dest": "/etc/default/docker", "regexp": "^export http_proxy=", "line": "export http_proxy=\"{{ docker_http_proxy }}\"", "state": "{{ docker_http_proxy_defined | ternary('present', 'absent') }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker HTTPS_PROXY if docker_https_proxy defined", "module": "lineinfile", "index": 37, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker HTTPS_PROXY if docker_https_proxy defined", "when": ["not is_systemd"], "notify": ["Restart docker"], "tags": "proxy"}, "module_options": {"dest": "/etc/default/docker", "regexp": "^export https_proxy=", "line": "export https_proxy=\"{{ docker_https_proxy }}\"", "state": "{{ docker_https_proxy_defined | ternary('present', 'absent') }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker NO_PROXY if docker_no_proxy defined", "module": "lineinfile", "index": 38, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker NO_PROXY if docker_no_proxy defined", "when": ["not is_systemd"], "notify": ["Restart docker"], "tags": "proxy"}, "module_options": {"dest": "/etc/default/docker", "regexp": "^export no_proxy=", "line": "export no_proxy=\"{{ docker_no_proxy }}\"", "state": "{{ docker_no_proxy_defined | ternary('present', 'absent') }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker HTTP(S)_PROXY if docker_http(s)_proxy defined (systemd)", "module": "copy", "index": 39, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker HTTP(S)_PROXY if docker_http(s)_proxy defined (systemd)", "notify": ["Reload systemd", "Restart docker"], "when": ["is_systemd", "docker_http_proxy_defined or docker_https_proxy_defined or docker_no_proxy_defined"], "tags": "proxy"}, "module_options": {"content": "[Service]\nEnvironment=\"{% if docker_http_proxy_defined %}http_proxy={{ docker_http_proxy }}{% endif %}\"\nEnvironment=\"{% if docker_https_proxy_defined %}https_proxy={{ docker_https_proxy }}{% endif %}\"\nEnvironment=\"{% if docker_no_proxy_defined %}no_proxy={{ docker_no_proxy }}{% endif %}\"\n", "dest": "/etc/systemd/system/docker.service.d/proxy.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove docker HTTP(S)_PROXY if docker_http(s)_proxy undefined (systemd)", "module": "file", "index": 40, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Remove docker HTTP(S)_PROXY if docker_http(s)_proxy undefined (systemd)", "notify": ["Reload systemd", "Restart docker"], "when": ["is_systemd", "not docker_http_proxy_defined and not docker_https_proxy_defined and not docker_no_proxy_defined"], "tags": "proxy"}, "module_options": {"path": "/etc/systemd/system/docker.service.d/proxy.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start docker", "module": "service", "index": 41, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Start docker", "when": "start_docker_daemon"}, "module_options": {"name": "docker", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add users to the docker group", "module": "user", "index": 42, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Add users to the docker group", "with_items": "{{ docker_group_members }}", "when": "docker_group_members is defined"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "update facts if docker0 is not defined", "module": "setup", "index": 43, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "update facts if docker0 is not defined", "when": "ansible_docker0 is not defined"}, "module_options": {"filter": "ansible_docker0"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}], "role": "angstwad.docker_ubuntu", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install backported trusty kernel onto 12.04", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install backported trusty kernel onto 12.04", "register": "kernel_result", "when": "ansible_distribution_version is version_compare('12.04', '=')"}, "module_options": {"pkg": ["linux-image-generic-lts-trusty", "linux-headers-generic-lts-trusty"], "state": "{{ kernel_pkg_state }}", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install Xorg packages for backported kernels (very optional)", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install Xorg packages for backported kernels (very optional)", "register": "xorg_pkg_result", "when": "install_xorg_pkgs and (kernel_result is changed or kernel_result is succeeded)"}, "module_options": {"pkg": ["xserver-xorg-lts-trusty", "libgl1-mesa-glx-lts-trusty"], "state": "installed", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install latest kernel for Ubuntu 13.04+", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install latest kernel for Ubuntu 13.04+", "when": "ansible_distribution_version is version_compare('13.04', '=') or ansible_distribution_version is version_compare('13.10', '=') or install_kernel_extras"}, "module_options": {"pkg": ["linux-image-extra-{{ ansible_kernel }}", "linux-image-extra-virtual"], "state": "{{ kernel_pkg_state }}", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install cgroup-lite for Ubuntu 13.10", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install cgroup-lite for Ubuntu 13.10", "register": "cgroup_lite_result", "when": "ansible_distribution_version is version_compare('13.10', '=')"}, "module_options": {"pkg": "cgroup-lite", "state": "{{ cgroup_lite_pkg_state }}", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Reboot instance", "module": "command", "index": 4, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Reboot instance", "register": "reboot_result", "when": "(ansible_distribution_version is version_compare('12.04', '=') and kernel_result is changed) or (ansible_distribution_version is version_compare('13.10', '=') and cgroup_lite_result is changed) or xorg_pkg_result is changed"}, "module_options": "/sbin/shutdown -r now", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Wait for instance to come online (10 minute timeout)", "module": "wait_for", "index": 5, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Wait for instance to come online (10 minute timeout)", "become": false, "delegate_to": "localhost", "when": "(ansible_distribution_version is version_compare('12.04', '=') and reboot_result is changed) or (ansible_distribution_version is version_compare('13.10', '=') and cgroup_lite_result is changed)"}, "module_options": {"host": "{{ ansible_ssh_host|default(inventory_hostname) }}", "port": "{{ ansible_ssh_port|default(ssh_port) }}", "delay": 30, "timeout": 600, "state": "started"}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include proper python vars file", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Include proper python vars file"}, "module_options": "{{ python_vars_file }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Fail if not a supported release of Ubuntu", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fail if not a supported release of Ubuntu", "when": "ansible_lsb.id|lower == \"ubuntu\" and ansible_distribution_version is version_compare('14.04', '<')"}, "module_options": {"msg": "{{ ansible_distribution_version }} is not an acceptable version of Ubuntu for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Fail if not a new release of Debian", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fail if not a new release of Debian", "when": "ansible_lsb.id|lower == \"debian\" and ansible_distribution_version is version_compare('8.5', '<')"}, "module_options": {"msg": "{{ ansible_distribution_version }} is not an acceptable version of Debian for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Fail if using python3 with Ansible<2.3", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fail if using python3 with Ansible<2.3", "when": "ansible_version.full is version_compare('2.3', '<') and ansible_python_interpreter is defined and 'python3' in ansible_python_interpreter"}, "module_options": {"msg": "Ansible 2.3+ is required to use Python3 interpreter."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Update kernel, kernel extras, Xorg pkgs, and related tasks", "module": "include", "index": 4, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Update kernel, kernel extras, Xorg pkgs, and related tasks", "when": "kernel_update_and_reboot_permitted or install_kernel_extras"}, "module_options": "kernel_check_and_update.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Uninstall old versions of Docker", "module": "apt", "index": 5, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Uninstall old versions of Docker", "when": "uninstall_previous_docker_versions"}, "module_options": {"name": ["docker", "docker-engine", "docker.io"], "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Install linux-image-extra-* packages to enable AuFS driver", "module": "apt", "index": 6, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install linux-image-extra-* packages to enable AuFS driver", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "docker_aufs_enabled and ansible_distribution_version is version_compare('14.04', '==') and ansible_kernel is version_compare('4.4', '<')", "register": "linux_image_extra_install", "ignore_errors": true}, "module_options": {"pkg": ["linux-image-extra-{{ ansible_kernel }}", "linux-image-extra-virtual"], "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Try again to install linux-image-extra if previous attempt failed", "module": "apt", "index": 7, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Try again to install linux-image-extra if previous attempt failed", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "linux_image_extra_install is failed"}, "module_options": {"pkg": "linux-image-extra-{{ ansible_kernel.split('-')[:-1]|join('-') }}*", "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Ensure dirmngr is available", "module": "apt", "index": 8, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Ensure dirmngr is available", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"pkg": "{{ apt_dirmngr_pkg }}", "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Add Docker repository key", "module": "apt_key", "index": 9, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Add Docker repository key", "register": "add_repository_key", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "ignore_errors": true}, "module_options": {"id": "{{ apt_key_sig }}", "keyserver": "{{ apt_key_url }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Alternative | Add Docker repository key", "module": "command", "index": 10, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Alternative | Add Docker repository key", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "add_repository_key is failed"}, "module_options": "apt-key adv --fetch-keys {{ apt_key_url }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "HTTPS APT transport for Docker repository", "module": "apt", "index": 11, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "HTTPS APT transport for Docker repository", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"name": "apt-transport-https", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Add Docker repository and update apt cache", "module": "apt_repository", "index": 12, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Add Docker repository and update apt cache", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"repo": "{{ apt_repository }}", "mode": "644", "update_cache": true, "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Install (or update) docker-cli package", "module": "apt", "index": 13, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install (or update) docker-cli package", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"name": "{{ docker_cli_pkg_name }}", "state": "{{ 'latest' if update_docker_package else 'present' }}", "update_cache": "{{ update_docker_package }}", "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Install (or update) docker package", "module": "apt", "index": 14, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install (or update) docker package", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"name": "{{ docker_pkg_name }}", "state": "{{ 'latest' if update_docker_package else 'present' }}", "update_cache": "{{ update_docker_package }}", "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Set systemd playbook var", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set systemd playbook var", "changed_when": false, "tags": "always"}, "module_options": {"is_systemd": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Set systemd playbook var", "module": "set_fact", "index": 16, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set systemd playbook var", "when": "( ansible_distribution == \"Ubuntu\" and ansible_distribution_version is version_compare('15.04', '>=') or ansible_distribution == \"Debian\" )", "tags": "always"}, "module_options": {"is_systemd": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Set docker_http_proxy_defined flag", "module": "set_fact", "index": 17, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker_http_proxy_defined flag", "tags": "proxy"}, "module_options": {"docker_http_proxy_defined": "{{ docker_http_proxy is defined and docker_http_proxy is not none and docker_http_proxy | length > 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Set docker_https_proxy_defined flag", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker_https_proxy_defined flag", "tags": "proxy"}, "module_options": {"docker_https_proxy_defined": "{{ docker_https_proxy is defined and docker_https_proxy is not none and docker_https_proxy | length > 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Set docker_no_proxy_defined flag", "module": "set_fact", "index": 19, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker_no_proxy_defined flag", "tags": "proxy"}, "module_options": {"docker_no_proxy_defined": "{{ docker_no_proxy is defined and docker_no_proxy is not none and docker_no_proxy | length > 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Creates override directory (systemd)", "module": "file", "index": 20, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Creates override directory (systemd)", "when": ["is_systemd"], "tags": "proxy"}, "module_options": {"path": "/etc/systemd/system/docker.service.d", "state": "{{ (daemon_json is not none or docker_http_proxy_defined or docker_https_proxy_defined or docker_no_proxy_defined) | ternary('directory', 'absent') }}", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Set docker daemon override (systemd)", "module": "copy", "index": 21, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker daemon override (systemd)", "notify": ["Reload systemd", "Restart docker"], "when": "daemon_json is not none and is_systemd"}, "module_options": {"content": "[Service]\nExecStart=\nExecStart=/usr/bin/dockerd\n", "dest": "/etc/systemd/system/docker.service.d/override.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Ensure /etc/docker is present", "module": "file", "index": 22, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Ensure /etc/docker is present"}, "module_options": {"path": "/etc/docker", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Set /etc/docker/daemon.json", "module": "copy", "index": 23, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set /etc/docker/daemon.json", "notify": ["Restart docker"], "when": "daemon_json is not none"}, "module_options": {"content": "{{ daemon_json | to_nice_json }}", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Fix DNS in docker.io", "module": "lineinfile", "index": 24, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fix DNS in docker.io", "register": "dns_fix", "notify": "Restart dockerio", "when": "docker_pkg_name == 'docker.io'"}, "module_options": {"dest": "{{ docker_defaults_file_path }}", "regexp": "DOCKER_OPTS=", "line": "DOCKER_OPTS=\"--dns {{ ansible_docker0.ipv4.address }}\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 25, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "pause for a second", "module": "pause", "index": 26, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "pause for a second", "when": "dns_fix is changed"}, "module_options": {"seconds": 1}, "executable": "pause", "executable_type": "Module", "fqcn": "ansible.builtin.pause", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Install {{ _python_packages | join(', ') }} packages with apt", "module": "apt", "index": 27, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install {{ _python_packages | join(', ') }} packages with apt", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"pkg": "{{ _python_packages }}", "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Docker-compose version downgrade", "module": "debug", "index": 28, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Docker-compose version downgrade", "when": "pip_install_docker_compose and _pip_version_docker_compose != pip_version_docker_compose"}, "module_options": {"msg": "Downgrading docker-compose version to {{ _pip_version_docker_compose }} because of docker-compose > 1.10 requiring docker python package (instead of the docker-py one) which is incompatible with the docker_container module in Ansible < 2.3"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Clean previous docker-py package if installing docker.", "module": "pip", "index": 29, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Clean previous docker-py package if installing docker.", "when": "(_pip_install_docker or pip_install_docker_compose) and _pip_docker_package_name == 'docker'"}, "module_options": {"name": "docker-py", "state": "absent", "executable": "{{ _pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Clean previous docker package if installing docker-py.", "module": "pip", "index": 30, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Clean previous docker package if installing docker-py.", "when": "(_pip_install_docker or pip_install_docker_compose) and _pip_docker_package_name == 'docker-py'"}, "module_options": {"name": "docker", "state": "absent", "executable": "{{ _pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Install pip, setuptools, docker-py and docker-compose with pip", "module": "pip", "index": 31, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install pip, setuptools, docker-py and docker-compose with pip", "with_items": [{"name": "pip", "version": "{{ pip_version_pip }}", "install": "{{ pip_install_pip }}"}, {"name": "setuptools", "version": "{{ pip_version_setuptools }}", "install": "{{ pip_install_setuptools }}"}, {"name": "{{ _pip_docker_package_name }}", "version": "{{ pip_version_docker }}", "install": "{{ _pip_install_docker }}"}, {"name": "docker-compose", "version": "{{ _pip_version_docker_compose }}", "install": "{{ pip_install_docker_compose }}"}], "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "item.install|bool"}, "module_options": {"name": "{{ item.name }}", "state": "{{ 'latest' if item.version=='latest' else 'present' }}", "version": "{{ item.version if item.version!='latest' else omit }}", "executable": "{{ _pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Check if /etc/updatedb.conf exists", "module": "stat", "index": 32, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Check if /etc/updatedb.conf exists", "register": "updatedb_conf_exists"}, "module_options": {"path": "/etc/updatedb.conf"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Ensure updatedb does not index /var/lib/docker", "module": "lineinfile", "index": 33, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Ensure updatedb does not index /var/lib/docker", "when": "updatedb_conf_exists.stat.exists"}, "module_options": {"dest": "/etc/updatedb.conf", "state": "present", "backrefs": true, "regexp": "^PRUNEPATHS=\"(/var/lib/docker )?(.*)\"$", "line": "PRUNEPATHS=\"/var/lib/docker \\2\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Check if /etc/default/ufw exists", "module": "stat", "index": 34, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Check if /etc/default/ufw exists", "register": "ufw_default_exists"}, "module_options": {"path": "/etc/default/ufw"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Change ufw default forward policy from drop to accept", "module": "lineinfile", "index": 35, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Change ufw default forward policy from drop to accept", "when": "ufw_default_exists.stat.exists"}, "module_options": {"dest": "/etc/default/ufw", "regexp": "^DEFAULT_FORWARD_POLICY=", "line": "DEFAULT_FORWARD_POLICY=\"ACCEPT\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 36}": {"py/object": "struct4.Task", "name": "Set docker HTTP_PROXY if docker_http_proxy defined", "module": "lineinfile", "index": 36, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker HTTP_PROXY if docker_http_proxy defined", "when": ["not is_systemd"], "notify": ["Restart docker"], "tags": "proxy"}, "module_options": {"dest": "/etc/default/docker", "regexp": "^export http_proxy=", "line": "export http_proxy=\"{{ docker_http_proxy }}\"", "state": "{{ docker_http_proxy_defined | ternary('present', 'absent') }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 37}": {"py/object": "struct4.Task", "name": "Set docker HTTPS_PROXY if docker_https_proxy defined", "module": "lineinfile", "index": 37, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker HTTPS_PROXY if docker_https_proxy defined", "when": ["not is_systemd"], "notify": ["Restart docker"], "tags": "proxy"}, "module_options": {"dest": "/etc/default/docker", "regexp": "^export https_proxy=", "line": "export https_proxy=\"{{ docker_https_proxy }}\"", "state": "{{ docker_https_proxy_defined | ternary('present', 'absent') }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 38}": {"py/object": "struct4.Task", "name": "Set docker NO_PROXY if docker_no_proxy defined", "module": "lineinfile", "index": 38, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker NO_PROXY if docker_no_proxy defined", "when": ["not is_systemd"], "notify": ["Restart docker"], "tags": "proxy"}, "module_options": {"dest": "/etc/default/docker", "regexp": "^export no_proxy=", "line": "export no_proxy=\"{{ docker_no_proxy }}\"", "state": "{{ docker_no_proxy_defined | ternary('present', 'absent') }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 39}": {"py/object": "struct4.Task", "name": "Set docker HTTP(S)_PROXY if docker_http(s)_proxy defined (systemd)", "module": "copy", "index": 39, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker HTTP(S)_PROXY if docker_http(s)_proxy defined (systemd)", "notify": ["Reload systemd", "Restart docker"], "when": ["is_systemd", "docker_http_proxy_defined or docker_https_proxy_defined or docker_no_proxy_defined"], "tags": "proxy"}, "module_options": {"content": "[Service]\nEnvironment=\"{% if docker_http_proxy_defined %}http_proxy={{ docker_http_proxy }}{% endif %}\"\nEnvironment=\"{% if docker_https_proxy_defined %}https_proxy={{ docker_https_proxy }}{% endif %}\"\nEnvironment=\"{% if docker_no_proxy_defined %}no_proxy={{ docker_no_proxy }}{% endif %}\"\n", "dest": "/etc/systemd/system/docker.service.d/proxy.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 40}": {"py/object": "struct4.Task", "name": "Remove docker HTTP(S)_PROXY if docker_http(s)_proxy undefined (systemd)", "module": "file", "index": 40, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Remove docker HTTP(S)_PROXY if docker_http(s)_proxy undefined (systemd)", "notify": ["Reload systemd", "Restart docker"], "when": ["is_systemd", "not docker_http_proxy_defined and not docker_https_proxy_defined and not docker_no_proxy_defined"], "tags": "proxy"}, "module_options": {"path": "/etc/systemd/system/docker.service.d/proxy.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 41}": {"py/object": "struct4.Task", "name": "Start docker", "module": "service", "index": 41, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Start docker", "when": "start_docker_daemon"}, "module_options": {"name": "docker", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 42}": {"py/object": "struct4.Task", "name": "Add users to the docker group", "module": "user", "index": 42, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Add users to the docker group", "with_items": "{{ docker_group_members }}", "when": "docker_group_members is defined"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml\", \"index\": 43}": {"py/object": "struct4.Task", "name": "update facts if docker0 is not defined", "module": "setup", "index": 43, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "update facts if docker0 is not defined", "when": "ansible_docker0 is not defined"}, "module_options": {"filter": "ansible_docker0"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml": {"py/object": "struct4.TaskFile", "name": "kernel_check_and_update.yml", "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install backported trusty kernel onto 12.04", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install backported trusty kernel onto 12.04", "register": "kernel_result", "when": "ansible_distribution_version is version_compare('12.04', '=')"}, "module_options": {"pkg": ["linux-image-generic-lts-trusty", "linux-headers-generic-lts-trusty"], "state": "{{ kernel_pkg_state }}", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Xorg packages for backported kernels (very optional)", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install Xorg packages for backported kernels (very optional)", "register": "xorg_pkg_result", "when": "install_xorg_pkgs and (kernel_result is changed or kernel_result is succeeded)"}, "module_options": {"pkg": ["xserver-xorg-lts-trusty", "libgl1-mesa-glx-lts-trusty"], "state": "installed", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install latest kernel for Ubuntu 13.04+", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install latest kernel for Ubuntu 13.04+", "when": "ansible_distribution_version is version_compare('13.04', '=') or ansible_distribution_version is version_compare('13.10', '=') or install_kernel_extras"}, "module_options": {"pkg": ["linux-image-extra-{{ ansible_kernel }}", "linux-image-extra-virtual"], "state": "{{ kernel_pkg_state }}", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install cgroup-lite for Ubuntu 13.10", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install cgroup-lite for Ubuntu 13.10", "register": "cgroup_lite_result", "when": "ansible_distribution_version is version_compare('13.10', '=')"}, "module_options": {"pkg": "cgroup-lite", "state": "{{ cgroup_lite_pkg_state }}", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reboot instance", "module": "command", "index": 4, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Reboot instance", "register": "reboot_result", "when": "(ansible_distribution_version is version_compare('12.04', '=') and kernel_result is changed) or (ansible_distribution_version is version_compare('13.10', '=') and cgroup_lite_result is changed) or xorg_pkg_result is changed"}, "module_options": "/sbin/shutdown -r now", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Wait for instance to come online (10 minute timeout)", "module": "wait_for", "index": 5, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Wait for instance to come online (10 minute timeout)", "become": false, "delegate_to": "localhost", "when": "(ansible_distribution_version is version_compare('12.04', '=') and reboot_result is changed) or (ansible_distribution_version is version_compare('13.10', '=') and cgroup_lite_result is changed)"}, "module_options": {"host": "{{ ansible_ssh_host|default(inventory_hostname) }}", "port": "{{ ansible_ssh_port|default(ssh_port) }}", "delay": 30, "timeout": 600, "state": "started"}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}], "role": "angstwad.docker_ubuntu", "used_in": [], "annotations": {}}, "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include proper python vars file", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Include proper python vars file"}, "module_options": "{{ python_vars_file }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a supported release of Ubuntu", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fail if not a supported release of Ubuntu", "when": "ansible_lsb.id|lower == \"ubuntu\" and ansible_distribution_version is version_compare('14.04', '<')"}, "module_options": {"msg": "{{ ansible_distribution_version }} is not an acceptable version of Ubuntu for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of Debian", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fail if not a new release of Debian", "when": "ansible_lsb.id|lower == \"debian\" and ansible_distribution_version is version_compare('8.5', '<')"}, "module_options": {"msg": "{{ ansible_distribution_version }} is not an acceptable version of Debian for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if using python3 with Ansible<2.3", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fail if using python3 with Ansible<2.3", "when": "ansible_version.full is version_compare('2.3', '<') and ansible_python_interpreter is defined and 'python3' in ansible_python_interpreter"}, "module_options": {"msg": "Ansible 2.3+ is required to use Python3 interpreter."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update kernel, kernel extras, Xorg pkgs, and related tasks", "module": "include", "index": 4, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Update kernel, kernel extras, Xorg pkgs, and related tasks", "when": "kernel_update_and_reboot_permitted or install_kernel_extras"}, "module_options": "kernel_check_and_update.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall old versions of Docker", "module": "apt", "index": 5, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Uninstall old versions of Docker", "when": "uninstall_previous_docker_versions"}, "module_options": {"name": ["docker", "docker-engine", "docker.io"], "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install linux-image-extra-* packages to enable AuFS driver", "module": "apt", "index": 6, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install linux-image-extra-* packages to enable AuFS driver", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "docker_aufs_enabled and ansible_distribution_version is version_compare('14.04', '==') and ansible_kernel is version_compare('4.4', '<')", "register": "linux_image_extra_install", "ignore_errors": true}, "module_options": {"pkg": ["linux-image-extra-{{ ansible_kernel }}", "linux-image-extra-virtual"], "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try again to install linux-image-extra if previous attempt failed", "module": "apt", "index": 7, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Try again to install linux-image-extra if previous attempt failed", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "linux_image_extra_install is failed"}, "module_options": {"pkg": "linux-image-extra-{{ ansible_kernel.split('-')[:-1]|join('-') }}*", "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dirmngr is available", "module": "apt", "index": 8, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Ensure dirmngr is available", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"pkg": "{{ apt_dirmngr_pkg }}", "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker repository key", "module": "apt_key", "index": 9, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Add Docker repository key", "register": "add_repository_key", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "ignore_errors": true}, "module_options": {"id": "{{ apt_key_sig }}", "keyserver": "{{ apt_key_url }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Alternative | Add Docker repository key", "module": "command", "index": 10, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Alternative | Add Docker repository key", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "add_repository_key is failed"}, "module_options": "apt-key adv --fetch-keys {{ apt_key_url }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "HTTPS APT transport for Docker repository", "module": "apt", "index": 11, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "HTTPS APT transport for Docker repository", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"name": "apt-transport-https", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker repository and update apt cache", "module": "apt_repository", "index": 12, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Add Docker repository and update apt cache", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"repo": "{{ apt_repository }}", "mode": "644", "update_cache": true, "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install (or update) docker-cli package", "module": "apt", "index": 13, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install (or update) docker-cli package", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"name": "{{ docker_cli_pkg_name }}", "state": "{{ 'latest' if update_docker_package else 'present' }}", "update_cache": "{{ update_docker_package }}", "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install (or update) docker package", "module": "apt", "index": 14, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install (or update) docker package", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"name": "{{ docker_pkg_name }}", "state": "{{ 'latest' if update_docker_package else 'present' }}", "update_cache": "{{ update_docker_package }}", "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd playbook var", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set systemd playbook var", "changed_when": false, "tags": "always"}, "module_options": {"is_systemd": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd playbook var", "module": "set_fact", "index": 16, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set systemd playbook var", "when": "( ansible_distribution == \"Ubuntu\" and ansible_distribution_version is version_compare('15.04', '>=') or ansible_distribution == \"Debian\" )", "tags": "always"}, "module_options": {"is_systemd": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker_http_proxy_defined flag", "module": "set_fact", "index": 17, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker_http_proxy_defined flag", "tags": "proxy"}, "module_options": {"docker_http_proxy_defined": "{{ docker_http_proxy is defined and docker_http_proxy is not none and docker_http_proxy | length > 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker_https_proxy_defined flag", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker_https_proxy_defined flag", "tags": "proxy"}, "module_options": {"docker_https_proxy_defined": "{{ docker_https_proxy is defined and docker_https_proxy is not none and docker_https_proxy | length > 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker_no_proxy_defined flag", "module": "set_fact", "index": 19, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker_no_proxy_defined flag", "tags": "proxy"}, "module_options": {"docker_no_proxy_defined": "{{ docker_no_proxy is defined and docker_no_proxy is not none and docker_no_proxy | length > 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Creates override directory (systemd)", "module": "file", "index": 20, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Creates override directory (systemd)", "when": ["is_systemd"], "tags": "proxy"}, "module_options": {"path": "/etc/systemd/system/docker.service.d", "state": "{{ (daemon_json is not none or docker_http_proxy_defined or docker_https_proxy_defined or docker_no_proxy_defined) | ternary('directory', 'absent') }}", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker daemon override (systemd)", "module": "copy", "index": 21, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker daemon override (systemd)", "notify": ["Reload systemd", "Restart docker"], "when": "daemon_json is not none and is_systemd"}, "module_options": {"content": "[Service]\nExecStart=\nExecStart=/usr/bin/dockerd\n", "dest": "/etc/systemd/system/docker.service.d/override.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure /etc/docker is present", "module": "file", "index": 22, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Ensure /etc/docker is present"}, "module_options": {"path": "/etc/docker", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set /etc/docker/daemon.json", "module": "copy", "index": 23, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set /etc/docker/daemon.json", "notify": ["Restart docker"], "when": "daemon_json is not none"}, "module_options": {"content": "{{ daemon_json | to_nice_json }}", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix DNS in docker.io", "module": "lineinfile", "index": 24, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fix DNS in docker.io", "register": "dns_fix", "notify": "Restart dockerio", "when": "docker_pkg_name == 'docker.io'"}, "module_options": {"dest": "{{ docker_defaults_file_path }}", "regexp": "DOCKER_OPTS=", "line": "DOCKER_OPTS=\"--dns {{ ansible_docker0.ipv4.address }}\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 25, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "pause for a second", "module": "pause", "index": 26, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "pause for a second", "when": "dns_fix is changed"}, "module_options": {"seconds": 1}, "executable": "pause", "executable_type": "Module", "fqcn": "ansible.builtin.pause", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install {{ _python_packages | join(', ') }} packages with apt", "module": "apt", "index": 27, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install {{ _python_packages | join(', ') }} packages with apt", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"pkg": "{{ _python_packages }}", "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Docker-compose version downgrade", "module": "debug", "index": 28, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Docker-compose version downgrade", "when": "pip_install_docker_compose and _pip_version_docker_compose != pip_version_docker_compose"}, "module_options": {"msg": "Downgrading docker-compose version to {{ _pip_version_docker_compose }} because of docker-compose > 1.10 requiring docker python package (instead of the docker-py one) which is incompatible with the docker_container module in Ansible < 2.3"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean previous docker-py package if installing docker.", "module": "pip", "index": 29, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Clean previous docker-py package if installing docker.", "when": "(_pip_install_docker or pip_install_docker_compose) and _pip_docker_package_name == 'docker'"}, "module_options": {"name": "docker-py", "state": "absent", "executable": "{{ _pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean previous docker package if installing docker-py.", "module": "pip", "index": 30, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Clean previous docker package if installing docker-py.", "when": "(_pip_install_docker or pip_install_docker_compose) and _pip_docker_package_name == 'docker-py'"}, "module_options": {"name": "docker", "state": "absent", "executable": "{{ _pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pip, setuptools, docker-py and docker-compose with pip", "module": "pip", "index": 31, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install pip, setuptools, docker-py and docker-compose with pip", "with_items": [{"name": "pip", "version": "{{ pip_version_pip }}", "install": "{{ pip_install_pip }}"}, {"name": "setuptools", "version": "{{ pip_version_setuptools }}", "install": "{{ pip_install_setuptools }}"}, {"name": "{{ _pip_docker_package_name }}", "version": "{{ pip_version_docker }}", "install": "{{ _pip_install_docker }}"}, {"name": "docker-compose", "version": "{{ _pip_version_docker_compose }}", "install": "{{ pip_install_docker_compose }}"}], "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "item.install|bool"}, "module_options": {"name": "{{ item.name }}", "state": "{{ 'latest' if item.version=='latest' else 'present' }}", "version": "{{ item.version if item.version!='latest' else omit }}", "executable": "{{ _pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if /etc/updatedb.conf exists", "module": "stat", "index": 32, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Check if /etc/updatedb.conf exists", "register": "updatedb_conf_exists"}, "module_options": {"path": "/etc/updatedb.conf"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure updatedb does not index /var/lib/docker", "module": "lineinfile", "index": 33, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Ensure updatedb does not index /var/lib/docker", "when": "updatedb_conf_exists.stat.exists"}, "module_options": {"dest": "/etc/updatedb.conf", "state": "present", "backrefs": true, "regexp": "^PRUNEPATHS=\"(/var/lib/docker )?(.*)\"$", "line": "PRUNEPATHS=\"/var/lib/docker \\2\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if /etc/default/ufw exists", "module": "stat", "index": 34, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Check if /etc/default/ufw exists", "register": "ufw_default_exists"}, "module_options": {"path": "/etc/default/ufw"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change ufw default forward policy from drop to accept", "module": "lineinfile", "index": 35, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Change ufw default forward policy from drop to accept", "when": "ufw_default_exists.stat.exists"}, "module_options": {"dest": "/etc/default/ufw", "regexp": "^DEFAULT_FORWARD_POLICY=", "line": "DEFAULT_FORWARD_POLICY=\"ACCEPT\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker HTTP_PROXY if docker_http_proxy defined", "module": "lineinfile", "index": 36, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker HTTP_PROXY if docker_http_proxy defined", "when": ["not is_systemd"], "notify": ["Restart docker"], "tags": "proxy"}, "module_options": {"dest": "/etc/default/docker", "regexp": "^export http_proxy=", "line": "export http_proxy=\"{{ docker_http_proxy }}\"", "state": "{{ docker_http_proxy_defined | ternary('present', 'absent') }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker HTTPS_PROXY if docker_https_proxy defined", "module": "lineinfile", "index": 37, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker HTTPS_PROXY if docker_https_proxy defined", "when": ["not is_systemd"], "notify": ["Restart docker"], "tags": "proxy"}, "module_options": {"dest": "/etc/default/docker", "regexp": "^export https_proxy=", "line": "export https_proxy=\"{{ docker_https_proxy }}\"", "state": "{{ docker_https_proxy_defined | ternary('present', 'absent') }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker NO_PROXY if docker_no_proxy defined", "module": "lineinfile", "index": 38, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker NO_PROXY if docker_no_proxy defined", "when": ["not is_systemd"], "notify": ["Restart docker"], "tags": "proxy"}, "module_options": {"dest": "/etc/default/docker", "regexp": "^export no_proxy=", "line": "export no_proxy=\"{{ docker_no_proxy }}\"", "state": "{{ docker_no_proxy_defined | ternary('present', 'absent') }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker HTTP(S)_PROXY if docker_http(s)_proxy defined (systemd)", "module": "copy", "index": 39, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker HTTP(S)_PROXY if docker_http(s)_proxy defined (systemd)", "notify": ["Reload systemd", "Restart docker"], "when": ["is_systemd", "docker_http_proxy_defined or docker_https_proxy_defined or docker_no_proxy_defined"], "tags": "proxy"}, "module_options": {"content": "[Service]\nEnvironment=\"{% if docker_http_proxy_defined %}http_proxy={{ docker_http_proxy }}{% endif %}\"\nEnvironment=\"{% if docker_https_proxy_defined %}https_proxy={{ docker_https_proxy }}{% endif %}\"\nEnvironment=\"{% if docker_no_proxy_defined %}no_proxy={{ docker_no_proxy }}{% endif %}\"\n", "dest": "/etc/systemd/system/docker.service.d/proxy.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove docker HTTP(S)_PROXY if docker_http(s)_proxy undefined (systemd)", "module": "file", "index": 40, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Remove docker HTTP(S)_PROXY if docker_http(s)_proxy undefined (systemd)", "notify": ["Reload systemd", "Restart docker"], "when": ["is_systemd", "not docker_http_proxy_defined and not docker_https_proxy_defined and not docker_no_proxy_defined"], "tags": "proxy"}, "module_options": {"path": "/etc/systemd/system/docker.service.d/proxy.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start docker", "module": "service", "index": 41, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Start docker", "when": "start_docker_daemon"}, "module_options": {"name": "docker", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add users to the docker group", "module": "user", "index": 42, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Add users to the docker group", "with_items": "{{ docker_group_members }}", "when": "docker_group_members is defined"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "update facts if docker0 is not defined", "module": "setup", "index": 43, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "update facts if docker0 is not defined", "when": "ansible_docker0 is not defined"}, "module_options": {"filter": "ansible_docker0"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}], "role": "angstwad.docker_ubuntu", "used_in": [], "annotations": {}}}, "role_dict": {"angstwad.docker_ubuntu": {"py/object": "struct4.Role", "name": "angstwad.docker_ubuntu", "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu", "fqcn": "angstwad.docker_ubuntu", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "kernel_check_and_update.yml", "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install backported trusty kernel onto 12.04", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install backported trusty kernel onto 12.04", "register": "kernel_result", "when": "ansible_distribution_version is version_compare('12.04', '=')"}, "module_options": {"pkg": ["linux-image-generic-lts-trusty", "linux-headers-generic-lts-trusty"], "state": "{{ kernel_pkg_state }}", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Xorg packages for backported kernels (very optional)", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install Xorg packages for backported kernels (very optional)", "register": "xorg_pkg_result", "when": "install_xorg_pkgs and (kernel_result is changed or kernel_result is succeeded)"}, "module_options": {"pkg": ["xserver-xorg-lts-trusty", "libgl1-mesa-glx-lts-trusty"], "state": "installed", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install latest kernel for Ubuntu 13.04+", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install latest kernel for Ubuntu 13.04+", "when": "ansible_distribution_version is version_compare('13.04', '=') or ansible_distribution_version is version_compare('13.10', '=') or install_kernel_extras"}, "module_options": {"pkg": ["linux-image-extra-{{ ansible_kernel }}", "linux-image-extra-virtual"], "state": "{{ kernel_pkg_state }}", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install cgroup-lite for Ubuntu 13.10", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Install cgroup-lite for Ubuntu 13.10", "register": "cgroup_lite_result", "when": "ansible_distribution_version is version_compare('13.10', '=')"}, "module_options": {"pkg": "cgroup-lite", "state": "{{ cgroup_lite_pkg_state }}", "update_cache": true, "cache_valid_time": 600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reboot instance", "module": "command", "index": 4, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Reboot instance", "register": "reboot_result", "when": "(ansible_distribution_version is version_compare('12.04', '=') and kernel_result is changed) or (ansible_distribution_version is version_compare('13.10', '=') and cgroup_lite_result is changed) or xorg_pkg_result is changed"}, "module_options": "/sbin/shutdown -r now", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Wait for instance to come online (10 minute timeout)", "module": "wait_for", "index": 5, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/kernel_check_and_update.yml", "options": {"name": "Wait for instance to come online (10 minute timeout)", "become": false, "delegate_to": "localhost", "when": "(ansible_distribution_version is version_compare('12.04', '=') and reboot_result is changed) or (ansible_distribution_version is version_compare('13.10', '=') and cgroup_lite_result is changed)"}, "module_options": {"host": "{{ ansible_ssh_host|default(inventory_hostname) }}", "port": "{{ ansible_ssh_port|default(ssh_port) }}", "delay": 30, "timeout": 600, "state": "started"}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}], "role": "angstwad.docker_ubuntu", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include proper python vars file", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Include proper python vars file"}, "module_options": "{{ python_vars_file }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a supported release of Ubuntu", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fail if not a supported release of Ubuntu", "when": "ansible_lsb.id|lower == \"ubuntu\" and ansible_distribution_version is version_compare('14.04', '<')"}, "module_options": {"msg": "{{ ansible_distribution_version }} is not an acceptable version of Ubuntu for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of Debian", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fail if not a new release of Debian", "when": "ansible_lsb.id|lower == \"debian\" and ansible_distribution_version is version_compare('8.5', '<')"}, "module_options": {"msg": "{{ ansible_distribution_version }} is not an acceptable version of Debian for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if using python3 with Ansible<2.3", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fail if using python3 with Ansible<2.3", "when": "ansible_version.full is version_compare('2.3', '<') and ansible_python_interpreter is defined and 'python3' in ansible_python_interpreter"}, "module_options": {"msg": "Ansible 2.3+ is required to use Python3 interpreter."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update kernel, kernel extras, Xorg pkgs, and related tasks", "module": "include", "index": 4, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Update kernel, kernel extras, Xorg pkgs, and related tasks", "when": "kernel_update_and_reboot_permitted or install_kernel_extras"}, "module_options": "kernel_check_and_update.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall old versions of Docker", "module": "apt", "index": 5, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Uninstall old versions of Docker", "when": "uninstall_previous_docker_versions"}, "module_options": {"name": ["docker", "docker-engine", "docker.io"], "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install linux-image-extra-* packages to enable AuFS driver", "module": "apt", "index": 6, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install linux-image-extra-* packages to enable AuFS driver", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "docker_aufs_enabled and ansible_distribution_version is version_compare('14.04', '==') and ansible_kernel is version_compare('4.4', '<')", "register": "linux_image_extra_install", "ignore_errors": true}, "module_options": {"pkg": ["linux-image-extra-{{ ansible_kernel }}", "linux-image-extra-virtual"], "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try again to install linux-image-extra if previous attempt failed", "module": "apt", "index": 7, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Try again to install linux-image-extra if previous attempt failed", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "linux_image_extra_install is failed"}, "module_options": {"pkg": "linux-image-extra-{{ ansible_kernel.split('-')[:-1]|join('-') }}*", "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dirmngr is available", "module": "apt", "index": 8, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Ensure dirmngr is available", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"pkg": "{{ apt_dirmngr_pkg }}", "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker repository key", "module": "apt_key", "index": 9, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Add Docker repository key", "register": "add_repository_key", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "ignore_errors": true}, "module_options": {"id": "{{ apt_key_sig }}", "keyserver": "{{ apt_key_url }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Alternative | Add Docker repository key", "module": "command", "index": 10, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Alternative | Add Docker repository key", "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "add_repository_key is failed"}, "module_options": "apt-key adv --fetch-keys {{ apt_key_url }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "HTTPS APT transport for Docker repository", "module": "apt", "index": 11, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "HTTPS APT transport for Docker repository", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"name": "apt-transport-https", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker repository and update apt cache", "module": "apt_repository", "index": 12, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Add Docker repository and update apt cache", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"repo": "{{ apt_repository }}", "mode": "644", "update_cache": true, "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install (or update) docker-cli package", "module": "apt", "index": 13, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install (or update) docker-cli package", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"name": "{{ docker_cli_pkg_name }}", "state": "{{ 'latest' if update_docker_package else 'present' }}", "update_cache": "{{ update_docker_package }}", "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install (or update) docker package", "module": "apt", "index": 14, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install (or update) docker package", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"name": "{{ docker_pkg_name }}", "state": "{{ 'latest' if update_docker_package else 'present' }}", "update_cache": "{{ update_docker_package }}", "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd playbook var", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set systemd playbook var", "changed_when": false, "tags": "always"}, "module_options": {"is_systemd": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd playbook var", "module": "set_fact", "index": 16, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set systemd playbook var", "when": "( ansible_distribution == \"Ubuntu\" and ansible_distribution_version is version_compare('15.04', '>=') or ansible_distribution == \"Debian\" )", "tags": "always"}, "module_options": {"is_systemd": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker_http_proxy_defined flag", "module": "set_fact", "index": 17, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker_http_proxy_defined flag", "tags": "proxy"}, "module_options": {"docker_http_proxy_defined": "{{ docker_http_proxy is defined and docker_http_proxy is not none and docker_http_proxy | length > 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker_https_proxy_defined flag", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker_https_proxy_defined flag", "tags": "proxy"}, "module_options": {"docker_https_proxy_defined": "{{ docker_https_proxy is defined and docker_https_proxy is not none and docker_https_proxy | length > 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker_no_proxy_defined flag", "module": "set_fact", "index": 19, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker_no_proxy_defined flag", "tags": "proxy"}, "module_options": {"docker_no_proxy_defined": "{{ docker_no_proxy is defined and docker_no_proxy is not none and docker_no_proxy | length > 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Creates override directory (systemd)", "module": "file", "index": 20, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Creates override directory (systemd)", "when": ["is_systemd"], "tags": "proxy"}, "module_options": {"path": "/etc/systemd/system/docker.service.d", "state": "{{ (daemon_json is not none or docker_http_proxy_defined or docker_https_proxy_defined or docker_no_proxy_defined) | ternary('directory', 'absent') }}", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker daemon override (systemd)", "module": "copy", "index": 21, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker daemon override (systemd)", "notify": ["Reload systemd", "Restart docker"], "when": "daemon_json is not none and is_systemd"}, "module_options": {"content": "[Service]\nExecStart=\nExecStart=/usr/bin/dockerd\n", "dest": "/etc/systemd/system/docker.service.d/override.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure /etc/docker is present", "module": "file", "index": 22, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Ensure /etc/docker is present"}, "module_options": {"path": "/etc/docker", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set /etc/docker/daemon.json", "module": "copy", "index": 23, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set /etc/docker/daemon.json", "notify": ["Restart docker"], "when": "daemon_json is not none"}, "module_options": {"content": "{{ daemon_json | to_nice_json }}", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix DNS in docker.io", "module": "lineinfile", "index": 24, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Fix DNS in docker.io", "register": "dns_fix", "notify": "Restart dockerio", "when": "docker_pkg_name == 'docker.io'"}, "module_options": {"dest": "{{ docker_defaults_file_path }}", "regexp": "DOCKER_OPTS=", "line": "DOCKER_OPTS=\"--dns {{ ansible_docker0.ipv4.address }}\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 25, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "pause for a second", "module": "pause", "index": 26, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "pause for a second", "when": "dns_fix is changed"}, "module_options": {"seconds": 1}, "executable": "pause", "executable_type": "Module", "fqcn": "ansible.builtin.pause", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install {{ _python_packages | join(', ') }} packages with apt", "module": "apt", "index": 27, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install {{ _python_packages | join(', ') }} packages with apt", "environment": "{{ proxy_env if proxy_env is defined else {} }}"}, "module_options": {"pkg": "{{ _python_packages }}", "state": "present", "update_cache": true, "cache_valid_time": "{{ docker_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Docker-compose version downgrade", "module": "debug", "index": 28, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Docker-compose version downgrade", "when": "pip_install_docker_compose and _pip_version_docker_compose != pip_version_docker_compose"}, "module_options": {"msg": "Downgrading docker-compose version to {{ _pip_version_docker_compose }} because of docker-compose > 1.10 requiring docker python package (instead of the docker-py one) which is incompatible with the docker_container module in Ansible < 2.3"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean previous docker-py package if installing docker.", "module": "pip", "index": 29, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Clean previous docker-py package if installing docker.", "when": "(_pip_install_docker or pip_install_docker_compose) and _pip_docker_package_name == 'docker'"}, "module_options": {"name": "docker-py", "state": "absent", "executable": "{{ _pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean previous docker package if installing docker-py.", "module": "pip", "index": 30, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Clean previous docker package if installing docker-py.", "when": "(_pip_install_docker or pip_install_docker_compose) and _pip_docker_package_name == 'docker-py'"}, "module_options": {"name": "docker", "state": "absent", "executable": "{{ _pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pip, setuptools, docker-py and docker-compose with pip", "module": "pip", "index": 31, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Install pip, setuptools, docker-py and docker-compose with pip", "with_items": [{"name": "pip", "version": "{{ pip_version_pip }}", "install": "{{ pip_install_pip }}"}, {"name": "setuptools", "version": "{{ pip_version_setuptools }}", "install": "{{ pip_install_setuptools }}"}, {"name": "{{ _pip_docker_package_name }}", "version": "{{ pip_version_docker }}", "install": "{{ _pip_install_docker }}"}, {"name": "docker-compose", "version": "{{ _pip_version_docker_compose }}", "install": "{{ pip_install_docker_compose }}"}], "environment": "{{ proxy_env if proxy_env is defined else {} }}", "when": "item.install|bool"}, "module_options": {"name": "{{ item.name }}", "state": "{{ 'latest' if item.version=='latest' else 'present' }}", "version": "{{ item.version if item.version!='latest' else omit }}", "executable": "{{ _pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if /etc/updatedb.conf exists", "module": "stat", "index": 32, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Check if /etc/updatedb.conf exists", "register": "updatedb_conf_exists"}, "module_options": {"path": "/etc/updatedb.conf"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure updatedb does not index /var/lib/docker", "module": "lineinfile", "index": 33, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Ensure updatedb does not index /var/lib/docker", "when": "updatedb_conf_exists.stat.exists"}, "module_options": {"dest": "/etc/updatedb.conf", "state": "present", "backrefs": true, "regexp": "^PRUNEPATHS=\"(/var/lib/docker )?(.*)\"$", "line": "PRUNEPATHS=\"/var/lib/docker \\2\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if /etc/default/ufw exists", "module": "stat", "index": 34, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Check if /etc/default/ufw exists", "register": "ufw_default_exists"}, "module_options": {"path": "/etc/default/ufw"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change ufw default forward policy from drop to accept", "module": "lineinfile", "index": 35, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Change ufw default forward policy from drop to accept", "when": "ufw_default_exists.stat.exists"}, "module_options": {"dest": "/etc/default/ufw", "regexp": "^DEFAULT_FORWARD_POLICY=", "line": "DEFAULT_FORWARD_POLICY=\"ACCEPT\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker HTTP_PROXY if docker_http_proxy defined", "module": "lineinfile", "index": 36, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker HTTP_PROXY if docker_http_proxy defined", "when": ["not is_systemd"], "notify": ["Restart docker"], "tags": "proxy"}, "module_options": {"dest": "/etc/default/docker", "regexp": "^export http_proxy=", "line": "export http_proxy=\"{{ docker_http_proxy }}\"", "state": "{{ docker_http_proxy_defined | ternary('present', 'absent') }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker HTTPS_PROXY if docker_https_proxy defined", "module": "lineinfile", "index": 37, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker HTTPS_PROXY if docker_https_proxy defined", "when": ["not is_systemd"], "notify": ["Restart docker"], "tags": "proxy"}, "module_options": {"dest": "/etc/default/docker", "regexp": "^export https_proxy=", "line": "export https_proxy=\"{{ docker_https_proxy }}\"", "state": "{{ docker_https_proxy_defined | ternary('present', 'absent') }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker NO_PROXY if docker_no_proxy defined", "module": "lineinfile", "index": 38, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker NO_PROXY if docker_no_proxy defined", "when": ["not is_systemd"], "notify": ["Restart docker"], "tags": "proxy"}, "module_options": {"dest": "/etc/default/docker", "regexp": "^export no_proxy=", "line": "export no_proxy=\"{{ docker_no_proxy }}\"", "state": "{{ docker_no_proxy_defined | ternary('present', 'absent') }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set docker HTTP(S)_PROXY if docker_http(s)_proxy defined (systemd)", "module": "copy", "index": 39, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Set docker HTTP(S)_PROXY if docker_http(s)_proxy defined (systemd)", "notify": ["Reload systemd", "Restart docker"], "when": ["is_systemd", "docker_http_proxy_defined or docker_https_proxy_defined or docker_no_proxy_defined"], "tags": "proxy"}, "module_options": {"content": "[Service]\nEnvironment=\"{% if docker_http_proxy_defined %}http_proxy={{ docker_http_proxy }}{% endif %}\"\nEnvironment=\"{% if docker_https_proxy_defined %}https_proxy={{ docker_https_proxy }}{% endif %}\"\nEnvironment=\"{% if docker_no_proxy_defined %}no_proxy={{ docker_no_proxy }}{% endif %}\"\n", "dest": "/etc/systemd/system/docker.service.d/proxy.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove docker HTTP(S)_PROXY if docker_http(s)_proxy undefined (systemd)", "module": "file", "index": 40, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Remove docker HTTP(S)_PROXY if docker_http(s)_proxy undefined (systemd)", "notify": ["Reload systemd", "Restart docker"], "when": ["is_systemd", "not docker_http_proxy_defined and not docker_https_proxy_defined and not docker_no_proxy_defined"], "tags": "proxy"}, "module_options": {"path": "/etc/systemd/system/docker.service.d/proxy.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start docker", "module": "service", "index": 41, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Start docker", "when": "start_docker_daemon"}, "module_options": {"name": "docker", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add users to the docker group", "module": "user", "index": 42, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "Add users to the docker group", "with_items": "{{ docker_group_members }}", "when": "docker_group_members is defined"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "update facts if docker0 is not defined", "module": "setup", "index": 43, "defined_in": "./role-test/testdata/angstwad-docker_ubuntu/angstwad.docker_ubuntu/tasks/main.yml", "options": {"name": "update facts if docker0 is not defined", "when": "ansible_docker0 is not defined"}, "module_options": {"filter": "ansible_docker0"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}], "role": "angstwad.docker_ubuntu", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}