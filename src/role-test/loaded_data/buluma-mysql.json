{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/buluma-mysql", "installed_roles": [{"py/object": "struct4.Role", "name": "buluma.mysql", "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql", "fqcn": "buluma.mysql", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "assert.yml", "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "tasks": [{"py/object": "struct4.Task", "name": "test if mysql_bind_address is set correctly", "module": "ansible.builtin.assert", "index": 0, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_bind_address is set correctly"}, "module_options": {"that": ["mysql_bind_address is defined", "mysql_bind_address is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if mysql_root_password is set correctly", "module": "ansible.builtin.assert", "index": 1, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_root_password is set correctly"}, "module_options": {"that": ["mysql_root_password is defined", "mysql_root_password is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if mysql_innodb_buffer_pool_size is set correctly", "module": "ansible.builtin.assert", "index": 2, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_innodb_buffer_pool_size is set correctly"}, "module_options": {"that": ["mysql_innodb_buffer_pool_size is defined", "mysql_innodb_buffer_pool_size is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if mysql_innodb_io_capacity is set correctly", "module": "ansible.builtin.assert", "index": 3, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_innodb_io_capacity is set correctly"}, "module_options": {"that": ["mysql_innodb_io_capacity is defined", "mysql_innodb_io_capacity is integer"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.name item in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 4, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.name item in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.state in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 5, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.state in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.state is defined"]}, "module_options": {"that": ["item.state is string", "item.state in [ \"absent\", \"dump\", \"import\", \"present\" ]"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.target in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 6, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.target in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.target is defined"]}, "module_options": {"that": ["item.target is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.encoding in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 7, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.encoding in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.encoding is defined"]}, "module_options": {"that": ["item.encoding is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.collation in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 8, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.collation in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.collation is defined"]}, "module_options": {"that": ["item.collation is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.name in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 9, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.name in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined"]}, "module_options": {"that": ["item.name is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.password in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 10, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.password in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.password is defined"]}, "module_options": {"that": ["item.password is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.priv in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 11, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.priv in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.priv is defined"]}, "module_options": {"that": ["item.priv is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.host in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 12, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.host in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.host is defined"]}, "module_options": {"that": ["item.name is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.host_all in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 13, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.host_all in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.host_all is defined"]}, "module_options": {"that": ["item.host_all is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.update_password in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 14, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.update_password in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.update_password is defined"]}, "module_options": {"that": ["item.update_password is string", "item.update_password in [ \"always\", \"on_create\" ]"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "buluma.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "import assert.yml", "module": "ansible.builtin.import_tasks", "index": 0, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "import assert.yml", "run_once": true, "delegate_to": "localhost"}, "module_options": "assert.yml", "executable": "assert.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "install mysql", "module": "ansible.builtin.package", "index": 1, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "install mysql", "notify": ["set root password", "systemctl daemon-reexec"]}, "module_options": {"name": "{{ mysql_packages }}", "state": "present"}, "executable": "ansible.builtin.package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure mysql server", "module": "community.general.ini_file", "index": 2, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "configure mysql server", "loop": "{{ mysql_configuration_options }}", "loop_control": {"label": "{{ item.option }}"}, "notify": ["restart mysql server"]}, "module_options": {"dest": "{{ mysql_configuration_destination }}/{{ mysql_name }}-server.cnf", "section": "{{ item.section }}", "option": "{{ item.option }}", "value": "{{ item.value }}", "mode": "0644"}, "executable": "community.general.ini_file", "executable_type": "Module", "fqcn": "community.general.ini_file", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure mysql client", "module": "community.general.ini_file", "index": 3, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "configure mysql client"}, "module_options": {"dest": "{{ mysql_configuration_destination }}/{{ mysql_name }}-client.cnf", "section": "client", "option": "socket", "value": "{{ mysql_socket }}", "mode": "0644"}, "executable": "community.general.ini_file", "executable_type": "Module", "fqcn": "community.general.ini_file", "annotations": {}}, {"py/object": "struct4.Task", "name": "initialize mysql", "module": "ansible.builtin.command", "index": 4, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "initialize mysql", "when": ["ansible_distribution in [ \"Alpine\", \"Archlinux\" ]"]}, "module_options": {"cmd": "{{ mysql_initialize_command }}", "creates": "/var/lib/mysql/mysql"}, "executable": "ansible.builtin.command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "start and enable mysql", "module": "ansible.builtin.service", "index": 5, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "start and enable mysql"}, "module_options": {"name": "{{ mysql_service }}", "state": "started", "enabled": true}, "executable": "ansible.builtin.service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers", "module": "ansible.builtin.meta", "index": 6, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "flush handlers"}, "module_options": "flush_handlers", "executable": "ansible.builtin.meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "place my.cnf", "module": "ansible.builtin.template", "index": 7, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "place my.cnf"}, "module_options": {"src": "my.cnf.j2", "dest": "/root/.my.cnf", "mode": "0640"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create databases", "module": "community.mysql.mysql_db", "index": 8, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "create databases", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined"], "no_log": true}, "module_options": {"name": "{{ item.name }}", "state": "{{ item.state | default('present') }}", "target": "{{ item.target | default(omit) }}", "encoding": "{{ item.encoding | default(omit) }}", "collation": "{{ item.collation | default(omit) }}", "login_unix_socket": "{{ mysql_socket }}", "login_user": "root", "login_password": "{{ mysql_root_password }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {}}, {"py/object": "struct4.Task", "name": "create users", "module": "community.mysql.mysql_user", "index": 9, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "create users", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined"], "no_log": true}, "module_options": {"name": "{{ item.name }}", "state": "present", "password": "{{ item.password | default(omit) }}", "priv": "{{ item.priv | default(omit) }}", "host": "{{ item.host | default(omit) }}", "host_all": "{{ item.host_all | default(omit) }}", "update_password": "{{ item.update_password | default(omit) }}", "login_unix_socket": "{{ mysql_socket }}", "login_user": "root", "login_password": "{{ mysql_root_password }}"}, "executable": "community.mysql.mysql_user", "executable_type": "Module", "fqcn": "community.mysql.mysql_user", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers again", "module": "ansible.builtin.meta", "index": 10, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "flush handlers again"}, "module_options": "flush_handlers", "executable": "ansible.builtin.meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "buluma.mysql", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "test if mysql_bind_address is set correctly", "module": "ansible.builtin.assert", "index": 0, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_bind_address is set correctly"}, "module_options": {"that": ["mysql_bind_address is defined", "mysql_bind_address is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "test if mysql_root_password is set correctly", "module": "ansible.builtin.assert", "index": 1, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_root_password is set correctly"}, "module_options": {"that": ["mysql_root_password is defined", "mysql_root_password is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "test if mysql_innodb_buffer_pool_size is set correctly", "module": "ansible.builtin.assert", "index": 2, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_innodb_buffer_pool_size is set correctly"}, "module_options": {"that": ["mysql_innodb_buffer_pool_size is defined", "mysql_innodb_buffer_pool_size is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "test if mysql_innodb_io_capacity is set correctly", "module": "ansible.builtin.assert", "index": 3, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_innodb_io_capacity is set correctly"}, "module_options": {"that": ["mysql_innodb_io_capacity is defined", "mysql_innodb_io_capacity is integer"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "test item.name item in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 4, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.name item in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "test item.state in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 5, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.state in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.state is defined"]}, "module_options": {"that": ["item.state is string", "item.state in [ \"absent\", \"dump\", \"import\", \"present\" ]"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "test item.target in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 6, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.target in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.target is defined"]}, "module_options": {"that": ["item.target is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "test item.encoding in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 7, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.encoding in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.encoding is defined"]}, "module_options": {"that": ["item.encoding is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "test item.collation in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 8, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.collation in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.collation is defined"]}, "module_options": {"that": ["item.collation is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "test item.name in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 9, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.name in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined"]}, "module_options": {"that": ["item.name is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "test item.password in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 10, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.password in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.password is defined"]}, "module_options": {"that": ["item.password is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "test item.priv in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 11, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.priv in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.priv is defined"]}, "module_options": {"that": ["item.priv is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "test item.host in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 12, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.host in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.host is defined"]}, "module_options": {"that": ["item.name is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "test item.host_all in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 13, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.host_all in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.host_all is defined"]}, "module_options": {"that": ["item.host_all is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "test item.update_password in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 14, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.update_password in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.update_password is defined"]}, "module_options": {"that": ["item.update_password is string", "item.update_password in [ \"always\", \"on_create\" ]"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "import assert.yml", "module": "ansible.builtin.import_tasks", "index": 0, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "import assert.yml", "run_once": true, "delegate_to": "localhost"}, "module_options": "assert.yml", "executable": "assert.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "install mysql", "module": "ansible.builtin.package", "index": 1, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "install mysql", "notify": ["set root password", "systemctl daemon-reexec"]}, "module_options": {"name": "{{ mysql_packages }}", "state": "present"}, "executable": "ansible.builtin.package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "configure mysql server", "module": "community.general.ini_file", "index": 2, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "configure mysql server", "loop": "{{ mysql_configuration_options }}", "loop_control": {"label": "{{ item.option }}"}, "notify": ["restart mysql server"]}, "module_options": {"dest": "{{ mysql_configuration_destination }}/{{ mysql_name }}-server.cnf", "section": "{{ item.section }}", "option": "{{ item.option }}", "value": "{{ item.value }}", "mode": "0644"}, "executable": "community.general.ini_file", "executable_type": "Module", "fqcn": "community.general.ini_file", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "configure mysql client", "module": "community.general.ini_file", "index": 3, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "configure mysql client"}, "module_options": {"dest": "{{ mysql_configuration_destination }}/{{ mysql_name }}-client.cnf", "section": "client", "option": "socket", "value": "{{ mysql_socket }}", "mode": "0644"}, "executable": "community.general.ini_file", "executable_type": "Module", "fqcn": "community.general.ini_file", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "initialize mysql", "module": "ansible.builtin.command", "index": 4, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "initialize mysql", "when": ["ansible_distribution in [ \"Alpine\", \"Archlinux\" ]"]}, "module_options": {"cmd": "{{ mysql_initialize_command }}", "creates": "/var/lib/mysql/mysql"}, "executable": "ansible.builtin.command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "start and enable mysql", "module": "ansible.builtin.service", "index": 5, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "start and enable mysql"}, "module_options": {"name": "{{ mysql_service }}", "state": "started", "enabled": true}, "executable": "ansible.builtin.service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "flush handlers", "module": "ansible.builtin.meta", "index": 6, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "flush handlers"}, "module_options": "flush_handlers", "executable": "ansible.builtin.meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "place my.cnf", "module": "ansible.builtin.template", "index": 7, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "place my.cnf"}, "module_options": {"src": "my.cnf.j2", "dest": "/root/.my.cnf", "mode": "0640"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "create databases", "module": "community.mysql.mysql_db", "index": 8, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "create databases", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined"], "no_log": true}, "module_options": {"name": "{{ item.name }}", "state": "{{ item.state | default('present') }}", "target": "{{ item.target | default(omit) }}", "encoding": "{{ item.encoding | default(omit) }}", "collation": "{{ item.collation | default(omit) }}", "login_unix_socket": "{{ mysql_socket }}", "login_user": "root", "login_password": "{{ mysql_root_password }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "create users", "module": "community.mysql.mysql_user", "index": 9, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "create users", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined"], "no_log": true}, "module_options": {"name": "{{ item.name }}", "state": "present", "password": "{{ item.password | default(omit) }}", "priv": "{{ item.priv | default(omit) }}", "host": "{{ item.host | default(omit) }}", "host_all": "{{ item.host_all | default(omit) }}", "update_password": "{{ item.update_password | default(omit) }}", "login_unix_socket": "{{ mysql_socket }}", "login_user": "root", "login_password": "{{ mysql_root_password }}"}, "executable": "community.mysql.mysql_user", "executable_type": "Module", "fqcn": "community.mysql.mysql_user", "annotations": {}}, "{\"path\": \"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "flush handlers again", "module": "ansible.builtin.meta", "index": 10, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "flush handlers again"}, "module_options": "flush_handlers", "executable": "ansible.builtin.meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml": {"py/object": "struct4.TaskFile", "name": "assert.yml", "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "tasks": [{"py/object": "struct4.Task", "name": "test if mysql_bind_address is set correctly", "module": "ansible.builtin.assert", "index": 0, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_bind_address is set correctly"}, "module_options": {"that": ["mysql_bind_address is defined", "mysql_bind_address is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if mysql_root_password is set correctly", "module": "ansible.builtin.assert", "index": 1, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_root_password is set correctly"}, "module_options": {"that": ["mysql_root_password is defined", "mysql_root_password is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if mysql_innodb_buffer_pool_size is set correctly", "module": "ansible.builtin.assert", "index": 2, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_innodb_buffer_pool_size is set correctly"}, "module_options": {"that": ["mysql_innodb_buffer_pool_size is defined", "mysql_innodb_buffer_pool_size is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if mysql_innodb_io_capacity is set correctly", "module": "ansible.builtin.assert", "index": 3, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_innodb_io_capacity is set correctly"}, "module_options": {"that": ["mysql_innodb_io_capacity is defined", "mysql_innodb_io_capacity is integer"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.name item in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 4, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.name item in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.state in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 5, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.state in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.state is defined"]}, "module_options": {"that": ["item.state is string", "item.state in [ \"absent\", \"dump\", \"import\", \"present\" ]"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.target in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 6, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.target in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.target is defined"]}, "module_options": {"that": ["item.target is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.encoding in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 7, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.encoding in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.encoding is defined"]}, "module_options": {"that": ["item.encoding is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.collation in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 8, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.collation in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.collation is defined"]}, "module_options": {"that": ["item.collation is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.name in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 9, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.name in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined"]}, "module_options": {"that": ["item.name is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.password in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 10, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.password in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.password is defined"]}, "module_options": {"that": ["item.password is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.priv in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 11, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.priv in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.priv is defined"]}, "module_options": {"that": ["item.priv is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.host in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 12, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.host in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.host is defined"]}, "module_options": {"that": ["item.name is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.host_all in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 13, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.host_all in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.host_all is defined"]}, "module_options": {"that": ["item.host_all is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.update_password in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 14, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.update_password in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.update_password is defined"]}, "module_options": {"that": ["item.update_password is string", "item.update_password in [ \"always\", \"on_create\" ]"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "buluma.mysql", "used_in": [], "annotations": {}}, "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "import assert.yml", "module": "ansible.builtin.import_tasks", "index": 0, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "import assert.yml", "run_once": true, "delegate_to": "localhost"}, "module_options": "assert.yml", "executable": "assert.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "install mysql", "module": "ansible.builtin.package", "index": 1, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "install mysql", "notify": ["set root password", "systemctl daemon-reexec"]}, "module_options": {"name": "{{ mysql_packages }}", "state": "present"}, "executable": "ansible.builtin.package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure mysql server", "module": "community.general.ini_file", "index": 2, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "configure mysql server", "loop": "{{ mysql_configuration_options }}", "loop_control": {"label": "{{ item.option }}"}, "notify": ["restart mysql server"]}, "module_options": {"dest": "{{ mysql_configuration_destination }}/{{ mysql_name }}-server.cnf", "section": "{{ item.section }}", "option": "{{ item.option }}", "value": "{{ item.value }}", "mode": "0644"}, "executable": "community.general.ini_file", "executable_type": "Module", "fqcn": "community.general.ini_file", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure mysql client", "module": "community.general.ini_file", "index": 3, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "configure mysql client"}, "module_options": {"dest": "{{ mysql_configuration_destination }}/{{ mysql_name }}-client.cnf", "section": "client", "option": "socket", "value": "{{ mysql_socket }}", "mode": "0644"}, "executable": "community.general.ini_file", "executable_type": "Module", "fqcn": "community.general.ini_file", "annotations": {}}, {"py/object": "struct4.Task", "name": "initialize mysql", "module": "ansible.builtin.command", "index": 4, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "initialize mysql", "when": ["ansible_distribution in [ \"Alpine\", \"Archlinux\" ]"]}, "module_options": {"cmd": "{{ mysql_initialize_command }}", "creates": "/var/lib/mysql/mysql"}, "executable": "ansible.builtin.command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "start and enable mysql", "module": "ansible.builtin.service", "index": 5, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "start and enable mysql"}, "module_options": {"name": "{{ mysql_service }}", "state": "started", "enabled": true}, "executable": "ansible.builtin.service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers", "module": "ansible.builtin.meta", "index": 6, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "flush handlers"}, "module_options": "flush_handlers", "executable": "ansible.builtin.meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "place my.cnf", "module": "ansible.builtin.template", "index": 7, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "place my.cnf"}, "module_options": {"src": "my.cnf.j2", "dest": "/root/.my.cnf", "mode": "0640"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create databases", "module": "community.mysql.mysql_db", "index": 8, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "create databases", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined"], "no_log": true}, "module_options": {"name": "{{ item.name }}", "state": "{{ item.state | default('present') }}", "target": "{{ item.target | default(omit) }}", "encoding": "{{ item.encoding | default(omit) }}", "collation": "{{ item.collation | default(omit) }}", "login_unix_socket": "{{ mysql_socket }}", "login_user": "root", "login_password": "{{ mysql_root_password }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {}}, {"py/object": "struct4.Task", "name": "create users", "module": "community.mysql.mysql_user", "index": 9, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "create users", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined"], "no_log": true}, "module_options": {"name": "{{ item.name }}", "state": "present", "password": "{{ item.password | default(omit) }}", "priv": "{{ item.priv | default(omit) }}", "host": "{{ item.host | default(omit) }}", "host_all": "{{ item.host_all | default(omit) }}", "update_password": "{{ item.update_password | default(omit) }}", "login_unix_socket": "{{ mysql_socket }}", "login_user": "root", "login_password": "{{ mysql_root_password }}"}, "executable": "community.mysql.mysql_user", "executable_type": "Module", "fqcn": "community.mysql.mysql_user", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers again", "module": "ansible.builtin.meta", "index": 10, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "flush handlers again"}, "module_options": "flush_handlers", "executable": "ansible.builtin.meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "buluma.mysql", "used_in": [], "annotations": {}}}, "role_dict": {"buluma.mysql": {"py/object": "struct4.Role", "name": "buluma.mysql", "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql", "fqcn": "buluma.mysql", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "assert.yml", "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "tasks": [{"py/object": "struct4.Task", "name": "test if mysql_bind_address is set correctly", "module": "ansible.builtin.assert", "index": 0, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_bind_address is set correctly"}, "module_options": {"that": ["mysql_bind_address is defined", "mysql_bind_address is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if mysql_root_password is set correctly", "module": "ansible.builtin.assert", "index": 1, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_root_password is set correctly"}, "module_options": {"that": ["mysql_root_password is defined", "mysql_root_password is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if mysql_innodb_buffer_pool_size is set correctly", "module": "ansible.builtin.assert", "index": 2, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_innodb_buffer_pool_size is set correctly"}, "module_options": {"that": ["mysql_innodb_buffer_pool_size is defined", "mysql_innodb_buffer_pool_size is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test if mysql_innodb_io_capacity is set correctly", "module": "ansible.builtin.assert", "index": 3, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test if mysql_innodb_io_capacity is set correctly"}, "module_options": {"that": ["mysql_innodb_io_capacity is defined", "mysql_innodb_io_capacity is integer"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.name item in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 4, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.name item in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined"]}, "module_options": {"that": ["item.name is defined", "item.name is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.state in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 5, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.state in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.state is defined"]}, "module_options": {"that": ["item.state is string", "item.state in [ \"absent\", \"dump\", \"import\", \"present\" ]"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.target in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 6, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.target in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.target is defined"]}, "module_options": {"that": ["item.target is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.encoding in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 7, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.encoding in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.encoding is defined"]}, "module_options": {"that": ["item.encoding is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.collation in mysql_databases is set correctly", "module": "ansible.builtin.assert", "index": 8, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.collation in mysql_databases is set correctly", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined", "item.collation is defined"]}, "module_options": {"that": ["item.collation is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.name in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 9, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.name in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined"]}, "module_options": {"that": ["item.name is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.password in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 10, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.password in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.password is defined"]}, "module_options": {"that": ["item.password is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.priv in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 11, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.priv in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.priv is defined"]}, "module_options": {"that": ["item.priv is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.host in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 12, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.host in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.host is defined"]}, "module_options": {"that": ["item.name is string"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.host_all in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 13, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.host_all in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.host_all is defined"]}, "module_options": {"that": ["item.host_all is boolean"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "test item.update_password in mysql_users is set correctly", "module": "ansible.builtin.assert", "index": 14, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/assert.yml", "options": {"name": "test item.update_password in mysql_users is set correctly", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined", "item.update_password is defined"]}, "module_options": {"that": ["item.update_password is string", "item.update_password in [ \"always\", \"on_create\" ]"], "quiet": true}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "buluma.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "import assert.yml", "module": "ansible.builtin.import_tasks", "index": 0, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "import assert.yml", "run_once": true, "delegate_to": "localhost"}, "module_options": "assert.yml", "executable": "assert.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "install mysql", "module": "ansible.builtin.package", "index": 1, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "install mysql", "notify": ["set root password", "systemctl daemon-reexec"]}, "module_options": {"name": "{{ mysql_packages }}", "state": "present"}, "executable": "ansible.builtin.package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure mysql server", "module": "community.general.ini_file", "index": 2, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "configure mysql server", "loop": "{{ mysql_configuration_options }}", "loop_control": {"label": "{{ item.option }}"}, "notify": ["restart mysql server"]}, "module_options": {"dest": "{{ mysql_configuration_destination }}/{{ mysql_name }}-server.cnf", "section": "{{ item.section }}", "option": "{{ item.option }}", "value": "{{ item.value }}", "mode": "0644"}, "executable": "community.general.ini_file", "executable_type": "Module", "fqcn": "community.general.ini_file", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure mysql client", "module": "community.general.ini_file", "index": 3, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "configure mysql client"}, "module_options": {"dest": "{{ mysql_configuration_destination }}/{{ mysql_name }}-client.cnf", "section": "client", "option": "socket", "value": "{{ mysql_socket }}", "mode": "0644"}, "executable": "community.general.ini_file", "executable_type": "Module", "fqcn": "community.general.ini_file", "annotations": {}}, {"py/object": "struct4.Task", "name": "initialize mysql", "module": "ansible.builtin.command", "index": 4, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "initialize mysql", "when": ["ansible_distribution in [ \"Alpine\", \"Archlinux\" ]"]}, "module_options": {"cmd": "{{ mysql_initialize_command }}", "creates": "/var/lib/mysql/mysql"}, "executable": "ansible.builtin.command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "start and enable mysql", "module": "ansible.builtin.service", "index": 5, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "start and enable mysql"}, "module_options": {"name": "{{ mysql_service }}", "state": "started", "enabled": true}, "executable": "ansible.builtin.service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers", "module": "ansible.builtin.meta", "index": 6, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "flush handlers"}, "module_options": "flush_handlers", "executable": "ansible.builtin.meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "place my.cnf", "module": "ansible.builtin.template", "index": 7, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "place my.cnf"}, "module_options": {"src": "my.cnf.j2", "dest": "/root/.my.cnf", "mode": "0640"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "create databases", "module": "community.mysql.mysql_db", "index": 8, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "create databases", "loop": "{{ mysql_databases }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_databases is defined"], "no_log": true}, "module_options": {"name": "{{ item.name }}", "state": "{{ item.state | default('present') }}", "target": "{{ item.target | default(omit) }}", "encoding": "{{ item.encoding | default(omit) }}", "collation": "{{ item.collation | default(omit) }}", "login_unix_socket": "{{ mysql_socket }}", "login_user": "root", "login_password": "{{ mysql_root_password }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {}}, {"py/object": "struct4.Task", "name": "create users", "module": "community.mysql.mysql_user", "index": 9, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "create users", "loop": "{{ mysql_users }}", "loop_control": {"label": "{{ item.name }}"}, "when": ["mysql_users is defined"], "no_log": true}, "module_options": {"name": "{{ item.name }}", "state": "present", "password": "{{ item.password | default(omit) }}", "priv": "{{ item.priv | default(omit) }}", "host": "{{ item.host | default(omit) }}", "host_all": "{{ item.host_all | default(omit) }}", "update_password": "{{ item.update_password | default(omit) }}", "login_unix_socket": "{{ mysql_socket }}", "login_user": "root", "login_password": "{{ mysql_root_password }}"}, "executable": "community.mysql.mysql_user", "executable_type": "Module", "fqcn": "community.mysql.mysql_user", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush handlers again", "module": "ansible.builtin.meta", "index": 10, "defined_in": "./role-test/testdata/buluma-mysql/buluma.mysql/tasks/main.yml", "options": {"name": "flush handlers again"}, "module_options": "flush_handlers", "executable": "ansible.builtin.meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "buluma.mysql", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}