{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/GROG-authorized-key", "installed_roles": [{"py/object": "struct4.Role", "name": "GROG.authorized-key", "defined_in": "./role-test/testdata/GROG-authorized-key/GROG.authorized-key", "fqcn": "GROG.authorized-key", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/GROG-authorized-key/GROG.authorized-key/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Manage authorized keys", "module": "authorized_key", "index": 0, "defined_in": "./role-test/testdata/GROG-authorized-key/GROG.authorized-key/tasks/main.yml", "options": {"name": "Manage authorized keys", "when": "(item.0.state | default('present')) != \"absent\"", "with_subelements": ["{{ authorized_key_list_all | selectattr('authorized_keys', 'defined') | list }}", "authorized_keys"]}, "module_options": {"exclusive": "{{ item.1.exclusive | default(authorized_key_exclusive) }}", "key": "{{ item.1.key }}", "key_options": "{{ item.1.key_options | default(authorized_key_key_options) }}", "manage_dir": "{{ item.1.manage_dir | default(authorized_key_manage_dir) }}", "path": "{{ item.1.path | default(omit) }}", "state": "{{ item.1.state | default(authorized_key_state) }}", "user": "{{ item.0.name }}"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "GROG.authorized-key", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/GROG-authorized-key/GROG.authorized-key/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Manage authorized keys", "module": "authorized_key", "index": 0, "defined_in": "./role-test/testdata/GROG-authorized-key/GROG.authorized-key/tasks/main.yml", "options": {"name": "Manage authorized keys", "when": "(item.0.state | default('present')) != \"absent\"", "with_subelements": ["{{ authorized_key_list_all | selectattr('authorized_keys', 'defined') | list }}", "authorized_keys"]}, "module_options": {"exclusive": "{{ item.1.exclusive | default(authorized_key_exclusive) }}", "key": "{{ item.1.key }}", "key_options": "{{ item.1.key_options | default(authorized_key_key_options) }}", "manage_dir": "{{ item.1.manage_dir | default(authorized_key_manage_dir) }}", "path": "{{ item.1.path | default(omit) }}", "state": "{{ item.1.state | default(authorized_key_state) }}", "user": "{{ item.0.name }}"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/GROG-authorized-key/GROG.authorized-key/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/GROG-authorized-key/GROG.authorized-key/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Manage authorized keys", "module": "authorized_key", "index": 0, "defined_in": "./role-test/testdata/GROG-authorized-key/GROG.authorized-key/tasks/main.yml", "options": {"name": "Manage authorized keys", "when": "(item.0.state | default('present')) != \"absent\"", "with_subelements": ["{{ authorized_key_list_all | selectattr('authorized_keys', 'defined') | list }}", "authorized_keys"]}, "module_options": {"exclusive": "{{ item.1.exclusive | default(authorized_key_exclusive) }}", "key": "{{ item.1.key }}", "key_options": "{{ item.1.key_options | default(authorized_key_key_options) }}", "manage_dir": "{{ item.1.manage_dir | default(authorized_key_manage_dir) }}", "path": "{{ item.1.path | default(omit) }}", "state": "{{ item.1.state | default(authorized_key_state) }}", "user": "{{ item.0.name }}"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "GROG.authorized-key", "used_in": [], "annotations": {}}}, "role_dict": {"GROG.authorized-key": {"py/object": "struct4.Role", "name": "GROG.authorized-key", "defined_in": "./role-test/testdata/GROG-authorized-key/GROG.authorized-key", "fqcn": "GROG.authorized-key", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/GROG-authorized-key/GROG.authorized-key/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Manage authorized keys", "module": "authorized_key", "index": 0, "defined_in": "./role-test/testdata/GROG-authorized-key/GROG.authorized-key/tasks/main.yml", "options": {"name": "Manage authorized keys", "when": "(item.0.state | default('present')) != \"absent\"", "with_subelements": ["{{ authorized_key_list_all | selectattr('authorized_keys', 'defined') | list }}", "authorized_keys"]}, "module_options": {"exclusive": "{{ item.1.exclusive | default(authorized_key_exclusive) }}", "key": "{{ item.1.key }}", "key_options": "{{ item.1.key_options | default(authorized_key_key_options) }}", "manage_dir": "{{ item.1.manage_dir | default(authorized_key_manage_dir) }}", "path": "{{ item.1.path | default(omit) }}", "state": "{{ item.1.state | default(authorized_key_state) }}", "user": "{{ item.0.name }}"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "GROG.authorized-key", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}