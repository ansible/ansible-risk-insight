{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/zaxos-tomcat-ansible-role", "installed_roles": [{"py/object": "struct4.Role", "name": "zaxos.tomcat-ansible-role", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role", "fqcn": "zaxos.tomcat-ansible-role", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "set-non-production-permissions.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set owner and group for non-production installation", "module": "file", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "options": {"name": "Set owner and group for non-production installation"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "owner": "{{ tomcat_user }}", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set directories permissions for non-production installation", "module": "command", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "options": {"name": "Set directories permissions for non-production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0"}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} -type d -exec chmod -c 2775 {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set files permissions for non-production installation", "module": "command", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "options": {"name": "Set files permissions for non-production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0"}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} -type f -not -name \"*.sh\" -exec chmod -c 0664 {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "uninstall.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "tasks": [{"py/object": "struct4.Task", "name": "(uninstall) Check if tomcat service is installed", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Check if tomcat service is installed", "register": "service_installed"}, "module_options": {"path": "{{ tomcat_systemd_config_path }}/{{ tomcat_service_name }}.service"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Stop tomcat service if running", "module": "systemd", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Stop tomcat service if running", "when": "service_installed.stat.exists"}, "module_options": {"name": "{{ tomcat_service_name }}", "enabled": false, "state": "stopped"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Remove service file {{ tomcat_service_name }}.service", "module": "file", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Remove service file {{ tomcat_service_name }}.service"}, "module_options": {"path": "{{ tomcat_systemd_config_path }}/{{ tomcat_service_name }}.service", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Perform systemctl daemon-reload", "module": "systemd", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Perform systemctl daemon-reload", "changed_when": false}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Check if tomcat is already uninstalled", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Check if tomcat is already uninstalled", "register": "is_uninstalled"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Remove symlink {{ tomcat_install_path }}/{{ tomcat_service_name }}", "module": "file", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Remove symlink {{ tomcat_install_path }}/{{ tomcat_service_name }}"}, "module_options": {"path": "{{ tomcat_install_path }}/{{ tomcat_service_name }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Create backup archive before deletion at {{ tomcat_install_path }}/tomcat-backup-XXX.tgz", "module": "archive", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Create backup archive before deletion at {{ tomcat_install_path }}/tomcat-backup-XXX.tgz", "when": "tomcat_uninstall_create_backup and is_uninstalled.stat.exists"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "dest": "{{ tomcat_install_path }}/tomcat-backup-{{ lookup('pipe','date +%Y%m%d%H%M%S') }}.tgz"}, "executable": "archive", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Remove {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "module": "file", "index": 7, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Remove {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Delete user {{ tomcat_user }}", "module": "user", "index": 8, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Delete user {{ tomcat_user }}", "when": "tomcat_uninstall_remove_all or tomcat_uninstall_remove_user"}, "module_options": {"name": "{{ tomcat_user }}", "groups": "{{ tomcat_group }}", "state": "absent", "force": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Delete group {{ tomcat_group }}", "module": "group", "index": 9, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Delete group {{ tomcat_group }}", "when": "tomcat_uninstall_remove_all or tomcat_uninstall_remove_group"}, "module_options": {"name": "{{ tomcat_group }}", "state": "absent"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Uninstall Java", "module": "yum", "index": 10, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Uninstall Java", "with_items": "{{ tomcat_java_packages_EL }}", "when": "tomcat_uninstall_remove_all or tomcat_uninstall_remove_java"}, "module_options": {"name": "{{ item.package }}", "state": "absent"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Setup server.xml", "module": "template", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Setup server.xml", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_server }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/conf/server.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact of user roles to be enabled", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Set fact of user roles to be enabled", "with_items": ["{{ tomcat_users }}"]}, "module_options": {"tomcat_user_roles": "{{ (tomcat_user_roles + item.roles.split(',')|list)|unique }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup tomcat-users.xml", "module": "template", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Setup tomcat-users.xml", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_users }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/conf/tomcat-users.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create symlink {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} to {{ tomcat_install_path }}/{{ tomcat_service_name }}", "module": "file", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Create symlink {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} to {{ tomcat_install_path }}/{{ tomcat_service_name }}"}, "module_options": {"src": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "dest": "{{ tomcat_install_path }}/{{ tomcat_service_name }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure access to Manager app (from localhost only or from anywhere)", "module": "template", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure access to Manager app (from localhost only or from anywhere)", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_manager_context }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps/manager/META-INF/context.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure access to Host Manager (from localhost only or from anywhere)", "module": "template", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure access to Host Manager (from localhost only or from anywhere)", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_host_manager_context }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps/host-manager/META-INF/context.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure setenv.sh", "module": "template", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure setenv.sh", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_setenv }}", "dest": "{{ tomcat_install_path }}/{{ tomcat_service_name }}/bin/setenv.sh"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set production permissions", "module": "include", "index": 7, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Set production permissions", "when": "(tomcat_installed is changed or tomcat_permissions_ensure_on_every_run) and tomcat_permissions_production\n"}, "module_options": "set-production-permissions.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set non production permissions", "module": "include", "index": 8, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Set non production permissions", "when": "(tomcat_installed is changed or tomcat_permissions_ensure_on_every_run) and not tomcat_permissions_production\n"}, "module_options": "set-non-production-permissions.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure service file {{ tomcat_service_name }}.service", "module": "template", "index": 9, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure service file {{ tomcat_service_name }}.service", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_systemd_service }}", "dest": "{{ tomcat_systemd_config_path }}/{{ tomcat_service_name }}.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove systemd service file from old path (before role update)", "module": "file", "index": 10, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Remove systemd service file from old path (before role update)", "when": "tomcat_delete_old_systemd_service_file"}, "module_options": {"path": "/usr/lib/systemd/system/{{ tomcat_service_name }}.service", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable tomcat service on startup", "module": "systemd", "index": 11, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Enable tomcat service on startup"}, "module_options": {"name": "{{ tomcat_service_name }}", "enabled": "{% if tomcat_service_enabled_on_startup %}yes{% else %}no{% endif %}", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Java", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Install Java", "with_items": "{{ tomcat_java_packages_EL }}", "when": "tomcat_install_java|bool"}, "module_options": {"name": "{{ item.package }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if tomcat is already installed", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Check if tomcat is already installed", "register": "is_installed"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create group {{ tomcat_group }}", "module": "group", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Create group {{ tomcat_group }}"}, "module_options": {"name": "{{ tomcat_group }}", "gid": "{{ tomcat_group_gid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create user {{ tomcat_user }}", "module": "user", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Create user {{ tomcat_user }}"}, "module_options": {"name": "{{ tomcat_user }}", "group": "{{ tomcat_group }}", "uid": "{{ tomcat_user_uid | default(omit) }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create temp directory", "module": "file", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Create temp directory", "delegate_to": "{{ item }}", "loop": ["localhost", "{{ inventory_hostname }}"], "changed_when": false, "when": "not is_installed.stat.exists and (( item == inventory_hostname ) or tomcat_remote_is_disconnected )\n"}, "module_options": {"path": "{{ tomcat_temp_download_path }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download apache-tomcat-{{ tomcat_version }}.tar.gz", "module": "get_url", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Download apache-tomcat-{{ tomcat_version }}.tar.gz", "delegate_to": "{{ 'localhost' if tomcat_remote_is_disconnected else inventory_hostname }}", "when": "not is_installed.stat.exists"}, "module_options": {"url": "{{ tomcat_downloadURL }}/tomcat/tomcat-{{ tomcat_version.split('.')[0] }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz", "dest": "{{ tomcat_temp_download_path }}", "timeout": 120}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "apache-tomcat-{{ tomcat_version }}.tar.gz is transfered to the disconnected remote", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "apache-tomcat-{{ tomcat_version }}.tar.gz is transfered to the disconnected remote", "when": "tomcat_remote_is_disconnected"}, "module_options": {"src": "{{ tomcat_temp_download_path }}/apache-tomcat-{{ tomcat_version }}.tar.gz", "dest": "{{ tomcat_temp_download_path }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive apache-tomcat-{{ tomcat_version }}.tar.gz at {{ tomcat_install_path }}", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Unarchive apache-tomcat-{{ tomcat_version }}.tar.gz at {{ tomcat_install_path }}", "register": "tomcat_installed", "when": "not is_installed.stat.exists"}, "module_options": {"src": "{{ tomcat_temp_download_path }}/apache-tomcat-{{ tomcat_version }}.tar.gz", "dest": "{{ tomcat_install_path }}", "remote_src": true, "owner": "{% if tomcat_permissions_production %}root{% else %}{{ tomcat_user }}{% endif %}", "group": "{{ tomcat_group }}", "creates": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean up temporary files", "module": "file", "index": 8, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Clean up temporary files", "changed_when": false, "when": "not is_installed.stat.exists"}, "module_options": {"path": "{{ tomcat_temp_download_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install tomcat", "module": "include", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "options": {"name": "Install tomcat", "when": "tomcat_state == \"present\""}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure tomcat", "module": "include", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "options": {"name": "Configure tomcat", "when": "tomcat_state == \"present\""}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall tomcat", "module": "include", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "options": {"name": "Uninstall tomcat", "when": "tomcat_state == \"absent\""}, "module_options": "uninstall.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "set-production-permissions.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set root directory owner/group for production installation", "module": "file", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set root directory owner/group for production installation"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "owner": "root", "group": "{{ tomcat_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set recursively directories owner/group for production installation", "module": "file", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set recursively directories owner/group for production installation", "with_items": ["bin", "conf", "lib"]}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item }}", "owner": "root", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set recursively directories owner/group for production installation", "module": "file", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set recursively directories owner/group for production installation", "with_items": ["temp", "work", "logs"]}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item }}", "owner": "{{ tomcat_user }}", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set recursively webapps directory owner/group for production installation", "module": "file", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set recursively webapps directory owner/group for production installation"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps", "owner": "{% if tomcat_webapps_auto_deployment %}{{ tomcat_user }}{% else %}root{% endif %}", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set directories permissions for production installation", "module": "command", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set directories permissions for production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0", "with_nested": ["{{ tomcat_prod_modes }}"]}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item.0 }} -type d -exec chmod -c {{ item.1 }} {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set files permissions for production installation", "module": "command", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set files permissions for production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0", "with_nested": ["{{ tomcat_prod_modes }}"]}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item.0 }} -type f -not -wholename \"{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/bin/*.sh\" -exec chmod -c {{ item.2 }} {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set bin/*.sh permissions to allow execution", "module": "command", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set bin/*.sh permissions to allow execution", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0"}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/bin -type f -name \"*.sh\" -exec chmod -c 0750 {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set owner and group for non-production installation", "module": "file", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "options": {"name": "Set owner and group for non-production installation"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "owner": "{{ tomcat_user }}", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set directories permissions for non-production installation", "module": "command", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "options": {"name": "Set directories permissions for non-production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0"}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} -type d -exec chmod -c 2775 {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set files permissions for non-production installation", "module": "command", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "options": {"name": "Set files permissions for non-production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0"}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} -type f -not -name \"*.sh\" -exec chmod -c 0664 {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "(uninstall) Check if tomcat service is installed", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Check if tomcat service is installed", "register": "service_installed"}, "module_options": {"path": "{{ tomcat_systemd_config_path }}/{{ tomcat_service_name }}.service"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "(uninstall) Stop tomcat service if running", "module": "systemd", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Stop tomcat service if running", "when": "service_installed.stat.exists"}, "module_options": {"name": "{{ tomcat_service_name }}", "enabled": false, "state": "stopped"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "(uninstall) Remove service file {{ tomcat_service_name }}.service", "module": "file", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Remove service file {{ tomcat_service_name }}.service"}, "module_options": {"path": "{{ tomcat_systemd_config_path }}/{{ tomcat_service_name }}.service", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "(uninstall) Perform systemctl daemon-reload", "module": "systemd", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Perform systemctl daemon-reload", "changed_when": false}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "(uninstall) Check if tomcat is already uninstalled", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Check if tomcat is already uninstalled", "register": "is_uninstalled"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "(uninstall) Remove symlink {{ tomcat_install_path }}/{{ tomcat_service_name }}", "module": "file", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Remove symlink {{ tomcat_install_path }}/{{ tomcat_service_name }}"}, "module_options": {"path": "{{ tomcat_install_path }}/{{ tomcat_service_name }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "(uninstall) Create backup archive before deletion at {{ tomcat_install_path }}/tomcat-backup-XXX.tgz", "module": "archive", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Create backup archive before deletion at {{ tomcat_install_path }}/tomcat-backup-XXX.tgz", "when": "tomcat_uninstall_create_backup and is_uninstalled.stat.exists"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "dest": "{{ tomcat_install_path }}/tomcat-backup-{{ lookup('pipe','date +%Y%m%d%H%M%S') }}.tgz"}, "executable": "archive", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "(uninstall) Remove {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "module": "file", "index": 7, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Remove {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "(uninstall) Delete user {{ tomcat_user }}", "module": "user", "index": 8, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Delete user {{ tomcat_user }}", "when": "tomcat_uninstall_remove_all or tomcat_uninstall_remove_user"}, "module_options": {"name": "{{ tomcat_user }}", "groups": "{{ tomcat_group }}", "state": "absent", "force": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "(uninstall) Delete group {{ tomcat_group }}", "module": "group", "index": 9, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Delete group {{ tomcat_group }}", "when": "tomcat_uninstall_remove_all or tomcat_uninstall_remove_group"}, "module_options": {"name": "{{ tomcat_group }}", "state": "absent"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "(uninstall) Uninstall Java", "module": "yum", "index": 10, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Uninstall Java", "with_items": "{{ tomcat_java_packages_EL }}", "when": "tomcat_uninstall_remove_all or tomcat_uninstall_remove_java"}, "module_options": {"name": "{{ item.package }}", "state": "absent"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Setup server.xml", "module": "template", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Setup server.xml", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_server }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/conf/server.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set fact of user roles to be enabled", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Set fact of user roles to be enabled", "with_items": ["{{ tomcat_users }}"]}, "module_options": {"tomcat_user_roles": "{{ (tomcat_user_roles + item.roles.split(',')|list)|unique }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Setup tomcat-users.xml", "module": "template", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Setup tomcat-users.xml", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_users }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/conf/tomcat-users.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create symlink {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} to {{ tomcat_install_path }}/{{ tomcat_service_name }}", "module": "file", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Create symlink {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} to {{ tomcat_install_path }}/{{ tomcat_service_name }}"}, "module_options": {"src": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "dest": "{{ tomcat_install_path }}/{{ tomcat_service_name }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Configure access to Manager app (from localhost only or from anywhere)", "module": "template", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure access to Manager app (from localhost only or from anywhere)", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_manager_context }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps/manager/META-INF/context.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Configure access to Host Manager (from localhost only or from anywhere)", "module": "template", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure access to Host Manager (from localhost only or from anywhere)", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_host_manager_context }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps/host-manager/META-INF/context.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Configure setenv.sh", "module": "template", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure setenv.sh", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_setenv }}", "dest": "{{ tomcat_install_path }}/{{ tomcat_service_name }}/bin/setenv.sh"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Set production permissions", "module": "include", "index": 7, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Set production permissions", "when": "(tomcat_installed is changed or tomcat_permissions_ensure_on_every_run) and tomcat_permissions_production\n"}, "module_options": "set-production-permissions.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Set non production permissions", "module": "include", "index": 8, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Set non production permissions", "when": "(tomcat_installed is changed or tomcat_permissions_ensure_on_every_run) and not tomcat_permissions_production\n"}, "module_options": "set-non-production-permissions.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Configure service file {{ tomcat_service_name }}.service", "module": "template", "index": 9, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure service file {{ tomcat_service_name }}.service", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_systemd_service }}", "dest": "{{ tomcat_systemd_config_path }}/{{ tomcat_service_name }}.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Remove systemd service file from old path (before role update)", "module": "file", "index": 10, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Remove systemd service file from old path (before role update)", "when": "tomcat_delete_old_systemd_service_file"}, "module_options": {"path": "/usr/lib/systemd/system/{{ tomcat_service_name }}.service", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Enable tomcat service on startup", "module": "systemd", "index": 11, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Enable tomcat service on startup"}, "module_options": {"name": "{{ tomcat_service_name }}", "enabled": "{% if tomcat_service_enabled_on_startup %}yes{% else %}no{% endif %}", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install Java", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Install Java", "with_items": "{{ tomcat_java_packages_EL }}", "when": "tomcat_install_java|bool"}, "module_options": {"name": "{{ item.package }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Check if tomcat is already installed", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Check if tomcat is already installed", "register": "is_installed"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create group {{ tomcat_group }}", "module": "group", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Create group {{ tomcat_group }}"}, "module_options": {"name": "{{ tomcat_group }}", "gid": "{{ tomcat_group_gid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create user {{ tomcat_user }}", "module": "user", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Create user {{ tomcat_user }}"}, "module_options": {"name": "{{ tomcat_user }}", "group": "{{ tomcat_group }}", "uid": "{{ tomcat_user_uid | default(omit) }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create temp directory", "module": "file", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Create temp directory", "delegate_to": "{{ item }}", "loop": ["localhost", "{{ inventory_hostname }}"], "changed_when": false, "when": "not is_installed.stat.exists and (( item == inventory_hostname ) or tomcat_remote_is_disconnected )\n"}, "module_options": {"path": "{{ tomcat_temp_download_path }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Download apache-tomcat-{{ tomcat_version }}.tar.gz", "module": "get_url", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Download apache-tomcat-{{ tomcat_version }}.tar.gz", "delegate_to": "{{ 'localhost' if tomcat_remote_is_disconnected else inventory_hostname }}", "when": "not is_installed.stat.exists"}, "module_options": {"url": "{{ tomcat_downloadURL }}/tomcat/tomcat-{{ tomcat_version.split('.')[0] }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz", "dest": "{{ tomcat_temp_download_path }}", "timeout": 120}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "apache-tomcat-{{ tomcat_version }}.tar.gz is transfered to the disconnected remote", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "apache-tomcat-{{ tomcat_version }}.tar.gz is transfered to the disconnected remote", "when": "tomcat_remote_is_disconnected"}, "module_options": {"src": "{{ tomcat_temp_download_path }}/apache-tomcat-{{ tomcat_version }}.tar.gz", "dest": "{{ tomcat_temp_download_path }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Unarchive apache-tomcat-{{ tomcat_version }}.tar.gz at {{ tomcat_install_path }}", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Unarchive apache-tomcat-{{ tomcat_version }}.tar.gz at {{ tomcat_install_path }}", "register": "tomcat_installed", "when": "not is_installed.stat.exists"}, "module_options": {"src": "{{ tomcat_temp_download_path }}/apache-tomcat-{{ tomcat_version }}.tar.gz", "dest": "{{ tomcat_install_path }}", "remote_src": true, "owner": "{% if tomcat_permissions_production %}root{% else %}{{ tomcat_user }}{% endif %}", "group": "{{ tomcat_group }}", "creates": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Clean up temporary files", "module": "file", "index": 8, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Clean up temporary files", "changed_when": false, "when": "not is_installed.stat.exists"}, "module_options": {"path": "{{ tomcat_temp_download_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install tomcat", "module": "include", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "options": {"name": "Install tomcat", "when": "tomcat_state == \"present\""}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Configure tomcat", "module": "include", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "options": {"name": "Configure tomcat", "when": "tomcat_state == \"present\""}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Uninstall tomcat", "module": "include", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "options": {"name": "Uninstall tomcat", "when": "tomcat_state == \"absent\""}, "module_options": "uninstall.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set root directory owner/group for production installation", "module": "file", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set root directory owner/group for production installation"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "owner": "root", "group": "{{ tomcat_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set recursively directories owner/group for production installation", "module": "file", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set recursively directories owner/group for production installation", "with_items": ["bin", "conf", "lib"]}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item }}", "owner": "root", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set recursively directories owner/group for production installation", "module": "file", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set recursively directories owner/group for production installation", "with_items": ["temp", "work", "logs"]}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item }}", "owner": "{{ tomcat_user }}", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Set recursively webapps directory owner/group for production installation", "module": "file", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set recursively webapps directory owner/group for production installation"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps", "owner": "{% if tomcat_webapps_auto_deployment %}{{ tomcat_user }}{% else %}root{% endif %}", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Set directories permissions for production installation", "module": "command", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set directories permissions for production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0", "with_nested": ["{{ tomcat_prod_modes }}"]}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item.0 }} -type d -exec chmod -c {{ item.1 }} {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Set files permissions for production installation", "module": "command", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set files permissions for production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0", "with_nested": ["{{ tomcat_prod_modes }}"]}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item.0 }} -type f -not -wholename \"{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/bin/*.sh\" -exec chmod -c {{ item.2 }} {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Set bin/*.sh permissions to allow execution", "module": "command", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set bin/*.sh permissions to allow execution", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0"}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/bin -type f -name \"*.sh\" -exec chmod -c 0750 {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml": {"py/object": "struct4.TaskFile", "name": "set-non-production-permissions.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set owner and group for non-production installation", "module": "file", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "options": {"name": "Set owner and group for non-production installation"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "owner": "{{ tomcat_user }}", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set directories permissions for non-production installation", "module": "command", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "options": {"name": "Set directories permissions for non-production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0"}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} -type d -exec chmod -c 2775 {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set files permissions for non-production installation", "module": "command", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "options": {"name": "Set files permissions for non-production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0"}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} -type f -not -name \"*.sh\" -exec chmod -c 0664 {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml": {"py/object": "struct4.TaskFile", "name": "uninstall.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "tasks": [{"py/object": "struct4.Task", "name": "(uninstall) Check if tomcat service is installed", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Check if tomcat service is installed", "register": "service_installed"}, "module_options": {"path": "{{ tomcat_systemd_config_path }}/{{ tomcat_service_name }}.service"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Stop tomcat service if running", "module": "systemd", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Stop tomcat service if running", "when": "service_installed.stat.exists"}, "module_options": {"name": "{{ tomcat_service_name }}", "enabled": false, "state": "stopped"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Remove service file {{ tomcat_service_name }}.service", "module": "file", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Remove service file {{ tomcat_service_name }}.service"}, "module_options": {"path": "{{ tomcat_systemd_config_path }}/{{ tomcat_service_name }}.service", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Perform systemctl daemon-reload", "module": "systemd", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Perform systemctl daemon-reload", "changed_when": false}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Check if tomcat is already uninstalled", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Check if tomcat is already uninstalled", "register": "is_uninstalled"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Remove symlink {{ tomcat_install_path }}/{{ tomcat_service_name }}", "module": "file", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Remove symlink {{ tomcat_install_path }}/{{ tomcat_service_name }}"}, "module_options": {"path": "{{ tomcat_install_path }}/{{ tomcat_service_name }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Create backup archive before deletion at {{ tomcat_install_path }}/tomcat-backup-XXX.tgz", "module": "archive", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Create backup archive before deletion at {{ tomcat_install_path }}/tomcat-backup-XXX.tgz", "when": "tomcat_uninstall_create_backup and is_uninstalled.stat.exists"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "dest": "{{ tomcat_install_path }}/tomcat-backup-{{ lookup('pipe','date +%Y%m%d%H%M%S') }}.tgz"}, "executable": "archive", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Remove {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "module": "file", "index": 7, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Remove {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Delete user {{ tomcat_user }}", "module": "user", "index": 8, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Delete user {{ tomcat_user }}", "when": "tomcat_uninstall_remove_all or tomcat_uninstall_remove_user"}, "module_options": {"name": "{{ tomcat_user }}", "groups": "{{ tomcat_group }}", "state": "absent", "force": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Delete group {{ tomcat_group }}", "module": "group", "index": 9, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Delete group {{ tomcat_group }}", "when": "tomcat_uninstall_remove_all or tomcat_uninstall_remove_group"}, "module_options": {"name": "{{ tomcat_group }}", "state": "absent"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Uninstall Java", "module": "yum", "index": 10, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Uninstall Java", "with_items": "{{ tomcat_java_packages_EL }}", "when": "tomcat_uninstall_remove_all or tomcat_uninstall_remove_java"}, "module_options": {"name": "{{ item.package }}", "state": "absent"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml": {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Setup server.xml", "module": "template", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Setup server.xml", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_server }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/conf/server.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact of user roles to be enabled", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Set fact of user roles to be enabled", "with_items": ["{{ tomcat_users }}"]}, "module_options": {"tomcat_user_roles": "{{ (tomcat_user_roles + item.roles.split(',')|list)|unique }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup tomcat-users.xml", "module": "template", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Setup tomcat-users.xml", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_users }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/conf/tomcat-users.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create symlink {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} to {{ tomcat_install_path }}/{{ tomcat_service_name }}", "module": "file", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Create symlink {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} to {{ tomcat_install_path }}/{{ tomcat_service_name }}"}, "module_options": {"src": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "dest": "{{ tomcat_install_path }}/{{ tomcat_service_name }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure access to Manager app (from localhost only or from anywhere)", "module": "template", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure access to Manager app (from localhost only or from anywhere)", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_manager_context }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps/manager/META-INF/context.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure access to Host Manager (from localhost only or from anywhere)", "module": "template", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure access to Host Manager (from localhost only or from anywhere)", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_host_manager_context }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps/host-manager/META-INF/context.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure setenv.sh", "module": "template", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure setenv.sh", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_setenv }}", "dest": "{{ tomcat_install_path }}/{{ tomcat_service_name }}/bin/setenv.sh"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set production permissions", "module": "include", "index": 7, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Set production permissions", "when": "(tomcat_installed is changed or tomcat_permissions_ensure_on_every_run) and tomcat_permissions_production\n"}, "module_options": "set-production-permissions.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set non production permissions", "module": "include", "index": 8, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Set non production permissions", "when": "(tomcat_installed is changed or tomcat_permissions_ensure_on_every_run) and not tomcat_permissions_production\n"}, "module_options": "set-non-production-permissions.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure service file {{ tomcat_service_name }}.service", "module": "template", "index": 9, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure service file {{ tomcat_service_name }}.service", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_systemd_service }}", "dest": "{{ tomcat_systemd_config_path }}/{{ tomcat_service_name }}.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove systemd service file from old path (before role update)", "module": "file", "index": 10, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Remove systemd service file from old path (before role update)", "when": "tomcat_delete_old_systemd_service_file"}, "module_options": {"path": "/usr/lib/systemd/system/{{ tomcat_service_name }}.service", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable tomcat service on startup", "module": "systemd", "index": 11, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Enable tomcat service on startup"}, "module_options": {"name": "{{ tomcat_service_name }}", "enabled": "{% if tomcat_service_enabled_on_startup %}yes{% else %}no{% endif %}", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml": {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Java", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Install Java", "with_items": "{{ tomcat_java_packages_EL }}", "when": "tomcat_install_java|bool"}, "module_options": {"name": "{{ item.package }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if tomcat is already installed", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Check if tomcat is already installed", "register": "is_installed"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create group {{ tomcat_group }}", "module": "group", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Create group {{ tomcat_group }}"}, "module_options": {"name": "{{ tomcat_group }}", "gid": "{{ tomcat_group_gid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create user {{ tomcat_user }}", "module": "user", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Create user {{ tomcat_user }}"}, "module_options": {"name": "{{ tomcat_user }}", "group": "{{ tomcat_group }}", "uid": "{{ tomcat_user_uid | default(omit) }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create temp directory", "module": "file", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Create temp directory", "delegate_to": "{{ item }}", "loop": ["localhost", "{{ inventory_hostname }}"], "changed_when": false, "when": "not is_installed.stat.exists and (( item == inventory_hostname ) or tomcat_remote_is_disconnected )\n"}, "module_options": {"path": "{{ tomcat_temp_download_path }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download apache-tomcat-{{ tomcat_version }}.tar.gz", "module": "get_url", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Download apache-tomcat-{{ tomcat_version }}.tar.gz", "delegate_to": "{{ 'localhost' if tomcat_remote_is_disconnected else inventory_hostname }}", "when": "not is_installed.stat.exists"}, "module_options": {"url": "{{ tomcat_downloadURL }}/tomcat/tomcat-{{ tomcat_version.split('.')[0] }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz", "dest": "{{ tomcat_temp_download_path }}", "timeout": 120}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "apache-tomcat-{{ tomcat_version }}.tar.gz is transfered to the disconnected remote", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "apache-tomcat-{{ tomcat_version }}.tar.gz is transfered to the disconnected remote", "when": "tomcat_remote_is_disconnected"}, "module_options": {"src": "{{ tomcat_temp_download_path }}/apache-tomcat-{{ tomcat_version }}.tar.gz", "dest": "{{ tomcat_temp_download_path }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive apache-tomcat-{{ tomcat_version }}.tar.gz at {{ tomcat_install_path }}", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Unarchive apache-tomcat-{{ tomcat_version }}.tar.gz at {{ tomcat_install_path }}", "register": "tomcat_installed", "when": "not is_installed.stat.exists"}, "module_options": {"src": "{{ tomcat_temp_download_path }}/apache-tomcat-{{ tomcat_version }}.tar.gz", "dest": "{{ tomcat_install_path }}", "remote_src": true, "owner": "{% if tomcat_permissions_production %}root{% else %}{{ tomcat_user }}{% endif %}", "group": "{{ tomcat_group }}", "creates": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean up temporary files", "module": "file", "index": 8, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Clean up temporary files", "changed_when": false, "when": "not is_installed.stat.exists"}, "module_options": {"path": "{{ tomcat_temp_download_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install tomcat", "module": "include", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "options": {"name": "Install tomcat", "when": "tomcat_state == \"present\""}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure tomcat", "module": "include", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "options": {"name": "Configure tomcat", "when": "tomcat_state == \"present\""}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall tomcat", "module": "include", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "options": {"name": "Uninstall tomcat", "when": "tomcat_state == \"absent\""}, "module_options": "uninstall.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml": {"py/object": "struct4.TaskFile", "name": "set-production-permissions.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set root directory owner/group for production installation", "module": "file", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set root directory owner/group for production installation"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "owner": "root", "group": "{{ tomcat_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set recursively directories owner/group for production installation", "module": "file", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set recursively directories owner/group for production installation", "with_items": ["bin", "conf", "lib"]}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item }}", "owner": "root", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set recursively directories owner/group for production installation", "module": "file", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set recursively directories owner/group for production installation", "with_items": ["temp", "work", "logs"]}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item }}", "owner": "{{ tomcat_user }}", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set recursively webapps directory owner/group for production installation", "module": "file", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set recursively webapps directory owner/group for production installation"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps", "owner": "{% if tomcat_webapps_auto_deployment %}{{ tomcat_user }}{% else %}root{% endif %}", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set directories permissions for production installation", "module": "command", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set directories permissions for production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0", "with_nested": ["{{ tomcat_prod_modes }}"]}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item.0 }} -type d -exec chmod -c {{ item.1 }} {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set files permissions for production installation", "module": "command", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set files permissions for production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0", "with_nested": ["{{ tomcat_prod_modes }}"]}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item.0 }} -type f -not -wholename \"{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/bin/*.sh\" -exec chmod -c {{ item.2 }} {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set bin/*.sh permissions to allow execution", "module": "command", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set bin/*.sh permissions to allow execution", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0"}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/bin -type f -name \"*.sh\" -exec chmod -c 0750 {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}}, "role_dict": {"zaxos.tomcat-ansible-role": {"py/object": "struct4.Role", "name": "zaxos.tomcat-ansible-role", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role", "fqcn": "zaxos.tomcat-ansible-role", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "set-non-production-permissions.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set owner and group for non-production installation", "module": "file", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "options": {"name": "Set owner and group for non-production installation"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "owner": "{{ tomcat_user }}", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set directories permissions for non-production installation", "module": "command", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "options": {"name": "Set directories permissions for non-production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0"}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} -type d -exec chmod -c 2775 {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set files permissions for non-production installation", "module": "command", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-non-production-permissions.yml", "options": {"name": "Set files permissions for non-production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0"}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} -type f -not -name \"*.sh\" -exec chmod -c 0664 {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "uninstall.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "tasks": [{"py/object": "struct4.Task", "name": "(uninstall) Check if tomcat service is installed", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Check if tomcat service is installed", "register": "service_installed"}, "module_options": {"path": "{{ tomcat_systemd_config_path }}/{{ tomcat_service_name }}.service"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Stop tomcat service if running", "module": "systemd", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Stop tomcat service if running", "when": "service_installed.stat.exists"}, "module_options": {"name": "{{ tomcat_service_name }}", "enabled": false, "state": "stopped"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Remove service file {{ tomcat_service_name }}.service", "module": "file", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Remove service file {{ tomcat_service_name }}.service"}, "module_options": {"path": "{{ tomcat_systemd_config_path }}/{{ tomcat_service_name }}.service", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Perform systemctl daemon-reload", "module": "systemd", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Perform systemctl daemon-reload", "changed_when": false}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Check if tomcat is already uninstalled", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Check if tomcat is already uninstalled", "register": "is_uninstalled"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Remove symlink {{ tomcat_install_path }}/{{ tomcat_service_name }}", "module": "file", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Remove symlink {{ tomcat_install_path }}/{{ tomcat_service_name }}"}, "module_options": {"path": "{{ tomcat_install_path }}/{{ tomcat_service_name }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Create backup archive before deletion at {{ tomcat_install_path }}/tomcat-backup-XXX.tgz", "module": "archive", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Create backup archive before deletion at {{ tomcat_install_path }}/tomcat-backup-XXX.tgz", "when": "tomcat_uninstall_create_backup and is_uninstalled.stat.exists"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "dest": "{{ tomcat_install_path }}/tomcat-backup-{{ lookup('pipe','date +%Y%m%d%H%M%S') }}.tgz"}, "executable": "archive", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Remove {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "module": "file", "index": 7, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Remove {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Delete user {{ tomcat_user }}", "module": "user", "index": 8, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Delete user {{ tomcat_user }}", "when": "tomcat_uninstall_remove_all or tomcat_uninstall_remove_user"}, "module_options": {"name": "{{ tomcat_user }}", "groups": "{{ tomcat_group }}", "state": "absent", "force": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Delete group {{ tomcat_group }}", "module": "group", "index": 9, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Delete group {{ tomcat_group }}", "when": "tomcat_uninstall_remove_all or tomcat_uninstall_remove_group"}, "module_options": {"name": "{{ tomcat_group }}", "state": "absent"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "(uninstall) Uninstall Java", "module": "yum", "index": 10, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/uninstall.yml", "options": {"name": "(uninstall) Uninstall Java", "with_items": "{{ tomcat_java_packages_EL }}", "when": "tomcat_uninstall_remove_all or tomcat_uninstall_remove_java"}, "module_options": {"name": "{{ item.package }}", "state": "absent"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Setup server.xml", "module": "template", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Setup server.xml", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_server }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/conf/server.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact of user roles to be enabled", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Set fact of user roles to be enabled", "with_items": ["{{ tomcat_users }}"]}, "module_options": {"tomcat_user_roles": "{{ (tomcat_user_roles + item.roles.split(',')|list)|unique }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup tomcat-users.xml", "module": "template", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Setup tomcat-users.xml", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_users }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/conf/tomcat-users.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create symlink {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} to {{ tomcat_install_path }}/{{ tomcat_service_name }}", "module": "file", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Create symlink {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }} to {{ tomcat_install_path }}/{{ tomcat_service_name }}"}, "module_options": {"src": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "dest": "{{ tomcat_install_path }}/{{ tomcat_service_name }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure access to Manager app (from localhost only or from anywhere)", "module": "template", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure access to Manager app (from localhost only or from anywhere)", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_manager_context }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps/manager/META-INF/context.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure access to Host Manager (from localhost only or from anywhere)", "module": "template", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure access to Host Manager (from localhost only or from anywhere)", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_host_manager_context }}", "dest": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps/host-manager/META-INF/context.xml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure setenv.sh", "module": "template", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure setenv.sh", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_setenv }}", "dest": "{{ tomcat_install_path }}/{{ tomcat_service_name }}/bin/setenv.sh"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set production permissions", "module": "include", "index": 7, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Set production permissions", "when": "(tomcat_installed is changed or tomcat_permissions_ensure_on_every_run) and tomcat_permissions_production\n"}, "module_options": "set-production-permissions.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set non production permissions", "module": "include", "index": 8, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Set non production permissions", "when": "(tomcat_installed is changed or tomcat_permissions_ensure_on_every_run) and not tomcat_permissions_production\n"}, "module_options": "set-non-production-permissions.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure service file {{ tomcat_service_name }}.service", "module": "template", "index": 9, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Configure service file {{ tomcat_service_name }}.service", "notify": "restart tomcat"}, "module_options": {"src": "{{ tomcat_template_systemd_service }}", "dest": "{{ tomcat_systemd_config_path }}/{{ tomcat_service_name }}.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove systemd service file from old path (before role update)", "module": "file", "index": 10, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Remove systemd service file from old path (before role update)", "when": "tomcat_delete_old_systemd_service_file"}, "module_options": {"path": "/usr/lib/systemd/system/{{ tomcat_service_name }}.service", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable tomcat service on startup", "module": "systemd", "index": 11, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/configure.yml", "options": {"name": "Enable tomcat service on startup"}, "module_options": {"name": "{{ tomcat_service_name }}", "enabled": "{% if tomcat_service_enabled_on_startup %}yes{% else %}no{% endif %}", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Java", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Install Java", "with_items": "{{ tomcat_java_packages_EL }}", "when": "tomcat_install_java|bool"}, "module_options": {"name": "{{ item.package }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if tomcat is already installed", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Check if tomcat is already installed", "register": "is_installed"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create group {{ tomcat_group }}", "module": "group", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Create group {{ tomcat_group }}"}, "module_options": {"name": "{{ tomcat_group }}", "gid": "{{ tomcat_group_gid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create user {{ tomcat_user }}", "module": "user", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Create user {{ tomcat_user }}"}, "module_options": {"name": "{{ tomcat_user }}", "group": "{{ tomcat_group }}", "uid": "{{ tomcat_user_uid | default(omit) }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create temp directory", "module": "file", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Create temp directory", "delegate_to": "{{ item }}", "loop": ["localhost", "{{ inventory_hostname }}"], "changed_when": false, "when": "not is_installed.stat.exists and (( item == inventory_hostname ) or tomcat_remote_is_disconnected )\n"}, "module_options": {"path": "{{ tomcat_temp_download_path }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download apache-tomcat-{{ tomcat_version }}.tar.gz", "module": "get_url", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Download apache-tomcat-{{ tomcat_version }}.tar.gz", "delegate_to": "{{ 'localhost' if tomcat_remote_is_disconnected else inventory_hostname }}", "when": "not is_installed.stat.exists"}, "module_options": {"url": "{{ tomcat_downloadURL }}/tomcat/tomcat-{{ tomcat_version.split('.')[0] }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz", "dest": "{{ tomcat_temp_download_path }}", "timeout": 120}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "apache-tomcat-{{ tomcat_version }}.tar.gz is transfered to the disconnected remote", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "apache-tomcat-{{ tomcat_version }}.tar.gz is transfered to the disconnected remote", "when": "tomcat_remote_is_disconnected"}, "module_options": {"src": "{{ tomcat_temp_download_path }}/apache-tomcat-{{ tomcat_version }}.tar.gz", "dest": "{{ tomcat_temp_download_path }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive apache-tomcat-{{ tomcat_version }}.tar.gz at {{ tomcat_install_path }}", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Unarchive apache-tomcat-{{ tomcat_version }}.tar.gz at {{ tomcat_install_path }}", "register": "tomcat_installed", "when": "not is_installed.stat.exists"}, "module_options": {"src": "{{ tomcat_temp_download_path }}/apache-tomcat-{{ tomcat_version }}.tar.gz", "dest": "{{ tomcat_install_path }}", "remote_src": true, "owner": "{% if tomcat_permissions_production %}root{% else %}{{ tomcat_user }}{% endif %}", "group": "{{ tomcat_group }}", "creates": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean up temporary files", "module": "file", "index": 8, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/install.yml", "options": {"name": "Clean up temporary files", "changed_when": false, "when": "not is_installed.stat.exists"}, "module_options": {"path": "{{ tomcat_temp_download_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install tomcat", "module": "include", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "options": {"name": "Install tomcat", "when": "tomcat_state == \"present\""}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure tomcat", "module": "include", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "options": {"name": "Configure tomcat", "when": "tomcat_state == \"present\""}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall tomcat", "module": "include", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/main.yml", "options": {"name": "Uninstall tomcat", "when": "tomcat_state == \"absent\""}, "module_options": "uninstall.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "set-production-permissions.yml", "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set root directory owner/group for production installation", "module": "file", "index": 0, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set root directory owner/group for production installation"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}", "owner": "root", "group": "{{ tomcat_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set recursively directories owner/group for production installation", "module": "file", "index": 1, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set recursively directories owner/group for production installation", "with_items": ["bin", "conf", "lib"]}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item }}", "owner": "root", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set recursively directories owner/group for production installation", "module": "file", "index": 2, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set recursively directories owner/group for production installation", "with_items": ["temp", "work", "logs"]}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item }}", "owner": "{{ tomcat_user }}", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set recursively webapps directory owner/group for production installation", "module": "file", "index": 3, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set recursively webapps directory owner/group for production installation"}, "module_options": {"path": "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps", "owner": "{% if tomcat_webapps_auto_deployment %}{{ tomcat_user }}{% else %}root{% endif %}", "group": "{{ tomcat_group }}", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set directories permissions for production installation", "module": "command", "index": 4, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set directories permissions for production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0", "with_nested": ["{{ tomcat_prod_modes }}"]}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item.0 }} -type d -exec chmod -c {{ item.1 }} {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set files permissions for production installation", "module": "command", "index": 5, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set files permissions for production installation", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0", "with_nested": ["{{ tomcat_prod_modes }}"]}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/{{ item.0 }} -type f -not -wholename \"{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/bin/*.sh\" -exec chmod -c {{ item.2 }} {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set bin/*.sh permissions to allow execution", "module": "command", "index": 6, "defined_in": "./role-test/testdata/zaxos-tomcat-ansible-role/zaxos.tomcat-ansible-role/tasks/set-production-permissions.yml", "options": {"name": "Set bin/*.sh permissions to allow execution", "register": "find_chmod_result", "changed_when": "find_chmod_result.stdout | length > 0"}, "module_options": "find {{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/bin -type f -name \"*.sh\" -exec chmod -c 0750 {} \\;", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "zaxos.tomcat-ansible-role", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}