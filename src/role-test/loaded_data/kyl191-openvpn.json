{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/kyl191-openvpn", "installed_roles": [{"py/object": "struct4.Role", "name": "kyl191.openvpn", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn", "fqcn": "kyl191.openvpn", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "uninstall.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "tasks": [{"py/object": "struct4.Task", "name": "Disable openvpn auto-start & start", "module": "service", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Disable openvpn auto-start & start"}, "module_options": {"name": "{{ openvpn_service_name }}", "enabled": false, "state": "stopped"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Wipe out config directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Wipe out config directory"}, "module_options": {"path": "{{ openvpn_base_dir }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove openvpn logrotate config file", "module": "file", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Remove openvpn logrotate config file"}, "module_options": {"path": "/etc/logrotate.d/openvpn.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall OpenVPN", "module": "package", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Uninstall OpenVPN"}, "module_options": {"name": "{{ openvpn_package_name }}", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall LDAP plugin", "module": "package", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Uninstall LDAP plugin", "when": "openvpn_use_ldap"}, "module_options": {"name": "{{ openvpn_ldap_plugin_package_name }}", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Terminate playbook", "module": "fail", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Terminate playbook"}, "module_options": {"msg": "OpenVPN uninstalled, playbook stopped"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "SELinux - check if module was loaded", "module": "command", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/selinux.yml", "options": {"name": "SELinux - check if module was loaded", "register": "semodule_loaded", "changed_when": "openvpn_selinux_module not in semodule_loaded.stdout", "notify": ["build and install policy"]}, "module_options": "semodule --list-modules", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux - copy type enforcement file", "module": "template", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/selinux.yml", "options": {"name": "SELinux - copy type enforcement file", "notify": ["build and install policy"]}, "module_options": {"src": "selinux_module.te.j2", "dest": "/var/lib/selinux/{{ openvpn_selinux_module }}.te", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "client_keys.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create openvpn ovpn file directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Create openvpn ovpn file directory"}, "module_options": {"path": "{{ openvpn_ovpn_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy openssl client extensions", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Copy openssl client extensions"}, "module_options": {"src": "openssl-client.ext", "dest": "{{ openvpn_key_dir }}", "owner": "root", "group": "root", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate client key", "module": "command", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Generate client key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "{{ item }}.key"}, "with_items": ["{{ clients }}"]}, "module_options": "openssl req -nodes -newkey rsa:{{ openvpn_rsa_bits }} -keyout {{ item }}.key -out {{ item }}.csr -days 3650 -subj /CN=OpenVPN-Client-{{ inventory_hostname[:24] }}-{{ item[:24] }}/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Protect client keys", "module": "file", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Protect client keys", "with_items": ["{{ clients }}"]}, "module_options": {"path": "{{ openvpn_key_dir }}/{{ item }}.key", "mode": 256}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sign client key", "module": "command", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Sign client key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "{{ item }}.crt"}, "with_items": ["{{ clients }}"]}, "module_options": "openssl x509 -req -in {{ item }}.csr -out {{ item }}.crt -CA ca.crt -CAkey ca-key.pem -sha256 -days 3650 -extfile openssl-client.ext", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register server ca key", "module": "slurp", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register server ca key", "register": "ca_cert"}, "module_options": {"src": "{{ openvpn_key_dir }}/ca.crt"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register tls-auth key", "module": "slurp", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register tls-auth key", "register": "tls_auth"}, "module_options": {"src": "{{ openvpn_key_dir }}/ta.key"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register client certs", "module": "slurp", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register client certs", "with_items": ["{{ clients }}"], "register": "client_certs"}, "module_options": {"src": "{{ openvpn_key_dir }}/{{ item }}.crt"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register client keys", "module": "slurp", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register client keys", "with_items": ["{{ clients }}"], "register": "client_keys"}, "module_options": {"src": "{{ openvpn_key_dir }}/{{ item }}.key"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate client config", "module": "template", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Generate client config", "no_log": "{{ openvpn_client_config_no_log }}", "with_together": ["{{ client_certs.results }}", "{{ client_keys.results }}"]}, "module_options": {"src": "client.ovpn.j2", "dest": "{{ openvpn_ovpn_dir }}/{{ item.0.item }}-{{ inventory_hostname }}.ovpn", "owner": "root", "group": "root", "mode": 256}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fetch client config", "module": "fetch", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Fetch client config", "when": "openvpn_fetch_client_configs", "with_items": ["{{ clients }}"]}, "module_options": {"src": "{{ openvpn_ovpn_dir }}/{{ item }}-{{ inventory_hostname }}.ovpn", "dest": "{{ openvpn_fetch_client_configs_dir }}/{{ item }}/{{ inventory_hostname }}{{ openvpn_fetch_client_configs_suffix }}.ovpn", "flat": true}, "executable": "fetch", "executable_type": "Module", "fqcn": "ansible.builtin.fetch", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "iptables.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Change facts to use netfilter-persistent on Debian >= 9 or Ubuntu >= 16", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Change facts to use netfilter-persistent on Debian >= 9 or Ubuntu >= 16", "when": "(ansible_distribution == 'Debian' and ansible_distribution_version|int >= 9) or (ansible_distribution == 'Ubuntu' and ansible_lsb.major_release|int >= 16)"}, "module_options": {"iptables_save_command": "/usr/sbin/netfilter-persistent save", "iptables_service": "netfilter-persistent"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install iptables-persistent (Debian/Ubuntu)", "module": "package", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Install iptables-persistent (Debian/Ubuntu)", "register": "__iptables_installed", "when": "ansible_os_family == \"Debian\""}, "module_options": {"name": "{{ iptables_persistent_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install iptables-services (RedHat/CentOS)", "module": "package", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Install iptables-services (RedHat/CentOS)", "register": "__iptables_installed", "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": "{{ iptables_services_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow VPN forwarding - iptables", "module": "iptables", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Allow VPN forwarding - iptables", "notify": "save iptables"}, "module_options": {"chain": "FORWARD", "source": "{{ openvpn_server_network }}/24", "jump": "ACCEPT", "action": "insert", "comment": "Allow VPN forwarding"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow incoming SSH connections - iptables", "module": "iptables", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Allow incoming SSH connections - iptables", "notify": "save iptables"}, "module_options": {"chain": "INPUT", "protocol": "tcp", "destination_port": "{{ ansible_port | default(22) }}", "jump": "ACCEPT", "action": "insert", "comment": "Allow incoming SSH connection"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow incoming VPN connections - iptables", "module": "iptables", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Allow incoming VPN connections - iptables", "notify": "save iptables"}, "module_options": {"chain": "INPUT", "protocol": "{{ openvpn_proto }}", "destination_port": "{{ openvpn_port }}", "jump": "ACCEPT", "action": "insert", "comment": "Allow incoming VPN connection"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Accept packets from VPN tunnel adaptor - iptables", "module": "iptables", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Accept packets from VPN tunnel adaptor - iptables", "notify": "save iptables"}, "module_options": {"chain": "INPUT", "in_interface": "tun0", "jump": "ACCEPT", "action": "insert", "comment": "Accept packets from VPN tunnel adaptor"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Perform NAT readdressing - iptables", "module": "iptables", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Perform NAT readdressing - iptables", "when": "not openvpn_masquerade_not_snat", "notify": "save iptables"}, "module_options": {"table": "nat", "chain": "POSTROUTING", "source": "{{ openvpn_server_network }}/24", "to_source": "{{ ansible_default_ipv4.address }}", "jump": "SNAT", "action": "insert", "comment": "Perform NAT readdressing"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Perform NAT readdressing with MASQUERADE - iptables", "module": "iptables", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Perform NAT readdressing with MASQUERADE - iptables", "when": "openvpn_masquerade_not_snat", "notify": "save iptables"}, "module_options": {"table": "nat", "chain": "POSTROUTING", "source": "{{ openvpn_server_network }}/24", "jump": "MASQUERADE", "action": "insert", "comment": "Perform NAT readdressing"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save existing iptables rule before start iptables service", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Save existing iptables rule before start iptables service", "when": "__iptables_installed.changed | bool"}, "module_options": "{{ iptables_save_command }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable iptables", "module": "service", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Enable iptables"}, "module_options": {"name": "{{ iptables_service }}", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "firewall.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check for firewalld", "module": "command", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Check for firewalld", "register": "firewalld", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "which firewall-cmd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for ufw", "module": "command", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Check for ufw", "register": "ufw", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "which ufw", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for iptables", "module": "command", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Check for iptables", "register": "iptables", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "which iptables", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail on both firewalld & ufw", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Fail on both firewalld & ufw", "when": "openvpn_firewall == 'auto' and firewalld.rc == 0 and ufw.rc == 0"}, "module_options": {"msg": "Both FirewallD and UFW are detected, firewall situation is unknown"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail on no firewall detected", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Fail on no firewall detected", "when": "firewalld.rc != 0 and ufw.rc != 0 and iptables.rc != 0"}, "module_options": {"msg": "No firewall detected, install one before proceeding (firewalld||ufw||iptables)"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add port rules (iptables)", "module": "include", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Add port rules (iptables)", "when": "(openvpn_firewall == 'iptables') or (openvpn_firewall == 'auto' and firewalld.rc != 0 and ufw.rc != 0 and iptables.rc == 0)"}, "module_options": "iptables.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add port rules (firewalld)", "module": "include", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Add port rules (firewalld)", "when": "(openvpn_firewall == 'firewalld') or (openvpn_firewall == 'auto' and firewalld.rc == 0 and ufw.rc != 0)"}, "module_options": "firewalld.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add port rules (ufw)", "module": "include", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Add port rules (ufw)", "when": "(openvpn_firewall == 'ufw') or (openvpn_firewall == 'auto' and firewalld.rc != 0 and ufw.rc == 0)"}, "module_options": "ufw.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "ufw.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "tasks": [{"py/object": "struct4.Task", "name": "Start ufw service", "module": "service", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Start ufw service"}, "module_options": {"name": "ufw", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ufw", "module": "ufw", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Enable ufw"}, "module_options": {"direction": "incoming", "state": "enabled", "policy": "allow"}, "executable": "ufw", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable forwarding - ufw", "module": "lineinfile", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Enable forwarding - ufw"}, "module_options": {"dest": "/etc/default/ufw", "regexp": "^DEFAULT_FORWARD_POLICY=", "line": "DEFAULT_FORWARD_POLICY=\"ACCEPT\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow incoming VPN connections - ufw", "module": "ufw", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Allow incoming VPN connections - ufw"}, "module_options": {"direction": "in", "proto": "{{ openvpn_proto }}", "to_port": "{{ openvpn_port | string }}", "rule": "allow"}, "executable": "ufw", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Accept packets from VPN tunnel adaptor - ufw", "module": "ufw", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Accept packets from VPN tunnel adaptor - ufw"}, "module_options": {"direction": "in", "interface": "tun0", "rule": "allow"}, "executable": "ufw", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup nat table rules - ufw", "module": "blockinfile", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Setup nat table rules - ufw", "when": "not openvpn_masquerade_not_snat", "notify": ["restart ufw"]}, "module_options": {"dest": "/etc/ufw/before.rules", "state": "present", "insertbefore": "\\*filter", "block": "# OpenVPN config\n*nat\n:POSTROUTING ACCEPT [0:0]\n-A POSTROUTING -s {{ openvpn_server_network }}/24 -j SNAT --to-source {{ ansible_default_ipv4.address }}\nCOMMIT\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup nat table rules with MASQUERADE - ufw", "module": "blockinfile", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Setup nat table rules with MASQUERADE - ufw", "when": "openvpn_masquerade_not_snat", "notify": ["restart ufw"]}, "module_options": {"dest": "/etc/ufw/before.rules", "state": "present", "insertbefore": "\\*filter", "block": "# OpenVPN config\n*nat\n:POSTROUTING ACCEPT [0:0]\n-A POSTROUTING -s {{ openvpn_server_network }}/24 -j MASQUERADE\nCOMMIT\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "revocation.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "tasks": [{"py/object": "struct4.Task", "name": "Remove client config", "module": "file", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Remove client config", "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": {"path": "{{ openvpn_ovpn_dir }}/{{ item }}-{{ inventory_hostname }}.ovpn", "state": "absent", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Revoke certificates", "module": "command", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Revoke certificates", "changed_when": true, "args": {"chdir": "{{ openvpn_key_dir }}"}, "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": "sh revoke.sh {{ item }}.crt", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove client key", "module": "file", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Remove client key", "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": {"path": "{{ openvpn_key_dir }}/{{ item }}.key", "state": "absent", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove client csr", "module": "file", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Remove client csr", "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": {"path": "{{ openvpn_key_dir }}/{{ item }}.csr", "state": "absent", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "config.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create openvpn config file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create openvpn config file", "notify": ["restart openvpn"]}, "module_options": {"src": "server.conf.j2", "dest": "{{ openvpn_base_dir }}/{{ openvpn_config_file }}.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy up script if defined", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy up script if defined", "when": "openvpn_script_up is defined"}, "module_options": {"src": "{{ openvpn_script_up }}", "dest": "{{ openvpn_base_dir }}/up.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy down script if defined", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy down script if defined", "when": "openvpn_script_down is defined"}, "module_options": {"src": "{{ openvpn_script_down }}", "dest": "{{ openvpn_base_dir }}/down.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy client-connect script if defined", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy client-connect script if defined", "when": "openvpn_script_client_connect is defined"}, "module_options": {"src": "{{ openvpn_script_client_connect }}", "dest": "{{ openvpn_base_dir }}/client_connect.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy client-disconnect script if defined", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy client-disconnect script if defined", "when": "openvpn_script_client_disconnect is defined"}, "module_options": {"src": "{{ openvpn_script_client_disconnect }}", "dest": "{{ openvpn_base_dir }}/client_disconnect.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install LDAP config", "module": "template", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Install LDAP config", "when": "openvpn_use_ldap"}, "module_options": {"src": "ldap.conf.j2", "dest": "{{ openvpn_base_dir }}/auth/ldap.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log directory", "module": "file", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create log directory"}, "module_options": {"dest": "{{ openvpn_log_dir }}", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy openvpn logrotate config file", "module": "template", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy openvpn logrotate config file", "when": "ansible_os_family != 'Solaris'"}, "module_options": {"src": "openvpn_logrotate.conf.j2", "dest": "/etc/logrotate.d/openvpn-{{ openvpn_config_file }}.conf", "owner": "root", "group": "root", "mode": 256}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create client config directory", "module": "file", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create client config directory", "when": "openvpn_client_config"}, "module_options": {"state": "directory", "path": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create client config directory", "module": "template", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create client config directory", "when": "openvpn_client_config", "with_dict": "{{ openvpn_client_config_present }}"}, "module_options": {"src": "client_ccd.j2", "dest": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}/{{ item.key }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete custom client config from client config directory", "module": "file", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Delete custom client config from client config directory", "when": "openvpn_client_config", "with_items": "{{ openvpn_client_config_absent }}"}, "module_options": {"path": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete client config directory", "module": "file", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Delete client config directory", "when": "not openvpn_client_config"}, "module_options": {"path": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup openvpn auto-start & start", "module": "service", "index": 12, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Setup openvpn auto-start & start", "when": "ansible_service_mgr != \"tail\""}, "module_options": {"name": "{{ openvpn_service_name }}", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "compile_ldap_plugin.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Gather specific variables"}, "module_options": "../vars/compile_ldap_plugin.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check package re2c already exists", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Check package re2c already exists", "become": true, "register": "re2c_bin"}, "module_options": {"path": "{{ re2c_bin_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check package openvpn-auth-ldap already exists", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Check package openvpn-auth-ldap already exists", "become": true, "register": "openvpn_auth_ldap_bin"}, "module_options": {"path": "{{ openvpn_auth_ldap_bin_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install gcc objc repo", "module": "yum_repository", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Install gcc objc repo", "become": true}, "module_options": {"name": "csi-gcc", "description": "gcc compiler suite, with Objective-C which is removed from official Red Hat EL8 releases.", "baseurl": "{{ gcc_objc_repo.base_url }}", "gpgkey": "{{ gcc_objc_repo.key }}", "gpgcheck": true, "enabled": true}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install dev packages", "module": "package", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Install dev packages", "become": true}, "module_options": {"name": "{{ compile_develop_packages }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and unpack re2c", "module": "unarchive", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Download and unpack re2c", "become": true}, "module_options": {"src": "https://github.com/skvadrik/re2c/archive/{{ re2c_version }}.tar.gz", "dest": "{{ compile_source_dir }}", "creates": "{{ compile_source_dir }}/re2c-{{ re2c_version }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compile re2c", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Compile re2c", "become": true, "args": {"chdir": "{{ compile_source_dir }}/re2c-{{ re2c_version }}", "creates": "{{ re2c_bin_path }}"}}, "module_options": "autoreconf -i -W all\n./configure\nmake\nmake install\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and unpack openvpn-auth-ldap", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Download and unpack openvpn-auth-ldap", "become": true}, "module_options": {"src": "https://github.com/threerings/openvpn-auth-ldap/archive/auth-ldap-{{ openvpn_auth_ldap_version }}.tar.gz", "dest": "{{ compile_source_dir }}", "creates": "{{ compile_source_dir }}/openvpn-auth-ldap-auth-ldap-{{ openvpn_auth_ldap_version }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create module directory", "module": "file", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Create module directory", "become": true}, "module_options": {"path": "{{ openvpn_auth_ldap_bin_path | dirname }}", "owner": "root", "group": "root", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compile", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Compile", "become": true, "environment": {"PATH": "{{ re2c_bin_path | dirname }}:{{ lookup('env', 'PATH') }}"}, "args": {"chdir": "{{ compile_source_dir }}/openvpn-auth-ldap-auth-ldap-{{ openvpn_auth_ldap_version }}", "creates": "{{ openvpn_auth_ldap_bin_path }}"}}, "module_options": "autoconf\nautoheader\n./configure --prefix={{ openvpn_auth_ldap_plugin_dir_path }} --with-openvpn=/sbin/openvpn CFLAGS=\"-fPIC\" OBJCFLAGS=\"-std=gnu11\"\nmake\nmake install\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup dev packages", "module": "package", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Cleanup dev packages", "become": true, "when": ["compile_cleanup_dev_packages"]}, "module_options": {"name": "{{ compile_develop_packages }}", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove gcc objc repo", "module": "yum_repository", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Remove gcc objc repo", "become": true, "when": ["compile_cleanup_dev_packages"]}, "module_options": {"name": "csi-gcc", "state": "absent"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "set_facts.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check systemd existence as Docker Guest", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Check systemd existence as Docker Guest", "when": "ansible_virtualization_role is defined and ansible_virtualization_type == \"docker\" and ansible_virtualization_role == \"guest\"", "register": "docker_stat_result"}, "module_options": {"path": "/bin/systemctl"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd openvpn service name", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Set systemd openvpn service name", "when": "ansible_service_mgr == \"systemd\" or (docker_stat_result.stat is defined and docker_stat_result.stat.exists)"}, "module_options": {"openvpn_service_name": "openvpn@{{ openvpn_config_file }}.service"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Fedora 27+ and CentOS 8 service name", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Set Fedora 27+ and CentOS 8 service name", "when": "(ansible_distribution == \"Fedora\" and ansible_distribution_version|int >= 27) or (\n  ( (ansible_distribution == \"CentOS\") or (ansible_distribution == \"RedHat\") )\n  and\n  (ansible_distribution_version | int) >= 8\n)"}, "module_options": {"openvpn_service_name": "openvpn-server@{{ openvpn_config_file }}.service"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Fedora 27+ and CentOS 8 OpenVPN base path", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Set Fedora 27+ and CentOS 8 OpenVPN base path", "when": "(ansible_distribution == \"Fedora\" and ansible_distribution_version|int >= 27) or (\n  (ansible_distribution == \"CentOS\" or ansible_distribution == \"RedHat\")\n  and\n  (ansible_distribution_version | int) >= 8\n)"}, "module_options": {"openvpn_base_dir": "/etc/openvpn/server"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "firewalld.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "tasks": [{"py/object": "struct4.Task", "name": "Enable firewalld", "module": "service", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Enable firewalld"}, "module_options": {"name": "firewalld", "enabled": true, "masked": false, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install python2-firewall (Fedora)", "module": "package", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Install python2-firewall (Fedora)", "when": ["ansible_distribution == \"Fedora\"", "ansible_python.version.major == 2"]}, "module_options": {"name": "{{ python_firewall_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable OpenVPN Port (firewalld)", "module": "firewalld", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Enable OpenVPN Port (firewalld)"}, "module_options": {"port": "{{ openvpn_port }}/{{ openvpn_proto }}", "zone": "{{ firewalld_default_interface_zone }}", "permanent": true, "immediate": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set tun0 interface to internal", "module": "firewalld", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Set tun0 interface to internal"}, "module_options": {"interface": "tun0", "zone": "internal", "permanent": true, "immediate": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default interface to external", "module": "firewalld", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Set default interface to external"}, "module_options": {"interface": "{{ ansible_default_ipv4.interface }}", "zone": "{{ firewalld_default_interface_zone }}", "permanent": true, "immediate": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable masquerading on external zone", "module": "firewalld", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Enable masquerading on external zone", "notify": ["restart firewalld"]}, "module_options": {"masquerade": true, "zone": "{{ firewalld_default_interface_zone }}", "permanent": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if ifcfg-{{ ansible_default_ipv4.interface }} exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Check if ifcfg-{{ ansible_default_ipv4.interface }} exists", "register": "ifcfg"}, "module_options": {"path": "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Persist default interface in ifcfg file", "module": "lineinfile", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Persist default interface in ifcfg file", "when": "ifcfg.stat.exists"}, "module_options": {"dest": "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}", "regexp": "^ZONE=", "line": "ZONE={{ firewalld_default_interface_zone }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "server_keys.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create openvpn key directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Create openvpn key directory"}, "module_options": {"path": "{{ openvpn_key_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy openssl server/ca extensions", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy openssl server/ca extensions", "with_items": ["openssl-server.ext", "openssl-ca.ext"]}, "module_options": {"src": "{{ item }}", "dest": "{{ openvpn_key_dir }}", "owner": "root", "group": "root", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy CA key", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy CA key", "when": "openvpn_ca_key is defined"}, "module_options": {"content": "{{ openvpn_ca_key.key }}", "dest": "{{ openvpn_key_dir }}/ca-key.pem", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy CA cert", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy CA cert", "when": "openvpn_ca_key is defined"}, "module_options": {"content": "{{ openvpn_ca_key.crt }}", "dest": "{{ openvpn_key_dir }}/ca.crt", "mode": 292}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate CA key", "module": "command", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate CA key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ca-key.pem"}, "when": "openvpn_ca_key is not defined"}, "module_options": "openssl req -nodes -newkey rsa:{{ openvpn_rsa_bits }} -keyout ca-key.pem -out ca-csr.pem -days 3650 -subj /CN=OpenVPN-CA-{{ inventory_hostname[:53] }}/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Protect CA key", "module": "file", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Protect CA key", "when": "openvpn_ca_key is not defined"}, "module_options": {"path": "{{ openvpn_key_dir }}/ca-key.pem", "mode": 256}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sign CA key", "module": "command", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Sign CA key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ca.crt"}, "when": "openvpn_ca_key is not defined"}, "module_options": "openssl x509 -req -in ca-csr.pem -out ca.crt -CAcreateserial -signkey ca-key.pem -sha256 -days 3650 -extfile openssl-ca.ext", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate server key", "module": "command", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate server key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "server.key"}}, "module_options": "openssl req -nodes -newkey rsa:{{ openvpn_rsa_bits }} -keyout server.key -out server.csr -days 3650 -subj /CN=OpenVPN-Server-{{ inventory_hostname[:49] }}/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Protect server key", "module": "file", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Protect server key"}, "module_options": {"path": "{{ openvpn_key_dir }}/server.key", "mode": 256}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sign server key", "module": "command", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Sign server key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "server.crt"}}, "module_options": "openssl x509 -req -in server.csr -out server.crt -CA ca.crt -CAkey ca-key.pem -sha256 -days 3650 -CAcreateserial -extfile openssl-server.ext", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy tls-auth key", "module": "copy", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy tls-auth key", "when": "openvpn_tls_auth_key is defined"}, "module_options": {"content": "{{ openvpn_tls_auth_key }}", "dest": "{{ openvpn_key_dir }}/ta.key", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate tls-auth key", "module": "command", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate tls-auth key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ta.key"}, "when": "openvpn_tls_auth_key is not defined"}, "module_options": "openvpn --genkey --secret ta.key", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy pre-generated DH params", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy pre-generated DH params", "when": "openvpn_use_pregenerated_dh_params|bool"}, "module_options": {"src": "dh.pem", "dest": "{{ openvpn_key_dir }}", "owner": "root", "group": "root", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate dh params", "module": "command", "index": 13, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate dh params", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "dh.pem"}, "when": "not (openvpn_use_pregenerated_dh_params|bool)"}, "module_options": "openssl dhparam -out {{ openvpn_key_dir }}/dh.pem {{ openvpn_rsa_bits }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install ca.conf config file", "module": "template", "index": 14, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Install ca.conf config file"}, "module_options": {"src": "ca.conf.j2", "dest": "{{ openvpn_key_dir }}/ca.conf", "owner": "root", "group": "root", "mode": 484}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create initial certificate revocation list squence number", "module": "shell", "index": 15, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Create initial certificate revocation list squence number", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "crl_number"}}, "module_options": "echo 00 > crl_number", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate tls-auth key", "module": "command", "index": 16, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate tls-auth key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ta.key"}, "when": "openvpn_tls_auth_key is not defined"}, "module_options": "openvpn --genkey --secret ta.key", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install revocation script", "module": "template", "index": 17, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Install revocation script"}, "module_options": {"src": "revoke.sh.j2", "dest": "{{ openvpn_key_dir }}/revoke.sh", "owner": "root", "group": "root", "mode": 484}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if certificate revocation list database exists", "module": "stat", "index": 18, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Check if certificate revocation list database exists", "register": "file_result"}, "module_options": {"path": "{{ openvpn_key_dir }}/index.txt"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create certificate revocation list database if required", "module": "file", "index": 19, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Create certificate revocation list database if required", "when": "not file_result.stat.exists"}, "module_options": {"path": "{{ openvpn_key_dir }}/index.txt", "state": "touch", "mode": 420}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set up certificate revocation list", "module": "command", "index": 20, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Set up certificate revocation list", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "{{ openvpn_key_dir }}/ca-crl.pem"}}, "module_options": "sh revoke.sh", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install crl-cron script", "module": "template", "index": 21, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Install crl-cron script"}, "module_options": {"src": "crl-cron.sh.j2", "dest": "{{ openvpn_base_dir }}/crl-cron.sh", "owner": "root", "group": "root", "mode": 484}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add cron to check every Saturday if the CRL needs to be renewed", "module": "cron", "index": 22, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Add cron to check every Saturday if the CRL needs to be renewed", "when": "not ci_build"}, "module_options": {"name": "check if CRL will expire soon", "special_time": "weekly", "job": "sh {{ openvpn_base_dir }}/crl-cron.sh"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install EPEL", "module": "package", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install EPEL", "when": "ansible_distribution == \"CentOS\" or ansible_distribution==\"RedHat\""}, "module_options": {"name": "{{ epel_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install python2-dnf for Fedora dnf support", "module": "raw", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install python2-dnf for Fedora dnf support", "when": ["ansible_distribution == \"Fedora\"", "ansible_python.version.major == 2"], "register": "fedora_dnf", "changed_when": "\"Nothing to do.\" not in fedora_dnf.stdout"}, "module_options": "dnf install -y python2-dnf", "executable": "raw", "executable_type": "Module", "fqcn": "ansible.builtin.raw", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install openvpn", "module": "package", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install openvpn", "with_items": ["{{ openvpn_package_name }}", "{{ openssl_package_name }}"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install LDAP plugin", "module": "package", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install LDAP plugin", "become": true, "when": ["openvpn_use_ldap", "ansible_distribution == \"CentOS\" and ansible_distribution_major_version != \"8\""]}, "module_options": {"name": "{{ openvpn_ldap_plugin_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compile LDAP plugin", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Compile LDAP plugin", "when": ["openvpn_use_ldap", "ansible_distribution == \"CentOS\" and ansible_distribution_major_version == \"8\""]}, "module_options": "compile_ldap_plugin.yml", "executable": "compile_ldap_plugin.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure group 'nogroup' is present", "module": "group", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Ensure group 'nogroup' is present"}, "module_options": {"name": "nogroup", "state": "present", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include vars for OpenVPN installation", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Include vars for OpenVPN installation", "with_first_found": ["../vars/{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml", "../vars/{{ ansible_distribution }}.yml", "../vars/{{ ansible_os_family }}.yml", "../vars/empty.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set facts", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Set facts"}, "module_options": "set_facts.yml", "executable": "set_facts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall OpenVPN", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Uninstall OpenVPN", "when": "openvpn_uninstall"}, "module_options": "uninstall.yml", "executable": "uninstall.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OpenVPN", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Install OpenVPN", "tags": ["install"]}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy or Generate server keys", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Copy or Generate server keys"}, "module_options": "server_keys.yml", "executable": "server_keys.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ipv4 forwarding", "module": "sysctl", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Enable ipv4 forwarding", "failed_when": false, "when": "not ci_build"}, "module_options": {"name": "net.ipv4.ip_forward", "value": "1", "ignoreerrors": true}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ipv6 forwarding", "module": "sysctl", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Enable ipv6 forwarding", "when": "openvpn_server_ipv6_network is defined and not ci_build"}, "module_options": {"name": "net.ipv6.conf.all.forwarding", "value": "1", "ignoreerrors": true}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Detect firewall type", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Detect firewall type", "when": ["not ci_build", "manage_firewall_rules"], "tags": ["firewall"]}, "module_options": "firewall.yml", "executable": "firewall.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux", "module": "include", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Configure SELinux", "when": ["ansible_selinux.status == \"enabled\""]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compare existing certs against 'clients' variable", "module": "import_tasks", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Compare existing certs against 'clients' variable", "when": "openvpn_sync_certs", "tags": ["sync_certs"]}, "module_options": "cert_sync_detection.yml", "executable": "cert_sync_detection.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate client configs", "module": "import_tasks", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Generate client configs", "when": "clients is defined"}, "module_options": "client_keys.yml", "executable": "client_keys.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate revocation list and clean up", "module": "import_tasks", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Generate revocation list and clean up", "when": "(openvpn_revoke_these_certs is defined) or (openvpn_sync_certs and cert_sync_certs_to_revoke.stdout_lines | length > 0)"}, "module_options": "revocation.yml", "executable": "revocation.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure OpenVPN server", "module": "import_tasks", "index": 12, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Configure OpenVPN server"}, "module_options": "config.yml", "executable": "config.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "cert_sync_detection.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "tasks": [{"py/object": "struct4.Task", "name": "[cert sync] Create temporary file for existing certs", "module": "ansible.builtin.tempfile", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Create temporary file for existing certs", "register": "tempfile_existing"}, "module_options": {"state": "file", "suffix": "temp"}, "executable": "ansible.builtin.tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Create temporary file for expected certs", "module": "ansible.builtin.tempfile", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Create temporary file for expected certs", "register": "tempfile_expected"}, "module_options": {"state": "file", "suffix": "temp"}, "executable": "ansible.builtin.tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Write expected client list to temp file for comparison with existing certs", "module": "ansible.builtin.template", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Write expected client list to temp file for comparison with existing certs", "when": "openvpn_sync_certs"}, "module_options": {"src": "cert_sync_expected_clients.j2", "dest": "{{ tempfile_expected.path }}", "mode": 420}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Get existing certs", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Get existing certs", "when": "openvpn_sync_certs"}, "module_options": {"cmd": "set -o pipefail\nls -1 *.csr | { grep -v server.csr || true; } | sort | cut -f1 -d'.' > {{ tempfile_existing.path }}\n", "chdir": "{{ openvpn_key_dir }}", "executable": "/bin/bash"}, "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Find certs that exist but aren't supposed to (on disk, but not in client list)", "module": "command", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Find certs that exist but aren't supposed to (on disk, but not in client list)", "register": "openvpn_cert_sync_revoke", "when": "openvpn_sync_certs"}, "module_options": {"cmd": "comm -23 {{ tempfile_existing.path }} {{ tempfile_expected.path }}"}, "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Debug: Certs to revoke (skipped if none)", "module": "ansible.builtin.debug", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Debug: Certs to revoke (skipped if none)", "when": "openvpn_cert_sync_revoke.stdout_lines | length > 0"}, "module_options": {"msg": "Will revoke additional certs: {{ openvpn_cert_sync_revoke.stdout_lines | join(', ') }}"}, "executable": "ansible.builtin.debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Cleanup temp files", "module": "ansible.builtin.file", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Cleanup temp files", "with_items": ["{{ tempfile_existing.path }}", "{{ tempfile_expected.path }}"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Disable openvpn auto-start & start", "module": "service", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Disable openvpn auto-start & start"}, "module_options": {"name": "{{ openvpn_service_name }}", "enabled": false, "state": "stopped"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Wipe out config directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Wipe out config directory"}, "module_options": {"path": "{{ openvpn_base_dir }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Remove openvpn logrotate config file", "module": "file", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Remove openvpn logrotate config file"}, "module_options": {"path": "/etc/logrotate.d/openvpn.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Uninstall OpenVPN", "module": "package", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Uninstall OpenVPN"}, "module_options": {"name": "{{ openvpn_package_name }}", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Uninstall LDAP plugin", "module": "package", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Uninstall LDAP plugin", "when": "openvpn_use_ldap"}, "module_options": {"name": "{{ openvpn_ldap_plugin_package_name }}", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Terminate playbook", "module": "fail", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Terminate playbook"}, "module_options": {"msg": "OpenVPN uninstalled, playbook stopped"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/selinux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "SELinux - check if module was loaded", "module": "command", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/selinux.yml", "options": {"name": "SELinux - check if module was loaded", "register": "semodule_loaded", "changed_when": "openvpn_selinux_module not in semodule_loaded.stdout", "notify": ["build and install policy"]}, "module_options": "semodule --list-modules", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/selinux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "SELinux - copy type enforcement file", "module": "template", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/selinux.yml", "options": {"name": "SELinux - copy type enforcement file", "notify": ["build and install policy"]}, "module_options": {"src": "selinux_module.te.j2", "dest": "/var/lib/selinux/{{ openvpn_selinux_module }}.te", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create openvpn ovpn file directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Create openvpn ovpn file directory"}, "module_options": {"path": "{{ openvpn_ovpn_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy openssl client extensions", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Copy openssl client extensions"}, "module_options": {"src": "openssl-client.ext", "dest": "{{ openvpn_key_dir }}", "owner": "root", "group": "root", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Generate client key", "module": "command", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Generate client key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "{{ item }}.key"}, "with_items": ["{{ clients }}"]}, "module_options": "openssl req -nodes -newkey rsa:{{ openvpn_rsa_bits }} -keyout {{ item }}.key -out {{ item }}.csr -days 3650 -subj /CN=OpenVPN-Client-{{ inventory_hostname[:24] }}-{{ item[:24] }}/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Protect client keys", "module": "file", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Protect client keys", "with_items": ["{{ clients }}"]}, "module_options": {"path": "{{ openvpn_key_dir }}/{{ item }}.key", "mode": 256}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Sign client key", "module": "command", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Sign client key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "{{ item }}.crt"}, "with_items": ["{{ clients }}"]}, "module_options": "openssl x509 -req -in {{ item }}.csr -out {{ item }}.crt -CA ca.crt -CAkey ca-key.pem -sha256 -days 3650 -extfile openssl-client.ext", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Register server ca key", "module": "slurp", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register server ca key", "register": "ca_cert"}, "module_options": {"src": "{{ openvpn_key_dir }}/ca.crt"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Register tls-auth key", "module": "slurp", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register tls-auth key", "register": "tls_auth"}, "module_options": {"src": "{{ openvpn_key_dir }}/ta.key"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Register client certs", "module": "slurp", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register client certs", "with_items": ["{{ clients }}"], "register": "client_certs"}, "module_options": {"src": "{{ openvpn_key_dir }}/{{ item }}.crt"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Register client keys", "module": "slurp", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register client keys", "with_items": ["{{ clients }}"], "register": "client_keys"}, "module_options": {"src": "{{ openvpn_key_dir }}/{{ item }}.key"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Generate client config", "module": "template", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Generate client config", "no_log": "{{ openvpn_client_config_no_log }}", "with_together": ["{{ client_certs.results }}", "{{ client_keys.results }}"]}, "module_options": {"src": "client.ovpn.j2", "dest": "{{ openvpn_ovpn_dir }}/{{ item.0.item }}-{{ inventory_hostname }}.ovpn", "owner": "root", "group": "root", "mode": 256}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Fetch client config", "module": "fetch", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Fetch client config", "when": "openvpn_fetch_client_configs", "with_items": ["{{ clients }}"]}, "module_options": {"src": "{{ openvpn_ovpn_dir }}/{{ item }}-{{ inventory_hostname }}.ovpn", "dest": "{{ openvpn_fetch_client_configs_dir }}/{{ item }}/{{ inventory_hostname }}{{ openvpn_fetch_client_configs_suffix }}.ovpn", "flat": true}, "executable": "fetch", "executable_type": "Module", "fqcn": "ansible.builtin.fetch", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Change facts to use netfilter-persistent on Debian >= 9 or Ubuntu >= 16", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Change facts to use netfilter-persistent on Debian >= 9 or Ubuntu >= 16", "when": "(ansible_distribution == 'Debian' and ansible_distribution_version|int >= 9) or (ansible_distribution == 'Ubuntu' and ansible_lsb.major_release|int >= 16)"}, "module_options": {"iptables_save_command": "/usr/sbin/netfilter-persistent save", "iptables_service": "netfilter-persistent"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install iptables-persistent (Debian/Ubuntu)", "module": "package", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Install iptables-persistent (Debian/Ubuntu)", "register": "__iptables_installed", "when": "ansible_os_family == \"Debian\""}, "module_options": {"name": "{{ iptables_persistent_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install iptables-services (RedHat/CentOS)", "module": "package", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Install iptables-services (RedHat/CentOS)", "register": "__iptables_installed", "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": "{{ iptables_services_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Allow VPN forwarding - iptables", "module": "iptables", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Allow VPN forwarding - iptables", "notify": "save iptables"}, "module_options": {"chain": "FORWARD", "source": "{{ openvpn_server_network }}/24", "jump": "ACCEPT", "action": "insert", "comment": "Allow VPN forwarding"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Allow incoming SSH connections - iptables", "module": "iptables", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Allow incoming SSH connections - iptables", "notify": "save iptables"}, "module_options": {"chain": "INPUT", "protocol": "tcp", "destination_port": "{{ ansible_port | default(22) }}", "jump": "ACCEPT", "action": "insert", "comment": "Allow incoming SSH connection"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Allow incoming VPN connections - iptables", "module": "iptables", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Allow incoming VPN connections - iptables", "notify": "save iptables"}, "module_options": {"chain": "INPUT", "protocol": "{{ openvpn_proto }}", "destination_port": "{{ openvpn_port }}", "jump": "ACCEPT", "action": "insert", "comment": "Allow incoming VPN connection"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Accept packets from VPN tunnel adaptor - iptables", "module": "iptables", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Accept packets from VPN tunnel adaptor - iptables", "notify": "save iptables"}, "module_options": {"chain": "INPUT", "in_interface": "tun0", "jump": "ACCEPT", "action": "insert", "comment": "Accept packets from VPN tunnel adaptor"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Perform NAT readdressing - iptables", "module": "iptables", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Perform NAT readdressing - iptables", "when": "not openvpn_masquerade_not_snat", "notify": "save iptables"}, "module_options": {"table": "nat", "chain": "POSTROUTING", "source": "{{ openvpn_server_network }}/24", "to_source": "{{ ansible_default_ipv4.address }}", "jump": "SNAT", "action": "insert", "comment": "Perform NAT readdressing"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Perform NAT readdressing with MASQUERADE - iptables", "module": "iptables", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Perform NAT readdressing with MASQUERADE - iptables", "when": "openvpn_masquerade_not_snat", "notify": "save iptables"}, "module_options": {"table": "nat", "chain": "POSTROUTING", "source": "{{ openvpn_server_network }}/24", "jump": "MASQUERADE", "action": "insert", "comment": "Perform NAT readdressing"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Save existing iptables rule before start iptables service", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Save existing iptables rule before start iptables service", "when": "__iptables_installed.changed | bool"}, "module_options": "{{ iptables_save_command }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Enable iptables", "module": "service", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Enable iptables"}, "module_options": {"name": "{{ iptables_service }}", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check for firewalld", "module": "command", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Check for firewalld", "register": "firewalld", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "which firewall-cmd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Check for ufw", "module": "command", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Check for ufw", "register": "ufw", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "which ufw", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check for iptables", "module": "command", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Check for iptables", "register": "iptables", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "which iptables", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Fail on both firewalld & ufw", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Fail on both firewalld & ufw", "when": "openvpn_firewall == 'auto' and firewalld.rc == 0 and ufw.rc == 0"}, "module_options": {"msg": "Both FirewallD and UFW are detected, firewall situation is unknown"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Fail on no firewall detected", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Fail on no firewall detected", "when": "firewalld.rc != 0 and ufw.rc != 0 and iptables.rc != 0"}, "module_options": {"msg": "No firewall detected, install one before proceeding (firewalld||ufw||iptables)"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Add port rules (iptables)", "module": "include", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Add port rules (iptables)", "when": "(openvpn_firewall == 'iptables') or (openvpn_firewall == 'auto' and firewalld.rc != 0 and ufw.rc != 0 and iptables.rc == 0)"}, "module_options": "iptables.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Add port rules (firewalld)", "module": "include", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Add port rules (firewalld)", "when": "(openvpn_firewall == 'firewalld') or (openvpn_firewall == 'auto' and firewalld.rc == 0 and ufw.rc != 0)"}, "module_options": "firewalld.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Add port rules (ufw)", "module": "include", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Add port rules (ufw)", "when": "(openvpn_firewall == 'ufw') or (openvpn_firewall == 'auto' and firewalld.rc != 0 and ufw.rc == 0)"}, "module_options": "ufw.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Start ufw service", "module": "service", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Start ufw service"}, "module_options": {"name": "ufw", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Enable ufw", "module": "ufw", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Enable ufw"}, "module_options": {"direction": "incoming", "state": "enabled", "policy": "allow"}, "executable": "ufw", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Enable forwarding - ufw", "module": "lineinfile", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Enable forwarding - ufw"}, "module_options": {"dest": "/etc/default/ufw", "regexp": "^DEFAULT_FORWARD_POLICY=", "line": "DEFAULT_FORWARD_POLICY=\"ACCEPT\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Allow incoming VPN connections - ufw", "module": "ufw", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Allow incoming VPN connections - ufw"}, "module_options": {"direction": "in", "proto": "{{ openvpn_proto }}", "to_port": "{{ openvpn_port | string }}", "rule": "allow"}, "executable": "ufw", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Accept packets from VPN tunnel adaptor - ufw", "module": "ufw", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Accept packets from VPN tunnel adaptor - ufw"}, "module_options": {"direction": "in", "interface": "tun0", "rule": "allow"}, "executable": "ufw", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Setup nat table rules - ufw", "module": "blockinfile", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Setup nat table rules - ufw", "when": "not openvpn_masquerade_not_snat", "notify": ["restart ufw"]}, "module_options": {"dest": "/etc/ufw/before.rules", "state": "present", "insertbefore": "\\*filter", "block": "# OpenVPN config\n*nat\n:POSTROUTING ACCEPT [0:0]\n-A POSTROUTING -s {{ openvpn_server_network }}/24 -j SNAT --to-source {{ ansible_default_ipv4.address }}\nCOMMIT\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Setup nat table rules with MASQUERADE - ufw", "module": "blockinfile", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Setup nat table rules with MASQUERADE - ufw", "when": "openvpn_masquerade_not_snat", "notify": ["restart ufw"]}, "module_options": {"dest": "/etc/ufw/before.rules", "state": "present", "insertbefore": "\\*filter", "block": "# OpenVPN config\n*nat\n:POSTROUTING ACCEPT [0:0]\n-A POSTROUTING -s {{ openvpn_server_network }}/24 -j MASQUERADE\nCOMMIT\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Remove client config", "module": "file", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Remove client config", "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": {"path": "{{ openvpn_ovpn_dir }}/{{ item }}-{{ inventory_hostname }}.ovpn", "state": "absent", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Revoke certificates", "module": "command", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Revoke certificates", "changed_when": true, "args": {"chdir": "{{ openvpn_key_dir }}"}, "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": "sh revoke.sh {{ item }}.crt", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Remove client key", "module": "file", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Remove client key", "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": {"path": "{{ openvpn_key_dir }}/{{ item }}.key", "state": "absent", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Remove client csr", "module": "file", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Remove client csr", "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": {"path": "{{ openvpn_key_dir }}/{{ item }}.csr", "state": "absent", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create openvpn config file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create openvpn config file", "notify": ["restart openvpn"]}, "module_options": {"src": "server.conf.j2", "dest": "{{ openvpn_base_dir }}/{{ openvpn_config_file }}.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy up script if defined", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy up script if defined", "when": "openvpn_script_up is defined"}, "module_options": {"src": "{{ openvpn_script_up }}", "dest": "{{ openvpn_base_dir }}/up.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Copy down script if defined", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy down script if defined", "when": "openvpn_script_down is defined"}, "module_options": {"src": "{{ openvpn_script_down }}", "dest": "{{ openvpn_base_dir }}/down.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Copy client-connect script if defined", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy client-connect script if defined", "when": "openvpn_script_client_connect is defined"}, "module_options": {"src": "{{ openvpn_script_client_connect }}", "dest": "{{ openvpn_base_dir }}/client_connect.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Copy client-disconnect script if defined", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy client-disconnect script if defined", "when": "openvpn_script_client_disconnect is defined"}, "module_options": {"src": "{{ openvpn_script_client_disconnect }}", "dest": "{{ openvpn_base_dir }}/client_disconnect.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install LDAP config", "module": "template", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Install LDAP config", "when": "openvpn_use_ldap"}, "module_options": {"src": "ldap.conf.j2", "dest": "{{ openvpn_base_dir }}/auth/ldap.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create log directory", "module": "file", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create log directory"}, "module_options": {"dest": "{{ openvpn_log_dir }}", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Copy openvpn logrotate config file", "module": "template", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy openvpn logrotate config file", "when": "ansible_os_family != 'Solaris'"}, "module_options": {"src": "openvpn_logrotate.conf.j2", "dest": "/etc/logrotate.d/openvpn-{{ openvpn_config_file }}.conf", "owner": "root", "group": "root", "mode": 256}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create client config directory", "module": "file", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create client config directory", "when": "openvpn_client_config"}, "module_options": {"state": "directory", "path": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create client config directory", "module": "template", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create client config directory", "when": "openvpn_client_config", "with_dict": "{{ openvpn_client_config_present }}"}, "module_options": {"src": "client_ccd.j2", "dest": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}/{{ item.key }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Delete custom client config from client config directory", "module": "file", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Delete custom client config from client config directory", "when": "openvpn_client_config", "with_items": "{{ openvpn_client_config_absent }}"}, "module_options": {"path": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Delete client config directory", "module": "file", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Delete client config directory", "when": "not openvpn_client_config"}, "module_options": {"path": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Setup openvpn auto-start & start", "module": "service", "index": 12, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Setup openvpn auto-start & start", "when": "ansible_service_mgr != \"tail\""}, "module_options": {"name": "{{ openvpn_service_name }}", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Gather specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Gather specific variables"}, "module_options": "../vars/compile_ldap_plugin.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Check package re2c already exists", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Check package re2c already exists", "become": true, "register": "re2c_bin"}, "module_options": {"path": "{{ re2c_bin_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check package openvpn-auth-ldap already exists", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Check package openvpn-auth-ldap already exists", "become": true, "register": "openvpn_auth_ldap_bin"}, "module_options": {"path": "{{ openvpn_auth_ldap_bin_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install gcc objc repo", "module": "yum_repository", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Install gcc objc repo", "become": true}, "module_options": {"name": "csi-gcc", "description": "gcc compiler suite, with Objective-C which is removed from official Red Hat EL8 releases.", "baseurl": "{{ gcc_objc_repo.base_url }}", "gpgkey": "{{ gcc_objc_repo.key }}", "gpgcheck": true, "enabled": true}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install dev packages", "module": "package", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Install dev packages", "become": true}, "module_options": {"name": "{{ compile_develop_packages }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Download and unpack re2c", "module": "unarchive", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Download and unpack re2c", "become": true}, "module_options": {"src": "https://github.com/skvadrik/re2c/archive/{{ re2c_version }}.tar.gz", "dest": "{{ compile_source_dir }}", "creates": "{{ compile_source_dir }}/re2c-{{ re2c_version }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Compile re2c", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Compile re2c", "become": true, "args": {"chdir": "{{ compile_source_dir }}/re2c-{{ re2c_version }}", "creates": "{{ re2c_bin_path }}"}}, "module_options": "autoreconf -i -W all\n./configure\nmake\nmake install\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Download and unpack openvpn-auth-ldap", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Download and unpack openvpn-auth-ldap", "become": true}, "module_options": {"src": "https://github.com/threerings/openvpn-auth-ldap/archive/auth-ldap-{{ openvpn_auth_ldap_version }}.tar.gz", "dest": "{{ compile_source_dir }}", "creates": "{{ compile_source_dir }}/openvpn-auth-ldap-auth-ldap-{{ openvpn_auth_ldap_version }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create module directory", "module": "file", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Create module directory", "become": true}, "module_options": {"path": "{{ openvpn_auth_ldap_bin_path | dirname }}", "owner": "root", "group": "root", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Compile", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Compile", "become": true, "environment": {"PATH": "{{ re2c_bin_path | dirname }}:{{ lookup('env', 'PATH') }}"}, "args": {"chdir": "{{ compile_source_dir }}/openvpn-auth-ldap-auth-ldap-{{ openvpn_auth_ldap_version }}", "creates": "{{ openvpn_auth_ldap_bin_path }}"}}, "module_options": "autoconf\nautoheader\n./configure --prefix={{ openvpn_auth_ldap_plugin_dir_path }} --with-openvpn=/sbin/openvpn CFLAGS=\"-fPIC\" OBJCFLAGS=\"-std=gnu11\"\nmake\nmake install\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Cleanup dev packages", "module": "package", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Cleanup dev packages", "become": true, "when": ["compile_cleanup_dev_packages"]}, "module_options": {"name": "{{ compile_develop_packages }}", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Remove gcc objc repo", "module": "yum_repository", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Remove gcc objc repo", "become": true, "when": ["compile_cleanup_dev_packages"]}, "module_options": {"name": "csi-gcc", "state": "absent"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check systemd existence as Docker Guest", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Check systemd existence as Docker Guest", "when": "ansible_virtualization_role is defined and ansible_virtualization_type == \"docker\" and ansible_virtualization_role == \"guest\"", "register": "docker_stat_result"}, "module_options": {"path": "/bin/systemctl"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set systemd openvpn service name", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Set systemd openvpn service name", "when": "ansible_service_mgr == \"systemd\" or (docker_stat_result.stat is defined and docker_stat_result.stat.exists)"}, "module_options": {"openvpn_service_name": "openvpn@{{ openvpn_config_file }}.service"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set Fedora 27+ and CentOS 8 service name", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Set Fedora 27+ and CentOS 8 service name", "when": "(ansible_distribution == \"Fedora\" and ansible_distribution_version|int >= 27) or (\n  ( (ansible_distribution == \"CentOS\") or (ansible_distribution == \"RedHat\") )\n  and\n  (ansible_distribution_version | int) >= 8\n)"}, "module_options": {"openvpn_service_name": "openvpn-server@{{ openvpn_config_file }}.service"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Set Fedora 27+ and CentOS 8 OpenVPN base path", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Set Fedora 27+ and CentOS 8 OpenVPN base path", "when": "(ansible_distribution == \"Fedora\" and ansible_distribution_version|int >= 27) or (\n  (ansible_distribution == \"CentOS\" or ansible_distribution == \"RedHat\")\n  and\n  (ansible_distribution_version | int) >= 8\n)"}, "module_options": {"openvpn_base_dir": "/etc/openvpn/server"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Enable firewalld", "module": "service", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Enable firewalld"}, "module_options": {"name": "firewalld", "enabled": true, "masked": false, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install python2-firewall (Fedora)", "module": "package", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Install python2-firewall (Fedora)", "when": ["ansible_distribution == \"Fedora\"", "ansible_python.version.major == 2"]}, "module_options": {"name": "{{ python_firewall_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Enable OpenVPN Port (firewalld)", "module": "firewalld", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Enable OpenVPN Port (firewalld)"}, "module_options": {"port": "{{ openvpn_port }}/{{ openvpn_proto }}", "zone": "{{ firewalld_default_interface_zone }}", "permanent": true, "immediate": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Set tun0 interface to internal", "module": "firewalld", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Set tun0 interface to internal"}, "module_options": {"interface": "tun0", "zone": "internal", "permanent": true, "immediate": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Set default interface to external", "module": "firewalld", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Set default interface to external"}, "module_options": {"interface": "{{ ansible_default_ipv4.interface }}", "zone": "{{ firewalld_default_interface_zone }}", "permanent": true, "immediate": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Enable masquerading on external zone", "module": "firewalld", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Enable masquerading on external zone", "notify": ["restart firewalld"]}, "module_options": {"masquerade": true, "zone": "{{ firewalld_default_interface_zone }}", "permanent": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Check if ifcfg-{{ ansible_default_ipv4.interface }} exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Check if ifcfg-{{ ansible_default_ipv4.interface }} exists", "register": "ifcfg"}, "module_options": {"path": "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Persist default interface in ifcfg file", "module": "lineinfile", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Persist default interface in ifcfg file", "when": "ifcfg.stat.exists"}, "module_options": {"dest": "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}", "regexp": "^ZONE=", "line": "ZONE={{ firewalld_default_interface_zone }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create openvpn key directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Create openvpn key directory"}, "module_options": {"path": "{{ openvpn_key_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy openssl server/ca extensions", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy openssl server/ca extensions", "with_items": ["openssl-server.ext", "openssl-ca.ext"]}, "module_options": {"src": "{{ item }}", "dest": "{{ openvpn_key_dir }}", "owner": "root", "group": "root", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Copy CA key", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy CA key", "when": "openvpn_ca_key is defined"}, "module_options": {"content": "{{ openvpn_ca_key.key }}", "dest": "{{ openvpn_key_dir }}/ca-key.pem", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Copy CA cert", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy CA cert", "when": "openvpn_ca_key is defined"}, "module_options": {"content": "{{ openvpn_ca_key.crt }}", "dest": "{{ openvpn_key_dir }}/ca.crt", "mode": 292}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Generate CA key", "module": "command", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate CA key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ca-key.pem"}, "when": "openvpn_ca_key is not defined"}, "module_options": "openssl req -nodes -newkey rsa:{{ openvpn_rsa_bits }} -keyout ca-key.pem -out ca-csr.pem -days 3650 -subj /CN=OpenVPN-CA-{{ inventory_hostname[:53] }}/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Protect CA key", "module": "file", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Protect CA key", "when": "openvpn_ca_key is not defined"}, "module_options": {"path": "{{ openvpn_key_dir }}/ca-key.pem", "mode": 256}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Sign CA key", "module": "command", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Sign CA key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ca.crt"}, "when": "openvpn_ca_key is not defined"}, "module_options": "openssl x509 -req -in ca-csr.pem -out ca.crt -CAcreateserial -signkey ca-key.pem -sha256 -days 3650 -extfile openssl-ca.ext", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Generate server key", "module": "command", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate server key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "server.key"}}, "module_options": "openssl req -nodes -newkey rsa:{{ openvpn_rsa_bits }} -keyout server.key -out server.csr -days 3650 -subj /CN=OpenVPN-Server-{{ inventory_hostname[:49] }}/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Protect server key", "module": "file", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Protect server key"}, "module_options": {"path": "{{ openvpn_key_dir }}/server.key", "mode": 256}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Sign server key", "module": "command", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Sign server key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "server.crt"}}, "module_options": "openssl x509 -req -in server.csr -out server.crt -CA ca.crt -CAkey ca-key.pem -sha256 -days 3650 -CAcreateserial -extfile openssl-server.ext", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Copy tls-auth key", "module": "copy", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy tls-auth key", "when": "openvpn_tls_auth_key is defined"}, "module_options": {"content": "{{ openvpn_tls_auth_key }}", "dest": "{{ openvpn_key_dir }}/ta.key", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Generate tls-auth key", "module": "command", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate tls-auth key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ta.key"}, "when": "openvpn_tls_auth_key is not defined"}, "module_options": "openvpn --genkey --secret ta.key", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Copy pre-generated DH params", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy pre-generated DH params", "when": "openvpn_use_pregenerated_dh_params|bool"}, "module_options": {"src": "dh.pem", "dest": "{{ openvpn_key_dir }}", "owner": "root", "group": "root", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Generate dh params", "module": "command", "index": 13, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate dh params", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "dh.pem"}, "when": "not (openvpn_use_pregenerated_dh_params|bool)"}, "module_options": "openssl dhparam -out {{ openvpn_key_dir }}/dh.pem {{ openvpn_rsa_bits }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Install ca.conf config file", "module": "template", "index": 14, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Install ca.conf config file"}, "module_options": {"src": "ca.conf.j2", "dest": "{{ openvpn_key_dir }}/ca.conf", "owner": "root", "group": "root", "mode": 484}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Create initial certificate revocation list squence number", "module": "shell", "index": 15, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Create initial certificate revocation list squence number", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "crl_number"}}, "module_options": "echo 00 > crl_number", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Generate tls-auth key", "module": "command", "index": 16, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate tls-auth key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ta.key"}, "when": "openvpn_tls_auth_key is not defined"}, "module_options": "openvpn --genkey --secret ta.key", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Install revocation script", "module": "template", "index": 17, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Install revocation script"}, "module_options": {"src": "revoke.sh.j2", "dest": "{{ openvpn_key_dir }}/revoke.sh", "owner": "root", "group": "root", "mode": 484}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Check if certificate revocation list database exists", "module": "stat", "index": 18, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Check if certificate revocation list database exists", "register": "file_result"}, "module_options": {"path": "{{ openvpn_key_dir }}/index.txt"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Create certificate revocation list database if required", "module": "file", "index": 19, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Create certificate revocation list database if required", "when": "not file_result.stat.exists"}, "module_options": {"path": "{{ openvpn_key_dir }}/index.txt", "state": "touch", "mode": 420}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Set up certificate revocation list", "module": "command", "index": 20, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Set up certificate revocation list", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "{{ openvpn_key_dir }}/ca-crl.pem"}}, "module_options": "sh revoke.sh", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Install crl-cron script", "module": "template", "index": 21, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Install crl-cron script"}, "module_options": {"src": "crl-cron.sh.j2", "dest": "{{ openvpn_base_dir }}/crl-cron.sh", "owner": "root", "group": "root", "mode": 484}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Add cron to check every Saturday if the CRL needs to be renewed", "module": "cron", "index": 22, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Add cron to check every Saturday if the CRL needs to be renewed", "when": "not ci_build"}, "module_options": {"name": "check if CRL will expire soon", "special_time": "weekly", "job": "sh {{ openvpn_base_dir }}/crl-cron.sh"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install EPEL", "module": "package", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install EPEL", "when": "ansible_distribution == \"CentOS\" or ansible_distribution==\"RedHat\""}, "module_options": {"name": "{{ epel_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install python2-dnf for Fedora dnf support", "module": "raw", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install python2-dnf for Fedora dnf support", "when": ["ansible_distribution == \"Fedora\"", "ansible_python.version.major == 2"], "register": "fedora_dnf", "changed_when": "\"Nothing to do.\" not in fedora_dnf.stdout"}, "module_options": "dnf install -y python2-dnf", "executable": "raw", "executable_type": "Module", "fqcn": "ansible.builtin.raw", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install openvpn", "module": "package", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install openvpn", "with_items": ["{{ openvpn_package_name }}", "{{ openssl_package_name }}"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install LDAP plugin", "module": "package", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install LDAP plugin", "become": true, "when": ["openvpn_use_ldap", "ansible_distribution == \"CentOS\" and ansible_distribution_major_version != \"8\""]}, "module_options": {"name": "{{ openvpn_ldap_plugin_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Compile LDAP plugin", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Compile LDAP plugin", "when": ["openvpn_use_ldap", "ansible_distribution == \"CentOS\" and ansible_distribution_major_version == \"8\""]}, "module_options": "compile_ldap_plugin.yml", "executable": "compile_ldap_plugin.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Ensure group 'nogroup' is present", "module": "group", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Ensure group 'nogroup' is present"}, "module_options": {"name": "nogroup", "state": "present", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include vars for OpenVPN installation", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Include vars for OpenVPN installation", "with_first_found": ["../vars/{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml", "../vars/{{ ansible_distribution }}.yml", "../vars/{{ ansible_os_family }}.yml", "../vars/empty.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set facts", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Set facts"}, "module_options": "set_facts.yml", "executable": "set_facts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Uninstall OpenVPN", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Uninstall OpenVPN", "when": "openvpn_uninstall"}, "module_options": "uninstall.yml", "executable": "uninstall.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install OpenVPN", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Install OpenVPN", "tags": ["install"]}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Copy or Generate server keys", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Copy or Generate server keys"}, "module_options": "server_keys.yml", "executable": "server_keys.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Enable ipv4 forwarding", "module": "sysctl", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Enable ipv4 forwarding", "failed_when": false, "when": "not ci_build"}, "module_options": {"name": "net.ipv4.ip_forward", "value": "1", "ignoreerrors": true}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Enable ipv6 forwarding", "module": "sysctl", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Enable ipv6 forwarding", "when": "openvpn_server_ipv6_network is defined and not ci_build"}, "module_options": {"name": "net.ipv6.conf.all.forwarding", "value": "1", "ignoreerrors": true}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Detect firewall type", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Detect firewall type", "when": ["not ci_build", "manage_firewall_rules"], "tags": ["firewall"]}, "module_options": "firewall.yml", "executable": "firewall.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Configure SELinux", "module": "include", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Configure SELinux", "when": ["ansible_selinux.status == \"enabled\""]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Compare existing certs against 'clients' variable", "module": "import_tasks", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Compare existing certs against 'clients' variable", "when": "openvpn_sync_certs", "tags": ["sync_certs"]}, "module_options": "cert_sync_detection.yml", "executable": "cert_sync_detection.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Generate client configs", "module": "import_tasks", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Generate client configs", "when": "clients is defined"}, "module_options": "client_keys.yml", "executable": "client_keys.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Generate revocation list and clean up", "module": "import_tasks", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Generate revocation list and clean up", "when": "(openvpn_revoke_these_certs is defined) or (openvpn_sync_certs and cert_sync_certs_to_revoke.stdout_lines | length > 0)"}, "module_options": "revocation.yml", "executable": "revocation.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Configure OpenVPN server", "module": "import_tasks", "index": 12, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Configure OpenVPN server"}, "module_options": "config.yml", "executable": "config.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "[cert sync] Create temporary file for existing certs", "module": "ansible.builtin.tempfile", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Create temporary file for existing certs", "register": "tempfile_existing"}, "module_options": {"state": "file", "suffix": "temp"}, "executable": "ansible.builtin.tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "[cert sync] Create temporary file for expected certs", "module": "ansible.builtin.tempfile", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Create temporary file for expected certs", "register": "tempfile_expected"}, "module_options": {"state": "file", "suffix": "temp"}, "executable": "ansible.builtin.tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "[cert sync] Write expected client list to temp file for comparison with existing certs", "module": "ansible.builtin.template", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Write expected client list to temp file for comparison with existing certs", "when": "openvpn_sync_certs"}, "module_options": {"src": "cert_sync_expected_clients.j2", "dest": "{{ tempfile_expected.path }}", "mode": 420}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "[cert sync] Get existing certs", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Get existing certs", "when": "openvpn_sync_certs"}, "module_options": {"cmd": "set -o pipefail\nls -1 *.csr | { grep -v server.csr || true; } | sort | cut -f1 -d'.' > {{ tempfile_existing.path }}\n", "chdir": "{{ openvpn_key_dir }}", "executable": "/bin/bash"}, "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "[cert sync] Find certs that exist but aren't supposed to (on disk, but not in client list)", "module": "command", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Find certs that exist but aren't supposed to (on disk, but not in client list)", "register": "openvpn_cert_sync_revoke", "when": "openvpn_sync_certs"}, "module_options": {"cmd": "comm -23 {{ tempfile_existing.path }} {{ tempfile_expected.path }}"}, "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "[cert sync] Debug: Certs to revoke (skipped if none)", "module": "ansible.builtin.debug", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Debug: Certs to revoke (skipped if none)", "when": "openvpn_cert_sync_revoke.stdout_lines | length > 0"}, "module_options": {"msg": "Will revoke additional certs: {{ openvpn_cert_sync_revoke.stdout_lines | join(', ') }}"}, "executable": "ansible.builtin.debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "[cert sync] Cleanup temp files", "module": "ansible.builtin.file", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Cleanup temp files", "with_items": ["{{ tempfile_existing.path }}", "{{ tempfile_expected.path }}"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml": {"py/object": "struct4.TaskFile", "name": "uninstall.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "tasks": [{"py/object": "struct4.Task", "name": "Disable openvpn auto-start & start", "module": "service", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Disable openvpn auto-start & start"}, "module_options": {"name": "{{ openvpn_service_name }}", "enabled": false, "state": "stopped"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Wipe out config directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Wipe out config directory"}, "module_options": {"path": "{{ openvpn_base_dir }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove openvpn logrotate config file", "module": "file", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Remove openvpn logrotate config file"}, "module_options": {"path": "/etc/logrotate.d/openvpn.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall OpenVPN", "module": "package", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Uninstall OpenVPN"}, "module_options": {"name": "{{ openvpn_package_name }}", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall LDAP plugin", "module": "package", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Uninstall LDAP plugin", "when": "openvpn_use_ldap"}, "module_options": {"name": "{{ openvpn_ldap_plugin_package_name }}", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Terminate playbook", "module": "fail", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Terminate playbook"}, "module_options": {"msg": "OpenVPN uninstalled, playbook stopped"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/selinux.yml": {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "SELinux - check if module was loaded", "module": "command", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/selinux.yml", "options": {"name": "SELinux - check if module was loaded", "register": "semodule_loaded", "changed_when": "openvpn_selinux_module not in semodule_loaded.stdout", "notify": ["build and install policy"]}, "module_options": "semodule --list-modules", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux - copy type enforcement file", "module": "template", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/selinux.yml", "options": {"name": "SELinux - copy type enforcement file", "notify": ["build and install policy"]}, "module_options": {"src": "selinux_module.te.j2", "dest": "/var/lib/selinux/{{ openvpn_selinux_module }}.te", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml": {"py/object": "struct4.TaskFile", "name": "client_keys.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create openvpn ovpn file directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Create openvpn ovpn file directory"}, "module_options": {"path": "{{ openvpn_ovpn_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy openssl client extensions", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Copy openssl client extensions"}, "module_options": {"src": "openssl-client.ext", "dest": "{{ openvpn_key_dir }}", "owner": "root", "group": "root", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate client key", "module": "command", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Generate client key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "{{ item }}.key"}, "with_items": ["{{ clients }}"]}, "module_options": "openssl req -nodes -newkey rsa:{{ openvpn_rsa_bits }} -keyout {{ item }}.key -out {{ item }}.csr -days 3650 -subj /CN=OpenVPN-Client-{{ inventory_hostname[:24] }}-{{ item[:24] }}/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Protect client keys", "module": "file", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Protect client keys", "with_items": ["{{ clients }}"]}, "module_options": {"path": "{{ openvpn_key_dir }}/{{ item }}.key", "mode": 256}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sign client key", "module": "command", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Sign client key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "{{ item }}.crt"}, "with_items": ["{{ clients }}"]}, "module_options": "openssl x509 -req -in {{ item }}.csr -out {{ item }}.crt -CA ca.crt -CAkey ca-key.pem -sha256 -days 3650 -extfile openssl-client.ext", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register server ca key", "module": "slurp", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register server ca key", "register": "ca_cert"}, "module_options": {"src": "{{ openvpn_key_dir }}/ca.crt"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register tls-auth key", "module": "slurp", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register tls-auth key", "register": "tls_auth"}, "module_options": {"src": "{{ openvpn_key_dir }}/ta.key"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register client certs", "module": "slurp", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register client certs", "with_items": ["{{ clients }}"], "register": "client_certs"}, "module_options": {"src": "{{ openvpn_key_dir }}/{{ item }}.crt"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register client keys", "module": "slurp", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register client keys", "with_items": ["{{ clients }}"], "register": "client_keys"}, "module_options": {"src": "{{ openvpn_key_dir }}/{{ item }}.key"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate client config", "module": "template", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Generate client config", "no_log": "{{ openvpn_client_config_no_log }}", "with_together": ["{{ client_certs.results }}", "{{ client_keys.results }}"]}, "module_options": {"src": "client.ovpn.j2", "dest": "{{ openvpn_ovpn_dir }}/{{ item.0.item }}-{{ inventory_hostname }}.ovpn", "owner": "root", "group": "root", "mode": 256}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fetch client config", "module": "fetch", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Fetch client config", "when": "openvpn_fetch_client_configs", "with_items": ["{{ clients }}"]}, "module_options": {"src": "{{ openvpn_ovpn_dir }}/{{ item }}-{{ inventory_hostname }}.ovpn", "dest": "{{ openvpn_fetch_client_configs_dir }}/{{ item }}/{{ inventory_hostname }}{{ openvpn_fetch_client_configs_suffix }}.ovpn", "flat": true}, "executable": "fetch", "executable_type": "Module", "fqcn": "ansible.builtin.fetch", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml": {"py/object": "struct4.TaskFile", "name": "iptables.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Change facts to use netfilter-persistent on Debian >= 9 or Ubuntu >= 16", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Change facts to use netfilter-persistent on Debian >= 9 or Ubuntu >= 16", "when": "(ansible_distribution == 'Debian' and ansible_distribution_version|int >= 9) or (ansible_distribution == 'Ubuntu' and ansible_lsb.major_release|int >= 16)"}, "module_options": {"iptables_save_command": "/usr/sbin/netfilter-persistent save", "iptables_service": "netfilter-persistent"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install iptables-persistent (Debian/Ubuntu)", "module": "package", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Install iptables-persistent (Debian/Ubuntu)", "register": "__iptables_installed", "when": "ansible_os_family == \"Debian\""}, "module_options": {"name": "{{ iptables_persistent_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install iptables-services (RedHat/CentOS)", "module": "package", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Install iptables-services (RedHat/CentOS)", "register": "__iptables_installed", "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": "{{ iptables_services_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow VPN forwarding - iptables", "module": "iptables", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Allow VPN forwarding - iptables", "notify": "save iptables"}, "module_options": {"chain": "FORWARD", "source": "{{ openvpn_server_network }}/24", "jump": "ACCEPT", "action": "insert", "comment": "Allow VPN forwarding"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow incoming SSH connections - iptables", "module": "iptables", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Allow incoming SSH connections - iptables", "notify": "save iptables"}, "module_options": {"chain": "INPUT", "protocol": "tcp", "destination_port": "{{ ansible_port | default(22) }}", "jump": "ACCEPT", "action": "insert", "comment": "Allow incoming SSH connection"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow incoming VPN connections - iptables", "module": "iptables", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Allow incoming VPN connections - iptables", "notify": "save iptables"}, "module_options": {"chain": "INPUT", "protocol": "{{ openvpn_proto }}", "destination_port": "{{ openvpn_port }}", "jump": "ACCEPT", "action": "insert", "comment": "Allow incoming VPN connection"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Accept packets from VPN tunnel adaptor - iptables", "module": "iptables", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Accept packets from VPN tunnel adaptor - iptables", "notify": "save iptables"}, "module_options": {"chain": "INPUT", "in_interface": "tun0", "jump": "ACCEPT", "action": "insert", "comment": "Accept packets from VPN tunnel adaptor"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Perform NAT readdressing - iptables", "module": "iptables", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Perform NAT readdressing - iptables", "when": "not openvpn_masquerade_not_snat", "notify": "save iptables"}, "module_options": {"table": "nat", "chain": "POSTROUTING", "source": "{{ openvpn_server_network }}/24", "to_source": "{{ ansible_default_ipv4.address }}", "jump": "SNAT", "action": "insert", "comment": "Perform NAT readdressing"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Perform NAT readdressing with MASQUERADE - iptables", "module": "iptables", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Perform NAT readdressing with MASQUERADE - iptables", "when": "openvpn_masquerade_not_snat", "notify": "save iptables"}, "module_options": {"table": "nat", "chain": "POSTROUTING", "source": "{{ openvpn_server_network }}/24", "jump": "MASQUERADE", "action": "insert", "comment": "Perform NAT readdressing"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save existing iptables rule before start iptables service", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Save existing iptables rule before start iptables service", "when": "__iptables_installed.changed | bool"}, "module_options": "{{ iptables_save_command }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable iptables", "module": "service", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Enable iptables"}, "module_options": {"name": "{{ iptables_service }}", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml": {"py/object": "struct4.TaskFile", "name": "firewall.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check for firewalld", "module": "command", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Check for firewalld", "register": "firewalld", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "which firewall-cmd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for ufw", "module": "command", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Check for ufw", "register": "ufw", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "which ufw", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for iptables", "module": "command", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Check for iptables", "register": "iptables", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "which iptables", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail on both firewalld & ufw", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Fail on both firewalld & ufw", "when": "openvpn_firewall == 'auto' and firewalld.rc == 0 and ufw.rc == 0"}, "module_options": {"msg": "Both FirewallD and UFW are detected, firewall situation is unknown"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail on no firewall detected", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Fail on no firewall detected", "when": "firewalld.rc != 0 and ufw.rc != 0 and iptables.rc != 0"}, "module_options": {"msg": "No firewall detected, install one before proceeding (firewalld||ufw||iptables)"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add port rules (iptables)", "module": "include", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Add port rules (iptables)", "when": "(openvpn_firewall == 'iptables') or (openvpn_firewall == 'auto' and firewalld.rc != 0 and ufw.rc != 0 and iptables.rc == 0)"}, "module_options": "iptables.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add port rules (firewalld)", "module": "include", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Add port rules (firewalld)", "when": "(openvpn_firewall == 'firewalld') or (openvpn_firewall == 'auto' and firewalld.rc == 0 and ufw.rc != 0)"}, "module_options": "firewalld.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add port rules (ufw)", "module": "include", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Add port rules (ufw)", "when": "(openvpn_firewall == 'ufw') or (openvpn_firewall == 'auto' and firewalld.rc != 0 and ufw.rc == 0)"}, "module_options": "ufw.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml": {"py/object": "struct4.TaskFile", "name": "ufw.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "tasks": [{"py/object": "struct4.Task", "name": "Start ufw service", "module": "service", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Start ufw service"}, "module_options": {"name": "ufw", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ufw", "module": "ufw", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Enable ufw"}, "module_options": {"direction": "incoming", "state": "enabled", "policy": "allow"}, "executable": "ufw", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable forwarding - ufw", "module": "lineinfile", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Enable forwarding - ufw"}, "module_options": {"dest": "/etc/default/ufw", "regexp": "^DEFAULT_FORWARD_POLICY=", "line": "DEFAULT_FORWARD_POLICY=\"ACCEPT\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow incoming VPN connections - ufw", "module": "ufw", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Allow incoming VPN connections - ufw"}, "module_options": {"direction": "in", "proto": "{{ openvpn_proto }}", "to_port": "{{ openvpn_port | string }}", "rule": "allow"}, "executable": "ufw", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Accept packets from VPN tunnel adaptor - ufw", "module": "ufw", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Accept packets from VPN tunnel adaptor - ufw"}, "module_options": {"direction": "in", "interface": "tun0", "rule": "allow"}, "executable": "ufw", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup nat table rules - ufw", "module": "blockinfile", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Setup nat table rules - ufw", "when": "not openvpn_masquerade_not_snat", "notify": ["restart ufw"]}, "module_options": {"dest": "/etc/ufw/before.rules", "state": "present", "insertbefore": "\\*filter", "block": "# OpenVPN config\n*nat\n:POSTROUTING ACCEPT [0:0]\n-A POSTROUTING -s {{ openvpn_server_network }}/24 -j SNAT --to-source {{ ansible_default_ipv4.address }}\nCOMMIT\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup nat table rules with MASQUERADE - ufw", "module": "blockinfile", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Setup nat table rules with MASQUERADE - ufw", "when": "openvpn_masquerade_not_snat", "notify": ["restart ufw"]}, "module_options": {"dest": "/etc/ufw/before.rules", "state": "present", "insertbefore": "\\*filter", "block": "# OpenVPN config\n*nat\n:POSTROUTING ACCEPT [0:0]\n-A POSTROUTING -s {{ openvpn_server_network }}/24 -j MASQUERADE\nCOMMIT\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml": {"py/object": "struct4.TaskFile", "name": "revocation.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "tasks": [{"py/object": "struct4.Task", "name": "Remove client config", "module": "file", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Remove client config", "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": {"path": "{{ openvpn_ovpn_dir }}/{{ item }}-{{ inventory_hostname }}.ovpn", "state": "absent", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Revoke certificates", "module": "command", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Revoke certificates", "changed_when": true, "args": {"chdir": "{{ openvpn_key_dir }}"}, "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": "sh revoke.sh {{ item }}.crt", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove client key", "module": "file", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Remove client key", "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": {"path": "{{ openvpn_key_dir }}/{{ item }}.key", "state": "absent", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove client csr", "module": "file", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Remove client csr", "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": {"path": "{{ openvpn_key_dir }}/{{ item }}.csr", "state": "absent", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml": {"py/object": "struct4.TaskFile", "name": "config.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create openvpn config file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create openvpn config file", "notify": ["restart openvpn"]}, "module_options": {"src": "server.conf.j2", "dest": "{{ openvpn_base_dir }}/{{ openvpn_config_file }}.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy up script if defined", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy up script if defined", "when": "openvpn_script_up is defined"}, "module_options": {"src": "{{ openvpn_script_up }}", "dest": "{{ openvpn_base_dir }}/up.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy down script if defined", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy down script if defined", "when": "openvpn_script_down is defined"}, "module_options": {"src": "{{ openvpn_script_down }}", "dest": "{{ openvpn_base_dir }}/down.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy client-connect script if defined", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy client-connect script if defined", "when": "openvpn_script_client_connect is defined"}, "module_options": {"src": "{{ openvpn_script_client_connect }}", "dest": "{{ openvpn_base_dir }}/client_connect.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy client-disconnect script if defined", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy client-disconnect script if defined", "when": "openvpn_script_client_disconnect is defined"}, "module_options": {"src": "{{ openvpn_script_client_disconnect }}", "dest": "{{ openvpn_base_dir }}/client_disconnect.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install LDAP config", "module": "template", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Install LDAP config", "when": "openvpn_use_ldap"}, "module_options": {"src": "ldap.conf.j2", "dest": "{{ openvpn_base_dir }}/auth/ldap.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log directory", "module": "file", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create log directory"}, "module_options": {"dest": "{{ openvpn_log_dir }}", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy openvpn logrotate config file", "module": "template", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy openvpn logrotate config file", "when": "ansible_os_family != 'Solaris'"}, "module_options": {"src": "openvpn_logrotate.conf.j2", "dest": "/etc/logrotate.d/openvpn-{{ openvpn_config_file }}.conf", "owner": "root", "group": "root", "mode": 256}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create client config directory", "module": "file", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create client config directory", "when": "openvpn_client_config"}, "module_options": {"state": "directory", "path": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create client config directory", "module": "template", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create client config directory", "when": "openvpn_client_config", "with_dict": "{{ openvpn_client_config_present }}"}, "module_options": {"src": "client_ccd.j2", "dest": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}/{{ item.key }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete custom client config from client config directory", "module": "file", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Delete custom client config from client config directory", "when": "openvpn_client_config", "with_items": "{{ openvpn_client_config_absent }}"}, "module_options": {"path": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete client config directory", "module": "file", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Delete client config directory", "when": "not openvpn_client_config"}, "module_options": {"path": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup openvpn auto-start & start", "module": "service", "index": 12, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Setup openvpn auto-start & start", "when": "ansible_service_mgr != \"tail\""}, "module_options": {"name": "{{ openvpn_service_name }}", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml": {"py/object": "struct4.TaskFile", "name": "compile_ldap_plugin.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Gather specific variables"}, "module_options": "../vars/compile_ldap_plugin.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check package re2c already exists", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Check package re2c already exists", "become": true, "register": "re2c_bin"}, "module_options": {"path": "{{ re2c_bin_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check package openvpn-auth-ldap already exists", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Check package openvpn-auth-ldap already exists", "become": true, "register": "openvpn_auth_ldap_bin"}, "module_options": {"path": "{{ openvpn_auth_ldap_bin_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install gcc objc repo", "module": "yum_repository", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Install gcc objc repo", "become": true}, "module_options": {"name": "csi-gcc", "description": "gcc compiler suite, with Objective-C which is removed from official Red Hat EL8 releases.", "baseurl": "{{ gcc_objc_repo.base_url }}", "gpgkey": "{{ gcc_objc_repo.key }}", "gpgcheck": true, "enabled": true}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install dev packages", "module": "package", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Install dev packages", "become": true}, "module_options": {"name": "{{ compile_develop_packages }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and unpack re2c", "module": "unarchive", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Download and unpack re2c", "become": true}, "module_options": {"src": "https://github.com/skvadrik/re2c/archive/{{ re2c_version }}.tar.gz", "dest": "{{ compile_source_dir }}", "creates": "{{ compile_source_dir }}/re2c-{{ re2c_version }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compile re2c", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Compile re2c", "become": true, "args": {"chdir": "{{ compile_source_dir }}/re2c-{{ re2c_version }}", "creates": "{{ re2c_bin_path }}"}}, "module_options": "autoreconf -i -W all\n./configure\nmake\nmake install\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and unpack openvpn-auth-ldap", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Download and unpack openvpn-auth-ldap", "become": true}, "module_options": {"src": "https://github.com/threerings/openvpn-auth-ldap/archive/auth-ldap-{{ openvpn_auth_ldap_version }}.tar.gz", "dest": "{{ compile_source_dir }}", "creates": "{{ compile_source_dir }}/openvpn-auth-ldap-auth-ldap-{{ openvpn_auth_ldap_version }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create module directory", "module": "file", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Create module directory", "become": true}, "module_options": {"path": "{{ openvpn_auth_ldap_bin_path | dirname }}", "owner": "root", "group": "root", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compile", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Compile", "become": true, "environment": {"PATH": "{{ re2c_bin_path | dirname }}:{{ lookup('env', 'PATH') }}"}, "args": {"chdir": "{{ compile_source_dir }}/openvpn-auth-ldap-auth-ldap-{{ openvpn_auth_ldap_version }}", "creates": "{{ openvpn_auth_ldap_bin_path }}"}}, "module_options": "autoconf\nautoheader\n./configure --prefix={{ openvpn_auth_ldap_plugin_dir_path }} --with-openvpn=/sbin/openvpn CFLAGS=\"-fPIC\" OBJCFLAGS=\"-std=gnu11\"\nmake\nmake install\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup dev packages", "module": "package", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Cleanup dev packages", "become": true, "when": ["compile_cleanup_dev_packages"]}, "module_options": {"name": "{{ compile_develop_packages }}", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove gcc objc repo", "module": "yum_repository", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Remove gcc objc repo", "become": true, "when": ["compile_cleanup_dev_packages"]}, "module_options": {"name": "csi-gcc", "state": "absent"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml": {"py/object": "struct4.TaskFile", "name": "set_facts.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check systemd existence as Docker Guest", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Check systemd existence as Docker Guest", "when": "ansible_virtualization_role is defined and ansible_virtualization_type == \"docker\" and ansible_virtualization_role == \"guest\"", "register": "docker_stat_result"}, "module_options": {"path": "/bin/systemctl"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd openvpn service name", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Set systemd openvpn service name", "when": "ansible_service_mgr == \"systemd\" or (docker_stat_result.stat is defined and docker_stat_result.stat.exists)"}, "module_options": {"openvpn_service_name": "openvpn@{{ openvpn_config_file }}.service"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Fedora 27+ and CentOS 8 service name", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Set Fedora 27+ and CentOS 8 service name", "when": "(ansible_distribution == \"Fedora\" and ansible_distribution_version|int >= 27) or (\n  ( (ansible_distribution == \"CentOS\") or (ansible_distribution == \"RedHat\") )\n  and\n  (ansible_distribution_version | int) >= 8\n)"}, "module_options": {"openvpn_service_name": "openvpn-server@{{ openvpn_config_file }}.service"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Fedora 27+ and CentOS 8 OpenVPN base path", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Set Fedora 27+ and CentOS 8 OpenVPN base path", "when": "(ansible_distribution == \"Fedora\" and ansible_distribution_version|int >= 27) or (\n  (ansible_distribution == \"CentOS\" or ansible_distribution == \"RedHat\")\n  and\n  (ansible_distribution_version | int) >= 8\n)"}, "module_options": {"openvpn_base_dir": "/etc/openvpn/server"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml": {"py/object": "struct4.TaskFile", "name": "firewalld.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "tasks": [{"py/object": "struct4.Task", "name": "Enable firewalld", "module": "service", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Enable firewalld"}, "module_options": {"name": "firewalld", "enabled": true, "masked": false, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install python2-firewall (Fedora)", "module": "package", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Install python2-firewall (Fedora)", "when": ["ansible_distribution == \"Fedora\"", "ansible_python.version.major == 2"]}, "module_options": {"name": "{{ python_firewall_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable OpenVPN Port (firewalld)", "module": "firewalld", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Enable OpenVPN Port (firewalld)"}, "module_options": {"port": "{{ openvpn_port }}/{{ openvpn_proto }}", "zone": "{{ firewalld_default_interface_zone }}", "permanent": true, "immediate": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set tun0 interface to internal", "module": "firewalld", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Set tun0 interface to internal"}, "module_options": {"interface": "tun0", "zone": "internal", "permanent": true, "immediate": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default interface to external", "module": "firewalld", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Set default interface to external"}, "module_options": {"interface": "{{ ansible_default_ipv4.interface }}", "zone": "{{ firewalld_default_interface_zone }}", "permanent": true, "immediate": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable masquerading on external zone", "module": "firewalld", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Enable masquerading on external zone", "notify": ["restart firewalld"]}, "module_options": {"masquerade": true, "zone": "{{ firewalld_default_interface_zone }}", "permanent": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if ifcfg-{{ ansible_default_ipv4.interface }} exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Check if ifcfg-{{ ansible_default_ipv4.interface }} exists", "register": "ifcfg"}, "module_options": {"path": "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Persist default interface in ifcfg file", "module": "lineinfile", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Persist default interface in ifcfg file", "when": "ifcfg.stat.exists"}, "module_options": {"dest": "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}", "regexp": "^ZONE=", "line": "ZONE={{ firewalld_default_interface_zone }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml": {"py/object": "struct4.TaskFile", "name": "server_keys.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create openvpn key directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Create openvpn key directory"}, "module_options": {"path": "{{ openvpn_key_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy openssl server/ca extensions", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy openssl server/ca extensions", "with_items": ["openssl-server.ext", "openssl-ca.ext"]}, "module_options": {"src": "{{ item }}", "dest": "{{ openvpn_key_dir }}", "owner": "root", "group": "root", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy CA key", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy CA key", "when": "openvpn_ca_key is defined"}, "module_options": {"content": "{{ openvpn_ca_key.key }}", "dest": "{{ openvpn_key_dir }}/ca-key.pem", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy CA cert", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy CA cert", "when": "openvpn_ca_key is defined"}, "module_options": {"content": "{{ openvpn_ca_key.crt }}", "dest": "{{ openvpn_key_dir }}/ca.crt", "mode": 292}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate CA key", "module": "command", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate CA key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ca-key.pem"}, "when": "openvpn_ca_key is not defined"}, "module_options": "openssl req -nodes -newkey rsa:{{ openvpn_rsa_bits }} -keyout ca-key.pem -out ca-csr.pem -days 3650 -subj /CN=OpenVPN-CA-{{ inventory_hostname[:53] }}/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Protect CA key", "module": "file", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Protect CA key", "when": "openvpn_ca_key is not defined"}, "module_options": {"path": "{{ openvpn_key_dir }}/ca-key.pem", "mode": 256}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sign CA key", "module": "command", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Sign CA key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ca.crt"}, "when": "openvpn_ca_key is not defined"}, "module_options": "openssl x509 -req -in ca-csr.pem -out ca.crt -CAcreateserial -signkey ca-key.pem -sha256 -days 3650 -extfile openssl-ca.ext", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate server key", "module": "command", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate server key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "server.key"}}, "module_options": "openssl req -nodes -newkey rsa:{{ openvpn_rsa_bits }} -keyout server.key -out server.csr -days 3650 -subj /CN=OpenVPN-Server-{{ inventory_hostname[:49] }}/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Protect server key", "module": "file", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Protect server key"}, "module_options": {"path": "{{ openvpn_key_dir }}/server.key", "mode": 256}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sign server key", "module": "command", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Sign server key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "server.crt"}}, "module_options": "openssl x509 -req -in server.csr -out server.crt -CA ca.crt -CAkey ca-key.pem -sha256 -days 3650 -CAcreateserial -extfile openssl-server.ext", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy tls-auth key", "module": "copy", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy tls-auth key", "when": "openvpn_tls_auth_key is defined"}, "module_options": {"content": "{{ openvpn_tls_auth_key }}", "dest": "{{ openvpn_key_dir }}/ta.key", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate tls-auth key", "module": "command", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate tls-auth key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ta.key"}, "when": "openvpn_tls_auth_key is not defined"}, "module_options": "openvpn --genkey --secret ta.key", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy pre-generated DH params", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy pre-generated DH params", "when": "openvpn_use_pregenerated_dh_params|bool"}, "module_options": {"src": "dh.pem", "dest": "{{ openvpn_key_dir }}", "owner": "root", "group": "root", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate dh params", "module": "command", "index": 13, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate dh params", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "dh.pem"}, "when": "not (openvpn_use_pregenerated_dh_params|bool)"}, "module_options": "openssl dhparam -out {{ openvpn_key_dir }}/dh.pem {{ openvpn_rsa_bits }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install ca.conf config file", "module": "template", "index": 14, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Install ca.conf config file"}, "module_options": {"src": "ca.conf.j2", "dest": "{{ openvpn_key_dir }}/ca.conf", "owner": "root", "group": "root", "mode": 484}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create initial certificate revocation list squence number", "module": "shell", "index": 15, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Create initial certificate revocation list squence number", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "crl_number"}}, "module_options": "echo 00 > crl_number", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate tls-auth key", "module": "command", "index": 16, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate tls-auth key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ta.key"}, "when": "openvpn_tls_auth_key is not defined"}, "module_options": "openvpn --genkey --secret ta.key", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install revocation script", "module": "template", "index": 17, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Install revocation script"}, "module_options": {"src": "revoke.sh.j2", "dest": "{{ openvpn_key_dir }}/revoke.sh", "owner": "root", "group": "root", "mode": 484}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if certificate revocation list database exists", "module": "stat", "index": 18, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Check if certificate revocation list database exists", "register": "file_result"}, "module_options": {"path": "{{ openvpn_key_dir }}/index.txt"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create certificate revocation list database if required", "module": "file", "index": 19, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Create certificate revocation list database if required", "when": "not file_result.stat.exists"}, "module_options": {"path": "{{ openvpn_key_dir }}/index.txt", "state": "touch", "mode": 420}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set up certificate revocation list", "module": "command", "index": 20, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Set up certificate revocation list", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "{{ openvpn_key_dir }}/ca-crl.pem"}}, "module_options": "sh revoke.sh", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install crl-cron script", "module": "template", "index": 21, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Install crl-cron script"}, "module_options": {"src": "crl-cron.sh.j2", "dest": "{{ openvpn_base_dir }}/crl-cron.sh", "owner": "root", "group": "root", "mode": 484}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add cron to check every Saturday if the CRL needs to be renewed", "module": "cron", "index": 22, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Add cron to check every Saturday if the CRL needs to be renewed", "when": "not ci_build"}, "module_options": {"name": "check if CRL will expire soon", "special_time": "weekly", "job": "sh {{ openvpn_base_dir }}/crl-cron.sh"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml": {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install EPEL", "module": "package", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install EPEL", "when": "ansible_distribution == \"CentOS\" or ansible_distribution==\"RedHat\""}, "module_options": {"name": "{{ epel_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install python2-dnf for Fedora dnf support", "module": "raw", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install python2-dnf for Fedora dnf support", "when": ["ansible_distribution == \"Fedora\"", "ansible_python.version.major == 2"], "register": "fedora_dnf", "changed_when": "\"Nothing to do.\" not in fedora_dnf.stdout"}, "module_options": "dnf install -y python2-dnf", "executable": "raw", "executable_type": "Module", "fqcn": "ansible.builtin.raw", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install openvpn", "module": "package", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install openvpn", "with_items": ["{{ openvpn_package_name }}", "{{ openssl_package_name }}"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install LDAP plugin", "module": "package", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install LDAP plugin", "become": true, "when": ["openvpn_use_ldap", "ansible_distribution == \"CentOS\" and ansible_distribution_major_version != \"8\""]}, "module_options": {"name": "{{ openvpn_ldap_plugin_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compile LDAP plugin", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Compile LDAP plugin", "when": ["openvpn_use_ldap", "ansible_distribution == \"CentOS\" and ansible_distribution_major_version == \"8\""]}, "module_options": "compile_ldap_plugin.yml", "executable": "compile_ldap_plugin.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure group 'nogroup' is present", "module": "group", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Ensure group 'nogroup' is present"}, "module_options": {"name": "nogroup", "state": "present", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include vars for OpenVPN installation", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Include vars for OpenVPN installation", "with_first_found": ["../vars/{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml", "../vars/{{ ansible_distribution }}.yml", "../vars/{{ ansible_os_family }}.yml", "../vars/empty.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set facts", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Set facts"}, "module_options": "set_facts.yml", "executable": "set_facts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall OpenVPN", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Uninstall OpenVPN", "when": "openvpn_uninstall"}, "module_options": "uninstall.yml", "executable": "uninstall.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OpenVPN", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Install OpenVPN", "tags": ["install"]}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy or Generate server keys", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Copy or Generate server keys"}, "module_options": "server_keys.yml", "executable": "server_keys.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ipv4 forwarding", "module": "sysctl", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Enable ipv4 forwarding", "failed_when": false, "when": "not ci_build"}, "module_options": {"name": "net.ipv4.ip_forward", "value": "1", "ignoreerrors": true}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ipv6 forwarding", "module": "sysctl", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Enable ipv6 forwarding", "when": "openvpn_server_ipv6_network is defined and not ci_build"}, "module_options": {"name": "net.ipv6.conf.all.forwarding", "value": "1", "ignoreerrors": true}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Detect firewall type", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Detect firewall type", "when": ["not ci_build", "manage_firewall_rules"], "tags": ["firewall"]}, "module_options": "firewall.yml", "executable": "firewall.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux", "module": "include", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Configure SELinux", "when": ["ansible_selinux.status == \"enabled\""]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compare existing certs against 'clients' variable", "module": "import_tasks", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Compare existing certs against 'clients' variable", "when": "openvpn_sync_certs", "tags": ["sync_certs"]}, "module_options": "cert_sync_detection.yml", "executable": "cert_sync_detection.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate client configs", "module": "import_tasks", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Generate client configs", "when": "clients is defined"}, "module_options": "client_keys.yml", "executable": "client_keys.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate revocation list and clean up", "module": "import_tasks", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Generate revocation list and clean up", "when": "(openvpn_revoke_these_certs is defined) or (openvpn_sync_certs and cert_sync_certs_to_revoke.stdout_lines | length > 0)"}, "module_options": "revocation.yml", "executable": "revocation.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure OpenVPN server", "module": "import_tasks", "index": 12, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Configure OpenVPN server"}, "module_options": "config.yml", "executable": "config.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml": {"py/object": "struct4.TaskFile", "name": "cert_sync_detection.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "tasks": [{"py/object": "struct4.Task", "name": "[cert sync] Create temporary file for existing certs", "module": "ansible.builtin.tempfile", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Create temporary file for existing certs", "register": "tempfile_existing"}, "module_options": {"state": "file", "suffix": "temp"}, "executable": "ansible.builtin.tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Create temporary file for expected certs", "module": "ansible.builtin.tempfile", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Create temporary file for expected certs", "register": "tempfile_expected"}, "module_options": {"state": "file", "suffix": "temp"}, "executable": "ansible.builtin.tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Write expected client list to temp file for comparison with existing certs", "module": "ansible.builtin.template", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Write expected client list to temp file for comparison with existing certs", "when": "openvpn_sync_certs"}, "module_options": {"src": "cert_sync_expected_clients.j2", "dest": "{{ tempfile_expected.path }}", "mode": 420}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Get existing certs", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Get existing certs", "when": "openvpn_sync_certs"}, "module_options": {"cmd": "set -o pipefail\nls -1 *.csr | { grep -v server.csr || true; } | sort | cut -f1 -d'.' > {{ tempfile_existing.path }}\n", "chdir": "{{ openvpn_key_dir }}", "executable": "/bin/bash"}, "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Find certs that exist but aren't supposed to (on disk, but not in client list)", "module": "command", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Find certs that exist but aren't supposed to (on disk, but not in client list)", "register": "openvpn_cert_sync_revoke", "when": "openvpn_sync_certs"}, "module_options": {"cmd": "comm -23 {{ tempfile_existing.path }} {{ tempfile_expected.path }}"}, "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Debug: Certs to revoke (skipped if none)", "module": "ansible.builtin.debug", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Debug: Certs to revoke (skipped if none)", "when": "openvpn_cert_sync_revoke.stdout_lines | length > 0"}, "module_options": {"msg": "Will revoke additional certs: {{ openvpn_cert_sync_revoke.stdout_lines | join(', ') }}"}, "executable": "ansible.builtin.debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Cleanup temp files", "module": "ansible.builtin.file", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Cleanup temp files", "with_items": ["{{ tempfile_existing.path }}", "{{ tempfile_expected.path }}"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}}, "role_dict": {"kyl191.openvpn": {"py/object": "struct4.Role", "name": "kyl191.openvpn", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn", "fqcn": "kyl191.openvpn", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "uninstall.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "tasks": [{"py/object": "struct4.Task", "name": "Disable openvpn auto-start & start", "module": "service", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Disable openvpn auto-start & start"}, "module_options": {"name": "{{ openvpn_service_name }}", "enabled": false, "state": "stopped"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Wipe out config directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Wipe out config directory"}, "module_options": {"path": "{{ openvpn_base_dir }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove openvpn logrotate config file", "module": "file", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Remove openvpn logrotate config file"}, "module_options": {"path": "/etc/logrotate.d/openvpn.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall OpenVPN", "module": "package", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Uninstall OpenVPN"}, "module_options": {"name": "{{ openvpn_package_name }}", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall LDAP plugin", "module": "package", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Uninstall LDAP plugin", "when": "openvpn_use_ldap"}, "module_options": {"name": "{{ openvpn_ldap_plugin_package_name }}", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Terminate playbook", "module": "fail", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/uninstall.yml", "options": {"name": "Terminate playbook"}, "module_options": {"msg": "OpenVPN uninstalled, playbook stopped"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "SELinux - check if module was loaded", "module": "command", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/selinux.yml", "options": {"name": "SELinux - check if module was loaded", "register": "semodule_loaded", "changed_when": "openvpn_selinux_module not in semodule_loaded.stdout", "notify": ["build and install policy"]}, "module_options": "semodule --list-modules", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux - copy type enforcement file", "module": "template", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/selinux.yml", "options": {"name": "SELinux - copy type enforcement file", "notify": ["build and install policy"]}, "module_options": {"src": "selinux_module.te.j2", "dest": "/var/lib/selinux/{{ openvpn_selinux_module }}.te", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "client_keys.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create openvpn ovpn file directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Create openvpn ovpn file directory"}, "module_options": {"path": "{{ openvpn_ovpn_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy openssl client extensions", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Copy openssl client extensions"}, "module_options": {"src": "openssl-client.ext", "dest": "{{ openvpn_key_dir }}", "owner": "root", "group": "root", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate client key", "module": "command", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Generate client key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "{{ item }}.key"}, "with_items": ["{{ clients }}"]}, "module_options": "openssl req -nodes -newkey rsa:{{ openvpn_rsa_bits }} -keyout {{ item }}.key -out {{ item }}.csr -days 3650 -subj /CN=OpenVPN-Client-{{ inventory_hostname[:24] }}-{{ item[:24] }}/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Protect client keys", "module": "file", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Protect client keys", "with_items": ["{{ clients }}"]}, "module_options": {"path": "{{ openvpn_key_dir }}/{{ item }}.key", "mode": 256}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sign client key", "module": "command", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Sign client key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "{{ item }}.crt"}, "with_items": ["{{ clients }}"]}, "module_options": "openssl x509 -req -in {{ item }}.csr -out {{ item }}.crt -CA ca.crt -CAkey ca-key.pem -sha256 -days 3650 -extfile openssl-client.ext", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register server ca key", "module": "slurp", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register server ca key", "register": "ca_cert"}, "module_options": {"src": "{{ openvpn_key_dir }}/ca.crt"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register tls-auth key", "module": "slurp", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register tls-auth key", "register": "tls_auth"}, "module_options": {"src": "{{ openvpn_key_dir }}/ta.key"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register client certs", "module": "slurp", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register client certs", "with_items": ["{{ clients }}"], "register": "client_certs"}, "module_options": {"src": "{{ openvpn_key_dir }}/{{ item }}.crt"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register client keys", "module": "slurp", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Register client keys", "with_items": ["{{ clients }}"], "register": "client_keys"}, "module_options": {"src": "{{ openvpn_key_dir }}/{{ item }}.key"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate client config", "module": "template", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Generate client config", "no_log": "{{ openvpn_client_config_no_log }}", "with_together": ["{{ client_certs.results }}", "{{ client_keys.results }}"]}, "module_options": {"src": "client.ovpn.j2", "dest": "{{ openvpn_ovpn_dir }}/{{ item.0.item }}-{{ inventory_hostname }}.ovpn", "owner": "root", "group": "root", "mode": 256}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fetch client config", "module": "fetch", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/client_keys.yml", "options": {"name": "Fetch client config", "when": "openvpn_fetch_client_configs", "with_items": ["{{ clients }}"]}, "module_options": {"src": "{{ openvpn_ovpn_dir }}/{{ item }}-{{ inventory_hostname }}.ovpn", "dest": "{{ openvpn_fetch_client_configs_dir }}/{{ item }}/{{ inventory_hostname }}{{ openvpn_fetch_client_configs_suffix }}.ovpn", "flat": true}, "executable": "fetch", "executable_type": "Module", "fqcn": "ansible.builtin.fetch", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "iptables.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Change facts to use netfilter-persistent on Debian >= 9 or Ubuntu >= 16", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Change facts to use netfilter-persistent on Debian >= 9 or Ubuntu >= 16", "when": "(ansible_distribution == 'Debian' and ansible_distribution_version|int >= 9) or (ansible_distribution == 'Ubuntu' and ansible_lsb.major_release|int >= 16)"}, "module_options": {"iptables_save_command": "/usr/sbin/netfilter-persistent save", "iptables_service": "netfilter-persistent"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install iptables-persistent (Debian/Ubuntu)", "module": "package", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Install iptables-persistent (Debian/Ubuntu)", "register": "__iptables_installed", "when": "ansible_os_family == \"Debian\""}, "module_options": {"name": "{{ iptables_persistent_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install iptables-services (RedHat/CentOS)", "module": "package", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Install iptables-services (RedHat/CentOS)", "register": "__iptables_installed", "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": "{{ iptables_services_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow VPN forwarding - iptables", "module": "iptables", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Allow VPN forwarding - iptables", "notify": "save iptables"}, "module_options": {"chain": "FORWARD", "source": "{{ openvpn_server_network }}/24", "jump": "ACCEPT", "action": "insert", "comment": "Allow VPN forwarding"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow incoming SSH connections - iptables", "module": "iptables", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Allow incoming SSH connections - iptables", "notify": "save iptables"}, "module_options": {"chain": "INPUT", "protocol": "tcp", "destination_port": "{{ ansible_port | default(22) }}", "jump": "ACCEPT", "action": "insert", "comment": "Allow incoming SSH connection"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow incoming VPN connections - iptables", "module": "iptables", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Allow incoming VPN connections - iptables", "notify": "save iptables"}, "module_options": {"chain": "INPUT", "protocol": "{{ openvpn_proto }}", "destination_port": "{{ openvpn_port }}", "jump": "ACCEPT", "action": "insert", "comment": "Allow incoming VPN connection"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Accept packets from VPN tunnel adaptor - iptables", "module": "iptables", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Accept packets from VPN tunnel adaptor - iptables", "notify": "save iptables"}, "module_options": {"chain": "INPUT", "in_interface": "tun0", "jump": "ACCEPT", "action": "insert", "comment": "Accept packets from VPN tunnel adaptor"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Perform NAT readdressing - iptables", "module": "iptables", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Perform NAT readdressing - iptables", "when": "not openvpn_masquerade_not_snat", "notify": "save iptables"}, "module_options": {"table": "nat", "chain": "POSTROUTING", "source": "{{ openvpn_server_network }}/24", "to_source": "{{ ansible_default_ipv4.address }}", "jump": "SNAT", "action": "insert", "comment": "Perform NAT readdressing"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Perform NAT readdressing with MASQUERADE - iptables", "module": "iptables", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Perform NAT readdressing with MASQUERADE - iptables", "when": "openvpn_masquerade_not_snat", "notify": "save iptables"}, "module_options": {"table": "nat", "chain": "POSTROUTING", "source": "{{ openvpn_server_network }}/24", "jump": "MASQUERADE", "action": "insert", "comment": "Perform NAT readdressing"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save existing iptables rule before start iptables service", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Save existing iptables rule before start iptables service", "when": "__iptables_installed.changed | bool"}, "module_options": "{{ iptables_save_command }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable iptables", "module": "service", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/iptables.yml", "options": {"name": "Enable iptables"}, "module_options": {"name": "{{ iptables_service }}", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "firewall.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check for firewalld", "module": "command", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Check for firewalld", "register": "firewalld", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "which firewall-cmd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for ufw", "module": "command", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Check for ufw", "register": "ufw", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "which ufw", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for iptables", "module": "command", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Check for iptables", "register": "iptables", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "which iptables", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail on both firewalld & ufw", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Fail on both firewalld & ufw", "when": "openvpn_firewall == 'auto' and firewalld.rc == 0 and ufw.rc == 0"}, "module_options": {"msg": "Both FirewallD and UFW are detected, firewall situation is unknown"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail on no firewall detected", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Fail on no firewall detected", "when": "firewalld.rc != 0 and ufw.rc != 0 and iptables.rc != 0"}, "module_options": {"msg": "No firewall detected, install one before proceeding (firewalld||ufw||iptables)"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add port rules (iptables)", "module": "include", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Add port rules (iptables)", "when": "(openvpn_firewall == 'iptables') or (openvpn_firewall == 'auto' and firewalld.rc != 0 and ufw.rc != 0 and iptables.rc == 0)"}, "module_options": "iptables.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add port rules (firewalld)", "module": "include", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Add port rules (firewalld)", "when": "(openvpn_firewall == 'firewalld') or (openvpn_firewall == 'auto' and firewalld.rc == 0 and ufw.rc != 0)"}, "module_options": "firewalld.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add port rules (ufw)", "module": "include", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewall.yml", "options": {"name": "Add port rules (ufw)", "when": "(openvpn_firewall == 'ufw') or (openvpn_firewall == 'auto' and firewalld.rc != 0 and ufw.rc == 0)"}, "module_options": "ufw.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "ufw.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "tasks": [{"py/object": "struct4.Task", "name": "Start ufw service", "module": "service", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Start ufw service"}, "module_options": {"name": "ufw", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ufw", "module": "ufw", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Enable ufw"}, "module_options": {"direction": "incoming", "state": "enabled", "policy": "allow"}, "executable": "ufw", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable forwarding - ufw", "module": "lineinfile", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Enable forwarding - ufw"}, "module_options": {"dest": "/etc/default/ufw", "regexp": "^DEFAULT_FORWARD_POLICY=", "line": "DEFAULT_FORWARD_POLICY=\"ACCEPT\""}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow incoming VPN connections - ufw", "module": "ufw", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Allow incoming VPN connections - ufw"}, "module_options": {"direction": "in", "proto": "{{ openvpn_proto }}", "to_port": "{{ openvpn_port | string }}", "rule": "allow"}, "executable": "ufw", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Accept packets from VPN tunnel adaptor - ufw", "module": "ufw", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Accept packets from VPN tunnel adaptor - ufw"}, "module_options": {"direction": "in", "interface": "tun0", "rule": "allow"}, "executable": "ufw", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup nat table rules - ufw", "module": "blockinfile", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Setup nat table rules - ufw", "when": "not openvpn_masquerade_not_snat", "notify": ["restart ufw"]}, "module_options": {"dest": "/etc/ufw/before.rules", "state": "present", "insertbefore": "\\*filter", "block": "# OpenVPN config\n*nat\n:POSTROUTING ACCEPT [0:0]\n-A POSTROUTING -s {{ openvpn_server_network }}/24 -j SNAT --to-source {{ ansible_default_ipv4.address }}\nCOMMIT\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup nat table rules with MASQUERADE - ufw", "module": "blockinfile", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/ufw.yml", "options": {"name": "Setup nat table rules with MASQUERADE - ufw", "when": "openvpn_masquerade_not_snat", "notify": ["restart ufw"]}, "module_options": {"dest": "/etc/ufw/before.rules", "state": "present", "insertbefore": "\\*filter", "block": "# OpenVPN config\n*nat\n:POSTROUTING ACCEPT [0:0]\n-A POSTROUTING -s {{ openvpn_server_network }}/24 -j MASQUERADE\nCOMMIT\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "revocation.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "tasks": [{"py/object": "struct4.Task", "name": "Remove client config", "module": "file", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Remove client config", "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": {"path": "{{ openvpn_ovpn_dir }}/{{ item }}-{{ inventory_hostname }}.ovpn", "state": "absent", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Revoke certificates", "module": "command", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Revoke certificates", "changed_when": true, "args": {"chdir": "{{ openvpn_key_dir }}"}, "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": "sh revoke.sh {{ item }}.crt", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove client key", "module": "file", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Remove client key", "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": {"path": "{{ openvpn_key_dir }}/{{ item }}.key", "state": "absent", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove client csr", "module": "file", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/revocation.yml", "options": {"name": "Remove client csr", "with_items": ["{{ openvpn_revoke_these_certs }}", "{{ openvpn_cert_sync_revoke.stdout_lines | default([]) }}"]}, "module_options": {"path": "{{ openvpn_key_dir }}/{{ item }}.csr", "state": "absent", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "config.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create openvpn config file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create openvpn config file", "notify": ["restart openvpn"]}, "module_options": {"src": "server.conf.j2", "dest": "{{ openvpn_base_dir }}/{{ openvpn_config_file }}.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy up script if defined", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy up script if defined", "when": "openvpn_script_up is defined"}, "module_options": {"src": "{{ openvpn_script_up }}", "dest": "{{ openvpn_base_dir }}/up.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy down script if defined", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy down script if defined", "when": "openvpn_script_down is defined"}, "module_options": {"src": "{{ openvpn_script_down }}", "dest": "{{ openvpn_base_dir }}/down.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy client-connect script if defined", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy client-connect script if defined", "when": "openvpn_script_client_connect is defined"}, "module_options": {"src": "{{ openvpn_script_client_connect }}", "dest": "{{ openvpn_base_dir }}/client_connect.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy client-disconnect script if defined", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy client-disconnect script if defined", "when": "openvpn_script_client_disconnect is defined"}, "module_options": {"src": "{{ openvpn_script_client_disconnect }}", "dest": "{{ openvpn_base_dir }}/client_disconnect.sh", "mode": "a+x"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install LDAP config", "module": "template", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Install LDAP config", "when": "openvpn_use_ldap"}, "module_options": {"src": "ldap.conf.j2", "dest": "{{ openvpn_base_dir }}/auth/ldap.conf", "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log directory", "module": "file", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create log directory"}, "module_options": {"dest": "{{ openvpn_log_dir }}", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy openvpn logrotate config file", "module": "template", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Copy openvpn logrotate config file", "when": "ansible_os_family != 'Solaris'"}, "module_options": {"src": "openvpn_logrotate.conf.j2", "dest": "/etc/logrotate.d/openvpn-{{ openvpn_config_file }}.conf", "owner": "root", "group": "root", "mode": 256}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create client config directory", "module": "file", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create client config directory", "when": "openvpn_client_config"}, "module_options": {"state": "directory", "path": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create client config directory", "module": "template", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Create client config directory", "when": "openvpn_client_config", "with_dict": "{{ openvpn_client_config_present }}"}, "module_options": {"src": "client_ccd.j2", "dest": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}/{{ item.key }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete custom client config from client config directory", "module": "file", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Delete custom client config from client config directory", "when": "openvpn_client_config", "with_items": "{{ openvpn_client_config_absent }}"}, "module_options": {"path": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete client config directory", "module": "file", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Delete client config directory", "when": "not openvpn_client_config"}, "module_options": {"path": "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup openvpn auto-start & start", "module": "service", "index": 12, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/config.yml", "options": {"name": "Setup openvpn auto-start & start", "when": "ansible_service_mgr != \"tail\""}, "module_options": {"name": "{{ openvpn_service_name }}", "enabled": true, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "compile_ldap_plugin.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Gather specific variables"}, "module_options": "../vars/compile_ldap_plugin.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check package re2c already exists", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Check package re2c already exists", "become": true, "register": "re2c_bin"}, "module_options": {"path": "{{ re2c_bin_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check package openvpn-auth-ldap already exists", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Check package openvpn-auth-ldap already exists", "become": true, "register": "openvpn_auth_ldap_bin"}, "module_options": {"path": "{{ openvpn_auth_ldap_bin_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install gcc objc repo", "module": "yum_repository", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Install gcc objc repo", "become": true}, "module_options": {"name": "csi-gcc", "description": "gcc compiler suite, with Objective-C which is removed from official Red Hat EL8 releases.", "baseurl": "{{ gcc_objc_repo.base_url }}", "gpgkey": "{{ gcc_objc_repo.key }}", "gpgcheck": true, "enabled": true}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install dev packages", "module": "package", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Install dev packages", "become": true}, "module_options": {"name": "{{ compile_develop_packages }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and unpack re2c", "module": "unarchive", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Download and unpack re2c", "become": true}, "module_options": {"src": "https://github.com/skvadrik/re2c/archive/{{ re2c_version }}.tar.gz", "dest": "{{ compile_source_dir }}", "creates": "{{ compile_source_dir }}/re2c-{{ re2c_version }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compile re2c", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Compile re2c", "become": true, "args": {"chdir": "{{ compile_source_dir }}/re2c-{{ re2c_version }}", "creates": "{{ re2c_bin_path }}"}}, "module_options": "autoreconf -i -W all\n./configure\nmake\nmake install\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and unpack openvpn-auth-ldap", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Download and unpack openvpn-auth-ldap", "become": true}, "module_options": {"src": "https://github.com/threerings/openvpn-auth-ldap/archive/auth-ldap-{{ openvpn_auth_ldap_version }}.tar.gz", "dest": "{{ compile_source_dir }}", "creates": "{{ compile_source_dir }}/openvpn-auth-ldap-auth-ldap-{{ openvpn_auth_ldap_version }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create module directory", "module": "file", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Create module directory", "become": true}, "module_options": {"path": "{{ openvpn_auth_ldap_bin_path | dirname }}", "owner": "root", "group": "root", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compile", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Compile", "become": true, "environment": {"PATH": "{{ re2c_bin_path | dirname }}:{{ lookup('env', 'PATH') }}"}, "args": {"chdir": "{{ compile_source_dir }}/openvpn-auth-ldap-auth-ldap-{{ openvpn_auth_ldap_version }}", "creates": "{{ openvpn_auth_ldap_bin_path }}"}}, "module_options": "autoconf\nautoheader\n./configure --prefix={{ openvpn_auth_ldap_plugin_dir_path }} --with-openvpn=/sbin/openvpn CFLAGS=\"-fPIC\" OBJCFLAGS=\"-std=gnu11\"\nmake\nmake install\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup dev packages", "module": "package", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Cleanup dev packages", "become": true, "when": ["compile_cleanup_dev_packages"]}, "module_options": {"name": "{{ compile_develop_packages }}", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove gcc objc repo", "module": "yum_repository", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/compile_ldap_plugin.yml", "options": {"name": "Remove gcc objc repo", "become": true, "when": ["compile_cleanup_dev_packages"]}, "module_options": {"name": "csi-gcc", "state": "absent"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "set_facts.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check systemd existence as Docker Guest", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Check systemd existence as Docker Guest", "when": "ansible_virtualization_role is defined and ansible_virtualization_type == \"docker\" and ansible_virtualization_role == \"guest\"", "register": "docker_stat_result"}, "module_options": {"path": "/bin/systemctl"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd openvpn service name", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Set systemd openvpn service name", "when": "ansible_service_mgr == \"systemd\" or (docker_stat_result.stat is defined and docker_stat_result.stat.exists)"}, "module_options": {"openvpn_service_name": "openvpn@{{ openvpn_config_file }}.service"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Fedora 27+ and CentOS 8 service name", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Set Fedora 27+ and CentOS 8 service name", "when": "(ansible_distribution == \"Fedora\" and ansible_distribution_version|int >= 27) or (\n  ( (ansible_distribution == \"CentOS\") or (ansible_distribution == \"RedHat\") )\n  and\n  (ansible_distribution_version | int) >= 8\n)"}, "module_options": {"openvpn_service_name": "openvpn-server@{{ openvpn_config_file }}.service"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Fedora 27+ and CentOS 8 OpenVPN base path", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/set_facts.yml", "options": {"name": "Set Fedora 27+ and CentOS 8 OpenVPN base path", "when": "(ansible_distribution == \"Fedora\" and ansible_distribution_version|int >= 27) or (\n  (ansible_distribution == \"CentOS\" or ansible_distribution == \"RedHat\")\n  and\n  (ansible_distribution_version | int) >= 8\n)"}, "module_options": {"openvpn_base_dir": "/etc/openvpn/server"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "firewalld.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "tasks": [{"py/object": "struct4.Task", "name": "Enable firewalld", "module": "service", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Enable firewalld"}, "module_options": {"name": "firewalld", "enabled": true, "masked": false, "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install python2-firewall (Fedora)", "module": "package", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Install python2-firewall (Fedora)", "when": ["ansible_distribution == \"Fedora\"", "ansible_python.version.major == 2"]}, "module_options": {"name": "{{ python_firewall_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable OpenVPN Port (firewalld)", "module": "firewalld", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Enable OpenVPN Port (firewalld)"}, "module_options": {"port": "{{ openvpn_port }}/{{ openvpn_proto }}", "zone": "{{ firewalld_default_interface_zone }}", "permanent": true, "immediate": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set tun0 interface to internal", "module": "firewalld", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Set tun0 interface to internal"}, "module_options": {"interface": "tun0", "zone": "internal", "permanent": true, "immediate": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default interface to external", "module": "firewalld", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Set default interface to external"}, "module_options": {"interface": "{{ ansible_default_ipv4.interface }}", "zone": "{{ firewalld_default_interface_zone }}", "permanent": true, "immediate": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable masquerading on external zone", "module": "firewalld", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Enable masquerading on external zone", "notify": ["restart firewalld"]}, "module_options": {"masquerade": true, "zone": "{{ firewalld_default_interface_zone }}", "permanent": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if ifcfg-{{ ansible_default_ipv4.interface }} exists", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Check if ifcfg-{{ ansible_default_ipv4.interface }} exists", "register": "ifcfg"}, "module_options": {"path": "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Persist default interface in ifcfg file", "module": "lineinfile", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/firewalld.yml", "options": {"name": "Persist default interface in ifcfg file", "when": "ifcfg.stat.exists"}, "module_options": {"dest": "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}", "regexp": "^ZONE=", "line": "ZONE={{ firewalld_default_interface_zone }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "server_keys.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create openvpn key directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Create openvpn key directory"}, "module_options": {"path": "{{ openvpn_key_dir }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy openssl server/ca extensions", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy openssl server/ca extensions", "with_items": ["openssl-server.ext", "openssl-ca.ext"]}, "module_options": {"src": "{{ item }}", "dest": "{{ openvpn_key_dir }}", "owner": "root", "group": "root", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy CA key", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy CA key", "when": "openvpn_ca_key is defined"}, "module_options": {"content": "{{ openvpn_ca_key.key }}", "dest": "{{ openvpn_key_dir }}/ca-key.pem", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy CA cert", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy CA cert", "when": "openvpn_ca_key is defined"}, "module_options": {"content": "{{ openvpn_ca_key.crt }}", "dest": "{{ openvpn_key_dir }}/ca.crt", "mode": 292}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate CA key", "module": "command", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate CA key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ca-key.pem"}, "when": "openvpn_ca_key is not defined"}, "module_options": "openssl req -nodes -newkey rsa:{{ openvpn_rsa_bits }} -keyout ca-key.pem -out ca-csr.pem -days 3650 -subj /CN=OpenVPN-CA-{{ inventory_hostname[:53] }}/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Protect CA key", "module": "file", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Protect CA key", "when": "openvpn_ca_key is not defined"}, "module_options": {"path": "{{ openvpn_key_dir }}/ca-key.pem", "mode": 256}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sign CA key", "module": "command", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Sign CA key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ca.crt"}, "when": "openvpn_ca_key is not defined"}, "module_options": "openssl x509 -req -in ca-csr.pem -out ca.crt -CAcreateserial -signkey ca-key.pem -sha256 -days 3650 -extfile openssl-ca.ext", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate server key", "module": "command", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate server key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "server.key"}}, "module_options": "openssl req -nodes -newkey rsa:{{ openvpn_rsa_bits }} -keyout server.key -out server.csr -days 3650 -subj /CN=OpenVPN-Server-{{ inventory_hostname[:49] }}/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Protect server key", "module": "file", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Protect server key"}, "module_options": {"path": "{{ openvpn_key_dir }}/server.key", "mode": 256}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sign server key", "module": "command", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Sign server key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "server.crt"}}, "module_options": "openssl x509 -req -in server.csr -out server.crt -CA ca.crt -CAkey ca-key.pem -sha256 -days 3650 -CAcreateserial -extfile openssl-server.ext", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy tls-auth key", "module": "copy", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy tls-auth key", "when": "openvpn_tls_auth_key is defined"}, "module_options": {"content": "{{ openvpn_tls_auth_key }}", "dest": "{{ openvpn_key_dir }}/ta.key", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate tls-auth key", "module": "command", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate tls-auth key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ta.key"}, "when": "openvpn_tls_auth_key is not defined"}, "module_options": "openvpn --genkey --secret ta.key", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy pre-generated DH params", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Copy pre-generated DH params", "when": "openvpn_use_pregenerated_dh_params|bool"}, "module_options": {"src": "dh.pem", "dest": "{{ openvpn_key_dir }}", "owner": "root", "group": "root", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate dh params", "module": "command", "index": 13, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate dh params", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "dh.pem"}, "when": "not (openvpn_use_pregenerated_dh_params|bool)"}, "module_options": "openssl dhparam -out {{ openvpn_key_dir }}/dh.pem {{ openvpn_rsa_bits }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install ca.conf config file", "module": "template", "index": 14, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Install ca.conf config file"}, "module_options": {"src": "ca.conf.j2", "dest": "{{ openvpn_key_dir }}/ca.conf", "owner": "root", "group": "root", "mode": 484}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create initial certificate revocation list squence number", "module": "shell", "index": 15, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Create initial certificate revocation list squence number", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "crl_number"}}, "module_options": "echo 00 > crl_number", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate tls-auth key", "module": "command", "index": 16, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Generate tls-auth key", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "ta.key"}, "when": "openvpn_tls_auth_key is not defined"}, "module_options": "openvpn --genkey --secret ta.key", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install revocation script", "module": "template", "index": 17, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Install revocation script"}, "module_options": {"src": "revoke.sh.j2", "dest": "{{ openvpn_key_dir }}/revoke.sh", "owner": "root", "group": "root", "mode": 484}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if certificate revocation list database exists", "module": "stat", "index": 18, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Check if certificate revocation list database exists", "register": "file_result"}, "module_options": {"path": "{{ openvpn_key_dir }}/index.txt"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create certificate revocation list database if required", "module": "file", "index": 19, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Create certificate revocation list database if required", "when": "not file_result.stat.exists"}, "module_options": {"path": "{{ openvpn_key_dir }}/index.txt", "state": "touch", "mode": 420}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set up certificate revocation list", "module": "command", "index": 20, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Set up certificate revocation list", "args": {"chdir": "{{ openvpn_key_dir }}", "creates": "{{ openvpn_key_dir }}/ca-crl.pem"}}, "module_options": "sh revoke.sh", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install crl-cron script", "module": "template", "index": 21, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Install crl-cron script"}, "module_options": {"src": "crl-cron.sh.j2", "dest": "{{ openvpn_base_dir }}/crl-cron.sh", "owner": "root", "group": "root", "mode": 484}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add cron to check every Saturday if the CRL needs to be renewed", "module": "cron", "index": 22, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/server_keys.yml", "options": {"name": "Add cron to check every Saturday if the CRL needs to be renewed", "when": "not ci_build"}, "module_options": {"name": "check if CRL will expire soon", "special_time": "weekly", "job": "sh {{ openvpn_base_dir }}/crl-cron.sh"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install EPEL", "module": "package", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install EPEL", "when": "ansible_distribution == \"CentOS\" or ansible_distribution==\"RedHat\""}, "module_options": {"name": "{{ epel_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install python2-dnf for Fedora dnf support", "module": "raw", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install python2-dnf for Fedora dnf support", "when": ["ansible_distribution == \"Fedora\"", "ansible_python.version.major == 2"], "register": "fedora_dnf", "changed_when": "\"Nothing to do.\" not in fedora_dnf.stdout"}, "module_options": "dnf install -y python2-dnf", "executable": "raw", "executable_type": "Module", "fqcn": "ansible.builtin.raw", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install openvpn", "module": "package", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install openvpn", "with_items": ["{{ openvpn_package_name }}", "{{ openssl_package_name }}"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install LDAP plugin", "module": "package", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Install LDAP plugin", "become": true, "when": ["openvpn_use_ldap", "ansible_distribution == \"CentOS\" and ansible_distribution_major_version != \"8\""]}, "module_options": {"name": "{{ openvpn_ldap_plugin_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compile LDAP plugin", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Compile LDAP plugin", "when": ["openvpn_use_ldap", "ansible_distribution == \"CentOS\" and ansible_distribution_major_version == \"8\""]}, "module_options": "compile_ldap_plugin.yml", "executable": "compile_ldap_plugin.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure group 'nogroup' is present", "module": "group", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/install.yml", "options": {"name": "Ensure group 'nogroup' is present"}, "module_options": {"name": "nogroup", "state": "present", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include vars for OpenVPN installation", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Include vars for OpenVPN installation", "with_first_found": ["../vars/{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml", "../vars/{{ ansible_distribution }}.yml", "../vars/{{ ansible_os_family }}.yml", "../vars/empty.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set facts", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Set facts"}, "module_options": "set_facts.yml", "executable": "set_facts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Uninstall OpenVPN", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Uninstall OpenVPN", "when": "openvpn_uninstall"}, "module_options": "uninstall.yml", "executable": "uninstall.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OpenVPN", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Install OpenVPN", "tags": ["install"]}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy or Generate server keys", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Copy or Generate server keys"}, "module_options": "server_keys.yml", "executable": "server_keys.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ipv4 forwarding", "module": "sysctl", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Enable ipv4 forwarding", "failed_when": false, "when": "not ci_build"}, "module_options": {"name": "net.ipv4.ip_forward", "value": "1", "ignoreerrors": true}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ipv6 forwarding", "module": "sysctl", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Enable ipv6 forwarding", "when": "openvpn_server_ipv6_network is defined and not ci_build"}, "module_options": {"name": "net.ipv6.conf.all.forwarding", "value": "1", "ignoreerrors": true}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Detect firewall type", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Detect firewall type", "when": ["not ci_build", "manage_firewall_rules"], "tags": ["firewall"]}, "module_options": "firewall.yml", "executable": "firewall.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux", "module": "include", "index": 8, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Configure SELinux", "when": ["ansible_selinux.status == \"enabled\""]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compare existing certs against 'clients' variable", "module": "import_tasks", "index": 9, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Compare existing certs against 'clients' variable", "when": "openvpn_sync_certs", "tags": ["sync_certs"]}, "module_options": "cert_sync_detection.yml", "executable": "cert_sync_detection.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate client configs", "module": "import_tasks", "index": 10, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Generate client configs", "when": "clients is defined"}, "module_options": "client_keys.yml", "executable": "client_keys.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate revocation list and clean up", "module": "import_tasks", "index": 11, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Generate revocation list and clean up", "when": "(openvpn_revoke_these_certs is defined) or (openvpn_sync_certs and cert_sync_certs_to_revoke.stdout_lines | length > 0)"}, "module_options": "revocation.yml", "executable": "revocation.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure OpenVPN server", "module": "import_tasks", "index": 12, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/main.yml", "options": {"name": "Configure OpenVPN server"}, "module_options": "config.yml", "executable": "config.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "cert_sync_detection.yml", "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "tasks": [{"py/object": "struct4.Task", "name": "[cert sync] Create temporary file for existing certs", "module": "ansible.builtin.tempfile", "index": 0, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Create temporary file for existing certs", "register": "tempfile_existing"}, "module_options": {"state": "file", "suffix": "temp"}, "executable": "ansible.builtin.tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Create temporary file for expected certs", "module": "ansible.builtin.tempfile", "index": 1, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Create temporary file for expected certs", "register": "tempfile_expected"}, "module_options": {"state": "file", "suffix": "temp"}, "executable": "ansible.builtin.tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Write expected client list to temp file for comparison with existing certs", "module": "ansible.builtin.template", "index": 2, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Write expected client list to temp file for comparison with existing certs", "when": "openvpn_sync_certs"}, "module_options": {"src": "cert_sync_expected_clients.j2", "dest": "{{ tempfile_expected.path }}", "mode": 420}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Get existing certs", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Get existing certs", "when": "openvpn_sync_certs"}, "module_options": {"cmd": "set -o pipefail\nls -1 *.csr | { grep -v server.csr || true; } | sort | cut -f1 -d'.' > {{ tempfile_existing.path }}\n", "chdir": "{{ openvpn_key_dir }}", "executable": "/bin/bash"}, "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Find certs that exist but aren't supposed to (on disk, but not in client list)", "module": "command", "index": 4, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Find certs that exist but aren't supposed to (on disk, but not in client list)", "register": "openvpn_cert_sync_revoke", "when": "openvpn_sync_certs"}, "module_options": {"cmd": "comm -23 {{ tempfile_existing.path }} {{ tempfile_expected.path }}"}, "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Debug: Certs to revoke (skipped if none)", "module": "ansible.builtin.debug", "index": 5, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Debug: Certs to revoke (skipped if none)", "when": "openvpn_cert_sync_revoke.stdout_lines | length > 0"}, "module_options": {"msg": "Will revoke additional certs: {{ openvpn_cert_sync_revoke.stdout_lines | join(', ') }}"}, "executable": "ansible.builtin.debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "[cert sync] Cleanup temp files", "module": "ansible.builtin.file", "index": 6, "defined_in": "./role-test/testdata/kyl191-openvpn/kyl191.openvpn/tasks/cert_sync_detection.yml", "options": {"name": "[cert sync] Cleanup temp files", "with_items": ["{{ tempfile_existing.path }}", "{{ tempfile_expected.path }}"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "kyl191.openvpn", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}