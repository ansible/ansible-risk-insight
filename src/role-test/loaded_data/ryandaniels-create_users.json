{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/ryandaniels-create_users", "installed_roles": [{"py/object": "struct4.Role", "name": "ryandaniels.create_users", "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users", "fqcn": "ryandaniels.create_users", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "debug variable group_names", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "debug variable group_names", "when": "debug_enabled_default | bool"}, "module_options": "var=group_names", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "debug variable users", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "debug variable users", "when": "debug_enabled_default | bool"}, "module_options": "var=users", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add group | create primary group before adding user to group", "module": "group", "index": 2, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add group | create primary group before adding user to group", "when": "item.primarygroup is defined and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "primarygroup: {{ item.primarygroup if item.primarygroup is defined else '' }}, primarygid: {{ item.primarygid if item.primarygid is defined else 'default' }}"}}, "module_options": {"name": "{{ item.primarygroup }}", "gid": "{{ item.primarygid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "set_fact - get groups as list per server", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "set_fact - get groups as list per server", "loop": "{{ users }}", "when": "item.groups is defined and item.servers | intersect(group_names)", "loop_control": {"label": "username: {{ item.username }}, groups_as_list: {{ item.groups if item.groups is defined else '' }}"}}, "module_options": {"groups_as_list": "{{ (groups_as_list|default([]) + item.groups.split(','))|map('trim')|list|sort|unique }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "debug show groups_as_list", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "debug show groups_as_list", "when": "debug_enabled_default | bool"}, "module_options": "var=groups_as_list", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add group | create groups before adding user to group", "module": "group", "index": 5, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add group | create groups before adding user to group", "when": "groups_as_list is defined", "loop": "{{ groups_as_list }}", "loop_control": {"label": "groups: {{ item }}"}}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add users | create users, shell, home dirs", "module": "user", "index": 6, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add users | create users, shell, home dirs", "when": "(item.user_state == 'present' or item.user_state == 'lock') and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, user_state: {{ item.user_state }}, password: {{ 'True' if item.password is defined else 'False' }}, update_password: {{ item.update_password if item.update_password is defined else default_update_password }}, primarygroup: {{ item.primarygroup if item.primarygroup is defined else ''}}, groups: {{ item.groups if item.groups is defined else ''}}, servers: {{ item.servers if item.servers is defined else '' }}, group_names: {{ group_names }}"}}, "module_options": {"name": "{{ item.username }}", "uid": "{{ item.uid | default(omit, True) }}", "password": "{{ item.password if item.password is defined else '!' }}", "update_password": "{{ item.update_password if item.update_password is defined else default_update_password }}", "group": "{{ item.primarygroup | default(omit) }}", "groups": "{{ item.groups | default(omit) }}", "shell": "{{ item.shell if item.shell is defined else default_shell }}", "createhome": true, "system": "{{ item.system | default(omit) }}", "comment": "{{ item.comment if item.comment is defined else '' }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add users | Unlock password login (set expiry to -1)", "module": "user", "index": 7, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add users | Unlock password login (set expiry to -1)", "when": "item.user_state == 'present' and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, user_state: {{ item.user_state }}"}}, "module_options": {"name": "{{ item.username }}", "expires": -1}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Lock users | Lock password & ssh key authentication", "module": "user", "index": 8, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Lock users | Lock password & ssh key authentication", "when": "item.user_state == 'lock' and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, user_state: {{ item.user_state }}"}}, "module_options": {"name": "{{ item.username }}", "expires": 0}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "SSH Keys | Add authorized key for ssh key authentication", "module": "authorized_key", "index": 9, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "SSH Keys | Add authorized key for ssh key authentication", "when": "item.ssh_key is defined and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, ssh_key: {{ 'True' if item.ssh_key is defined else 'False' }}, exclusive_ssh_key: {{ item.exclusive_ssh_key if item.exclusive_ssh_key is defined else 'False' }}"}}, "module_options": {"user": "{{ item.username }}", "key": "{{ item.ssh_key }}", "exclusive": "{{ item.exclusive_ssh_key if item.exclusive_ssh_key is defined else 'no' }}", "state": "present"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "SSH Keys | Generate ssh key", "module": "user", "index": 10, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "SSH Keys | Generate ssh key", "when": "item.generate_ssh_key is defined and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, generate_ssh_key: {{ 'True' if item.generate_ssh_key is defined else 'False' }}, ssh_key_bits: {{ item.ssh_key_bits if item.ssh_key_bits is defined else '' }}, ssh_key_passphrase: {{ 'True' if item.ssh_key_passphrase is defined else 'False' }} "}}, "module_options": {"name": "{{ item.username }}", "generate_ssh_key": "{{ item.generate_ssh_key | default(false) }}", "ssh_key_bits": "{{ item.ssh_key_bits | default(omit) }}", "ssh_key_passphrase": "{{ item.ssh_key_passphrase | default(omit) }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sudo | add to sudoers file and validate", "module": "lineinfile", "index": 11, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Sudo | add to sudoers file and validate", "environment": {"PATH": "/usr/sbin:/usr/local/sbin:/sbin"}, "when": "item.use_sudo|d(false)|bool == true and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, use_sudo: {{ item.use_sudo|d(false) }}, use_sudo_nopass: {{ item.use_sudo_nopass|d(false) }}"}}, "module_options": {"dest": "/etc/sudoers", "state": "present", "regexp": "^{{ item.username }} ", "line": "{{ item.username }} ALL=(ALL) {{ 'NOPASSWD:' if ( item.use_sudo_nopass|d(false) )  else '' }}ALL", "validate": "visudo -cf %s"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sudo | remove from sudoers file and validate", "module": "lineinfile", "index": 12, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Sudo | remove from sudoers file and validate", "environment": {"PATH": "/usr/sbin:/usr/local/sbin:/sbin"}, "when": "item.use_sudo|d(false)|bool == false and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, use_sudo: {{ item.use_sudo|d(false) }}"}}, "module_options": {"dest": "/etc/sudoers", "state": "absent", "regexp": "^{{ item.username }} ", "line": "{{ item.username }}", "validate": "visudo -cf %s"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "ryandaniels.create_users", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "debug variable group_names", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "debug variable group_names", "when": "debug_enabled_default | bool"}, "module_options": "var=group_names", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "debug variable users", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "debug variable users", "when": "debug_enabled_default | bool"}, "module_options": "var=users", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add group | create primary group before adding user to group", "module": "group", "index": 2, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add group | create primary group before adding user to group", "when": "item.primarygroup is defined and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "primarygroup: {{ item.primarygroup if item.primarygroup is defined else '' }}, primarygid: {{ item.primarygid if item.primarygid is defined else 'default' }}"}}, "module_options": {"name": "{{ item.primarygroup }}", "gid": "{{ item.primarygid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "set_fact - get groups as list per server", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "set_fact - get groups as list per server", "loop": "{{ users }}", "when": "item.groups is defined and item.servers | intersect(group_names)", "loop_control": {"label": "username: {{ item.username }}, groups_as_list: {{ item.groups if item.groups is defined else '' }}"}}, "module_options": {"groups_as_list": "{{ (groups_as_list|default([]) + item.groups.split(','))|map('trim')|list|sort|unique }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "debug show groups_as_list", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "debug show groups_as_list", "when": "debug_enabled_default | bool"}, "module_options": "var=groups_as_list", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Add group | create groups before adding user to group", "module": "group", "index": 5, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add group | create groups before adding user to group", "when": "groups_as_list is defined", "loop": "{{ groups_as_list }}", "loop_control": {"label": "groups: {{ item }}"}}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Add users | create users, shell, home dirs", "module": "user", "index": 6, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add users | create users, shell, home dirs", "when": "(item.user_state == 'present' or item.user_state == 'lock') and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, user_state: {{ item.user_state }}, password: {{ 'True' if item.password is defined else 'False' }}, update_password: {{ item.update_password if item.update_password is defined else default_update_password }}, primarygroup: {{ item.primarygroup if item.primarygroup is defined else ''}}, groups: {{ item.groups if item.groups is defined else ''}}, servers: {{ item.servers if item.servers is defined else '' }}, group_names: {{ group_names }}"}}, "module_options": {"name": "{{ item.username }}", "uid": "{{ item.uid | default(omit, True) }}", "password": "{{ item.password if item.password is defined else '!' }}", "update_password": "{{ item.update_password if item.update_password is defined else default_update_password }}", "group": "{{ item.primarygroup | default(omit) }}", "groups": "{{ item.groups | default(omit) }}", "shell": "{{ item.shell if item.shell is defined else default_shell }}", "createhome": true, "system": "{{ item.system | default(omit) }}", "comment": "{{ item.comment if item.comment is defined else '' }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Add users | Unlock password login (set expiry to -1)", "module": "user", "index": 7, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add users | Unlock password login (set expiry to -1)", "when": "item.user_state == 'present' and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, user_state: {{ item.user_state }}"}}, "module_options": {"name": "{{ item.username }}", "expires": -1}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Lock users | Lock password & ssh key authentication", "module": "user", "index": 8, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Lock users | Lock password & ssh key authentication", "when": "item.user_state == 'lock' and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, user_state: {{ item.user_state }}"}}, "module_options": {"name": "{{ item.username }}", "expires": 0}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "SSH Keys | Add authorized key for ssh key authentication", "module": "authorized_key", "index": 9, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "SSH Keys | Add authorized key for ssh key authentication", "when": "item.ssh_key is defined and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, ssh_key: {{ 'True' if item.ssh_key is defined else 'False' }}, exclusive_ssh_key: {{ item.exclusive_ssh_key if item.exclusive_ssh_key is defined else 'False' }}"}}, "module_options": {"user": "{{ item.username }}", "key": "{{ item.ssh_key }}", "exclusive": "{{ item.exclusive_ssh_key if item.exclusive_ssh_key is defined else 'no' }}", "state": "present"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "SSH Keys | Generate ssh key", "module": "user", "index": 10, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "SSH Keys | Generate ssh key", "when": "item.generate_ssh_key is defined and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, generate_ssh_key: {{ 'True' if item.generate_ssh_key is defined else 'False' }}, ssh_key_bits: {{ item.ssh_key_bits if item.ssh_key_bits is defined else '' }}, ssh_key_passphrase: {{ 'True' if item.ssh_key_passphrase is defined else 'False' }} "}}, "module_options": {"name": "{{ item.username }}", "generate_ssh_key": "{{ item.generate_ssh_key | default(false) }}", "ssh_key_bits": "{{ item.ssh_key_bits | default(omit) }}", "ssh_key_passphrase": "{{ item.ssh_key_passphrase | default(omit) }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Sudo | add to sudoers file and validate", "module": "lineinfile", "index": 11, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Sudo | add to sudoers file and validate", "environment": {"PATH": "/usr/sbin:/usr/local/sbin:/sbin"}, "when": "item.use_sudo|d(false)|bool == true and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, use_sudo: {{ item.use_sudo|d(false) }}, use_sudo_nopass: {{ item.use_sudo_nopass|d(false) }}"}}, "module_options": {"dest": "/etc/sudoers", "state": "present", "regexp": "^{{ item.username }} ", "line": "{{ item.username }} ALL=(ALL) {{ 'NOPASSWD:' if ( item.use_sudo_nopass|d(false) )  else '' }}ALL", "validate": "visudo -cf %s"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Sudo | remove from sudoers file and validate", "module": "lineinfile", "index": 12, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Sudo | remove from sudoers file and validate", "environment": {"PATH": "/usr/sbin:/usr/local/sbin:/sbin"}, "when": "item.use_sudo|d(false)|bool == false and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, use_sudo: {{ item.use_sudo|d(false) }}"}}, "module_options": {"dest": "/etc/sudoers", "state": "absent", "regexp": "^{{ item.username }} ", "line": "{{ item.username }}", "validate": "visudo -cf %s"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "debug variable group_names", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "debug variable group_names", "when": "debug_enabled_default | bool"}, "module_options": "var=group_names", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "debug variable users", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "debug variable users", "when": "debug_enabled_default | bool"}, "module_options": "var=users", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add group | create primary group before adding user to group", "module": "group", "index": 2, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add group | create primary group before adding user to group", "when": "item.primarygroup is defined and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "primarygroup: {{ item.primarygroup if item.primarygroup is defined else '' }}, primarygid: {{ item.primarygid if item.primarygid is defined else 'default' }}"}}, "module_options": {"name": "{{ item.primarygroup }}", "gid": "{{ item.primarygid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "set_fact - get groups as list per server", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "set_fact - get groups as list per server", "loop": "{{ users }}", "when": "item.groups is defined and item.servers | intersect(group_names)", "loop_control": {"label": "username: {{ item.username }}, groups_as_list: {{ item.groups if item.groups is defined else '' }}"}}, "module_options": {"groups_as_list": "{{ (groups_as_list|default([]) + item.groups.split(','))|map('trim')|list|sort|unique }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "debug show groups_as_list", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "debug show groups_as_list", "when": "debug_enabled_default | bool"}, "module_options": "var=groups_as_list", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add group | create groups before adding user to group", "module": "group", "index": 5, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add group | create groups before adding user to group", "when": "groups_as_list is defined", "loop": "{{ groups_as_list }}", "loop_control": {"label": "groups: {{ item }}"}}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add users | create users, shell, home dirs", "module": "user", "index": 6, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add users | create users, shell, home dirs", "when": "(item.user_state == 'present' or item.user_state == 'lock') and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, user_state: {{ item.user_state }}, password: {{ 'True' if item.password is defined else 'False' }}, update_password: {{ item.update_password if item.update_password is defined else default_update_password }}, primarygroup: {{ item.primarygroup if item.primarygroup is defined else ''}}, groups: {{ item.groups if item.groups is defined else ''}}, servers: {{ item.servers if item.servers is defined else '' }}, group_names: {{ group_names }}"}}, "module_options": {"name": "{{ item.username }}", "uid": "{{ item.uid | default(omit, True) }}", "password": "{{ item.password if item.password is defined else '!' }}", "update_password": "{{ item.update_password if item.update_password is defined else default_update_password }}", "group": "{{ item.primarygroup | default(omit) }}", "groups": "{{ item.groups | default(omit) }}", "shell": "{{ item.shell if item.shell is defined else default_shell }}", "createhome": true, "system": "{{ item.system | default(omit) }}", "comment": "{{ item.comment if item.comment is defined else '' }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add users | Unlock password login (set expiry to -1)", "module": "user", "index": 7, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add users | Unlock password login (set expiry to -1)", "when": "item.user_state == 'present' and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, user_state: {{ item.user_state }}"}}, "module_options": {"name": "{{ item.username }}", "expires": -1}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Lock users | Lock password & ssh key authentication", "module": "user", "index": 8, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Lock users | Lock password & ssh key authentication", "when": "item.user_state == 'lock' and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, user_state: {{ item.user_state }}"}}, "module_options": {"name": "{{ item.username }}", "expires": 0}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "SSH Keys | Add authorized key for ssh key authentication", "module": "authorized_key", "index": 9, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "SSH Keys | Add authorized key for ssh key authentication", "when": "item.ssh_key is defined and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, ssh_key: {{ 'True' if item.ssh_key is defined else 'False' }}, exclusive_ssh_key: {{ item.exclusive_ssh_key if item.exclusive_ssh_key is defined else 'False' }}"}}, "module_options": {"user": "{{ item.username }}", "key": "{{ item.ssh_key }}", "exclusive": "{{ item.exclusive_ssh_key if item.exclusive_ssh_key is defined else 'no' }}", "state": "present"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "SSH Keys | Generate ssh key", "module": "user", "index": 10, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "SSH Keys | Generate ssh key", "when": "item.generate_ssh_key is defined and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, generate_ssh_key: {{ 'True' if item.generate_ssh_key is defined else 'False' }}, ssh_key_bits: {{ item.ssh_key_bits if item.ssh_key_bits is defined else '' }}, ssh_key_passphrase: {{ 'True' if item.ssh_key_passphrase is defined else 'False' }} "}}, "module_options": {"name": "{{ item.username }}", "generate_ssh_key": "{{ item.generate_ssh_key | default(false) }}", "ssh_key_bits": "{{ item.ssh_key_bits | default(omit) }}", "ssh_key_passphrase": "{{ item.ssh_key_passphrase | default(omit) }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sudo | add to sudoers file and validate", "module": "lineinfile", "index": 11, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Sudo | add to sudoers file and validate", "environment": {"PATH": "/usr/sbin:/usr/local/sbin:/sbin"}, "when": "item.use_sudo|d(false)|bool == true and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, use_sudo: {{ item.use_sudo|d(false) }}, use_sudo_nopass: {{ item.use_sudo_nopass|d(false) }}"}}, "module_options": {"dest": "/etc/sudoers", "state": "present", "regexp": "^{{ item.username }} ", "line": "{{ item.username }} ALL=(ALL) {{ 'NOPASSWD:' if ( item.use_sudo_nopass|d(false) )  else '' }}ALL", "validate": "visudo -cf %s"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sudo | remove from sudoers file and validate", "module": "lineinfile", "index": 12, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Sudo | remove from sudoers file and validate", "environment": {"PATH": "/usr/sbin:/usr/local/sbin:/sbin"}, "when": "item.use_sudo|d(false)|bool == false and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, use_sudo: {{ item.use_sudo|d(false) }}"}}, "module_options": {"dest": "/etc/sudoers", "state": "absent", "regexp": "^{{ item.username }} ", "line": "{{ item.username }}", "validate": "visudo -cf %s"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "ryandaniels.create_users", "used_in": [], "annotations": {}}}, "role_dict": {"ryandaniels.create_users": {"py/object": "struct4.Role", "name": "ryandaniels.create_users", "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users", "fqcn": "ryandaniels.create_users", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "debug variable group_names", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "debug variable group_names", "when": "debug_enabled_default | bool"}, "module_options": "var=group_names", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "debug variable users", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "debug variable users", "when": "debug_enabled_default | bool"}, "module_options": "var=users", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add group | create primary group before adding user to group", "module": "group", "index": 2, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add group | create primary group before adding user to group", "when": "item.primarygroup is defined and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "primarygroup: {{ item.primarygroup if item.primarygroup is defined else '' }}, primarygid: {{ item.primarygid if item.primarygid is defined else 'default' }}"}}, "module_options": {"name": "{{ item.primarygroup }}", "gid": "{{ item.primarygid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "set_fact - get groups as list per server", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "set_fact - get groups as list per server", "loop": "{{ users }}", "when": "item.groups is defined and item.servers | intersect(group_names)", "loop_control": {"label": "username: {{ item.username }}, groups_as_list: {{ item.groups if item.groups is defined else '' }}"}}, "module_options": {"groups_as_list": "{{ (groups_as_list|default([]) + item.groups.split(','))|map('trim')|list|sort|unique }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "debug show groups_as_list", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "debug show groups_as_list", "when": "debug_enabled_default | bool"}, "module_options": "var=groups_as_list", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add group | create groups before adding user to group", "module": "group", "index": 5, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add group | create groups before adding user to group", "when": "groups_as_list is defined", "loop": "{{ groups_as_list }}", "loop_control": {"label": "groups: {{ item }}"}}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add users | create users, shell, home dirs", "module": "user", "index": 6, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add users | create users, shell, home dirs", "when": "(item.user_state == 'present' or item.user_state == 'lock') and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, user_state: {{ item.user_state }}, password: {{ 'True' if item.password is defined else 'False' }}, update_password: {{ item.update_password if item.update_password is defined else default_update_password }}, primarygroup: {{ item.primarygroup if item.primarygroup is defined else ''}}, groups: {{ item.groups if item.groups is defined else ''}}, servers: {{ item.servers if item.servers is defined else '' }}, group_names: {{ group_names }}"}}, "module_options": {"name": "{{ item.username }}", "uid": "{{ item.uid | default(omit, True) }}", "password": "{{ item.password if item.password is defined else '!' }}", "update_password": "{{ item.update_password if item.update_password is defined else default_update_password }}", "group": "{{ item.primarygroup | default(omit) }}", "groups": "{{ item.groups | default(omit) }}", "shell": "{{ item.shell if item.shell is defined else default_shell }}", "createhome": true, "system": "{{ item.system | default(omit) }}", "comment": "{{ item.comment if item.comment is defined else '' }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add users | Unlock password login (set expiry to -1)", "module": "user", "index": 7, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Add users | Unlock password login (set expiry to -1)", "when": "item.user_state == 'present' and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, user_state: {{ item.user_state }}"}}, "module_options": {"name": "{{ item.username }}", "expires": -1}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Lock users | Lock password & ssh key authentication", "module": "user", "index": 8, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Lock users | Lock password & ssh key authentication", "when": "item.user_state == 'lock' and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, user_state: {{ item.user_state }}"}}, "module_options": {"name": "{{ item.username }}", "expires": 0}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "SSH Keys | Add authorized key for ssh key authentication", "module": "authorized_key", "index": 9, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "SSH Keys | Add authorized key for ssh key authentication", "when": "item.ssh_key is defined and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, ssh_key: {{ 'True' if item.ssh_key is defined else 'False' }}, exclusive_ssh_key: {{ item.exclusive_ssh_key if item.exclusive_ssh_key is defined else 'False' }}"}}, "module_options": {"user": "{{ item.username }}", "key": "{{ item.ssh_key }}", "exclusive": "{{ item.exclusive_ssh_key if item.exclusive_ssh_key is defined else 'no' }}", "state": "present"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "SSH Keys | Generate ssh key", "module": "user", "index": 10, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "SSH Keys | Generate ssh key", "when": "item.generate_ssh_key is defined and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, generate_ssh_key: {{ 'True' if item.generate_ssh_key is defined else 'False' }}, ssh_key_bits: {{ item.ssh_key_bits if item.ssh_key_bits is defined else '' }}, ssh_key_passphrase: {{ 'True' if item.ssh_key_passphrase is defined else 'False' }} "}}, "module_options": {"name": "{{ item.username }}", "generate_ssh_key": "{{ item.generate_ssh_key | default(false) }}", "ssh_key_bits": "{{ item.ssh_key_bits | default(omit) }}", "ssh_key_passphrase": "{{ item.ssh_key_passphrase | default(omit) }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sudo | add to sudoers file and validate", "module": "lineinfile", "index": 11, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Sudo | add to sudoers file and validate", "environment": {"PATH": "/usr/sbin:/usr/local/sbin:/sbin"}, "when": "item.use_sudo|d(false)|bool == true and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, use_sudo: {{ item.use_sudo|d(false) }}, use_sudo_nopass: {{ item.use_sudo_nopass|d(false) }}"}}, "module_options": {"dest": "/etc/sudoers", "state": "present", "regexp": "^{{ item.username }} ", "line": "{{ item.username }} ALL=(ALL) {{ 'NOPASSWD:' if ( item.use_sudo_nopass|d(false) )  else '' }}ALL", "validate": "visudo -cf %s"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sudo | remove from sudoers file and validate", "module": "lineinfile", "index": 12, "defined_in": "./role-test/testdata/ryandaniels-create_users/ryandaniels.create_users/tasks/main.yml", "options": {"name": "Sudo | remove from sudoers file and validate", "environment": {"PATH": "/usr/sbin:/usr/local/sbin:/sbin"}, "when": "item.use_sudo|d(false)|bool == false and item.servers | intersect(group_names)", "loop": "{{ users }}", "loop_control": {"label": "username: {{ item.username }}, use_sudo: {{ item.use_sudo|d(false) }}"}}, "module_options": {"dest": "/etc/sudoers", "state": "absent", "regexp": "^{{ item.username }} ", "line": "{{ item.username }}", "validate": "visudo -cf %s"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "ryandaniels.create_users", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}