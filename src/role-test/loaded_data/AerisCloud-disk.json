{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/AerisCloud-disk", "installed_roles": [{"py/object": "struct4.Role", "name": "AerisCloud.disk", "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk", "fqcn": "AerisCloud.disk", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Discover NVMe EBS", "module": "disk_config", "index": 0, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Discover NVMe EBS", "register": "__disk_config", "when": "disk_discover_aws_nvme_ebs | default(True) | bool"}, "module_options": {"config": "{{ disk_additional_disks }}"}, "executable": "disk_config", "executable_type": "Module", "fqcn": "disk_config", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"when": "__disk_config is defined and __disk_config | success and 'ansible_facts' in __disk_config"}, "module_options": {"disk_additional_disks": "{{ __disk_config['ansible_facts']['config'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"when": "__disk_config is defined and __disk_config is not successful and 'ansible_facts' in __disk_config"}, "module_options": {"disk_additional_disks": "{{ __disk_config['ansible_facts']['config'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install parted", "module": "package", "index": 3, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Install parted", "when": "disk_additional_disks", "tags": ["disk", "pkgs"]}, "module_options": {"name": "parted", "state": "present", "use": "{{ disk_package_use }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install additional fs progs", "module": "package", "index": 4, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Install additional fs progs", "with_items": "{{ additional_fs_utils|default([]) }}", "when": "additional_fs_utils is defined", "tags": ["disk", "pkgs"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get disk alignment for disks", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Get disk alignment for disks", "args": {"creates": "{{ item.part | default(item.disk + \"1\") }}", "executable": "/bin/bash"}, "with_items": "{{ disk_additional_disks }}", "register": "disk_offset", "tags": ["disk"]}, "module_options": "if\n  [[ -e /sys/block/{{ item.disk | basename }}/queue/optimal_io_size && -e /sys/block/{{ item.disk | basename }}/alignment_offset && -e /sys/block/{{ item.disk | basename }}/queue/physical_block_size ]];\nthen\n  echo $[$(( ($(cat /sys/block/{{ item.disk | basename }}/queue/optimal_io_size) + $(cat /sys/block/{{ item.disk | basename }}/alignment_offset)) / $(cat /sys/block/{{ item.disk | basename }}/queue/physical_block_size) )) | 2048];\nelse\n  echo 2048;\nfi\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Partition additional disks", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Partition additional disks", "args": {"creates": "{{ item.part | default(item.disk + \"1\") }}", "executable": "/bin/bash"}, "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": "if\n    [ -b {{ item.disk }} ]\nthen\n    [ -b {{ item.part | default(item.disk + \"1\") }} ] || parted -a optimal --script \"{{ item.disk }}\" mklabel gpt mkpart primary {{ disk_offset.stdout|default(\"2048\") }}s 100% && sleep 5 && partprobe {{ item.disk }}; sleep 5\nfi\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create filesystem on the first partition", "module": "filesystem", "index": 7, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Create filesystem on the first partition", "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": {"dev": "{{ item.part | default(item.disk + \"1\") }}", "force": "{{ item.force|d(omit) }}", "fstype": "{{ item.fstype }}", "opts": "{{ item.fsopts|d(omit) }}"}, "executable": "filesystem", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable periodic fsck on ext3 or ext4 formatted disks", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Disable periodic fsck on ext3 or ext4 formatted disks", "with_items": "{{ disk_additional_disks }}", "when": "disk_additional_disks and ( item.fstype == 'ext4' or item.fstype == 'ext3' ) and item.disable_periodic_fsck|default(false)|bool", "tags": ["disk"]}, "module_options": "tune2fs -c0 -i0 {{ item.part | default(item.disk + \"1\") }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure the mount directory exists", "module": "file", "index": 9, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Ensure the mount directory exists", "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": {"path": "{{ item.mount }}", "owner": "{{ item.user | default(\"root\") }}", "group": "{{ item.group | default(\"root\") }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get UUID for partition", "module": "command", "index": 10, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Get UUID for partition", "register": "disk_blkid", "with_items": "{{ disk_additional_disks }}", "changed_when": false, "check_mode": false, "tags": ["disk"]}, "module_options": "blkid -s UUID -o value {{ item.part | default(item.disk + \"1\") }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Mount additional disk", "module": "mount", "index": 11, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Mount additional disk", "with_together": ["{{ disk_additional_disks }}", "{{ disk_blkid.results }}"], "tags": ["disk"]}, "module_options": {"name": "{{ item.0.mount }}", "fstype": "{{ item.0.fstype }}", "opts": "{{ item.0.mount_options|d(omit) }}", "passno": "0", "src": "UUID={{ item.1.stdout }}", "state": "{{ item.0.mount_state | default(\"mounted\") }}"}, "executable": "mount", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure the permissions are set correctly", "module": "file", "index": 12, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Ensure the permissions are set correctly", "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": {"path": "{{ item.mount }}", "owner": "{{ item.user | default(\"root\") }}", "group": "{{ item.group | default(\"root\") }}", "mode": "{{ item.mode | default(\"0755\") }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "AerisCloud.disk", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [{"py/object": "struct4.Module", "name": "disk_config", "fqcn": "disk_config", "collection": "", "role": "AerisCloud.disk", "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/library/disk_config.py", "builtin": false, "used_in": ["{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 0}"], "annotations": {}}], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {"disk_config": {"py/object": "struct4.Module", "name": "disk_config", "fqcn": "disk_config", "collection": "", "role": "AerisCloud.disk", "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/library/disk_config.py", "builtin": false, "used_in": ["{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 0}"], "annotations": {}}}, "task_dict": {"{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Discover NVMe EBS", "module": "disk_config", "index": 0, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Discover NVMe EBS", "register": "__disk_config", "when": "disk_discover_aws_nvme_ebs | default(True) | bool"}, "module_options": {"config": "{{ disk_additional_disks }}"}, "executable": "disk_config", "executable_type": "Module", "fqcn": "disk_config", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"when": "__disk_config is defined and __disk_config | success and 'ansible_facts' in __disk_config"}, "module_options": {"disk_additional_disks": "{{ __disk_config['ansible_facts']['config'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"when": "__disk_config is defined and __disk_config is not successful and 'ansible_facts' in __disk_config"}, "module_options": {"disk_additional_disks": "{{ __disk_config['ansible_facts']['config'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install parted", "module": "package", "index": 3, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Install parted", "when": "disk_additional_disks", "tags": ["disk", "pkgs"]}, "module_options": {"name": "parted", "state": "present", "use": "{{ disk_package_use }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install additional fs progs", "module": "package", "index": 4, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Install additional fs progs", "with_items": "{{ additional_fs_utils|default([]) }}", "when": "additional_fs_utils is defined", "tags": ["disk", "pkgs"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Get disk alignment for disks", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Get disk alignment for disks", "args": {"creates": "{{ item.part | default(item.disk + \"1\") }}", "executable": "/bin/bash"}, "with_items": "{{ disk_additional_disks }}", "register": "disk_offset", "tags": ["disk"]}, "module_options": "if\n  [[ -e /sys/block/{{ item.disk | basename }}/queue/optimal_io_size && -e /sys/block/{{ item.disk | basename }}/alignment_offset && -e /sys/block/{{ item.disk | basename }}/queue/physical_block_size ]];\nthen\n  echo $[$(( ($(cat /sys/block/{{ item.disk | basename }}/queue/optimal_io_size) + $(cat /sys/block/{{ item.disk | basename }}/alignment_offset)) / $(cat /sys/block/{{ item.disk | basename }}/queue/physical_block_size) )) | 2048];\nelse\n  echo 2048;\nfi\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Partition additional disks", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Partition additional disks", "args": {"creates": "{{ item.part | default(item.disk + \"1\") }}", "executable": "/bin/bash"}, "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": "if\n    [ -b {{ item.disk }} ]\nthen\n    [ -b {{ item.part | default(item.disk + \"1\") }} ] || parted -a optimal --script \"{{ item.disk }}\" mklabel gpt mkpart primary {{ disk_offset.stdout|default(\"2048\") }}s 100% && sleep 5 && partprobe {{ item.disk }}; sleep 5\nfi\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create filesystem on the first partition", "module": "filesystem", "index": 7, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Create filesystem on the first partition", "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": {"dev": "{{ item.part | default(item.disk + \"1\") }}", "force": "{{ item.force|d(omit) }}", "fstype": "{{ item.fstype }}", "opts": "{{ item.fsopts|d(omit) }}"}, "executable": "filesystem", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Disable periodic fsck on ext3 or ext4 formatted disks", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Disable periodic fsck on ext3 or ext4 formatted disks", "with_items": "{{ disk_additional_disks }}", "when": "disk_additional_disks and ( item.fstype == 'ext4' or item.fstype == 'ext3' ) and item.disable_periodic_fsck|default(false)|bool", "tags": ["disk"]}, "module_options": "tune2fs -c0 -i0 {{ item.part | default(item.disk + \"1\") }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Ensure the mount directory exists", "module": "file", "index": 9, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Ensure the mount directory exists", "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": {"path": "{{ item.mount }}", "owner": "{{ item.user | default(\"root\") }}", "group": "{{ item.group | default(\"root\") }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Get UUID for partition", "module": "command", "index": 10, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Get UUID for partition", "register": "disk_blkid", "with_items": "{{ disk_additional_disks }}", "changed_when": false, "check_mode": false, "tags": ["disk"]}, "module_options": "blkid -s UUID -o value {{ item.part | default(item.disk + \"1\") }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Mount additional disk", "module": "mount", "index": 11, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Mount additional disk", "with_together": ["{{ disk_additional_disks }}", "{{ disk_blkid.results }}"], "tags": ["disk"]}, "module_options": {"name": "{{ item.0.mount }}", "fstype": "{{ item.0.fstype }}", "opts": "{{ item.0.mount_options|d(omit) }}", "passno": "0", "src": "UUID={{ item.1.stdout }}", "state": "{{ item.0.mount_state | default(\"mounted\") }}"}, "executable": "mount", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Ensure the permissions are set correctly", "module": "file", "index": 12, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Ensure the permissions are set correctly", "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": {"path": "{{ item.mount }}", "owner": "{{ item.user | default(\"root\") }}", "group": "{{ item.group | default(\"root\") }}", "mode": "{{ item.mode | default(\"0755\") }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Discover NVMe EBS", "module": "disk_config", "index": 0, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Discover NVMe EBS", "register": "__disk_config", "when": "disk_discover_aws_nvme_ebs | default(True) | bool"}, "module_options": {"config": "{{ disk_additional_disks }}"}, "executable": "disk_config", "executable_type": "Module", "fqcn": "disk_config", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"when": "__disk_config is defined and __disk_config | success and 'ansible_facts' in __disk_config"}, "module_options": {"disk_additional_disks": "{{ __disk_config['ansible_facts']['config'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"when": "__disk_config is defined and __disk_config is not successful and 'ansible_facts' in __disk_config"}, "module_options": {"disk_additional_disks": "{{ __disk_config['ansible_facts']['config'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install parted", "module": "package", "index": 3, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Install parted", "when": "disk_additional_disks", "tags": ["disk", "pkgs"]}, "module_options": {"name": "parted", "state": "present", "use": "{{ disk_package_use }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install additional fs progs", "module": "package", "index": 4, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Install additional fs progs", "with_items": "{{ additional_fs_utils|default([]) }}", "when": "additional_fs_utils is defined", "tags": ["disk", "pkgs"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get disk alignment for disks", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Get disk alignment for disks", "args": {"creates": "{{ item.part | default(item.disk + \"1\") }}", "executable": "/bin/bash"}, "with_items": "{{ disk_additional_disks }}", "register": "disk_offset", "tags": ["disk"]}, "module_options": "if\n  [[ -e /sys/block/{{ item.disk | basename }}/queue/optimal_io_size && -e /sys/block/{{ item.disk | basename }}/alignment_offset && -e /sys/block/{{ item.disk | basename }}/queue/physical_block_size ]];\nthen\n  echo $[$(( ($(cat /sys/block/{{ item.disk | basename }}/queue/optimal_io_size) + $(cat /sys/block/{{ item.disk | basename }}/alignment_offset)) / $(cat /sys/block/{{ item.disk | basename }}/queue/physical_block_size) )) | 2048];\nelse\n  echo 2048;\nfi\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Partition additional disks", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Partition additional disks", "args": {"creates": "{{ item.part | default(item.disk + \"1\") }}", "executable": "/bin/bash"}, "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": "if\n    [ -b {{ item.disk }} ]\nthen\n    [ -b {{ item.part | default(item.disk + \"1\") }} ] || parted -a optimal --script \"{{ item.disk }}\" mklabel gpt mkpart primary {{ disk_offset.stdout|default(\"2048\") }}s 100% && sleep 5 && partprobe {{ item.disk }}; sleep 5\nfi\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create filesystem on the first partition", "module": "filesystem", "index": 7, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Create filesystem on the first partition", "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": {"dev": "{{ item.part | default(item.disk + \"1\") }}", "force": "{{ item.force|d(omit) }}", "fstype": "{{ item.fstype }}", "opts": "{{ item.fsopts|d(omit) }}"}, "executable": "filesystem", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable periodic fsck on ext3 or ext4 formatted disks", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Disable periodic fsck on ext3 or ext4 formatted disks", "with_items": "{{ disk_additional_disks }}", "when": "disk_additional_disks and ( item.fstype == 'ext4' or item.fstype == 'ext3' ) and item.disable_periodic_fsck|default(false)|bool", "tags": ["disk"]}, "module_options": "tune2fs -c0 -i0 {{ item.part | default(item.disk + \"1\") }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure the mount directory exists", "module": "file", "index": 9, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Ensure the mount directory exists", "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": {"path": "{{ item.mount }}", "owner": "{{ item.user | default(\"root\") }}", "group": "{{ item.group | default(\"root\") }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get UUID for partition", "module": "command", "index": 10, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Get UUID for partition", "register": "disk_blkid", "with_items": "{{ disk_additional_disks }}", "changed_when": false, "check_mode": false, "tags": ["disk"]}, "module_options": "blkid -s UUID -o value {{ item.part | default(item.disk + \"1\") }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Mount additional disk", "module": "mount", "index": 11, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Mount additional disk", "with_together": ["{{ disk_additional_disks }}", "{{ disk_blkid.results }}"], "tags": ["disk"]}, "module_options": {"name": "{{ item.0.mount }}", "fstype": "{{ item.0.fstype }}", "opts": "{{ item.0.mount_options|d(omit) }}", "passno": "0", "src": "UUID={{ item.1.stdout }}", "state": "{{ item.0.mount_state | default(\"mounted\") }}"}, "executable": "mount", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure the permissions are set correctly", "module": "file", "index": 12, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Ensure the permissions are set correctly", "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": {"path": "{{ item.mount }}", "owner": "{{ item.user | default(\"root\") }}", "group": "{{ item.group | default(\"root\") }}", "mode": "{{ item.mode | default(\"0755\") }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "AerisCloud.disk", "used_in": [], "annotations": {"use-non-builtin-module": true}}}, "role_dict": {"AerisCloud.disk": {"py/object": "struct4.Role", "name": "AerisCloud.disk", "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk", "fqcn": "AerisCloud.disk", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Discover NVMe EBS", "module": "disk_config", "index": 0, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Discover NVMe EBS", "register": "__disk_config", "when": "disk_discover_aws_nvme_ebs | default(True) | bool"}, "module_options": {"config": "{{ disk_additional_disks }}"}, "executable": "disk_config", "executable_type": "Module", "fqcn": "disk_config", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"when": "__disk_config is defined and __disk_config | success and 'ansible_facts' in __disk_config"}, "module_options": {"disk_additional_disks": "{{ __disk_config['ansible_facts']['config'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"when": "__disk_config is defined and __disk_config is not successful and 'ansible_facts' in __disk_config"}, "module_options": {"disk_additional_disks": "{{ __disk_config['ansible_facts']['config'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install parted", "module": "package", "index": 3, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Install parted", "when": "disk_additional_disks", "tags": ["disk", "pkgs"]}, "module_options": {"name": "parted", "state": "present", "use": "{{ disk_package_use }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install additional fs progs", "module": "package", "index": 4, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Install additional fs progs", "with_items": "{{ additional_fs_utils|default([]) }}", "when": "additional_fs_utils is defined", "tags": ["disk", "pkgs"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get disk alignment for disks", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Get disk alignment for disks", "args": {"creates": "{{ item.part | default(item.disk + \"1\") }}", "executable": "/bin/bash"}, "with_items": "{{ disk_additional_disks }}", "register": "disk_offset", "tags": ["disk"]}, "module_options": "if\n  [[ -e /sys/block/{{ item.disk | basename }}/queue/optimal_io_size && -e /sys/block/{{ item.disk | basename }}/alignment_offset && -e /sys/block/{{ item.disk | basename }}/queue/physical_block_size ]];\nthen\n  echo $[$(( ($(cat /sys/block/{{ item.disk | basename }}/queue/optimal_io_size) + $(cat /sys/block/{{ item.disk | basename }}/alignment_offset)) / $(cat /sys/block/{{ item.disk | basename }}/queue/physical_block_size) )) | 2048];\nelse\n  echo 2048;\nfi\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Partition additional disks", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Partition additional disks", "args": {"creates": "{{ item.part | default(item.disk + \"1\") }}", "executable": "/bin/bash"}, "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": "if\n    [ -b {{ item.disk }} ]\nthen\n    [ -b {{ item.part | default(item.disk + \"1\") }} ] || parted -a optimal --script \"{{ item.disk }}\" mklabel gpt mkpart primary {{ disk_offset.stdout|default(\"2048\") }}s 100% && sleep 5 && partprobe {{ item.disk }}; sleep 5\nfi\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create filesystem on the first partition", "module": "filesystem", "index": 7, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Create filesystem on the first partition", "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": {"dev": "{{ item.part | default(item.disk + \"1\") }}", "force": "{{ item.force|d(omit) }}", "fstype": "{{ item.fstype }}", "opts": "{{ item.fsopts|d(omit) }}"}, "executable": "filesystem", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable periodic fsck on ext3 or ext4 formatted disks", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Disable periodic fsck on ext3 or ext4 formatted disks", "with_items": "{{ disk_additional_disks }}", "when": "disk_additional_disks and ( item.fstype == 'ext4' or item.fstype == 'ext3' ) and item.disable_periodic_fsck|default(false)|bool", "tags": ["disk"]}, "module_options": "tune2fs -c0 -i0 {{ item.part | default(item.disk + \"1\") }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure the mount directory exists", "module": "file", "index": 9, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Ensure the mount directory exists", "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": {"path": "{{ item.mount }}", "owner": "{{ item.user | default(\"root\") }}", "group": "{{ item.group | default(\"root\") }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get UUID for partition", "module": "command", "index": 10, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Get UUID for partition", "register": "disk_blkid", "with_items": "{{ disk_additional_disks }}", "changed_when": false, "check_mode": false, "tags": ["disk"]}, "module_options": "blkid -s UUID -o value {{ item.part | default(item.disk + \"1\") }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Mount additional disk", "module": "mount", "index": 11, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Mount additional disk", "with_together": ["{{ disk_additional_disks }}", "{{ disk_blkid.results }}"], "tags": ["disk"]}, "module_options": {"name": "{{ item.0.mount }}", "fstype": "{{ item.0.fstype }}", "opts": "{{ item.0.mount_options|d(omit) }}", "passno": "0", "src": "UUID={{ item.1.stdout }}", "state": "{{ item.0.mount_state | default(\"mounted\") }}"}, "executable": "mount", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure the permissions are set correctly", "module": "file", "index": 12, "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml", "options": {"name": "Ensure the permissions are set correctly", "with_items": "{{ disk_additional_disks }}", "tags": ["disk"]}, "module_options": {"path": "{{ item.mount }}", "owner": "{{ item.user | default(\"root\") }}", "group": "{{ item.group | default(\"root\") }}", "mode": "{{ item.mode | default(\"0755\") }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "AerisCloud.disk", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [{"py/object": "struct4.Module", "name": "disk_config", "fqcn": "disk_config", "collection": "", "role": "AerisCloud.disk", "defined_in": "./role-test/testdata/AerisCloud-disk/AerisCloud.disk/library/disk_config.py", "builtin": false, "used_in": ["{\"path\": \"./role-test/testdata/AerisCloud-disk/AerisCloud.disk/tasks/main.yml\", \"index\": 0}"], "annotations": {}}], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}}, "annotations": {}}