{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/cloudalchemy-prometheus", "installed_roles": [{"py/object": "struct4.Role", "name": "cloudalchemy.prometheus", "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus", "fqcn": "cloudalchemy.prometheus", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "preflight.yml", "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "tasks": [{"py/object": "struct4.Task", "name": "Assert usage of systemd as an init system", "module": "assert", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Assert usage of systemd as an init system"}, "module_options": {"that": "ansible_service_mgr == 'systemd'", "msg": "This module only works with systemd"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get systemd version", "module": "command", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get systemd version", "changed_when": false, "check_mode": false, "register": "__systemd_version", "tags": ["skip_ansible_lint"]}, "module_options": "systemctl --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd version fact", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Set systemd version fact"}, "module_options": {"prometheus_systemd_version": "{{ __systemd_version.stdout_lines[0].split(' ')[-1] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert no duplicate config flags", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Assert no duplicate config flags"}, "module_options": {"that": ["prometheus_config_flags_extra['config.file'] is not defined", "prometheus_config_flags_extra['storage.tsdb.path'] is not defined", "prometheus_config_flags_extra['storage.local.path'] is not defined", "prometheus_config_flags_extra['web.listen-address'] is not defined", "prometheus_config_flags_extra['web.external-url'] is not defined"], "msg": "Detected duplicate configuration entry. Please check your ansible variables and role README.md."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert external_labels aren't configured twice", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Assert external_labels aren't configured twice"}, "module_options": {"that": "prometheus_global.external_labels is not defined", "msg": "Use prometheus_external_labels to define external labels"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set prometheus external metrics path", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Set prometheus external metrics path"}, "module_options": {"prometheus_metrics_path": "/{{ ( prometheus_web_external_url + '/metrics' ) | regex_replace('^(.*://)?(.*?)/') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail when prometheus_config_flags_extra duplicates parameters set by other variables", "module": "fail", "index": 6, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Fail when prometheus_config_flags_extra duplicates parameters set by other variables", "with_items": ["storage.tsdb.retention", "storage.tsdb.path", "storage.local.retention", "storage.local.path", "config.file", "web.listen-address", "web.external-url"], "when": "item in prometheus_config_flags_extra.keys()"}, "module_options": {"msg": "Whooops. You are duplicating configuration. Please look at your prometheus_config_flags_extra and check against other variables in defaults/main.yml\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get all file_sd files from scrape_configs", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get all file_sd files from scrape_configs"}, "module_options": {"file_sd_files": "{{ prometheus_scrape_configs | json_query('[*][].file_sd_configs[*][].files[]') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail when file_sd targets are not defined in scrape_configs", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Fail when file_sd targets are not defined in scrape_configs", "when": "not prometheus_config_dir + \"/file_sd/\" + item.key + \".yml\" in file_sd_files", "with_dict": "{{ prometheus_targets }}"}, "module_options": {"msg": "Oh, snap! `{{ item.key }}` couldn't be found in your scrape configs. Please ensure you provided all targets from prometheus_targets in prometheus_scrape_configs\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Alert when prometheus_alertmanager_config is empty, but prometheus_alert_rules is specified", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Alert when prometheus_alertmanager_config is empty, but prometheus_alert_rules is specified", "when": ["prometheus_alertmanager_config == []", "prometheus_alert_rules != []"]}, "module_options": {"msg": "No alertmanager configuration was specified. If you want your alerts to be sent make sure to specify a prometheus_alertmanager_config in defaults/main.yml.\n"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get latest release", "module": "uri", "index": 10, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get latest release", "no_log": "{{ not lookup('env', 'ANSIBLE_DEBUG') | bool }}", "register": "_latest_release", "until": "_latest_release.status == 200", "retries": 5}, "module_options": {"url": "https://api.github.com/repos/prometheus/prometheus/releases/latest", "method": "GET", "return_content": true, "status_code": 200, "body_format": "json", "validate_certs": false, "user": "{{ lookup('env', 'GH_USER') | default(omit) }}", "password": "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set prometheus version to {{ _latest_release.json.tag_name[1:] }}", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Set prometheus version to {{ _latest_release.json.tag_name[1:] }}"}, "module_options": {"prometheus_version": "{{ _latest_release.json.tag_name[1:] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get checksum list", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get checksum list", "run_once": true}, "module_options": {"__prometheus_checksums": "{{ lookup('url', 'https://github.com/prometheus/prometheus/releases/download/v' + prometheus_version + '/sha256sums.txt', wantlist=True) | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get checksum for {{ go_arch }} architecture", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get checksum for {{ go_arch }} architecture", "with_items": "{{ __prometheus_checksums }}", "when": ["('linux-' + go_arch + '.tar.gz') in item"]}, "module_options": {"__prometheus_checksum": "{{ item.split(' ')[0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "cloudalchemy.prometheus", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "alerting rules file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "alerting rules file", "when": ["prometheus_alert_rules != []"], "notify": ["reload prometheus"]}, "module_options": {"src": "alert.rules.j2", "dest": "{{ prometheus_config_dir }}/rules/ansible_managed.rules", "owner": "root", "group": "prometheus", "mode": 416, "validate": "{{ _prometheus_binary_install_dir }}/promtool check rules %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "copy custom alerting rule files", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "copy custom alerting rule files", "with_fileglob": "{{ prometheus_alert_rules_files }}", "notify": ["reload prometheus"]}, "module_options": {"src": "{{ item }}", "dest": "{{ prometheus_config_dir }}/rules/", "owner": "root", "group": "prometheus", "mode": 416, "validate": "{{ _prometheus_binary_install_dir }}/promtool check rules %s"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure prometheus", "module": "template", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "configure prometheus", "notify": ["reload prometheus"]}, "module_options": {"src": "{{ prometheus_config_file }}", "dest": "{{ prometheus_config_dir }}/prometheus.yml", "force": true, "owner": "root", "group": "prometheus", "mode": 416, "validate": "{{ _prometheus_binary_install_dir }}/promtool check config %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure prometheus static targets", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "configure prometheus static targets", "with_dict": "{{ prometheus_targets }}", "when": "prometheus_targets != {}"}, "module_options": {"content": "#jinja2: lstrip_blocks: True\n{{ item.value | to_nice_yaml(indent=2) }}\n", "dest": "{{ prometheus_config_dir }}/file_sd/{{ item.key }}.yml", "force": true, "owner": "root", "group": "prometheus", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "copy prometheus custom static targets", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "copy prometheus custom static targets", "with_fileglob": "{{ prometheus_static_targets_files }}"}, "module_options": {"src": "{{ item }}", "dest": "{{ prometheus_config_dir }}/file_sd/", "force": true, "owner": "root", "group": "prometheus", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "cloudalchemy.prometheus", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "create prometheus system group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus system group"}, "module_options": {"name": "prometheus", "system": true, "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "create prometheus system user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus system user"}, "module_options": {"name": "prometheus", "system": true, "shell": "/usr/sbin/nologin", "group": "prometheus", "createhome": false, "home": "{{ prometheus_db_dir }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "create prometheus data directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus data directory"}, "module_options": {"path": "{{ prometheus_db_dir }}", "state": "directory", "owner": "prometheus", "group": "prometheus", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create prometheus configuration directories", "module": "file", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus configuration directories", "with_items": ["{{ prometheus_config_dir }}", "{{ prometheus_config_dir }}/rules", "{{ prometheus_config_dir }}/file_sd"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "prometheus", "mode": 504}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "download prometheus binary to local folder", "module": "get_url", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "download prometheus binary to local folder", "become": false, "register": "_download_archive", "until": "_download_archive is succeeded", "retries": 5, "delay": 2, "delegate_to": "localhost", "check_mode": false}, "module_options": {"url": "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz", "checksum": "sha256:{{ __prometheus_checksum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "unpack prometheus binaries", "module": "unarchive", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "unpack prometheus binaries", "become": false, "delegate_to": "localhost", "check_mode": false}, "module_options": {"src": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp", "creates": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/prometheus"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "propagate official prometheus and promtool binaries", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "propagate official prometheus and promtool binaries", "with_items": ["prometheus", "promtool"], "notify": ["restart prometheus"]}, "module_options": {"src": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}", "dest": "{{ _prometheus_binary_install_dir }}/{{ item }}", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "propagate official console templates", "module": "copy", "index": 7, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "propagate official console templates", "with_items": ["console_libraries", "consoles"], "notify": ["restart prometheus"]}, "module_options": {"src": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}/", "dest": "{{ prometheus_config_dir }}/{{ item }}/", "mode": 420, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "propagate locally distributed prometheus and promtool binaries", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "propagate locally distributed prometheus and promtool binaries", "with_items": ["prometheus", "promtool"], "when": ["prometheus_binary_local_dir | length > 0", "not prometheus_skip_install"], "notify": ["restart prometheus"]}, "module_options": {"src": "{{ prometheus_binary_local_dir }}/{{ item }}", "dest": "{{ _prometheus_binary_install_dir }}/{{ item }}", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "create systemd service unit", "module": "template", "index": 9, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create systemd service unit", "notify": ["restart prometheus"]}, "module_options": {"src": "prometheus.service.j2", "dest": "/etc/systemd/system/prometheus.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install SELinux dependencies", "module": "package", "index": 10, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "Install SELinux dependencies", "with_items": "{{ prometheus_selinux_packages }}", "register": "_install_packages", "until": "_install_packages is succeeded", "retries": 5, "delay": 2, "when": ["ansible_version.full is version('2.4', '>=')", "ansible_selinux.status == \"enabled\""]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow prometheus to bind to port in SELinux", "module": "seport", "index": 11, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "Allow prometheus to bind to port in SELinux", "when": ["ansible_version.full is version('2.4', '>=')", "ansible_selinux.status == \"enabled\""]}, "module_options": {"ports": "{{ prometheus_web_listen_address.split(':')[1] }}", "proto": "tcp", "setype": "http_port_t", "state": "present"}, "executable": "seport", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "cloudalchemy.prometheus", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather variables for each operating system", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"name": "Gather variables for each operating system", "with_first_found": ["{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution | lower }}.yml", "{{ ansible_os_family | lower }}.yml"], "tags": ["prometheus_configure", "prometheus_install", "prometheus_run"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"tags": ["prometheus_configure", "prometheus_install", "prometheus_run"]}, "module_options": "preflight.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"become": true, "tags": ["prometheus_install"]}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"become": true, "tags": ["prometheus_configure"]}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure prometheus service is started and enabled", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"name": "ensure prometheus service is started and enabled", "become": true, "tags": ["prometheus_run"]}, "module_options": {"daemon_reload": true, "name": "prometheus", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "cloudalchemy.prometheus", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Assert usage of systemd as an init system", "module": "assert", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Assert usage of systemd as an init system"}, "module_options": {"that": "ansible_service_mgr == 'systemd'", "msg": "This module only works with systemd"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Get systemd version", "module": "command", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get systemd version", "changed_when": false, "check_mode": false, "register": "__systemd_version", "tags": ["skip_ansible_lint"]}, "module_options": "systemctl --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set systemd version fact", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Set systemd version fact"}, "module_options": {"prometheus_systemd_version": "{{ __systemd_version.stdout_lines[0].split(' ')[-1] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Assert no duplicate config flags", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Assert no duplicate config flags"}, "module_options": {"that": ["prometheus_config_flags_extra['config.file'] is not defined", "prometheus_config_flags_extra['storage.tsdb.path'] is not defined", "prometheus_config_flags_extra['storage.local.path'] is not defined", "prometheus_config_flags_extra['web.listen-address'] is not defined", "prometheus_config_flags_extra['web.external-url'] is not defined"], "msg": "Detected duplicate configuration entry. Please check your ansible variables and role README.md."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Assert external_labels aren't configured twice", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Assert external_labels aren't configured twice"}, "module_options": {"that": "prometheus_global.external_labels is not defined", "msg": "Use prometheus_external_labels to define external labels"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Set prometheus external metrics path", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Set prometheus external metrics path"}, "module_options": {"prometheus_metrics_path": "/{{ ( prometheus_web_external_url + '/metrics' ) | regex_replace('^(.*://)?(.*?)/') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Fail when prometheus_config_flags_extra duplicates parameters set by other variables", "module": "fail", "index": 6, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Fail when prometheus_config_flags_extra duplicates parameters set by other variables", "with_items": ["storage.tsdb.retention", "storage.tsdb.path", "storage.local.retention", "storage.local.path", "config.file", "web.listen-address", "web.external-url"], "when": "item in prometheus_config_flags_extra.keys()"}, "module_options": {"msg": "Whooops. You are duplicating configuration. Please look at your prometheus_config_flags_extra and check against other variables in defaults/main.yml\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Get all file_sd files from scrape_configs", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get all file_sd files from scrape_configs"}, "module_options": {"file_sd_files": "{{ prometheus_scrape_configs | json_query('[*][].file_sd_configs[*][].files[]') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Fail when file_sd targets are not defined in scrape_configs", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Fail when file_sd targets are not defined in scrape_configs", "when": "not prometheus_config_dir + \"/file_sd/\" + item.key + \".yml\" in file_sd_files", "with_dict": "{{ prometheus_targets }}"}, "module_options": {"msg": "Oh, snap! `{{ item.key }}` couldn't be found in your scrape configs. Please ensure you provided all targets from prometheus_targets in prometheus_scrape_configs\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Alert when prometheus_alertmanager_config is empty, but prometheus_alert_rules is specified", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Alert when prometheus_alertmanager_config is empty, but prometheus_alert_rules is specified", "when": ["prometheus_alertmanager_config == []", "prometheus_alert_rules != []"]}, "module_options": {"msg": "No alertmanager configuration was specified. If you want your alerts to be sent make sure to specify a prometheus_alertmanager_config in defaults/main.yml.\n"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Get latest release", "module": "uri", "index": 10, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get latest release", "no_log": "{{ not lookup('env', 'ANSIBLE_DEBUG') | bool }}", "register": "_latest_release", "until": "_latest_release.status == 200", "retries": 5}, "module_options": {"url": "https://api.github.com/repos/prometheus/prometheus/releases/latest", "method": "GET", "return_content": true, "status_code": 200, "body_format": "json", "validate_certs": false, "user": "{{ lookup('env', 'GH_USER') | default(omit) }}", "password": "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Set prometheus version to {{ _latest_release.json.tag_name[1:] }}", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Set prometheus version to {{ _latest_release.json.tag_name[1:] }}"}, "module_options": {"prometheus_version": "{{ _latest_release.json.tag_name[1:] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Get checksum list", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get checksum list", "run_once": true}, "module_options": {"__prometheus_checksums": "{{ lookup('url', 'https://github.com/prometheus/prometheus/releases/download/v' + prometheus_version + '/sha256sums.txt', wantlist=True) | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Get checksum for {{ go_arch }} architecture", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get checksum for {{ go_arch }} architecture", "with_items": "{{ __prometheus_checksums }}", "when": ["('linux-' + go_arch + '.tar.gz') in item"]}, "module_options": {"__prometheus_checksum": "{{ item.split(' ')[0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "alerting rules file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "alerting rules file", "when": ["prometheus_alert_rules != []"], "notify": ["reload prometheus"]}, "module_options": {"src": "alert.rules.j2", "dest": "{{ prometheus_config_dir }}/rules/ansible_managed.rules", "owner": "root", "group": "prometheus", "mode": 416, "validate": "{{ _prometheus_binary_install_dir }}/promtool check rules %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "copy custom alerting rule files", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "copy custom alerting rule files", "with_fileglob": "{{ prometheus_alert_rules_files }}", "notify": ["reload prometheus"]}, "module_options": {"src": "{{ item }}", "dest": "{{ prometheus_config_dir }}/rules/", "owner": "root", "group": "prometheus", "mode": 416, "validate": "{{ _prometheus_binary_install_dir }}/promtool check rules %s"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "configure prometheus", "module": "template", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "configure prometheus", "notify": ["reload prometheus"]}, "module_options": {"src": "{{ prometheus_config_file }}", "dest": "{{ prometheus_config_dir }}/prometheus.yml", "force": true, "owner": "root", "group": "prometheus", "mode": 416, "validate": "{{ _prometheus_binary_install_dir }}/promtool check config %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "configure prometheus static targets", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "configure prometheus static targets", "with_dict": "{{ prometheus_targets }}", "when": "prometheus_targets != {}"}, "module_options": {"content": "#jinja2: lstrip_blocks: True\n{{ item.value | to_nice_yaml(indent=2) }}\n", "dest": "{{ prometheus_config_dir }}/file_sd/{{ item.key }}.yml", "force": true, "owner": "root", "group": "prometheus", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "copy prometheus custom static targets", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "copy prometheus custom static targets", "with_fileglob": "{{ prometheus_static_targets_files }}"}, "module_options": {"src": "{{ item }}", "dest": "{{ prometheus_config_dir }}/file_sd/", "force": true, "owner": "root", "group": "prometheus", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create prometheus system group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus system group"}, "module_options": {"name": "prometheus", "system": true, "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create prometheus system user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus system user"}, "module_options": {"name": "prometheus", "system": true, "shell": "/usr/sbin/nologin", "group": "prometheus", "createhome": false, "home": "{{ prometheus_db_dir }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "create prometheus data directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus data directory"}, "module_options": {"path": "{{ prometheus_db_dir }}", "state": "directory", "owner": "prometheus", "group": "prometheus", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "create prometheus configuration directories", "module": "file", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus configuration directories", "with_items": ["{{ prometheus_config_dir }}", "{{ prometheus_config_dir }}/rules", "{{ prometheus_config_dir }}/file_sd"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "prometheus", "mode": 504}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "download prometheus binary to local folder", "module": "get_url", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "download prometheus binary to local folder", "become": false, "register": "_download_archive", "until": "_download_archive is succeeded", "retries": 5, "delay": 2, "delegate_to": "localhost", "check_mode": false}, "module_options": {"url": "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz", "checksum": "sha256:{{ __prometheus_checksum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "unpack prometheus binaries", "module": "unarchive", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "unpack prometheus binaries", "become": false, "delegate_to": "localhost", "check_mode": false}, "module_options": {"src": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp", "creates": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/prometheus"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "propagate official prometheus and promtool binaries", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "propagate official prometheus and promtool binaries", "with_items": ["prometheus", "promtool"], "notify": ["restart prometheus"]}, "module_options": {"src": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}", "dest": "{{ _prometheus_binary_install_dir }}/{{ item }}", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "propagate official console templates", "module": "copy", "index": 7, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "propagate official console templates", "with_items": ["console_libraries", "consoles"], "notify": ["restart prometheus"]}, "module_options": {"src": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}/", "dest": "{{ prometheus_config_dir }}/{{ item }}/", "mode": 420, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "propagate locally distributed prometheus and promtool binaries", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "propagate locally distributed prometheus and promtool binaries", "with_items": ["prometheus", "promtool"], "when": ["prometheus_binary_local_dir | length > 0", "not prometheus_skip_install"], "notify": ["restart prometheus"]}, "module_options": {"src": "{{ prometheus_binary_local_dir }}/{{ item }}", "dest": "{{ _prometheus_binary_install_dir }}/{{ item }}", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "create systemd service unit", "module": "template", "index": 9, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create systemd service unit", "notify": ["restart prometheus"]}, "module_options": {"src": "prometheus.service.j2", "dest": "/etc/systemd/system/prometheus.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Install SELinux dependencies", "module": "package", "index": 10, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "Install SELinux dependencies", "with_items": "{{ prometheus_selinux_packages }}", "register": "_install_packages", "until": "_install_packages is succeeded", "retries": 5, "delay": 2, "when": ["ansible_version.full is version('2.4', '>=')", "ansible_selinux.status == \"enabled\""]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Allow prometheus to bind to port in SELinux", "module": "seport", "index": 11, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "Allow prometheus to bind to port in SELinux", "when": ["ansible_version.full is version('2.4', '>=')", "ansible_selinux.status == \"enabled\""]}, "module_options": {"ports": "{{ prometheus_web_listen_address.split(':')[1] }}", "proto": "tcp", "setype": "http_port_t", "state": "present"}, "executable": "seport", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Gather variables for each operating system", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"name": "Gather variables for each operating system", "with_first_found": ["{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution | lower }}.yml", "{{ ansible_os_family | lower }}.yml"], "tags": ["prometheus_configure", "prometheus_install", "prometheus_run"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"tags": ["prometheus_configure", "prometheus_install", "prometheus_run"]}, "module_options": "preflight.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"become": true, "tags": ["prometheus_install"]}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"become": true, "tags": ["prometheus_configure"]}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "ensure prometheus service is started and enabled", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"name": "ensure prometheus service is started and enabled", "become": true, "tags": ["prometheus_run"]}, "module_options": {"daemon_reload": true, "name": "prometheus", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml": {"py/object": "struct4.TaskFile", "name": "preflight.yml", "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "tasks": [{"py/object": "struct4.Task", "name": "Assert usage of systemd as an init system", "module": "assert", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Assert usage of systemd as an init system"}, "module_options": {"that": "ansible_service_mgr == 'systemd'", "msg": "This module only works with systemd"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get systemd version", "module": "command", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get systemd version", "changed_when": false, "check_mode": false, "register": "__systemd_version", "tags": ["skip_ansible_lint"]}, "module_options": "systemctl --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd version fact", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Set systemd version fact"}, "module_options": {"prometheus_systemd_version": "{{ __systemd_version.stdout_lines[0].split(' ')[-1] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert no duplicate config flags", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Assert no duplicate config flags"}, "module_options": {"that": ["prometheus_config_flags_extra['config.file'] is not defined", "prometheus_config_flags_extra['storage.tsdb.path'] is not defined", "prometheus_config_flags_extra['storage.local.path'] is not defined", "prometheus_config_flags_extra['web.listen-address'] is not defined", "prometheus_config_flags_extra['web.external-url'] is not defined"], "msg": "Detected duplicate configuration entry. Please check your ansible variables and role README.md."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert external_labels aren't configured twice", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Assert external_labels aren't configured twice"}, "module_options": {"that": "prometheus_global.external_labels is not defined", "msg": "Use prometheus_external_labels to define external labels"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set prometheus external metrics path", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Set prometheus external metrics path"}, "module_options": {"prometheus_metrics_path": "/{{ ( prometheus_web_external_url + '/metrics' ) | regex_replace('^(.*://)?(.*?)/') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail when prometheus_config_flags_extra duplicates parameters set by other variables", "module": "fail", "index": 6, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Fail when prometheus_config_flags_extra duplicates parameters set by other variables", "with_items": ["storage.tsdb.retention", "storage.tsdb.path", "storage.local.retention", "storage.local.path", "config.file", "web.listen-address", "web.external-url"], "when": "item in prometheus_config_flags_extra.keys()"}, "module_options": {"msg": "Whooops. You are duplicating configuration. Please look at your prometheus_config_flags_extra and check against other variables in defaults/main.yml\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get all file_sd files from scrape_configs", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get all file_sd files from scrape_configs"}, "module_options": {"file_sd_files": "{{ prometheus_scrape_configs | json_query('[*][].file_sd_configs[*][].files[]') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail when file_sd targets are not defined in scrape_configs", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Fail when file_sd targets are not defined in scrape_configs", "when": "not prometheus_config_dir + \"/file_sd/\" + item.key + \".yml\" in file_sd_files", "with_dict": "{{ prometheus_targets }}"}, "module_options": {"msg": "Oh, snap! `{{ item.key }}` couldn't be found in your scrape configs. Please ensure you provided all targets from prometheus_targets in prometheus_scrape_configs\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Alert when prometheus_alertmanager_config is empty, but prometheus_alert_rules is specified", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Alert when prometheus_alertmanager_config is empty, but prometheus_alert_rules is specified", "when": ["prometheus_alertmanager_config == []", "prometheus_alert_rules != []"]}, "module_options": {"msg": "No alertmanager configuration was specified. If you want your alerts to be sent make sure to specify a prometheus_alertmanager_config in defaults/main.yml.\n"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get latest release", "module": "uri", "index": 10, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get latest release", "no_log": "{{ not lookup('env', 'ANSIBLE_DEBUG') | bool }}", "register": "_latest_release", "until": "_latest_release.status == 200", "retries": 5}, "module_options": {"url": "https://api.github.com/repos/prometheus/prometheus/releases/latest", "method": "GET", "return_content": true, "status_code": 200, "body_format": "json", "validate_certs": false, "user": "{{ lookup('env', 'GH_USER') | default(omit) }}", "password": "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set prometheus version to {{ _latest_release.json.tag_name[1:] }}", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Set prometheus version to {{ _latest_release.json.tag_name[1:] }}"}, "module_options": {"prometheus_version": "{{ _latest_release.json.tag_name[1:] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get checksum list", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get checksum list", "run_once": true}, "module_options": {"__prometheus_checksums": "{{ lookup('url', 'https://github.com/prometheus/prometheus/releases/download/v' + prometheus_version + '/sha256sums.txt', wantlist=True) | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get checksum for {{ go_arch }} architecture", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get checksum for {{ go_arch }} architecture", "with_items": "{{ __prometheus_checksums }}", "when": ["('linux-' + go_arch + '.tar.gz') in item"]}, "module_options": {"__prometheus_checksum": "{{ item.split(' ')[0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "cloudalchemy.prometheus", "used_in": [], "annotations": {}}, "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml": {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "alerting rules file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "alerting rules file", "when": ["prometheus_alert_rules != []"], "notify": ["reload prometheus"]}, "module_options": {"src": "alert.rules.j2", "dest": "{{ prometheus_config_dir }}/rules/ansible_managed.rules", "owner": "root", "group": "prometheus", "mode": 416, "validate": "{{ _prometheus_binary_install_dir }}/promtool check rules %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "copy custom alerting rule files", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "copy custom alerting rule files", "with_fileglob": "{{ prometheus_alert_rules_files }}", "notify": ["reload prometheus"]}, "module_options": {"src": "{{ item }}", "dest": "{{ prometheus_config_dir }}/rules/", "owner": "root", "group": "prometheus", "mode": 416, "validate": "{{ _prometheus_binary_install_dir }}/promtool check rules %s"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure prometheus", "module": "template", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "configure prometheus", "notify": ["reload prometheus"]}, "module_options": {"src": "{{ prometheus_config_file }}", "dest": "{{ prometheus_config_dir }}/prometheus.yml", "force": true, "owner": "root", "group": "prometheus", "mode": 416, "validate": "{{ _prometheus_binary_install_dir }}/promtool check config %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure prometheus static targets", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "configure prometheus static targets", "with_dict": "{{ prometheus_targets }}", "when": "prometheus_targets != {}"}, "module_options": {"content": "#jinja2: lstrip_blocks: True\n{{ item.value | to_nice_yaml(indent=2) }}\n", "dest": "{{ prometheus_config_dir }}/file_sd/{{ item.key }}.yml", "force": true, "owner": "root", "group": "prometheus", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "copy prometheus custom static targets", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "copy prometheus custom static targets", "with_fileglob": "{{ prometheus_static_targets_files }}"}, "module_options": {"src": "{{ item }}", "dest": "{{ prometheus_config_dir }}/file_sd/", "force": true, "owner": "root", "group": "prometheus", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "cloudalchemy.prometheus", "used_in": [], "annotations": {}}, "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml": {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "create prometheus system group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus system group"}, "module_options": {"name": "prometheus", "system": true, "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "create prometheus system user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus system user"}, "module_options": {"name": "prometheus", "system": true, "shell": "/usr/sbin/nologin", "group": "prometheus", "createhome": false, "home": "{{ prometheus_db_dir }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "create prometheus data directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus data directory"}, "module_options": {"path": "{{ prometheus_db_dir }}", "state": "directory", "owner": "prometheus", "group": "prometheus", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create prometheus configuration directories", "module": "file", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus configuration directories", "with_items": ["{{ prometheus_config_dir }}", "{{ prometheus_config_dir }}/rules", "{{ prometheus_config_dir }}/file_sd"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "prometheus", "mode": 504}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "download prometheus binary to local folder", "module": "get_url", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "download prometheus binary to local folder", "become": false, "register": "_download_archive", "until": "_download_archive is succeeded", "retries": 5, "delay": 2, "delegate_to": "localhost", "check_mode": false}, "module_options": {"url": "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz", "checksum": "sha256:{{ __prometheus_checksum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "unpack prometheus binaries", "module": "unarchive", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "unpack prometheus binaries", "become": false, "delegate_to": "localhost", "check_mode": false}, "module_options": {"src": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp", "creates": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/prometheus"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "propagate official prometheus and promtool binaries", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "propagate official prometheus and promtool binaries", "with_items": ["prometheus", "promtool"], "notify": ["restart prometheus"]}, "module_options": {"src": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}", "dest": "{{ _prometheus_binary_install_dir }}/{{ item }}", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "propagate official console templates", "module": "copy", "index": 7, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "propagate official console templates", "with_items": ["console_libraries", "consoles"], "notify": ["restart prometheus"]}, "module_options": {"src": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}/", "dest": "{{ prometheus_config_dir }}/{{ item }}/", "mode": 420, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "propagate locally distributed prometheus and promtool binaries", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "propagate locally distributed prometheus and promtool binaries", "with_items": ["prometheus", "promtool"], "when": ["prometheus_binary_local_dir | length > 0", "not prometheus_skip_install"], "notify": ["restart prometheus"]}, "module_options": {"src": "{{ prometheus_binary_local_dir }}/{{ item }}", "dest": "{{ _prometheus_binary_install_dir }}/{{ item }}", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "create systemd service unit", "module": "template", "index": 9, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create systemd service unit", "notify": ["restart prometheus"]}, "module_options": {"src": "prometheus.service.j2", "dest": "/etc/systemd/system/prometheus.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install SELinux dependencies", "module": "package", "index": 10, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "Install SELinux dependencies", "with_items": "{{ prometheus_selinux_packages }}", "register": "_install_packages", "until": "_install_packages is succeeded", "retries": 5, "delay": 2, "when": ["ansible_version.full is version('2.4', '>=')", "ansible_selinux.status == \"enabled\""]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow prometheus to bind to port in SELinux", "module": "seport", "index": 11, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "Allow prometheus to bind to port in SELinux", "when": ["ansible_version.full is version('2.4', '>=')", "ansible_selinux.status == \"enabled\""]}, "module_options": {"ports": "{{ prometheus_web_listen_address.split(':')[1] }}", "proto": "tcp", "setype": "http_port_t", "state": "present"}, "executable": "seport", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "cloudalchemy.prometheus", "used_in": [], "annotations": {}}, "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather variables for each operating system", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"name": "Gather variables for each operating system", "with_first_found": ["{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution | lower }}.yml", "{{ ansible_os_family | lower }}.yml"], "tags": ["prometheus_configure", "prometheus_install", "prometheus_run"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"tags": ["prometheus_configure", "prometheus_install", "prometheus_run"]}, "module_options": "preflight.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"become": true, "tags": ["prometheus_install"]}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"become": true, "tags": ["prometheus_configure"]}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure prometheus service is started and enabled", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"name": "ensure prometheus service is started and enabled", "become": true, "tags": ["prometheus_run"]}, "module_options": {"daemon_reload": true, "name": "prometheus", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "cloudalchemy.prometheus", "used_in": [], "annotations": {}}}, "role_dict": {"cloudalchemy.prometheus": {"py/object": "struct4.Role", "name": "cloudalchemy.prometheus", "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus", "fqcn": "cloudalchemy.prometheus", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "preflight.yml", "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "tasks": [{"py/object": "struct4.Task", "name": "Assert usage of systemd as an init system", "module": "assert", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Assert usage of systemd as an init system"}, "module_options": {"that": "ansible_service_mgr == 'systemd'", "msg": "This module only works with systemd"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get systemd version", "module": "command", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get systemd version", "changed_when": false, "check_mode": false, "register": "__systemd_version", "tags": ["skip_ansible_lint"]}, "module_options": "systemctl --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd version fact", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Set systemd version fact"}, "module_options": {"prometheus_systemd_version": "{{ __systemd_version.stdout_lines[0].split(' ')[-1] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert no duplicate config flags", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Assert no duplicate config flags"}, "module_options": {"that": ["prometheus_config_flags_extra['config.file'] is not defined", "prometheus_config_flags_extra['storage.tsdb.path'] is not defined", "prometheus_config_flags_extra['storage.local.path'] is not defined", "prometheus_config_flags_extra['web.listen-address'] is not defined", "prometheus_config_flags_extra['web.external-url'] is not defined"], "msg": "Detected duplicate configuration entry. Please check your ansible variables and role README.md."}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert external_labels aren't configured twice", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Assert external_labels aren't configured twice"}, "module_options": {"that": "prometheus_global.external_labels is not defined", "msg": "Use prometheus_external_labels to define external labels"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set prometheus external metrics path", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Set prometheus external metrics path"}, "module_options": {"prometheus_metrics_path": "/{{ ( prometheus_web_external_url + '/metrics' ) | regex_replace('^(.*://)?(.*?)/') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail when prometheus_config_flags_extra duplicates parameters set by other variables", "module": "fail", "index": 6, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Fail when prometheus_config_flags_extra duplicates parameters set by other variables", "with_items": ["storage.tsdb.retention", "storage.tsdb.path", "storage.local.retention", "storage.local.path", "config.file", "web.listen-address", "web.external-url"], "when": "item in prometheus_config_flags_extra.keys()"}, "module_options": {"msg": "Whooops. You are duplicating configuration. Please look at your prometheus_config_flags_extra and check against other variables in defaults/main.yml\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get all file_sd files from scrape_configs", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get all file_sd files from scrape_configs"}, "module_options": {"file_sd_files": "{{ prometheus_scrape_configs | json_query('[*][].file_sd_configs[*][].files[]') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail when file_sd targets are not defined in scrape_configs", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Fail when file_sd targets are not defined in scrape_configs", "when": "not prometheus_config_dir + \"/file_sd/\" + item.key + \".yml\" in file_sd_files", "with_dict": "{{ prometheus_targets }}"}, "module_options": {"msg": "Oh, snap! `{{ item.key }}` couldn't be found in your scrape configs. Please ensure you provided all targets from prometheus_targets in prometheus_scrape_configs\n"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Alert when prometheus_alertmanager_config is empty, but prometheus_alert_rules is specified", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Alert when prometheus_alertmanager_config is empty, but prometheus_alert_rules is specified", "when": ["prometheus_alertmanager_config == []", "prometheus_alert_rules != []"]}, "module_options": {"msg": "No alertmanager configuration was specified. If you want your alerts to be sent make sure to specify a prometheus_alertmanager_config in defaults/main.yml.\n"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get latest release", "module": "uri", "index": 10, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get latest release", "no_log": "{{ not lookup('env', 'ANSIBLE_DEBUG') | bool }}", "register": "_latest_release", "until": "_latest_release.status == 200", "retries": 5}, "module_options": {"url": "https://api.github.com/repos/prometheus/prometheus/releases/latest", "method": "GET", "return_content": true, "status_code": 200, "body_format": "json", "validate_certs": false, "user": "{{ lookup('env', 'GH_USER') | default(omit) }}", "password": "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set prometheus version to {{ _latest_release.json.tag_name[1:] }}", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Set prometheus version to {{ _latest_release.json.tag_name[1:] }}"}, "module_options": {"prometheus_version": "{{ _latest_release.json.tag_name[1:] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get checksum list", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get checksum list", "run_once": true}, "module_options": {"__prometheus_checksums": "{{ lookup('url', 'https://github.com/prometheus/prometheus/releases/download/v' + prometheus_version + '/sha256sums.txt', wantlist=True) | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get checksum for {{ go_arch }} architecture", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/preflight.yml", "options": {"name": "Get checksum for {{ go_arch }} architecture", "with_items": "{{ __prometheus_checksums }}", "when": ["('linux-' + go_arch + '.tar.gz') in item"]}, "module_options": {"__prometheus_checksum": "{{ item.split(' ')[0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "cloudalchemy.prometheus", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "alerting rules file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "alerting rules file", "when": ["prometheus_alert_rules != []"], "notify": ["reload prometheus"]}, "module_options": {"src": "alert.rules.j2", "dest": "{{ prometheus_config_dir }}/rules/ansible_managed.rules", "owner": "root", "group": "prometheus", "mode": 416, "validate": "{{ _prometheus_binary_install_dir }}/promtool check rules %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "copy custom alerting rule files", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "copy custom alerting rule files", "with_fileglob": "{{ prometheus_alert_rules_files }}", "notify": ["reload prometheus"]}, "module_options": {"src": "{{ item }}", "dest": "{{ prometheus_config_dir }}/rules/", "owner": "root", "group": "prometheus", "mode": 416, "validate": "{{ _prometheus_binary_install_dir }}/promtool check rules %s"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure prometheus", "module": "template", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "configure prometheus", "notify": ["reload prometheus"]}, "module_options": {"src": "{{ prometheus_config_file }}", "dest": "{{ prometheus_config_dir }}/prometheus.yml", "force": true, "owner": "root", "group": "prometheus", "mode": 416, "validate": "{{ _prometheus_binary_install_dir }}/promtool check config %s"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "configure prometheus static targets", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "configure prometheus static targets", "with_dict": "{{ prometheus_targets }}", "when": "prometheus_targets != {}"}, "module_options": {"content": "#jinja2: lstrip_blocks: True\n{{ item.value | to_nice_yaml(indent=2) }}\n", "dest": "{{ prometheus_config_dir }}/file_sd/{{ item.key }}.yml", "force": true, "owner": "root", "group": "prometheus", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "copy prometheus custom static targets", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/configure.yml", "options": {"name": "copy prometheus custom static targets", "with_fileglob": "{{ prometheus_static_targets_files }}"}, "module_options": {"src": "{{ item }}", "dest": "{{ prometheus_config_dir }}/file_sd/", "force": true, "owner": "root", "group": "prometheus", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "cloudalchemy.prometheus", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "create prometheus system group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus system group"}, "module_options": {"name": "prometheus", "system": true, "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "create prometheus system user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus system user"}, "module_options": {"name": "prometheus", "system": true, "shell": "/usr/sbin/nologin", "group": "prometheus", "createhome": false, "home": "{{ prometheus_db_dir }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "create prometheus data directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus data directory"}, "module_options": {"path": "{{ prometheus_db_dir }}", "state": "directory", "owner": "prometheus", "group": "prometheus", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "create prometheus configuration directories", "module": "file", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create prometheus configuration directories", "with_items": ["{{ prometheus_config_dir }}", "{{ prometheus_config_dir }}/rules", "{{ prometheus_config_dir }}/file_sd"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "root", "group": "prometheus", "mode": 504}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "download prometheus binary to local folder", "module": "get_url", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "download prometheus binary to local folder", "become": false, "register": "_download_archive", "until": "_download_archive is succeeded", "retries": 5, "delay": 2, "delegate_to": "localhost", "check_mode": false}, "module_options": {"url": "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz", "checksum": "sha256:{{ __prometheus_checksum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "unpack prometheus binaries", "module": "unarchive", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "unpack prometheus binaries", "become": false, "delegate_to": "localhost", "check_mode": false}, "module_options": {"src": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp", "creates": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/prometheus"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "propagate official prometheus and promtool binaries", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "propagate official prometheus and promtool binaries", "with_items": ["prometheus", "promtool"], "notify": ["restart prometheus"]}, "module_options": {"src": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}", "dest": "{{ _prometheus_binary_install_dir }}/{{ item }}", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "propagate official console templates", "module": "copy", "index": 7, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "propagate official console templates", "with_items": ["console_libraries", "consoles"], "notify": ["restart prometheus"]}, "module_options": {"src": "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}/", "dest": "{{ prometheus_config_dir }}/{{ item }}/", "mode": 420, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "propagate locally distributed prometheus and promtool binaries", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "propagate locally distributed prometheus and promtool binaries", "with_items": ["prometheus", "promtool"], "when": ["prometheus_binary_local_dir | length > 0", "not prometheus_skip_install"], "notify": ["restart prometheus"]}, "module_options": {"src": "{{ prometheus_binary_local_dir }}/{{ item }}", "dest": "{{ _prometheus_binary_install_dir }}/{{ item }}", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "create systemd service unit", "module": "template", "index": 9, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "create systemd service unit", "notify": ["restart prometheus"]}, "module_options": {"src": "prometheus.service.j2", "dest": "/etc/systemd/system/prometheus.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install SELinux dependencies", "module": "package", "index": 10, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "Install SELinux dependencies", "with_items": "{{ prometheus_selinux_packages }}", "register": "_install_packages", "until": "_install_packages is succeeded", "retries": 5, "delay": 2, "when": ["ansible_version.full is version('2.4', '>=')", "ansible_selinux.status == \"enabled\""]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow prometheus to bind to port in SELinux", "module": "seport", "index": 11, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/install.yml", "options": {"name": "Allow prometheus to bind to port in SELinux", "when": ["ansible_version.full is version('2.4', '>=')", "ansible_selinux.status == \"enabled\""]}, "module_options": {"ports": "{{ prometheus_web_listen_address.split(':')[1] }}", "proto": "tcp", "setype": "http_port_t", "state": "present"}, "executable": "seport", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "cloudalchemy.prometheus", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather variables for each operating system", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"name": "Gather variables for each operating system", "with_first_found": ["{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution | lower }}.yml", "{{ ansible_os_family | lower }}.yml"], "tags": ["prometheus_configure", "prometheus_install", "prometheus_run"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"tags": ["prometheus_configure", "prometheus_install", "prometheus_run"]}, "module_options": "preflight.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"become": true, "tags": ["prometheus_install"]}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"become": true, "tags": ["prometheus_configure"]}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure prometheus service is started and enabled", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-prometheus/cloudalchemy.prometheus/tasks/main.yml", "options": {"name": "ensure prometheus service is started and enabled", "become": true, "tags": ["prometheus_run"]}, "module_options": {"daemon_reload": true, "name": "prometheus", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "cloudalchemy.prometheus", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}