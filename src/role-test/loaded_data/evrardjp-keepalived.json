{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/evrardjp-keepalived", "installed_roles": [{"py/object": "struct4.Role", "name": "evrardjp.keepalived", "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived", "fqcn": "evrardjp.keepalived", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "keepalived_selinux_compile.yml", "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create directory for compiling SELinux role", "module": "file", "index": 0, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Create directory for compiling SELinux role"}, "module_options": {"path": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deploy SELinux policy source file", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Deploy SELinux policy source file"}, "module_options": {"src": "{{ selinux_policy_name }}.te", "dest": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}/{{ selinux_policy_name }}.te", "owner": "root", "group": "root", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compile and load SELinux module", "module": "command", "index": 2, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Compile and load SELinux module", "args": {"creates": "/etc/selinux/targeted/active/modules/400/{{ selinux_policy_name }}/cil", "chdir": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}"}, "with_items": ["checkmodule -M -m -o {{ selinux_policy_name }}.mod {{ selinux_policy_name }}.te", "semodule_package -o {{ selinux_policy_name }}.pp -m {{ selinux_policy_name }}.mod", "semodule -i {{ selinux_policy_name }}.pp"]}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove temporary directory", "module": "file", "index": 3, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Remove temporary directory"}, "module_options": {"path": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "evrardjp.keepalived", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather variables for each operating system", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Gather variables for each operating system", "with_first_found": ["{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml", "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml", "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml", "{{ ansible_distribution | lower }}.yml", "{{ ansible_os_family | lower }}.yml"], "tags": ["always"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"when": ["keepalived_selinux_compile_rules | length > 0", "ansible_selinux.status is defined", "ansible_selinux.status == \"enabled\""], "tags": ["keepalived-config"]}, "module_options": {"file": "keepalived_selinux.yml"}, "executable": "keepalived_selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "install keepalived package(s)", "module": "package", "index": 2, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "install keepalived package(s)", "tags": ["keepalived-apt-packages", "keepalived-packages"], "notify": ["restart keepalived"]}, "module_options": {"name": "{{ [keepalived_package_name] + keepalived_scripts_packages }}", "state": "{{ keepalived_package_state }}", "update_cache": "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}", "cache_valid_time": "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure no new \"samples\" folder appeared", "module": "file", "index": 3, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Ensure no new \"samples\" folder appeared", "when": ["ansible_os_family | lower == 'debian'"]}, "module_options": {"path": "/etc/keepalived/samples/", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IPv6 enabled state", "module": "slurp", "index": 4, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Get IPv6 enabled state", "register": "_ipv6_disabled", "tags": ["keepalived-install"]}, "module_options": {"src": "/sys/module/ipv6/parameters/disable"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if IPv6 is enabled", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Check if IPv6 is enabled", "tags": ["keepalived-install"]}, "module_options": {"ipv6_enabled": "{{ not _ipv6_disabled.failed and '0' in (_ipv6_disabled.content | b64decode) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow consuming apps to bind on non local addresses for IPv4", "module": "sysctl", "index": 6, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Allow consuming apps to bind on non local addresses for IPv4", "when": "keepalived_bind_on_non_local | bool", "with_items": [{"name": "net.ipv4.ip_nonlocal_bind", "value": 1}, {"name": "net.ipv4.tcp_retries2", "value": "{{ keepalived_sysctl_tcp_retries }}"}], "tags": ["keepalived-install"]}, "module_options": {"name": "{{ item.name }}", "value": "{{ item.value }}", "sysctl_set": true, "state": "present"}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow consuming apps to bind on non local addresses for IPv6", "module": "sysctl", "index": 7, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Allow consuming apps to bind on non local addresses for IPv6", "when": "keepalived_bind_on_non_local | bool and ipv6_enabled", "with_items": [{"name": "net.ipv6.ip_nonlocal_bind", "value": 1}], "tags": ["keepalived-install"]}, "module_options": {"name": "{{ item.name }}", "value": "{{ item.value }}", "sysctl_set": true, "state": "present"}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure keepalived", "module": "template", "index": 8, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Configure keepalived", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "keepalived.conf.j2", "dest": "{{ keepalived_config_file_path }}", "mode": "0640"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check that daemon options file exists", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Check that daemon options file exists", "register": "keepalived_daemon_options_file", "tags": ["keepalived-config"]}, "module_options": {"path": "{{ keepalived_daemon_options_file_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure keepalived extra params", "module": "lineinfile", "index": 10, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Configure keepalived extra params", "with_items": "{{ keepalived_daemon_default_options_overrides }}", "when": "keepalived_daemon_options_file.stat.exists", "tags": ["keepalived-config"], "notify": ["restart keepalived"]}, "module_options": {"line": "{{ item }}", "regexp": "^{{ item.split('=')[0] }}", "dest": "{{ keepalived_daemon_options_file_path }}", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the tracking scripts", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the tracking scripts", "with_dict": "{{ keepalived_scripts | default('{}') }}", "when": "item.value.src_check_script is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_check_script }}", "dest": "{{ item.value.dest_check_script|default(item.value.check_script) }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the general notification scripts", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the general notification scripts", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_script is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_script }}", "dest": "{{ item.value.notify_script }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to master", "module": "copy", "index": 13, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to master", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_master is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_master }}", "dest": "{{ item.value.notify_master }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to backup", "module": "copy", "index": 14, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to backup", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_backup is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_backup }}", "dest": "{{ item.value.notify_backup }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for failures", "module": "copy", "index": 15, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for failures", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_fault is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_fault }}", "dest": "{{ item.value.notify_fault }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the general notification scripts (instances)", "module": "copy", "index": 16, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the general notification scripts (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_script is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_script }}", "dest": "{{ item.value.notify_script }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to master (instances)", "module": "copy", "index": 17, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to master (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_master is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_master }}", "dest": "{{ item.value.notify_master }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for lower priority master case (instances)", "module": "copy", "index": 18, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for lower priority master case (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_master_rx_lower_pri is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_master_rx_lower_pri }}", "dest": "{{ item.value.notify_master_rx_lower_pri }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to backup (instances)", "module": "copy", "index": 19, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to backup (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_backup is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_backup }}", "dest": "{{ item.value.notify_backup }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for stopping vrrp (instances)", "module": "copy", "index": 20, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for stopping vrrp (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_stop is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_stop }}", "dest": "{{ item.value.notify_stop }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for failures (instances)", "module": "copy", "index": 21, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for failures (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_fault is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_fault }}", "dest": "{{ item.value.notify_fault }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make directory for keepalived's systemd overrides", "module": "file", "index": 22, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Make directory for keepalived's systemd overrides", "when": ["keepalived_systemd_overrides | bool"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Apply keepalived override to start after network is up", "module": "ini_file", "index": 23, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Apply keepalived override to start after network is up", "with_items": ["Wants", "After"], "when": ["keepalived_systemd_overrides | bool"], "notify": ["restart keepalived"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/override.conf", "create": true, "section": "Unit", "option": "{{ item }}", "value": "network-online.target", "mode": "0644"}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Apply keepalived override to restart service always", "module": "ini_file", "index": 24, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Apply keepalived override to restart service always", "when": ["keepalived_systemd_overrides | bool", "keepalived_systemd_override_service_restart | bool"], "notify": ["restart keepalived"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/override.conf", "section": "Service", "option": "Restart", "value": "always", "mode": "0644"}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove keepalived overrides", "module": "file", "index": 25, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Remove keepalived overrides", "when": ["not (keepalived_systemd_overrides | bool)"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/override.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if keepalived is enabled", "module": "shell", "index": 26, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Check if keepalived is enabled", "register": "isenabled", "changed_when": "(isenabled.stdout == \"disabled\" or isenabled.stdout == \"masked\") and isenabled.rc != 0", "failed_when": "(isenabled.stdout != \"disabled\" and isenabled.stdout != \"masked\") and isenabled.rc != 0", "tags": ["skip_ansible_lint"]}, "module_options": "systemctl daemon-reload && systemctl is-enabled {{ keepalived_service_name }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unmask keepalived if necessary", "module": "command", "index": 27, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Unmask keepalived if necessary", "when": ["isenabled is changed", "isenabled.stdout == \"masked\""], "tags": ["skip_ansible_lint"]}, "module_options": "systemctl unmask {{ keepalived_service_name }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure keepalived is enabled", "module": "command", "index": 28, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "ensure keepalived is enabled", "when": ["isenabled is changed"], "tags": ["skip_ansible_lint"]}, "module_options": "systemctl enable {{ keepalived_service_name }} --now", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "evrardjp.keepalived", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "keepalived_selinux.yml", "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get list of SELinux modules loaded", "module": "command", "index": 0, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "options": {"name": "Get list of SELinux modules loaded", "changed_when": false, "register": "selinux_modules", "check_mode": false}, "module_options": "semodule -l", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure SELinux packages are installed", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "options": {"name": "Ensure SELinux packages are installed", "when": ["\"keepalived_ping\" not in selinux_modules.stdout"]}, "module_options": {"name": "{{ keepalived_selinux_packages }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "options": {"when": ["selinux_policy_name not in selinux_modules.stdout"], "with_items": "{{ keepalived_selinux_compile_rules }}", "loop_control": {"loop_var": "selinux_policy_name"}}, "module_options": {"file": "keepalived_selinux_compile.yml"}, "executable": "keepalived_selinux_compile.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "evrardjp.keepalived", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create directory for compiling SELinux role", "module": "file", "index": 0, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Create directory for compiling SELinux role"}, "module_options": {"path": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Deploy SELinux policy source file", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Deploy SELinux policy source file"}, "module_options": {"src": "{{ selinux_policy_name }}.te", "dest": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}/{{ selinux_policy_name }}.te", "owner": "root", "group": "root", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Compile and load SELinux module", "module": "command", "index": 2, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Compile and load SELinux module", "args": {"creates": "/etc/selinux/targeted/active/modules/400/{{ selinux_policy_name }}/cil", "chdir": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}"}, "with_items": ["checkmodule -M -m -o {{ selinux_policy_name }}.mod {{ selinux_policy_name }}.te", "semodule_package -o {{ selinux_policy_name }}.pp -m {{ selinux_policy_name }}.mod", "semodule -i {{ selinux_policy_name }}.pp"]}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Remove temporary directory", "module": "file", "index": 3, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Remove temporary directory"}, "module_options": {"path": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Gather variables for each operating system", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Gather variables for each operating system", "with_first_found": ["{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml", "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml", "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml", "{{ ansible_distribution | lower }}.yml", "{{ ansible_os_family | lower }}.yml"], "tags": ["always"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"when": ["keepalived_selinux_compile_rules | length > 0", "ansible_selinux.status is defined", "ansible_selinux.status == \"enabled\""], "tags": ["keepalived-config"]}, "module_options": {"file": "keepalived_selinux.yml"}, "executable": "keepalived_selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "install keepalived package(s)", "module": "package", "index": 2, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "install keepalived package(s)", "tags": ["keepalived-apt-packages", "keepalived-packages"], "notify": ["restart keepalived"]}, "module_options": {"name": "{{ [keepalived_package_name] + keepalived_scripts_packages }}", "state": "{{ keepalived_package_state }}", "update_cache": "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}", "cache_valid_time": "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Ensure no new \"samples\" folder appeared", "module": "file", "index": 3, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Ensure no new \"samples\" folder appeared", "when": ["ansible_os_family | lower == 'debian'"]}, "module_options": {"path": "/etc/keepalived/samples/", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Get IPv6 enabled state", "module": "slurp", "index": 4, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Get IPv6 enabled state", "register": "_ipv6_disabled", "tags": ["keepalived-install"]}, "module_options": {"src": "/sys/module/ipv6/parameters/disable"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Check if IPv6 is enabled", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Check if IPv6 is enabled", "tags": ["keepalived-install"]}, "module_options": {"ipv6_enabled": "{{ not _ipv6_disabled.failed and '0' in (_ipv6_disabled.content | b64decode) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Allow consuming apps to bind on non local addresses for IPv4", "module": "sysctl", "index": 6, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Allow consuming apps to bind on non local addresses for IPv4", "when": "keepalived_bind_on_non_local | bool", "with_items": [{"name": "net.ipv4.ip_nonlocal_bind", "value": 1}, {"name": "net.ipv4.tcp_retries2", "value": "{{ keepalived_sysctl_tcp_retries }}"}], "tags": ["keepalived-install"]}, "module_options": {"name": "{{ item.name }}", "value": "{{ item.value }}", "sysctl_set": true, "state": "present"}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Allow consuming apps to bind on non local addresses for IPv6", "module": "sysctl", "index": 7, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Allow consuming apps to bind on non local addresses for IPv6", "when": "keepalived_bind_on_non_local | bool and ipv6_enabled", "with_items": [{"name": "net.ipv6.ip_nonlocal_bind", "value": 1}], "tags": ["keepalived-install"]}, "module_options": {"name": "{{ item.name }}", "value": "{{ item.value }}", "sysctl_set": true, "state": "present"}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Configure keepalived", "module": "template", "index": 8, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Configure keepalived", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "keepalived.conf.j2", "dest": "{{ keepalived_config_file_path }}", "mode": "0640"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Check that daemon options file exists", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Check that daemon options file exists", "register": "keepalived_daemon_options_file", "tags": ["keepalived-config"]}, "module_options": {"path": "{{ keepalived_daemon_options_file_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Configure keepalived extra params", "module": "lineinfile", "index": 10, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Configure keepalived extra params", "with_items": "{{ keepalived_daemon_default_options_overrides }}", "when": "keepalived_daemon_options_file.stat.exists", "tags": ["keepalived-config"], "notify": ["restart keepalived"]}, "module_options": {"line": "{{ item }}", "regexp": "^{{ item.split('=')[0] }}", "dest": "{{ keepalived_daemon_options_file_path }}", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Dropping the tracking scripts", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the tracking scripts", "with_dict": "{{ keepalived_scripts | default('{}') }}", "when": "item.value.src_check_script is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_check_script }}", "dest": "{{ item.value.dest_check_script|default(item.value.check_script) }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Dropping the general notification scripts", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the general notification scripts", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_script is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_script }}", "dest": "{{ item.value.notify_script }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to master", "module": "copy", "index": 13, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to master", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_master is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_master }}", "dest": "{{ item.value.notify_master }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to backup", "module": "copy", "index": 14, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to backup", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_backup is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_backup }}", "dest": "{{ item.value.notify_backup }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Dropping the notification scripts for failures", "module": "copy", "index": 15, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for failures", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_fault is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_fault }}", "dest": "{{ item.value.notify_fault }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Dropping the general notification scripts (instances)", "module": "copy", "index": 16, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the general notification scripts (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_script is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_script }}", "dest": "{{ item.value.notify_script }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to master (instances)", "module": "copy", "index": 17, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to master (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_master is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_master }}", "dest": "{{ item.value.notify_master }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Dropping the notification scripts for lower priority master case (instances)", "module": "copy", "index": 18, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for lower priority master case (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_master_rx_lower_pri is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_master_rx_lower_pri }}", "dest": "{{ item.value.notify_master_rx_lower_pri }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to backup (instances)", "module": "copy", "index": 19, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to backup (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_backup is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_backup }}", "dest": "{{ item.value.notify_backup }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Dropping the notification scripts for stopping vrrp (instances)", "module": "copy", "index": 20, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for stopping vrrp (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_stop is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_stop }}", "dest": "{{ item.value.notify_stop }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Dropping the notification scripts for failures (instances)", "module": "copy", "index": 21, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for failures (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_fault is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_fault }}", "dest": "{{ item.value.notify_fault }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Make directory for keepalived's systemd overrides", "module": "file", "index": 22, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Make directory for keepalived's systemd overrides", "when": ["keepalived_systemd_overrides | bool"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Apply keepalived override to start after network is up", "module": "ini_file", "index": 23, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Apply keepalived override to start after network is up", "with_items": ["Wants", "After"], "when": ["keepalived_systemd_overrides | bool"], "notify": ["restart keepalived"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/override.conf", "create": true, "section": "Unit", "option": "{{ item }}", "value": "network-online.target", "mode": "0644"}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Apply keepalived override to restart service always", "module": "ini_file", "index": 24, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Apply keepalived override to restart service always", "when": ["keepalived_systemd_overrides | bool", "keepalived_systemd_override_service_restart | bool"], "notify": ["restart keepalived"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/override.conf", "section": "Service", "option": "Restart", "value": "always", "mode": "0644"}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Remove keepalived overrides", "module": "file", "index": 25, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Remove keepalived overrides", "when": ["not (keepalived_systemd_overrides | bool)"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/override.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Check if keepalived is enabled", "module": "shell", "index": 26, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Check if keepalived is enabled", "register": "isenabled", "changed_when": "(isenabled.stdout == \"disabled\" or isenabled.stdout == \"masked\") and isenabled.rc != 0", "failed_when": "(isenabled.stdout != \"disabled\" and isenabled.stdout != \"masked\") and isenabled.rc != 0", "tags": ["skip_ansible_lint"]}, "module_options": "systemctl daemon-reload && systemctl is-enabled {{ keepalived_service_name }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Unmask keepalived if necessary", "module": "command", "index": 27, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Unmask keepalived if necessary", "when": ["isenabled is changed", "isenabled.stdout == \"masked\""], "tags": ["skip_ansible_lint"]}, "module_options": "systemctl unmask {{ keepalived_service_name }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "ensure keepalived is enabled", "module": "command", "index": 28, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "ensure keepalived is enabled", "when": ["isenabled is changed"], "tags": ["skip_ansible_lint"]}, "module_options": "systemctl enable {{ keepalived_service_name }} --now", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Get list of SELinux modules loaded", "module": "command", "index": 0, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "options": {"name": "Get list of SELinux modules loaded", "changed_when": false, "register": "selinux_modules", "check_mode": false}, "module_options": "semodule -l", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure SELinux packages are installed", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "options": {"name": "Ensure SELinux packages are installed", "when": ["\"keepalived_ping\" not in selinux_modules.stdout"]}, "module_options": {"name": "{{ keepalived_selinux_packages }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "options": {"when": ["selinux_policy_name not in selinux_modules.stdout"], "with_items": "{{ keepalived_selinux_compile_rules }}", "loop_control": {"loop_var": "selinux_policy_name"}}, "module_options": {"file": "keepalived_selinux_compile.yml"}, "executable": "keepalived_selinux_compile.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml": {"py/object": "struct4.TaskFile", "name": "keepalived_selinux_compile.yml", "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create directory for compiling SELinux role", "module": "file", "index": 0, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Create directory for compiling SELinux role"}, "module_options": {"path": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deploy SELinux policy source file", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Deploy SELinux policy source file"}, "module_options": {"src": "{{ selinux_policy_name }}.te", "dest": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}/{{ selinux_policy_name }}.te", "owner": "root", "group": "root", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compile and load SELinux module", "module": "command", "index": 2, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Compile and load SELinux module", "args": {"creates": "/etc/selinux/targeted/active/modules/400/{{ selinux_policy_name }}/cil", "chdir": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}"}, "with_items": ["checkmodule -M -m -o {{ selinux_policy_name }}.mod {{ selinux_policy_name }}.te", "semodule_package -o {{ selinux_policy_name }}.pp -m {{ selinux_policy_name }}.mod", "semodule -i {{ selinux_policy_name }}.pp"]}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove temporary directory", "module": "file", "index": 3, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Remove temporary directory"}, "module_options": {"path": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "evrardjp.keepalived", "used_in": [], "annotations": {}}, "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather variables for each operating system", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Gather variables for each operating system", "with_first_found": ["{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml", "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml", "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml", "{{ ansible_distribution | lower }}.yml", "{{ ansible_os_family | lower }}.yml"], "tags": ["always"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"when": ["keepalived_selinux_compile_rules | length > 0", "ansible_selinux.status is defined", "ansible_selinux.status == \"enabled\""], "tags": ["keepalived-config"]}, "module_options": {"file": "keepalived_selinux.yml"}, "executable": "keepalived_selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "install keepalived package(s)", "module": "package", "index": 2, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "install keepalived package(s)", "tags": ["keepalived-apt-packages", "keepalived-packages"], "notify": ["restart keepalived"]}, "module_options": {"name": "{{ [keepalived_package_name] + keepalived_scripts_packages }}", "state": "{{ keepalived_package_state }}", "update_cache": "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}", "cache_valid_time": "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure no new \"samples\" folder appeared", "module": "file", "index": 3, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Ensure no new \"samples\" folder appeared", "when": ["ansible_os_family | lower == 'debian'"]}, "module_options": {"path": "/etc/keepalived/samples/", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IPv6 enabled state", "module": "slurp", "index": 4, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Get IPv6 enabled state", "register": "_ipv6_disabled", "tags": ["keepalived-install"]}, "module_options": {"src": "/sys/module/ipv6/parameters/disable"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if IPv6 is enabled", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Check if IPv6 is enabled", "tags": ["keepalived-install"]}, "module_options": {"ipv6_enabled": "{{ not _ipv6_disabled.failed and '0' in (_ipv6_disabled.content | b64decode) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow consuming apps to bind on non local addresses for IPv4", "module": "sysctl", "index": 6, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Allow consuming apps to bind on non local addresses for IPv4", "when": "keepalived_bind_on_non_local | bool", "with_items": [{"name": "net.ipv4.ip_nonlocal_bind", "value": 1}, {"name": "net.ipv4.tcp_retries2", "value": "{{ keepalived_sysctl_tcp_retries }}"}], "tags": ["keepalived-install"]}, "module_options": {"name": "{{ item.name }}", "value": "{{ item.value }}", "sysctl_set": true, "state": "present"}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow consuming apps to bind on non local addresses for IPv6", "module": "sysctl", "index": 7, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Allow consuming apps to bind on non local addresses for IPv6", "when": "keepalived_bind_on_non_local | bool and ipv6_enabled", "with_items": [{"name": "net.ipv6.ip_nonlocal_bind", "value": 1}], "tags": ["keepalived-install"]}, "module_options": {"name": "{{ item.name }}", "value": "{{ item.value }}", "sysctl_set": true, "state": "present"}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure keepalived", "module": "template", "index": 8, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Configure keepalived", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "keepalived.conf.j2", "dest": "{{ keepalived_config_file_path }}", "mode": "0640"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check that daemon options file exists", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Check that daemon options file exists", "register": "keepalived_daemon_options_file", "tags": ["keepalived-config"]}, "module_options": {"path": "{{ keepalived_daemon_options_file_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure keepalived extra params", "module": "lineinfile", "index": 10, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Configure keepalived extra params", "with_items": "{{ keepalived_daemon_default_options_overrides }}", "when": "keepalived_daemon_options_file.stat.exists", "tags": ["keepalived-config"], "notify": ["restart keepalived"]}, "module_options": {"line": "{{ item }}", "regexp": "^{{ item.split('=')[0] }}", "dest": "{{ keepalived_daemon_options_file_path }}", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the tracking scripts", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the tracking scripts", "with_dict": "{{ keepalived_scripts | default('{}') }}", "when": "item.value.src_check_script is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_check_script }}", "dest": "{{ item.value.dest_check_script|default(item.value.check_script) }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the general notification scripts", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the general notification scripts", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_script is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_script }}", "dest": "{{ item.value.notify_script }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to master", "module": "copy", "index": 13, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to master", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_master is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_master }}", "dest": "{{ item.value.notify_master }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to backup", "module": "copy", "index": 14, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to backup", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_backup is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_backup }}", "dest": "{{ item.value.notify_backup }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for failures", "module": "copy", "index": 15, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for failures", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_fault is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_fault }}", "dest": "{{ item.value.notify_fault }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the general notification scripts (instances)", "module": "copy", "index": 16, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the general notification scripts (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_script is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_script }}", "dest": "{{ item.value.notify_script }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to master (instances)", "module": "copy", "index": 17, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to master (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_master is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_master }}", "dest": "{{ item.value.notify_master }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for lower priority master case (instances)", "module": "copy", "index": 18, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for lower priority master case (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_master_rx_lower_pri is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_master_rx_lower_pri }}", "dest": "{{ item.value.notify_master_rx_lower_pri }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to backup (instances)", "module": "copy", "index": 19, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to backup (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_backup is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_backup }}", "dest": "{{ item.value.notify_backup }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for stopping vrrp (instances)", "module": "copy", "index": 20, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for stopping vrrp (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_stop is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_stop }}", "dest": "{{ item.value.notify_stop }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for failures (instances)", "module": "copy", "index": 21, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for failures (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_fault is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_fault }}", "dest": "{{ item.value.notify_fault }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make directory for keepalived's systemd overrides", "module": "file", "index": 22, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Make directory for keepalived's systemd overrides", "when": ["keepalived_systemd_overrides | bool"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Apply keepalived override to start after network is up", "module": "ini_file", "index": 23, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Apply keepalived override to start after network is up", "with_items": ["Wants", "After"], "when": ["keepalived_systemd_overrides | bool"], "notify": ["restart keepalived"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/override.conf", "create": true, "section": "Unit", "option": "{{ item }}", "value": "network-online.target", "mode": "0644"}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Apply keepalived override to restart service always", "module": "ini_file", "index": 24, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Apply keepalived override to restart service always", "when": ["keepalived_systemd_overrides | bool", "keepalived_systemd_override_service_restart | bool"], "notify": ["restart keepalived"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/override.conf", "section": "Service", "option": "Restart", "value": "always", "mode": "0644"}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove keepalived overrides", "module": "file", "index": 25, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Remove keepalived overrides", "when": ["not (keepalived_systemd_overrides | bool)"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/override.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if keepalived is enabled", "module": "shell", "index": 26, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Check if keepalived is enabled", "register": "isenabled", "changed_when": "(isenabled.stdout == \"disabled\" or isenabled.stdout == \"masked\") and isenabled.rc != 0", "failed_when": "(isenabled.stdout != \"disabled\" and isenabled.stdout != \"masked\") and isenabled.rc != 0", "tags": ["skip_ansible_lint"]}, "module_options": "systemctl daemon-reload && systemctl is-enabled {{ keepalived_service_name }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unmask keepalived if necessary", "module": "command", "index": 27, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Unmask keepalived if necessary", "when": ["isenabled is changed", "isenabled.stdout == \"masked\""], "tags": ["skip_ansible_lint"]}, "module_options": "systemctl unmask {{ keepalived_service_name }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure keepalived is enabled", "module": "command", "index": 28, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "ensure keepalived is enabled", "when": ["isenabled is changed"], "tags": ["skip_ansible_lint"]}, "module_options": "systemctl enable {{ keepalived_service_name }} --now", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "evrardjp.keepalived", "used_in": [], "annotations": {}}, "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml": {"py/object": "struct4.TaskFile", "name": "keepalived_selinux.yml", "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get list of SELinux modules loaded", "module": "command", "index": 0, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "options": {"name": "Get list of SELinux modules loaded", "changed_when": false, "register": "selinux_modules", "check_mode": false}, "module_options": "semodule -l", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure SELinux packages are installed", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "options": {"name": "Ensure SELinux packages are installed", "when": ["\"keepalived_ping\" not in selinux_modules.stdout"]}, "module_options": {"name": "{{ keepalived_selinux_packages }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "options": {"when": ["selinux_policy_name not in selinux_modules.stdout"], "with_items": "{{ keepalived_selinux_compile_rules }}", "loop_control": {"loop_var": "selinux_policy_name"}}, "module_options": {"file": "keepalived_selinux_compile.yml"}, "executable": "keepalived_selinux_compile.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "evrardjp.keepalived", "used_in": [], "annotations": {}}}, "role_dict": {"evrardjp.keepalived": {"py/object": "struct4.Role", "name": "evrardjp.keepalived", "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived", "fqcn": "evrardjp.keepalived", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "keepalived_selinux_compile.yml", "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create directory for compiling SELinux role", "module": "file", "index": 0, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Create directory for compiling SELinux role"}, "module_options": {"path": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deploy SELinux policy source file", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Deploy SELinux policy source file"}, "module_options": {"src": "{{ selinux_policy_name }}.te", "dest": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}/{{ selinux_policy_name }}.te", "owner": "root", "group": "root", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compile and load SELinux module", "module": "command", "index": 2, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Compile and load SELinux module", "args": {"creates": "/etc/selinux/targeted/active/modules/400/{{ selinux_policy_name }}/cil", "chdir": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}"}, "with_items": ["checkmodule -M -m -o {{ selinux_policy_name }}.mod {{ selinux_policy_name }}.te", "semodule_package -o {{ selinux_policy_name }}.pp -m {{ selinux_policy_name }}.mod", "semodule -i {{ selinux_policy_name }}.pp"]}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove temporary directory", "module": "file", "index": 3, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux_compile.yml", "options": {"name": "Remove temporary directory"}, "module_options": {"path": "/tmp/ansible-keepalived-selinux-{{ selinux_policy_name }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "evrardjp.keepalived", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather variables for each operating system", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Gather variables for each operating system", "with_first_found": ["{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml", "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml", "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml", "{{ ansible_distribution | lower }}.yml", "{{ ansible_os_family | lower }}.yml"], "tags": ["always"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"when": ["keepalived_selinux_compile_rules | length > 0", "ansible_selinux.status is defined", "ansible_selinux.status == \"enabled\""], "tags": ["keepalived-config"]}, "module_options": {"file": "keepalived_selinux.yml"}, "executable": "keepalived_selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "install keepalived package(s)", "module": "package", "index": 2, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "install keepalived package(s)", "tags": ["keepalived-apt-packages", "keepalived-packages"], "notify": ["restart keepalived"]}, "module_options": {"name": "{{ [keepalived_package_name] + keepalived_scripts_packages }}", "state": "{{ keepalived_package_state }}", "update_cache": "{{ (ansible_pkg_mgr == 'apt') | ternary('yes', omit) }}", "cache_valid_time": "{{ (ansible_pkg_mgr == 'apt') | ternary(cache_timeout, omit) }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure no new \"samples\" folder appeared", "module": "file", "index": 3, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Ensure no new \"samples\" folder appeared", "when": ["ansible_os_family | lower == 'debian'"]}, "module_options": {"path": "/etc/keepalived/samples/", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IPv6 enabled state", "module": "slurp", "index": 4, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Get IPv6 enabled state", "register": "_ipv6_disabled", "tags": ["keepalived-install"]}, "module_options": {"src": "/sys/module/ipv6/parameters/disable"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if IPv6 is enabled", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Check if IPv6 is enabled", "tags": ["keepalived-install"]}, "module_options": {"ipv6_enabled": "{{ not _ipv6_disabled.failed and '0' in (_ipv6_disabled.content | b64decode) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow consuming apps to bind on non local addresses for IPv4", "module": "sysctl", "index": 6, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Allow consuming apps to bind on non local addresses for IPv4", "when": "keepalived_bind_on_non_local | bool", "with_items": [{"name": "net.ipv4.ip_nonlocal_bind", "value": 1}, {"name": "net.ipv4.tcp_retries2", "value": "{{ keepalived_sysctl_tcp_retries }}"}], "tags": ["keepalived-install"]}, "module_options": {"name": "{{ item.name }}", "value": "{{ item.value }}", "sysctl_set": true, "state": "present"}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow consuming apps to bind on non local addresses for IPv6", "module": "sysctl", "index": 7, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Allow consuming apps to bind on non local addresses for IPv6", "when": "keepalived_bind_on_non_local | bool and ipv6_enabled", "with_items": [{"name": "net.ipv6.ip_nonlocal_bind", "value": 1}], "tags": ["keepalived-install"]}, "module_options": {"name": "{{ item.name }}", "value": "{{ item.value }}", "sysctl_set": true, "state": "present"}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure keepalived", "module": "template", "index": 8, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Configure keepalived", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "keepalived.conf.j2", "dest": "{{ keepalived_config_file_path }}", "mode": "0640"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check that daemon options file exists", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Check that daemon options file exists", "register": "keepalived_daemon_options_file", "tags": ["keepalived-config"]}, "module_options": {"path": "{{ keepalived_daemon_options_file_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure keepalived extra params", "module": "lineinfile", "index": 10, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Configure keepalived extra params", "with_items": "{{ keepalived_daemon_default_options_overrides }}", "when": "keepalived_daemon_options_file.stat.exists", "tags": ["keepalived-config"], "notify": ["restart keepalived"]}, "module_options": {"line": "{{ item }}", "regexp": "^{{ item.split('=')[0] }}", "dest": "{{ keepalived_daemon_options_file_path }}", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the tracking scripts", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the tracking scripts", "with_dict": "{{ keepalived_scripts | default('{}') }}", "when": "item.value.src_check_script is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_check_script }}", "dest": "{{ item.value.dest_check_script|default(item.value.check_script) }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the general notification scripts", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the general notification scripts", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_script is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_script }}", "dest": "{{ item.value.notify_script }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to master", "module": "copy", "index": 13, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to master", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_master is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_master }}", "dest": "{{ item.value.notify_master }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to backup", "module": "copy", "index": 14, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to backup", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_backup is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_backup }}", "dest": "{{ item.value.notify_backup }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for failures", "module": "copy", "index": 15, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for failures", "with_dict": "{{ keepalived_sync_groups }}", "when": "item.value.src_notify_fault is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_fault }}", "dest": "{{ item.value.notify_fault }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the general notification scripts (instances)", "module": "copy", "index": 16, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the general notification scripts (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_script is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_script }}", "dest": "{{ item.value.notify_script }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to master (instances)", "module": "copy", "index": 17, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to master (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_master is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_master }}", "dest": "{{ item.value.notify_master }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for lower priority master case (instances)", "module": "copy", "index": 18, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for lower priority master case (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_master_rx_lower_pri is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_master_rx_lower_pri }}", "dest": "{{ item.value.notify_master_rx_lower_pri }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for switching to backup (instances)", "module": "copy", "index": 19, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for switching to backup (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_backup is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_backup }}", "dest": "{{ item.value.notify_backup }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for stopping vrrp (instances)", "module": "copy", "index": 20, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for stopping vrrp (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_stop is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_stop }}", "dest": "{{ item.value.notify_stop }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Dropping the notification scripts for failures (instances)", "module": "copy", "index": 21, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Dropping the notification scripts for failures (instances)", "with_dict": "{{ keepalived_instances }}", "when": "item.value.src_notify_fault is defined", "tags": ["keepalived-config"], "notify": ["reload keepalived"]}, "module_options": {"src": "{{ item.value.src_notify_fault }}", "dest": "{{ item.value.notify_fault }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make directory for keepalived's systemd overrides", "module": "file", "index": 22, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Make directory for keepalived's systemd overrides", "when": ["keepalived_systemd_overrides | bool"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Apply keepalived override to start after network is up", "module": "ini_file", "index": 23, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Apply keepalived override to start after network is up", "with_items": ["Wants", "After"], "when": ["keepalived_systemd_overrides | bool"], "notify": ["restart keepalived"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/override.conf", "create": true, "section": "Unit", "option": "{{ item }}", "value": "network-online.target", "mode": "0644"}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Apply keepalived override to restart service always", "module": "ini_file", "index": 24, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Apply keepalived override to restart service always", "when": ["keepalived_systemd_overrides | bool", "keepalived_systemd_override_service_restart | bool"], "notify": ["restart keepalived"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/override.conf", "section": "Service", "option": "Restart", "value": "always", "mode": "0644"}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove keepalived overrides", "module": "file", "index": 25, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Remove keepalived overrides", "when": ["not (keepalived_systemd_overrides | bool)"]}, "module_options": {"path": "/etc/systemd/system/keepalived.service.d/override.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if keepalived is enabled", "module": "shell", "index": 26, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Check if keepalived is enabled", "register": "isenabled", "changed_when": "(isenabled.stdout == \"disabled\" or isenabled.stdout == \"masked\") and isenabled.rc != 0", "failed_when": "(isenabled.stdout != \"disabled\" and isenabled.stdout != \"masked\") and isenabled.rc != 0", "tags": ["skip_ansible_lint"]}, "module_options": "systemctl daemon-reload && systemctl is-enabled {{ keepalived_service_name }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unmask keepalived if necessary", "module": "command", "index": 27, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "Unmask keepalived if necessary", "when": ["isenabled is changed", "isenabled.stdout == \"masked\""], "tags": ["skip_ansible_lint"]}, "module_options": "systemctl unmask {{ keepalived_service_name }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure keepalived is enabled", "module": "command", "index": 28, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/main.yml", "options": {"name": "ensure keepalived is enabled", "when": ["isenabled is changed"], "tags": ["skip_ansible_lint"]}, "module_options": "systemctl enable {{ keepalived_service_name }} --now", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "evrardjp.keepalived", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "keepalived_selinux.yml", "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get list of SELinux modules loaded", "module": "command", "index": 0, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "options": {"name": "Get list of SELinux modules loaded", "changed_when": false, "register": "selinux_modules", "check_mode": false}, "module_options": "semodule -l", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure SELinux packages are installed", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "options": {"name": "Ensure SELinux packages are installed", "when": ["\"keepalived_ping\" not in selinux_modules.stdout"]}, "module_options": {"name": "{{ keepalived_selinux_packages }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/evrardjp-keepalived/evrardjp.keepalived/tasks/keepalived_selinux.yml", "options": {"when": ["selinux_policy_name not in selinux_modules.stdout"], "with_items": "{{ keepalived_selinux_compile_rules }}", "loop_control": {"loop_var": "selinux_policy_name"}}, "module_options": {"file": "keepalived_selinux_compile.yml"}, "executable": "keepalived_selinux_compile.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "evrardjp.keepalived", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}