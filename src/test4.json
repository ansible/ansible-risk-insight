{"py/object": "struct4.Repository", "name": "", "path": "testdata4/scm_repo", "my_collection_name": "", "playbooks": [{"py/object": "struct4.Playbook", "name": "site.yml", "defined_in": "testdata4/scm_repo/site.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "zabbix_agent", "options": {"role": "zabbix_agent", "zabbix_agent_server": "zabbix.example.com"}, "defined_in": "testdata4/scm_repo/site.yml", "role_index": 0, "play_index": 0, "fqcn": "community.zabbix.zabbix_agent", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}], "roles": [], "installed_collections_path": "testdata4/installed_collections_path", "installed_collections": [{"py/object": "struct4.Collection", "name": "ansible.posix", "path": "testdata4/installed_collections_path/ansible_collections/ansible/posix", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "patch", "fqcn": "ansible.posix.patch", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/patch.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "selinux", "fqcn": "ansible.posix.selinux", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/selinux.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "firewalld", "fqcn": "ansible.posix.firewalld", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/firewalld.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "at", "fqcn": "ansible.posix.at", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/at.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "authorized_key", "fqcn": "ansible.posix.authorized_key", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/authorized_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "acl", "fqcn": "ansible.posix.acl", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/acl.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "synchronize", "fqcn": "ansible.posix.synchronize", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/synchronize.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mount", "fqcn": "ansible.posix.mount", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/mount.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sysctl", "fqcn": "ansible.posix.sysctl", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/sysctl.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "firewalld_info", "fqcn": "ansible.posix.firewalld_info", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/firewalld_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "seboolean", "fqcn": "ansible.posix.seboolean", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/seboolean.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "ansible.netcommon", "path": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "net_banner", "fqcn": "ansible.netcommon.net_banner", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_banner.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_l3_interface", "fqcn": "ansible.netcommon.net_l3_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_l3_interface.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_vlan", "fqcn": "ansible.netcommon.net_vlan", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_vlan.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "telnet", "fqcn": "ansible.netcommon.telnet", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/telnet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_get", "fqcn": "ansible.netcommon.net_get", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_get.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_logging", "fqcn": "ansible.netcommon.net_logging", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_logging.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cli_config", "fqcn": "ansible.netcommon.cli_config", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/cli_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_l2_interface", "fqcn": "ansible.netcommon.net_l2_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_l2_interface.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_user", "fqcn": "ansible.netcommon.net_user", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "netconf_rpc", "fqcn": "ansible.netcommon.netconf_rpc", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/netconf_rpc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_lldp_interface", "fqcn": "ansible.netcommon.net_lldp_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_lldp_interface.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "netconf_get", "fqcn": "ansible.netcommon.netconf_get", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/netconf_get.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_static_route", "fqcn": "ansible.netcommon.net_static_route", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_static_route.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_interface", "fqcn": "ansible.netcommon.net_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_interface.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "netconf_config", "fqcn": "ansible.netcommon.netconf_config", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/netconf_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_lldp", "fqcn": "ansible.netcommon.net_lldp", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_lldp.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "restconf_get", "fqcn": "ansible.netcommon.restconf_get", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/restconf_get.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cli_command", "fqcn": "ansible.netcommon.cli_command", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/cli_command.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "network_resource", "fqcn": "ansible.netcommon.network_resource", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/network_resource.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_vrf", "fqcn": "ansible.netcommon.net_vrf", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_vrf.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_ping", "fqcn": "ansible.netcommon.net_ping", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_ping.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "restconf_config", "fqcn": "ansible.netcommon.restconf_config", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/restconf_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_linkagg", "fqcn": "ansible.netcommon.net_linkagg", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_linkagg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_put", "fqcn": "ansible.netcommon.net_put", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_put.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_system", "fqcn": "ansible.netcommon.net_system", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_system.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "ansible.utils", "path": "testdata4/installed_collections_path/ansible_collections/ansible/utils", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "collection": "ansible.utils", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/cli_parse.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "fact_diff", "fqcn": "ansible.utils.fact_diff", "collection": "ansible.utils", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/fact_diff.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "update_fact", "fqcn": "ansible.utils.update_fact", "collection": "ansible.utils", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/update_fact.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "validate", "fqcn": "ansible.utils.validate", "collection": "ansible.utils", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/validate.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "ansible.windows", "path": "testdata4/installed_collections_path/ansible_collections/ansible/windows", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "win_dsc", "fqcn": "ansible.windows.win_dsc", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_dsc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_whoami", "fqcn": "ansible.windows.win_whoami", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_whoami.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_tempfile", "fqcn": "ansible.windows.win_tempfile", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_tempfile.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_stat", "fqcn": "ansible.windows.win_stat", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_stat.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_find", "fqcn": "ansible.windows.win_find", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_find.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_powershell", "fqcn": "ansible.windows.win_powershell", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_powershell.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_owner", "fqcn": "ansible.windows.win_owner", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_owner.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_reboot", "fqcn": "ansible.windows.win_reboot", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_reboot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_service_info", "fqcn": "ansible.windows.win_service_info", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_service_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_dns_client", "fqcn": "ansible.windows.win_dns_client", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_dns_client.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_acl_inheritance", "fqcn": "ansible.windows.win_acl_inheritance", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_acl_inheritance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_wait_for", "fqcn": "ansible.windows.win_wait_for", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_wait_for.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_domain_controller", "fqcn": "ansible.windows.win_domain_controller", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_domain_controller.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_shell", "fqcn": "ansible.windows.win_shell", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_shell.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_file", "fqcn": "ansible.windows.win_file", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_file.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_get_url", "fqcn": "ansible.windows.win_get_url", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_get_url.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_path", "fqcn": "ansible.windows.win_path", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_path.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_ping", "fqcn": "ansible.windows.win_ping", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_ping.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_reg_stat", "fqcn": "ansible.windows.win_reg_stat", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_reg_stat.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_service", "fqcn": "ansible.windows.win_service", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_user_right", "fqcn": "ansible.windows.win_user_right", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_user_right.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_regedit", "fqcn": "ansible.windows.win_regedit", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_regedit.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_package", "fqcn": "ansible.windows.win_package", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_package.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_certificate_store", "fqcn": "ansible.windows.win_certificate_store", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_certificate_store.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_optional_feature", "fqcn": "ansible.windows.win_optional_feature", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_optional_feature.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_command", "fqcn": "ansible.windows.win_command", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_command.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_user", "fqcn": "ansible.windows.win_user", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_domain", "fqcn": "ansible.windows.win_domain", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_domain.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_group_membership", "fqcn": "ansible.windows.win_group_membership", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_group_membership.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_template", "fqcn": "ansible.windows.win_template", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_template.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_environment", "fqcn": "ansible.windows.win_environment", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_environment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_copy", "fqcn": "ansible.windows.win_copy", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_copy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_share", "fqcn": "ansible.windows.win_share", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_share.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_updates", "fqcn": "ansible.windows.win_updates", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_updates.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_uri", "fqcn": "ansible.windows.win_uri", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_uri.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_group", "fqcn": "ansible.windows.win_group", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_feature", "fqcn": "ansible.windows.win_feature", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_feature.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_acl", "fqcn": "ansible.windows.win_acl", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_acl.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_domain_membership", "fqcn": "ansible.windows.win_domain_membership", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_domain_membership.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "win_hostname", "fqcn": "ansible.windows.win_hostname", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_hostname.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "community.postgresql", "path": "testdata4/installed_collections_path/ansible_collections/community/postgresql", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "postgresql_sequence", "fqcn": "community.postgresql.postgresql_sequence", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_sequence.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_script", "fqcn": "community.postgresql.postgresql_script", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_script.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_user", "fqcn": "community.postgresql.postgresql_user", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_lang", "fqcn": "community.postgresql.postgresql_lang", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_lang.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_privs", "fqcn": "community.postgresql.postgresql_privs", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_privs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_publication", "fqcn": "community.postgresql.postgresql_publication", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_publication.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_schema", "fqcn": "community.postgresql.postgresql_schema", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_schema.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_pg_hba", "fqcn": "community.postgresql.postgresql_pg_hba", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_pg_hba.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_membership", "fqcn": "community.postgresql.postgresql_membership", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_membership.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_table", "fqcn": "community.postgresql.postgresql_table", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_table.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_copy", "fqcn": "community.postgresql.postgresql_copy", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_copy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_slot", "fqcn": "community.postgresql.postgresql_slot", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_slot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_subscription", "fqcn": "community.postgresql.postgresql_subscription", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_query", "fqcn": "community.postgresql.postgresql_query", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_query.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_ext", "fqcn": "community.postgresql.postgresql_ext", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_ext.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_user_obj_stat_info", "fqcn": "community.postgresql.postgresql_user_obj_stat_info", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_user_obj_stat_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_set", "fqcn": "community.postgresql.postgresql_set", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_set.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_info", "fqcn": "community.postgresql.postgresql_info", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_db", "fqcn": "community.postgresql.postgresql_db", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_db.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_idx", "fqcn": "community.postgresql.postgresql_idx", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_idx.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_owner", "fqcn": "community.postgresql.postgresql_owner", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_owner.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_tablespace", "fqcn": "community.postgresql.postgresql_tablespace", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_tablespace.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_ping", "fqcn": "community.postgresql.postgresql_ping", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_ping.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "community.general", "path": "testdata4/installed_collections_path/ansible_collections/community/general", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "bundler", "fqcn": "community.general.bundler", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/bundler.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pip_package_info", "fqcn": "community.general.pip_package_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/pip_package_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "easy_install", "fqcn": "community.general.easy_install", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/easy_install.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "composer", "fqcn": "community.general.composer", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/composer.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "maven_artifact", "fqcn": "community.general.maven_artifact", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/maven_artifact.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cargo", "fqcn": "community.general.cargo", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/cargo.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "npm", "fqcn": "community.general.npm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/npm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "yarn", "fqcn": "community.general.yarn", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/yarn.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bower", "fqcn": "community.general.bower", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/bower.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pear", "fqcn": "community.general.pear", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/pear.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cpanm", "fqcn": "community.general.cpanm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/cpanm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ansible_galaxy_install", "fqcn": "community.general.ansible_galaxy_install", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/ansible_galaxy_install.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pipx", "fqcn": "community.general.pipx", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/pipx.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gem", "fqcn": "community.general.gem", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/gem.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xbps", "fqcn": "community.general.xbps", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/xbps.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkgutil", "fqcn": "community.general.pkgutil", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkgutil.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pacman", "fqcn": "community.general.pacman", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pacman.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pulp_repo", "fqcn": "community.general.pulp_repo", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pulp_repo.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkgng", "fqcn": "community.general.pkgng", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkgng.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "copr", "fqcn": "community.general.copr", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/copr.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "snap_alias", "fqcn": "community.general.snap_alias", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/snap_alias.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zypper", "fqcn": "community.general.zypper", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/zypper.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apt_repo", "fqcn": "community.general.apt_repo", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/apt_repo.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "swdepot", "fqcn": "community.general.swdepot", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/swdepot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "flatpak_remote", "fqcn": "community.general.flatpak_remote", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/flatpak_remote.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "layman", "fqcn": "community.general.layman", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/layman.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pacman_key", "fqcn": "community.general.pacman_key", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pacman_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "portage", "fqcn": "community.general.portage", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/portage.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apk", "fqcn": "community.general.apk", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/apk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "snap", "fqcn": "community.general.snap", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/snap.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "homebrew", "fqcn": "community.general.homebrew", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/homebrew.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mas", "fqcn": "community.general.mas", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/mas.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redhat_subscription", "fqcn": "community.general.redhat_subscription", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/redhat_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "openbsd_pkg", "fqcn": "community.general.openbsd_pkg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/openbsd_pkg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zypper_repository", "fqcn": "community.general.zypper_repository", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/zypper_repository.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dnf_versionlock", "fqcn": "community.general.dnf_versionlock", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/dnf_versionlock.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "urpmi", "fqcn": "community.general.urpmi", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/urpmi.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "swupd", "fqcn": "community.general.swupd", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/swupd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "homebrew_tap", "fqcn": "community.general.homebrew_tap", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/homebrew_tap.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhn_channel", "fqcn": "community.general.rhn_channel", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/rhn_channel.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkgin", "fqcn": "community.general.pkgin", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkgin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "svr4pkg", "fqcn": "community.general.svr4pkg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/svr4pkg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "installp", "fqcn": "community.general.installp", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/installp.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "homebrew_cask", "fqcn": "community.general.homebrew_cask", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/homebrew_cask.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sorcery", "fqcn": "community.general.sorcery", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/sorcery.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "slackpkg", "fqcn": "community.general.slackpkg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/slackpkg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "flatpak", "fqcn": "community.general.flatpak", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/flatpak.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rpm_ostree_pkg", "fqcn": "community.general.rpm_ostree_pkg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/rpm_ostree_pkg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "portinstall", "fqcn": "community.general.portinstall", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/portinstall.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhsm_repository", "fqcn": "community.general.rhsm_repository", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/rhsm_repository.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "yum_versionlock", "fqcn": "community.general.yum_versionlock", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/yum_versionlock.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkg5", "fqcn": "community.general.pkg5", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkg5.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhsm_release", "fqcn": "community.general.rhsm_release", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/rhsm_release.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "opkg", "fqcn": "community.general.opkg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/opkg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkg5_publisher", "fqcn": "community.general.pkg5_publisher", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkg5_publisher.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhn_register", "fqcn": "community.general.rhn_register", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/rhn_register.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apt_rpm", "fqcn": "community.general.apt_rpm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/apt_rpm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "macports", "fqcn": "community.general.macports", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/macports.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "odbc", "fqcn": "community.general.odbc", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/odbc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redis_data_info", "fqcn": "community.general.redis_data_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/redis_data_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redis_data_incr", "fqcn": "community.general.redis_data_incr", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/redis_data_incr.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kibana_plugin", "fqcn": "community.general.kibana_plugin", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/kibana_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "elasticsearch_plugin", "fqcn": "community.general.elasticsearch_plugin", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/elasticsearch_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "riak", "fqcn": "community.general.riak", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/riak.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redis", "fqcn": "community.general.redis", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/redis.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redis_data", "fqcn": "community.general.redis_data", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/redis_data.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redis_info", "fqcn": "community.general.redis_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/redis_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_user", "fqcn": "community.general.influxdb_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_write", "fqcn": "community.general.influxdb_write", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_write.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_query", "fqcn": "community.general.influxdb_query", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_query.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_database", "fqcn": "community.general.influxdb_database", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_database.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_retention_policy", "fqcn": "community.general.influxdb_retention_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_retention_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aerospike_migrations", "fqcn": "community.general.aerospike_migrations", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/aerospike/aerospike_migrations.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_role", "fqcn": "community.general.vertica_role", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_role.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_user", "fqcn": "community.general.vertica_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_configuration", "fqcn": "community.general.vertica_configuration", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_configuration.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_info", "fqcn": "community.general.vertica_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_schema", "fqcn": "community.general.vertica_schema", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_schema.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mssql_script", "fqcn": "community.general.mssql_script", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/mssql/mssql_script.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mssql_db", "fqcn": "community.general.mssql_db", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/mssql/mssql_db.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hana_query", "fqcn": "community.general.hana_query", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/saphana/hana_query.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "onepassword_info", "fqcn": "community.general.onepassword_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/onepassword_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_role", "fqcn": "community.general.ipa_role", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_role.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_hbacrule", "fqcn": "community.general.ipa_hbacrule", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_hbacrule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_host", "fqcn": "community.general.ipa_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_group", "fqcn": "community.general.ipa_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_vault", "fqcn": "community.general.ipa_vault", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_vault.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_sudocmdgroup", "fqcn": "community.general.ipa_sudocmdgroup", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_sudocmdgroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_user", "fqcn": "community.general.ipa_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_otptoken", "fqcn": "community.general.ipa_otptoken", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_otptoken.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_dnszone", "fqcn": "community.general.ipa_dnszone", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_dnszone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_otpconfig", "fqcn": "community.general.ipa_otpconfig", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_otpconfig.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_sudorule", "fqcn": "community.general.ipa_sudorule", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_sudorule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_service", "fqcn": "community.general.ipa_service", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_subca", "fqcn": "community.general.ipa_subca", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_subca.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_pwpolicy", "fqcn": "community.general.ipa_pwpolicy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_pwpolicy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_sudocmd", "fqcn": "community.general.ipa_sudocmd", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_sudocmd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_hostgroup", "fqcn": "community.general.ipa_hostgroup", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_hostgroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_dnsrecord", "fqcn": "community.general.ipa_dnsrecord", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_dnsrecord.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_config", "fqcn": "community.general.ipa_config", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_group", "fqcn": "community.general.keycloak_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_user_federation", "fqcn": "community.general.keycloak_user_federation", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_user_federation.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_realm_info", "fqcn": "community.general.keycloak_realm_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_realm_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_authentication", "fqcn": "community.general.keycloak_authentication", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_authentication.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_client", "fqcn": "community.general.keycloak_client", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_client.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_realm", "fqcn": "community.general.keycloak_realm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_realm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_identity_provider", "fqcn": "community.general.keycloak_identity_provider", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_identity_provider.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_clienttemplate", "fqcn": "community.general.keycloak_clienttemplate", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_clienttemplate.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_client_rolemapping", "fqcn": "community.general.keycloak_client_rolemapping", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_client_rolemapping.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_role", "fqcn": "community.general.keycloak_role", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_role.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_clientscope", "fqcn": "community.general.keycloak_clientscope", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_clientscope.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "opendj_backendprop", "fqcn": "community.general.opendj_backendprop", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/opendj/opendj_backendprop.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mail", "fqcn": "community.general.mail", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/mail.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "matrix", "fqcn": "community.general.matrix", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/matrix.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "grove", "fqcn": "community.general.grove", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/grove.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jabber", "fqcn": "community.general.jabber", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/jabber.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hipchat", "fqcn": "community.general.hipchat", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/hipchat.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bearychat", "fqcn": "community.general.bearychat", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/bearychat.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "telegram", "fqcn": "community.general.telegram", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/telegram.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "say", "fqcn": "community.general.say", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/say.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pushover", "fqcn": "community.general.pushover", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/pushover.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "discord", "fqcn": "community.general.discord", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/discord.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "irc", "fqcn": "community.general.irc", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/irc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mattermost", "fqcn": "community.general.mattermost", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/mattermost.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nexmo", "fqcn": "community.general.nexmo", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/nexmo.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "typetalk", "fqcn": "community.general.typetalk", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/typetalk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mqtt", "fqcn": "community.general.mqtt", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/mqtt.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "office_365_connector_card", "fqcn": "community.general.office_365_connector_card", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/office_365_connector_card.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "syslogger", "fqcn": "community.general.syslogger", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/syslogger.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "campfire", "fqcn": "community.general.campfire", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/campfire.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "flowdock", "fqcn": "community.general.flowdock", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/flowdock.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sendgrid", "fqcn": "community.general.sendgrid", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/sendgrid.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cisco_webex", "fqcn": "community.general.cisco_webex", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/cisco_webex.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "twilio", "fqcn": "community.general.twilio", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/twilio.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pushbullet", "fqcn": "community.general.pushbullet", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/pushbullet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "slack", "fqcn": "community.general.slack", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/slack.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rocketchat", "fqcn": "community.general.rocketchat", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/rocketchat.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "logentries_msg", "fqcn": "community.general.logentries_msg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/logentries_msg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "catapult", "fqcn": "community.general.catapult", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/catapult.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "wakeonlan", "fqcn": "community.general.wakeonlan", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/wakeonlan.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "imc_rest", "fqcn": "community.general.imc_rest", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/imc/imc_rest.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxca_nodes", "fqcn": "community.general.lxca_nodes", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/lxca/lxca_nodes.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxca_cmms", "fqcn": "community.general.lxca_cmms", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/lxca/lxca_cmms.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "stacki_host", "fqcn": "community.general.stacki_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/stacki/stacki_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ilo_redfish_config", "fqcn": "community.general.ilo_redfish_config", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/ilo_redfish_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ilo_redfish_info", "fqcn": "community.general.ilo_redfish_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/ilo_redfish_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_redfish_config", "fqcn": "community.general.idrac_redfish_config", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/idrac_redfish_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_redfish_info", "fqcn": "community.general.idrac_redfish_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/idrac_redfish_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redfish_config", "fqcn": "community.general.redfish_config", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/redfish_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_redfish_command", "fqcn": "community.general.idrac_redfish_command", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/idrac_redfish_command.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redfish_command", "fqcn": "community.general.redfish_command", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/redfish_command.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redfish_info", "fqcn": "community.general.redfish_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/redfish_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_san_manager", "fqcn": "community.general.oneview_san_manager", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_san_manager.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fcoe_network", "fqcn": "community.general.oneview_fcoe_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_fcoe_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_logical_interconnect_group_info", "fqcn": "community.general.oneview_logical_interconnect_group_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_logical_interconnect_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_logical_interconnect_group", "fqcn": "community.general.oneview_logical_interconnect_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_logical_interconnect_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_network_set_info", "fqcn": "community.general.oneview_network_set_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_network_set_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_san_manager_info", "fqcn": "community.general.oneview_san_manager_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_san_manager_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fc_network_info", "fqcn": "community.general.oneview_fc_network_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_fc_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_network_set", "fqcn": "community.general.oneview_network_set", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_network_set.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fc_network", "fqcn": "community.general.oneview_fc_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_fc_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fcoe_network_info", "fqcn": "community.general.oneview_fcoe_network_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_fcoe_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_ethernet_network", "fqcn": "community.general.oneview_ethernet_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_ethernet_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_datacenter_info", "fqcn": "community.general.oneview_datacenter_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_datacenter_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_enclosure_info", "fqcn": "community.general.oneview_enclosure_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_enclosure_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_ethernet_network_info", "fqcn": "community.general.oneview_ethernet_network_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_ethernet_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xcc_redfish_command", "fqcn": "community.general.xcc_redfish_command", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/lenovoxcc/xcc_redfish_command.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cobbler_sync", "fqcn": "community.general.cobbler_sync", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/cobbler/cobbler_sync.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cobbler_system", "fqcn": "community.general.cobbler_system", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/cobbler/cobbler_system.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hpilo_boot", "fqcn": "community.general.hpilo_boot", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/hpilo/hpilo_boot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hpilo_info", "fqcn": "community.general.hpilo_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/hpilo/hpilo_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hponcfg", "fqcn": "community.general.hponcfg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/hpilo/hponcfg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipmi_boot", "fqcn": "community.general.ipmi_boot", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/ipmi/ipmi_boot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipmi_power", "fqcn": "community.general.ipmi_power", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/ipmi/ipmi_power.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_tags", "fqcn": "community.general.manageiq_tags", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_tags.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_user", "fqcn": "community.general.manageiq_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_policies", "fqcn": "community.general.manageiq_policies", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_policies.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_group", "fqcn": "community.general.manageiq_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_provider", "fqcn": "community.general.manageiq_provider", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_provider.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_tenant", "fqcn": "community.general.manageiq_tenant", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_tenant.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_alert_profiles", "fqcn": "community.general.manageiq_alert_profiles", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_alert_profiles.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_alerts", "fqcn": "community.general.manageiq_alerts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_alerts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rundeck_job_run", "fqcn": "community.general.rundeck_job_run", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/rundeck_job_run.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "supervisorctl", "fqcn": "community.general.supervisorctl", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/supervisorctl.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "htpasswd", "fqcn": "community.general.htpasswd", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/htpasswd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jboss", "fqcn": "community.general.jboss", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jboss.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apache2_module", "fqcn": "community.general.apache2_module", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/apache2_module.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "taiga_issue", "fqcn": "community.general.taiga_issue", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/taiga_issue.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nginx_status_info", "fqcn": "community.general.nginx_status_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/nginx_status_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_build", "fqcn": "community.general.jenkins_build", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_build.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rundeck_project", "fqcn": "community.general.rundeck_project", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/rundeck_project.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_job_info", "fqcn": "community.general.jenkins_job_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_job_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gunicorn", "fqcn": "community.general.gunicorn", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/gunicorn.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rundeck_job_executions_info", "fqcn": "community.general.rundeck_job_executions_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/rundeck_job_executions_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_script", "fqcn": "community.general.jenkins_script", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_script.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_job", "fqcn": "community.general.jenkins_job", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_job.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "django_manage", "fqcn": "community.general.django_manage", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/django_manage.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jira", "fqcn": "community.general.jira", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jira.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_plugin", "fqcn": "community.general.jenkins_plugin", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apache2_mod_proxy", "fqcn": "community.general.apache2_mod_proxy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/apache2_mod_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "deploy_helper", "fqcn": "community.general.deploy_helper", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/deploy_helper.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rundeck_acl_policy", "fqcn": "community.general.rundeck_acl_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/rundeck_acl_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ejabberd_user", "fqcn": "community.general.ejabberd_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/ejabberd_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_ca_host_key_cert", "fqcn": "community.general.utm_ca_host_key_cert", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_ca_host_key_cert.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_ca_host_key_cert_info", "fqcn": "community.general.utm_ca_host_key_cert_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_ca_host_key_cert_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_location_info", "fqcn": "community.general.utm_proxy_location_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_location_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_network_interface_address", "fqcn": "community.general.utm_network_interface_address", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_network_interface_address.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_frontend", "fqcn": "community.general.utm_proxy_frontend", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_frontend.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_network_interface_address_info", "fqcn": "community.general.utm_network_interface_address_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_network_interface_address_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_location", "fqcn": "community.general.utm_proxy_location", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_location.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_aaa_group_info", "fqcn": "community.general.utm_aaa_group_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_aaa_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_aaa_group", "fqcn": "community.general.utm_aaa_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_aaa_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_dns_host", "fqcn": "community.general.utm_dns_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_dns_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_frontend_info", "fqcn": "community.general.utm_proxy_frontend_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_frontend_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_exception", "fqcn": "community.general.utm_proxy_exception", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_exception.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_auth_profile", "fqcn": "community.general.utm_proxy_auth_profile", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_auth_profile.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "etcd3", "fqcn": "community.general.etcd3", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/etcd3.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "znode", "fqcn": "community.general.znode", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/znode.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pacemaker_cluster", "fqcn": "community.general.pacemaker_cluster", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/pacemaker_cluster.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nomad_job_info", "fqcn": "community.general.nomad_job_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/nomad/nomad_job_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nomad_job", "fqcn": "community.general.nomad_job", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/nomad/nomad_job.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "consul_acl", "fqcn": "community.general.consul_acl", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/consul/consul_acl.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "consul_session", "fqcn": "community.general.consul_session", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/consul/consul_session.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "consul", "fqcn": "community.general.consul", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/consul/consul.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "consul_kv", "fqcn": "community.general.consul_kv", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/consul/consul_kv.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ss_3par_cpg", "fqcn": "community.general.ss_3par_cpg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/hpe3par/ss_3par_cpg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vexata_volume", "fqcn": "community.general.vexata_volume", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/vexata/vexata_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vexata_eg", "fqcn": "community.general.vexata_eg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/vexata/vexata_eg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pmem", "fqcn": "community.general.pmem", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/pmem/pmem.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_host", "fqcn": "community.general.ibm_sa_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_domain", "fqcn": "community.general.ibm_sa_domain", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_domain.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_host_ports", "fqcn": "community.general.ibm_sa_host_ports", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_host_ports.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_vol_map", "fqcn": "community.general.ibm_sa_vol_map", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_vol_map.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_pool", "fqcn": "community.general.ibm_sa_pool", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_pool.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_vol", "fqcn": "community.general.ibm_sa_vol", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_vol.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zfs_facts", "fqcn": "community.general.zfs_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/zfs/zfs_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zfs", "fqcn": "community.general.zfs", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/zfs/zfs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zfs_delegate_admin", "fqcn": "community.general.zfs_delegate_admin", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/zfs/zfs_delegate_admin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zpool_facts", "fqcn": "community.general.zpool_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/zfs/zpool_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "emc_vnx_sg_member", "fqcn": "community.general.emc_vnx_sg_member", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/emc/emc_vnx_sg_member.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cronvar", "fqcn": "community.general.cronvar", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/cronvar.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "osx_defaults", "fqcn": "community.general.osx_defaults", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/osx_defaults.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_lvg", "fqcn": "community.general.aix_lvg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_lvg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "iptables_state", "fqcn": "community.general.iptables_state", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/iptables_state.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "selogin", "fqcn": "community.general.selogin", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/selogin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sefcontext", "fqcn": "community.general.sefcontext", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/sefcontext.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "syspatch", "fqcn": "community.general.syspatch", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/syspatch.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "crypttab", "fqcn": "community.general.crypttab", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/crypttab.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gconftool2", "fqcn": "community.general.gconftool2", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/gconftool2.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "open_iscsi", "fqcn": "community.general.open_iscsi", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/open_iscsi.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_inittab", "fqcn": "community.general.aix_inittab", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_inittab.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dpkg_divert", "fqcn": "community.general.dpkg_divert", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/dpkg_divert.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ohai", "fqcn": "community.general.ohai", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/ohai.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xfconf", "fqcn": "community.general.xfconf", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/xfconf.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "modprobe", "fqcn": "community.general.modprobe", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/modprobe.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "filesystem", "fqcn": "community.general.filesystem", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/filesystem.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "homectl", "fqcn": "community.general.homectl", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/homectl.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "facter", "fqcn": "community.general.facter", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/facter.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "shutdown", "fqcn": "community.general.shutdown", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/shutdown.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gconftool2_info", "fqcn": "community.general.gconftool2_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/gconftool2_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dconf", "fqcn": "community.general.dconf", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/dconf.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "beadm", "fqcn": "community.general.beadm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/beadm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mksysb", "fqcn": "community.general.mksysb", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/mksysb.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xfs_quota", "fqcn": "community.general.xfs_quota", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/xfs_quota.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ufw", "fqcn": "community.general.ufw", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/ufw.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "solaris_zone", "fqcn": "community.general.solaris_zone", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/solaris_zone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xfconf_info", "fqcn": "community.general.xfconf_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/xfconf_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "listen_ports_facts", "fqcn": "community.general.listen_ports_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/listen_ports_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nosh", "fqcn": "community.general.nosh", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/nosh.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lbu", "fqcn": "community.general.lbu", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/lbu.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_filesystem", "fqcn": "community.general.aix_filesystem", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_filesystem.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pamd", "fqcn": "community.general.pamd", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/pamd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_lvol", "fqcn": "community.general.aix_lvol", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_lvol.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sysupgrade", "fqcn": "community.general.sysupgrade", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/sysupgrade.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "svc", "fqcn": "community.general.svc", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/svc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vdo", "fqcn": "community.general.vdo", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/vdo.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keyring", "fqcn": "community.general.keyring", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/keyring.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "openwrt_init", "fqcn": "community.general.openwrt_init", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/openwrt_init.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ssh_config", "fqcn": "community.general.ssh_config", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/ssh_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "capabilities", "fqcn": "community.general.capabilities", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/capabilities.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "java_keystore", "fqcn": "community.general.java_keystore", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/java_keystore.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "puppet", "fqcn": "community.general.puppet", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/puppet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "runit", "fqcn": "community.general.runit", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/runit.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sudoers", "fqcn": "community.general.sudoers", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/sudoers.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pam_limits", "fqcn": "community.general.pam_limits", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/pam_limits.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pids", "fqcn": "community.general.pids", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/pids.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "awall", "fqcn": "community.general.awall", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/awall.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kernel_blacklist", "fqcn": "community.general.kernel_blacklist", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/kernel_blacklist.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "parted", "fqcn": "community.general.parted", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/parted.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lvol", "fqcn": "community.general.lvol", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/lvol.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sap_task_list_execute", "fqcn": "community.general.sap_task_list_execute", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/sap_task_list_execute.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "make", "fqcn": "community.general.make", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/make.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "launchd", "fqcn": "community.general.launchd", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/launchd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "java_cert", "fqcn": "community.general.java_cert", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/java_cert.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lvg", "fqcn": "community.general.lvg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/lvg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "locale_gen", "fqcn": "community.general.locale_gen", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/locale_gen.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keyring_info", "fqcn": "community.general.keyring_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/keyring_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sysrc", "fqcn": "community.general.sysrc", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/sysrc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "timezone", "fqcn": "community.general.timezone", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/timezone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "seport", "fqcn": "community.general.seport", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/seport.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "python_requirements_info", "fqcn": "community.general.python_requirements_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/python_requirements_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "alternatives", "fqcn": "community.general.alternatives", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/alternatives.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "interfaces_file", "fqcn": "community.general.interfaces_file", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/interfaces_file.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_devices", "fqcn": "community.general.aix_devices", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_devices.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "selinux_permissive", "fqcn": "community.general.selinux_permissive", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/selinux_permissive.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ali_instance", "fqcn": "community.general.ali_instance", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/alicloud/ali_instance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ali_instance_info", "fqcn": "community.general.ali_instance_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/alicloud/ali_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_site", "fqcn": "community.general.webfaction_site", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_site.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_domain", "fqcn": "community.general.webfaction_domain", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_domain.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_db", "fqcn": "community.general.webfaction_db", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_db.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_mailbox", "fqcn": "community.general.webfaction_mailbox", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_mailbox.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_app", "fqcn": "community.general.webfaction_app", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_app.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "serverless", "fqcn": "community.general.serverless", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/serverless.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_domain_info", "fqcn": "community.general.proxmox_domain_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_domain_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhevm", "fqcn": "community.general.rhevm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/rhevm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_tasks_info", "fqcn": "community.general.proxmox_tasks_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_tasks_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_snap", "fqcn": "community.general.proxmox_snap", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_snap.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cloud_init_data_facts", "fqcn": "community.general.cloud_init_data_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/cloud_init_data_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "terraform", "fqcn": "community.general.terraform", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/terraform.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_user_info", "fqcn": "community.general.proxmox_user_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_storage_info", "fqcn": "community.general.proxmox_storage_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_storage_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox", "fqcn": "community.general.proxmox", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_template", "fqcn": "community.general.proxmox_template", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_template.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_group_info", "fqcn": "community.general.proxmox_group_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_nic", "fqcn": "community.general.proxmox_nic", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_nic.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xenserver_facts", "fqcn": "community.general.xenserver_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/xenserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_kvm", "fqcn": "community.general.proxmox_kvm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_kvm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovh_monthly_billing", "fqcn": "community.general.ovh_monthly_billing", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovh/ovh_monthly_billing.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovh_ip_loadbalancing_backend", "fqcn": "community.general.ovh_ip_loadbalancing_backend", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovh/ovh_ip_loadbalancing_backend.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovh_ip_failover", "fqcn": "community.general.ovh_ip_failover", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovh/ovh_ip_failover.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_security_group", "fqcn": "community.general.hwc_vpc_security_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_security_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_evs_disk", "fqcn": "community.general.hwc_evs_disk", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_evs_disk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_subnet", "fqcn": "community.general.hwc_vpc_subnet", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_subnet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_security_group_rule", "fqcn": "community.general.hwc_vpc_security_group_rule", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_security_group_rule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_private_ip", "fqcn": "community.general.hwc_vpc_private_ip", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_private_ip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_port", "fqcn": "community.general.hwc_vpc_port", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_port.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_smn_topic", "fqcn": "community.general.hwc_smn_topic", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_smn_topic.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_ecs_instance", "fqcn": "community.general.hwc_ecs_instance", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_ecs_instance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_network_vpc", "fqcn": "community.general.hwc_network_vpc", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_network_vpc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_eip", "fqcn": "community.general.hwc_vpc_eip", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_eip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_route", "fqcn": "community.general.hwc_vpc_route", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_route.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_peering_connect", "fqcn": "community.general.hwc_vpc_peering_connect", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_peering_connect.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sl_vm", "fqcn": "community.general.sl_vm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/softlayer/sl_vm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks_datacenter", "fqcn": "community.general.profitbricks_datacenter", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks_datacenter.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks_nic", "fqcn": "community.general.profitbricks_nic", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks_nic.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks", "fqcn": "community.general.profitbricks", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks_volume_attachments", "fqcn": "community.general.profitbricks_volume_attachments", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks_volume_attachments.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks_volume", "fqcn": "community.general.profitbricks_volume", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_dns_reload", "fqcn": "community.general.memset_dns_reload", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_dns_reload.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_server_info", "fqcn": "community.general.memset_server_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_zone_domain", "fqcn": "community.general.memset_zone_domain", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_zone_domain.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_zone_record", "fqcn": "community.general.memset_zone_record", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_zone_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_memstore_info", "fqcn": "community.general.memset_memstore_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_memstore_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_zone", "fqcn": "community.general.memset_zone", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_zone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "heroku_collaborator", "fqcn": "community.general.heroku_collaborator", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/heroku/heroku_collaborator.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "linode", "fqcn": "community.general.linode", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/linode/linode.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "linode_v4", "fqcn": "community.general.linode_v4", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/linode/linode_v4.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cdb_user", "fqcn": "community.general.rax_cdb_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cdb_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_dns_record", "fqcn": "community.general.rax_dns_record", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_dns_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_notification", "fqcn": "community.general.rax_mon_notification", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_notification.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_files_objects", "fqcn": "community.general.rax_files_objects", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_files_objects.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cbs", "fqcn": "community.general.rax_cbs", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cbs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_facts", "fqcn": "community.general.rax_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_files", "fqcn": "community.general.rax_files", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_files.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_queue", "fqcn": "community.general.rax_queue", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_queue.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_clb_nodes", "fqcn": "community.general.rax_clb_nodes", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_clb_nodes.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_network", "fqcn": "community.general.rax_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_meta", "fqcn": "community.general.rax_meta", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_meta.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_scaling_policy", "fqcn": "community.general.rax_scaling_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_scaling_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_clb", "fqcn": "community.general.rax_clb", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_clb.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_entity", "fqcn": "community.general.rax_mon_entity", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_entity.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax", "fqcn": "community.general.rax", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_keypair", "fqcn": "community.general.rax_keypair", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_keypair.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cdb_database", "fqcn": "community.general.rax_cdb_database", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cdb_database.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_dns", "fqcn": "community.general.rax_dns", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_dns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_clb_ssl", "fqcn": "community.general.rax_clb_ssl", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_clb_ssl.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_check", "fqcn": "community.general.rax_mon_check", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_check.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_identity", "fqcn": "community.general.rax_identity", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_identity.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cdb", "fqcn": "community.general.rax_cdb", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cdb.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cbs_attachments", "fqcn": "community.general.rax_cbs_attachments", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cbs_attachments.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_notification_plan", "fqcn": "community.general.rax_mon_notification_plan", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_notification_plan.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_scaling_group", "fqcn": "community.general.rax_scaling_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_scaling_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_alarm", "fqcn": "community.general.rax_mon_alarm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_alarm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pubnub_blocks", "fqcn": "community.general.pubnub_blocks", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/pubnub/pubnub_blocks.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oci_vcn", "fqcn": "community.general.oci_vcn", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oracle/oci_vcn.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_group", "fqcn": "community.general.clc_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_firewall_policy", "fqcn": "community.general.clc_firewall_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_firewall_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_loadbalancer", "fqcn": "community.general.clc_loadbalancer", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_loadbalancer.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_server", "fqcn": "community.general.clc_server", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_server.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_aa_policy", "fqcn": "community.general.clc_aa_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_aa_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_publicip", "fqcn": "community.general.clc_publicip", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_publicip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_server_snapshot", "fqcn": "community.general.clc_server_snapshot", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_server_snapshot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_modify_server", "fqcn": "community.general.clc_modify_server", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_modify_server.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_blueprint_package", "fqcn": "community.general.clc_blueprint_package", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_blueprint_package.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_alert_policy", "fqcn": "community.general.clc_alert_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_alert_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "atomic_image", "fqcn": "community.general.atomic_image", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/atomic/atomic_image.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "atomic_container", "fqcn": "community.general.atomic_container", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/atomic/atomic_container.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "atomic_host", "fqcn": "community.general.atomic_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/atomic/atomic_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_public_ip", "fqcn": "community.general.oneandone_public_ip", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_public_ip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_monitoring_policy", "fqcn": "community.general.oneandone_monitoring_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_monitoring_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_firewall_policy", "fqcn": "community.general.oneandone_firewall_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_firewall_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_server", "fqcn": "community.general.oneandone_server", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_server.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_private_network", "fqcn": "community.general.oneandone_private_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_private_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_load_balancer", "fqcn": "community.general.oneandone_load_balancer", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_load_balancer.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxc_container", "fqcn": "community.general.lxc_container", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/lxc/lxc_container.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxd_container", "fqcn": "community.general.lxd_container", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/lxd/lxd_container.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxd_project", "fqcn": "community.general.lxd_project", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/lxd/lxd_project.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxd_profile", "fqcn": "community.general.lxd_profile", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/lxd/lxd_profile.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "spotinst_aws_elastigroup", "fqcn": "community.general.spotinst_aws_elastigroup", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/spotinst/spotinst_aws_elastigroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "imgadm", "fqcn": "community.general.imgadm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/smartos/imgadm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nictagadm", "fqcn": "community.general.nictagadm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/smartos/nictagadm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "smartos_image_info", "fqcn": "community.general.smartos_image_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/smartos/smartos_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vmadm", "fqcn": "community.general.vmadm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/smartos/vmadm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_compute", "fqcn": "community.general.scaleway_compute", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_compute.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_volume", "fqcn": "community.general.scaleway_volume", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_sshkey", "fqcn": "community.general.scaleway_sshkey", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_sshkey.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_organization_info", "fqcn": "community.general.scaleway_organization_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_organization_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_server_info", "fqcn": "community.general.scaleway_server_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_database_backup", "fqcn": "community.general.scaleway_database_backup", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_database_backup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_image_info", "fqcn": "community.general.scaleway_image_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_ip", "fqcn": "community.general.scaleway_ip", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_ip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_security_group", "fqcn": "community.general.scaleway_security_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_security_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_security_group_info", "fqcn": "community.general.scaleway_security_group_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_security_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_user_data", "fqcn": "community.general.scaleway_user_data", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_user_data.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_private_network", "fqcn": "community.general.scaleway_private_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_private_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_volume_info", "fqcn": "community.general.scaleway_volume_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_volume_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_ip_info", "fqcn": "community.general.scaleway_ip_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_ip_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_security_group_rule", "fqcn": "community.general.scaleway_security_group_rule", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_security_group_rule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_snapshot_info", "fqcn": "community.general.scaleway_snapshot_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_snapshot_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_compute_private_network", "fqcn": "community.general.scaleway_compute_private_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_compute_private_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_lb", "fqcn": "community.general.scaleway_lb", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_lb.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xenserver_guest", "fqcn": "community.general.xenserver_guest", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/xenserver/xenserver_guest.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xenserver_guest_powerstate", "fqcn": "community.general.xenserver_guest_powerstate", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/xenserver/xenserver_guest_powerstate.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xenserver_guest_info", "fqcn": "community.general.xenserver_guest_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/xenserver/xenserver_guest_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "online_server_info", "fqcn": "community.general.online_server_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/online/online_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "online_user_info", "fqcn": "community.general.online_user_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/online/online_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dimensiondata_network", "fqcn": "community.general.dimensiondata_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/dimensiondata/dimensiondata_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dimensiondata_vlan", "fqcn": "community.general.dimensiondata_vlan", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/dimensiondata/dimensiondata_vlan.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_device", "fqcn": "community.general.packet_device", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_device.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_project", "fqcn": "community.general.packet_project", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_project.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_ip_subnet", "fqcn": "community.general.packet_ip_subnet", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_ip_subnet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_volume_attachment", "fqcn": "community.general.packet_volume_attachment", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_volume_attachment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_volume", "fqcn": "community.general.packet_volume", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_sshkey", "fqcn": "community.general.packet_sshkey", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_sshkey.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_user", "fqcn": "community.general.udm_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_share", "fqcn": "community.general.udm_share", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_share.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_group", "fqcn": "community.general.udm_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_dns_record", "fqcn": "community.general.udm_dns_record", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_dns_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_dns_zone", "fqcn": "community.general.udm_dns_zone", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_dns_zone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_image", "fqcn": "community.general.one_image", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_image.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_template", "fqcn": "community.general.one_template", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_template.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_image_info", "fqcn": "community.general.one_image_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_vm", "fqcn": "community.general.one_vm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_vm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_service", "fqcn": "community.general.one_service", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_host", "fqcn": "community.general.one_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "read_csv", "fqcn": "community.general.read_csv", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/read_csv.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "filesize", "fqcn": "community.general.filesize", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/filesize.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xml", "fqcn": "community.general.xml", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/xml.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xattr", "fqcn": "community.general.xattr", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/xattr.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "archive", "fqcn": "community.general.archive", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/archive.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "iso_create", "fqcn": "community.general.iso_create", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/iso_create.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "iso_extract", "fqcn": "community.general.iso_extract", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/iso_extract.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sapcar_extract", "fqcn": "community.general.sapcar_extract", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/sapcar_extract.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ini_file", "fqcn": "community.general.ini_file", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/ini_file.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "spectrum_model_attrs", "fqcn": "community.general.spectrum_model_attrs", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/spectrum_model_attrs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nagios", "fqcn": "community.general.nagios", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/nagios.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "circonus_annotation", "fqcn": "community.general.circonus_annotation", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/circonus_annotation.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bigpanda", "fqcn": "community.general.bigpanda", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/bigpanda.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "statusio_maintenance", "fqcn": "community.general.statusio_maintenance", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/statusio_maintenance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "monit", "fqcn": "community.general.monit", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/monit.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "honeybadger_deployment", "fqcn": "community.general.honeybadger_deployment", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/honeybadger_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "icinga2_host", "fqcn": "community.general.icinga2_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/icinga2_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "logstash_plugin", "fqcn": "community.general.logstash_plugin", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/logstash_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "logentries", "fqcn": "community.general.logentries", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/logentries.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pagerduty_alert", "fqcn": "community.general.pagerduty_alert", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pagerduty_alert.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pagerduty_user", "fqcn": "community.general.pagerduty_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pagerduty_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "newrelic_deployment", "fqcn": "community.general.newrelic_deployment", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/newrelic_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "uptimerobot", "fqcn": "community.general.uptimerobot", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/uptimerobot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "librato_annotation", "fqcn": "community.general.librato_annotation", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/librato_annotation.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "icinga2_feature", "fqcn": "community.general.icinga2_feature", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/icinga2_feature.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rollbar_deployment", "fqcn": "community.general.rollbar_deployment", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/rollbar_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "airbrake_deployment", "fqcn": "community.general.airbrake_deployment", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/airbrake_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pingdom", "fqcn": "community.general.pingdom", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pingdom.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "statsd", "fqcn": "community.general.statsd", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/statsd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pagerduty", "fqcn": "community.general.pagerduty", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pagerduty.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "alerta_customer", "fqcn": "community.general.alerta_customer", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/alerta_customer.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pagerduty_change", "fqcn": "community.general.pagerduty_change", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pagerduty_change.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "stackdriver", "fqcn": "community.general.stackdriver", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/stackdriver.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "spectrum_device", "fqcn": "community.general.spectrum_device", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/spectrum_device.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "datadog_monitor", "fqcn": "community.general.datadog_monitor", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/datadog/datadog_monitor.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "datadog_downtime", "fqcn": "community.general.datadog_downtime", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/datadog/datadog_downtime.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "datadog_event", "fqcn": "community.general.datadog_event", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/datadog/datadog_event.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_check", "fqcn": "community.general.sensu_check", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_check.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_handler", "fqcn": "community.general.sensu_handler", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_handler.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_silence", "fqcn": "community.general.sensu_silence", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_silence.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_client", "fqcn": "community.general.sensu_client", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_client.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_subscription", "fqcn": "community.general.sensu_subscription", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "netcup_dns", "fqcn": "community.general.netcup_dns", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/netcup_dns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "snmp_facts", "fqcn": "community.general.snmp_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/snmp_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipinfoio_facts", "fqcn": "community.general.ipinfoio_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ipinfoio_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ip_netns", "fqcn": "community.general.ip_netns", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ip_netns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cloudflare_dns", "fqcn": "community.general.cloudflare_dns", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/cloudflare_dns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "haproxy", "fqcn": "community.general.haproxy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/haproxy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gandi_livedns", "fqcn": "community.general.gandi_livedns", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/gandi_livedns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dnsimple", "fqcn": "community.general.dnsimple", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/dnsimple.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "omapi_host", "fqcn": "community.general.omapi_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/omapi_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lldp", "fqcn": "community.general.lldp", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/lldp.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nsupdate", "fqcn": "community.general.nsupdate", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nsupdate.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipwcli_dns", "fqcn": "community.general.ipwcli_dns", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ipwcli_dns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipify_facts", "fqcn": "community.general.ipify_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ipify_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nmcli", "fqcn": "community.general.nmcli", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nmcli.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dnsmadeeasy", "fqcn": "community.general.dnsmadeeasy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/dnsmadeeasy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dnsimple_info", "fqcn": "community.general.dnsimple_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/dnsimple_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pritunl_org_info", "fqcn": "community.general.pritunl_org_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/pritunl/pritunl_org_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pritunl_user_info", "fqcn": "community.general.pritunl_user_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/pritunl/pritunl_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pritunl_user", "fqcn": "community.general.pritunl_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/pritunl/pritunl_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pritunl_org", "fqcn": "community.general.pritunl_org", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/pritunl/pritunl_org.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ldap_passwd", "fqcn": "community.general.ldap_passwd", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ldap/ldap_passwd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ldap_search", "fqcn": "community.general.ldap_search", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ldap/ldap_search.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ldap_attrs", "fqcn": "community.general.ldap_attrs", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ldap/ldap_attrs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ldap_entry", "fqcn": "community.general.ldap_entry", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ldap/ldap_entry.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "infinity", "fqcn": "community.general.infinity", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/infinity/infinity.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bzr", "fqcn": "community.general.bzr", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bzr.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "git_config", "fqcn": "community.general.git_config", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/git_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hg", "fqcn": "community.general.hg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/hg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_protected_branch", "fqcn": "community.general.gitlab_protected_branch", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_protected_branch.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_branch", "fqcn": "community.general.gitlab_branch", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_branch.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_group_variable", "fqcn": "community.general.gitlab_group_variable", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_group_variable.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_deploy_key", "fqcn": "community.general.gitlab_deploy_key", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_deploy_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_project_variable", "fqcn": "community.general.gitlab_project_variable", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_project_variable.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_runner", "fqcn": "community.general.gitlab_runner", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_runner.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_group", "fqcn": "community.general.gitlab_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_project_members", "fqcn": "community.general.gitlab_project_members", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_project_members.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_user", "fqcn": "community.general.gitlab_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_hook", "fqcn": "community.general.gitlab_hook", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_hook.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_project", "fqcn": "community.general.gitlab_project", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_project.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_group_members", "fqcn": "community.general.gitlab_group_members", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_group_members.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_deploy_key", "fqcn": "community.general.github_deploy_key", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_deploy_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_webhook_info", "fqcn": "community.general.github_webhook_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_webhook_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_issue", "fqcn": "community.general.github_issue", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_issue.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_release", "fqcn": "community.general.github_release", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_release.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_webhook", "fqcn": "community.general.github_webhook", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_webhook.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_repo", "fqcn": "community.general.github_repo", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_repo.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_key", "fqcn": "community.general.github_key", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bitbucket_pipeline_variable", "fqcn": "community.general.bitbucket_pipeline_variable", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bitbucket/bitbucket_pipeline_variable.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bitbucket_pipeline_key_pair", "fqcn": "community.general.bitbucket_pipeline_key_pair", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bitbucket/bitbucket_pipeline_key_pair.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bitbucket_access_key", "fqcn": "community.general.bitbucket_access_key", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bitbucket/bitbucket_access_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bitbucket_pipeline_known_host", "fqcn": "community.general.bitbucket_pipeline_known_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bitbucket/bitbucket_pipeline_known_host.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "community.mysql", "path": "testdata4/installed_collections_path/ansible_collections/community/mysql", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "mysql_info", "fqcn": "community.mysql.mysql_info", "collection": "community.mysql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mysql_variables", "fqcn": "community.mysql.mysql_variables", "collection": "community.mysql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_variables.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mysql_replication", "fqcn": "community.mysql.mysql_replication", "collection": "community.mysql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_replication.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mysql_query", "fqcn": "community.mysql.mysql_query", "collection": "community.mysql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_query.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mysql_role", "fqcn": "community.mysql.mysql_role", "collection": "community.mysql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_role.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mysql_db", "fqcn": "community.mysql.mysql_db", "collection": "community.mysql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_db.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mysql_user", "fqcn": "community.mysql.mysql_user", "collection": "community.mysql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_user.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "community.zabbix", "path": "testdata4/installed_collections_path/ansible_collections/community/zabbix", "playbooks": [], "roles": [{"py/object": "struct4.Role", "name": "zabbix_agent", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent", "fqcn": "community.zabbix.zabbix_agent", "collection": "community.zabbix", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"zabbix_agent_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-agent", "zabbix_sender_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-sender", "zabbix_get_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-get"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"NA\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2018\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora <= 27", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora <= 27", "when": ["ansible_distribution == \"Fedora\"", "ansible_distribution_major_version <= \"27\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora >= 27", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora >= 27", "when": ["ansible_distribution == \"Fedora\"", "ansible_distribution_major_version >= \"27\""]}, "module_options": {"zabbix_agent_distribution_major_version": 8}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "when": ["ansible_distribution == \"XCP-ng\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-agent"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Do a yum clean", "module": "shell", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "Do a yum clean", "args": {"warn": false}, "when": "yum_repo_installed.changed", "become": true, "tags": ["skip_ansible_lint"]}, "module_options": "yum clean all", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-agent", "module": "package", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": "zabbix_repo != \"other\"", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_agent_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}", "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-agent (When zabbix_repo == other)", "module": "package", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-agent (When zabbix_repo == other)", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": "zabbix_repo == \"other\"", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_agent_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-{sender,get}", "module": "package", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-{sender,get}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": ["zabbix_repo not in ['epel', 'other']", "not zabbix_agent_install_agent_only"], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_sender_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}", "{{ zabbix_get_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}", "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-{sender,get} (When zabbix_repo == other)", "module": "package", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-{sender,get} (When zabbix_repo == other)", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": ["zabbix_repo == \"other\"", "not zabbix_agent_install_agent_only"], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_sender_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}", "{{ zabbix_get_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Enable the service", "module": "service", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "api.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "tasks": [{"py/object": "struct4.Task", "name": "API | Installing the Zabbix-api package on localhost", "module": "pip", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Installing the Zabbix-api package on localhost", "register": "zabbix_api_package_installed", "until": "zabbix_api_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "(zabbix_api_create_hostgroup | bool) or (zabbix_api_create_hosts | bool)"]}, "module_options": {"name": "zabbix-api", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "API | Create host groups", "module": "zabbix_group", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Create host groups", "when": ["zabbix_api_create_hostgroup | bool"], "register": "zabbix_api_hostgroup_created", "until": "zabbix_api_hostgroup_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_group": "{{ zabbix_host_groups }}", "state": "{{ zabbix_agent_hostgroups_state }}", "validate_certs": "{{ zabbix_api_validate_certs|default(omit) }}", "timeout": "{{ zabbix_api_timeout }}"}, "executable": "zabbix_group", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_group", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "API | Create a new host or update an existing host's info", "module": "zabbix_host", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Create a new host or update an existing host's info", "when": ["not zabbix_agent2"], "register": "zabbix_api_host_created", "until": "zabbix_api_host_created is succeeded", "delegate_to": "localhost", "become": false, "changed_when": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_name": "{{ zabbix_agent_hostname }}", "host_groups": "{{ zabbix_host_groups }}", "link_templates": "{{ zabbix_agent_link_templates }}", "status": "{{ zabbix_host_status }}", "state": "{{ zabbix_agent_host_state }}", "force": "{{ zabbix_agent_host_update }}", "proxy": "{{ zabbix_agent_proxy }}", "inventory_mode": "{{ zabbix_agent_inventory_mode }}", "interfaces": "{{ zabbix_agent_interfaces }}", "visible_name": "{{ zabbix_agent_visible_hostname | default(zabbix_agent_hostname) }}", "tls_psk": "{{ zabbix_agent_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_agent_tlspskidentity | default(omit) }}", "tls_issuer": "{{ zabbix_agent_tlsservercertissuer | default(omit) }}", "tls_subject": "{{ zabbix_agent_tls_subject | default(omit) }}", "tls_accept": "{{ zabbix_agent_tls_config[zabbix_agent_tlsaccept if zabbix_agent_tlsaccept else 'unencrypted'] }}", "tls_connect": "{{ zabbix_agent_tls_config[zabbix_agent_tlsconnect if zabbix_agent_tlsconnect else 'unencrypted'] }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}", "description": "{{ zabbix_agent_description | default(omit) }}", "inventory_zabbix": "{{ zabbix_agent_inventory_zabbix | default({}) }}", "ipmi_authtype": "{{ zabbix_agent_ipmi_authtype | default(omit) }}", "ipmi_password": "{{ zabbix_agent_ipmi_password| default(omit) }}", "ipmi_privilege": "{{ zabbix_agent_ipmi_privilege | default(omit) }}", "ipmi_username": "{{ zabbix_agent_ipmi_username | default(omit) }}"}, "executable": "zabbix_host", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_host", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "API | Create a new host using agent2 or update an existing host's info", "module": "zabbix_host", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Create a new host using agent2 or update an existing host's info", "when": ["zabbix_agent2 | bool"], "register": "zabbix_api_host_created", "until": "zabbix_api_host_created is succeeded", "delegate_to": "localhost", "become": false, "changed_when": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_name": "{{ zabbix_agent2_hostname }}", "host_groups": "{{ zabbix_host_groups }}", "link_templates": "{{ zabbix_agent_link_templates }}", "status": "{{ zabbix_host_status }}", "state": "{{ zabbix_agent_host_state }}", "force": "{{ zabbix_agent_host_update }}", "proxy": "{{ zabbix_agent_proxy }}", "inventory_mode": "{{ zabbix_agent_inventory_mode }}", "interfaces": "{{ zabbix_agent_interfaces }}", "visible_name": "{{ zabbix_agent_visible_hostname | default(zabbix_agent2_hostname) }}", "tls_psk": "{{ zabbix_agent2_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_agent2_tlspskidentity | default(omit) }}", "tls_issuer": "{{ zabbix_agent2_tlsservercertissuer | default(omit) }}", "tls_subject": "{{ zabbix_agent2_tls_subject | default(omit) }}", "tls_accept": "{{ zabbix_agent_tls_config[zabbix_agent2_tlsaccept if zabbix_agent2_tlsaccept else 'unencrypted'] }}", "tls_connect": "{{ zabbix_agent_tls_config[zabbix_agent2_tlsconnect if zabbix_agent2_tlsconnect else 'unencrypted'] }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}", "description": "{{ zabbix_agent_description | default(omit) }}", "inventory_zabbix": "{{ zabbix_agent_inventory_zabbix | default({}) }}", "ipmi_authtype": "{{ zabbix_agent_ipmi_authtype | default(omit) }}", "ipmi_password": "{{ zabbix_agent_ipmi_password| default(omit) }}", "ipmi_privilege": "{{ zabbix_agent_ipmi_privilege | default(omit) }}", "ipmi_username": "{{ zabbix_agent_ipmi_username | default(omit) }}"}, "executable": "zabbix_host", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_host", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "API | Updating host configuration with macros", "module": "zabbix_hostmacro", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Updating host configuration with macros", "with_items": "{{ zabbix_agent_macros | default([]) }}", "when": ["zabbix_agent_macros is defined", "item.macro_key is defined"], "register": "zabbix_api_hostmarcro_created", "until": "zabbix_api_hostmarcro_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_name": "{{ (zabbix_agent2 | bool) | ternary(zabbix_agent2_hostname, zabbix_agent_hostname) }}", "macro_name": "{{ item.macro_key }}", "macro_value": "{{ item.macro_value }}", "macro_type": "{{ item.macro_type|default('text') }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}"}, "executable": "zabbix_hostmacro", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_hostmacro", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows | Set default architecture", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set default architecture"}, "module_options": {"windows_arch": 32}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Override architecture if 64-bit", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Override architecture if 64-bit", "when": ["ansible_architecture == \"64-bit\""]}, "module_options": {"windows_arch": 64}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set path to zabbix.exe", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set path to zabbix.exe"}, "module_options": {"zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\win{{ windows_arch }}\\zabbix_agentd.exe"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set variables specific to Zabbix >= 4", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set variables specific to Zabbix >= 4", "when": ["zabbix_version_long is version('4.0.0', '>=')"]}, "module_options": {"zabbix_win_svc_name": "Zabbix Agent", "zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\zabbix_agentd.exe", "zabbix_win_config_name": "zabbix_agentd.conf", "zabbix2_win_svc_name": "Zabbix Agent 2", "zabbix2_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\zabbix_agent2.exe", "zabbix2_win_config_name": "zabbix_agent2.conf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if Zabbix agent is present", "module": "ansible.windows.win_stat", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if Zabbix agent is present", "with_items": ["{{ zabbix_win_exe_path }}", "{{ zabbix2_win_exe_path }}"], "register": "agent_file_info"}, "module_options": {"path": "{{ item }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Get Installed Zabbix Agent Version", "module": "community.windows.win_file_version", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Get Installed Zabbix Agent Version", "register": "zabbix_win_exe_info", "when": ["item.stat.exists | bool"], "with_items": "{{ agent_file_info.results }}"}, "module_options": {"path": "{{ item.item }}"}, "executable": "community.windows.win_file_version", "executable_type": "Module", "fqcn": "community.windows.win_file_version", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set facts current zabbix agent installation", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts current zabbix agent installation", "when": ["zabbix_win_exe_info.results[0] is defined", "zabbix_win_exe_info.results[0].item.stat.exists", "zabbix_win_exe_info.results[0].item.stat.path == zabbix_win_exe_path", "zabbix_win_exe_info.results[0].win_file_version.product_version"]}, "module_options": {"zabbix_agent_1_binary_exist": true, "zabbix_agent_1_version": "zabbix_win_exe_info.results[0].win_file_version.product_version"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set facts current zabbix agent installation (agent 2)", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts current zabbix agent installation (agent 2)", "when": ["zabbix_win_exe_info.results[1] is defined", "zabbix_win_exe_info.results[1].item.stat.exists", "zabbix_win_exe_info.results[1].item.stat.path == zabbix2_win_exe_path", "zabbix_win_exe_info.results[1].win_file_version.product_version"]}, "module_options": {"zabbix_agent_2_binary_exist": true, "zabbix_agent_2_version": "zabbix_win_exe_info.results[1].win_file_version.product_version"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check Zabbix service", "module": "ansible.windows.win_service", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check Zabbix service", "register": "zabbix_service_info", "when": "item.item.stat.exists", "with_items": "{{ zabbix_win_exe_info.results }}"}, "module_options": {"name": "{{ (item.item.stat.path == zabbix_win_exe_path ) | ternary(zabbix_win_svc_name,zabbix2_win_svc_name) }}"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Set facts about current zabbix agent service state", "module": "set_fact", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts about current zabbix agent service state", "when": ["zabbix_service_info.results[0].exists is defined", "zabbix_service_info.results[0].exists", "zabbix_service_info.results[0].display_name == zabbix_win_svc_name"]}, "module_options": {"zabbix_agent_1_service_exist": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set facts about current zabbix agent service state (agent 2)", "module": "set_fact", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts about current zabbix agent service state (agent 2)", "when": ["zabbix_service_info.results[1].exists is defined", "zabbix_service_info.results[1].exists", "zabbix_service_info.results[1].display_name == zabbix2_win_svc_name"]}, "module_options": {"zabbix_agent_2_service_exist": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set fact about version change requirement", "module": "set_fact", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set fact about version change requirement", "when": "(zabbix_agent_1_binary_exist | default(false) and\n zabbix_win_exe_info.results[0].win_file_version.product_version is version(zabbix_version_long, '<>'))\nor (zabbix_agent_2_binary_exist | default(false) and\n zabbix_win_exe_info.results[1].win_file_version.product_version is version(zabbix_version_long, '<>'))\nor (zabbix_agent_1_binary_exist | default(false) and zabbix_agent2) or (zabbix_agent_2_binary_exist | default(false) and not zabbix_agent2)\n"}, "module_options": {"zabbix_agent_version_change": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Stop Zabbix agent v1", "module": "ansible.windows.win_service", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Stop Zabbix agent v1", "when": ["zabbix_agent_version_change | default(false) or zabbix_agent2", "zabbix_agent_1_service_exist | default(false)"]}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "start_mode": "auto", "state": "stopped"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Stop Zabbix agent v2", "module": "ansible.windows.win_service", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Stop Zabbix agent v2", "when": ["zabbix_agent_version_change | default(false) or not zabbix_agent2", "zabbix_agent_2_service_exist | default(false)"]}, "module_options": {"name": "{{ zabbix2_win_svc_name }}", "start_mode": "auto", "state": "stopped"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Uninstall Zabbix v1", "module": "ansible.windows.win_command", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Uninstall Zabbix v1", "when": ["zabbix_agent_version_change | default(false) or zabbix_agent2", "zabbix_agent_1_service_exist | default(false)"]}, "module_options": "\"{{ zabbix_win_exe_path }}\" --config \"{{ zabbix_win_install_dir }}\\conf\\{{ zabbix_win_config_name }}\" --uninstall", "executable": "ansible.windows.win_command", "executable_type": "Module", "fqcn": "ansible.windows.win_command", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Uninstall Zabbix v2", "module": "ansible.windows.win_command", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Uninstall Zabbix v2", "when": ["zabbix_agent_version_change | default(false) or not zabbix_agent2", "zabbix_agent_2_service_exist | default(false)"]}, "module_options": "\"{{ zabbix2_win_exe_path }}\" --config \"{{ zabbix_win_install_dir }}\\conf\\{{ zabbix2_win_config_name }}\" --uninstall", "executable": "ansible.windows.win_command", "executable_type": "Module", "fqcn": "ansible.windows.win_command", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Removing Zabbix Directory", "module": "ansible.windows.win_file", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Removing Zabbix Directory", "when": "((zabbix_agent_version_change | default(false) or zabbix_agent2) and zabbix_agent_1_binary_exist | default(false)) or ((zabbix_agent_version_change | default(false) or not zabbix_agent2) and zabbix_agent_2_binary_exist | default(false))"}, "module_options": {"path": "{{ zabbix_win_install_dir }}", "state": "absent"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Create directory structure", "module": "ansible.windows.win_file", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Create directory structure", "with_items": ["{{ zabbix_win_install_dir }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Create directory structure, includes", "module": "ansible.windows.win_file", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Create directory structure, includes", "with_items": ["{{ zabbix_agent_win_include }}"], "when": ["('.conf' not in zabbix_agent_win_include)"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Set installation settings (agent 2)", "module": "set_fact", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set installation settings (agent 2)", "when": "zabbix_agent2 | bool"}, "module_options": {"zabbix_win_package": "{{ zabbix2_win_package }}", "zabbix_win_download_link": "{{ zabbix2_win_download_link }}", "zabbix_win_exe_path": "{{ zabbix2_win_exe_path }}", "zabbix_win_config_name": "{{ zabbix2_win_config_name }}", "zabbix_win_svc_name": "{{ zabbix2_win_svc_name }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if agent file is already downloaded", "module": "ansible.windows.win_stat", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if agent file is already downloaded", "register": "file_info"}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Check if agent binaries in place", "module": "ansible.windows.win_stat", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if agent binaries in place", "register": "zabbix_windows_binaries"}, "module_options": {"path": "{{ zabbix_win_exe_path }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Download Zabbix Agent Zip file", "module": "ansible.windows.win_get_url", "index": 22, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Download Zabbix Agent Zip file", "when": ["not file_info.stat.exists", "not zabbix_windows_binaries.stat.exists"], "register": "zabbix_agent_win_download_zip", "until": "zabbix_agent_win_download_zip is succeeded", "throttle": "{{ zabbix_download_throttle | default(5) | int }}"}, "module_options": {"url": "{{ zabbix_win_download_link }}", "dest": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "url_username": "{{ zabbix_download_user | default(omit) }}", "url_password": "{{ zabbix_download_pass | default(omit) }}", "force": false, "follow_redirects": "all", "proxy_url": "{{ zabbix_https_proxy | default(None) | default(omit) }}", "validate_certs": "{{ zabbix_download_validate_certs | default(False) | bool }}", "timeout": "{{ zabbix_download_timeout | default(120) | int }}"}, "executable": "ansible.windows.win_get_url", "executable_type": "Module", "fqcn": "ansible.windows.win_get_url", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Unzip file", "module": "community.windows.win_unzip", "index": 23, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Unzip file"}, "module_options": {"src": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "dest": "{{ zabbix_win_install_dir }}", "creates": "{{ zabbix_win_exe_path }}"}, "executable": "community.windows.win_unzip", "executable_type": "Module", "fqcn": "community.windows.win_unzip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Cleanup downloaded Zabbix Agent Zip file", "module": "ansible.windows.win_file", "index": 24, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Cleanup downloaded Zabbix Agent Zip file", "when": ["zabbix_agent_win_download_zip.changed"]}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "state": "absent"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Check if windows service exist", "module": "ansible.windows.win_service", "index": 25, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if windows service exist", "register": "zabbix_windows_service"}, "module_options": {"name": "{{ zabbix_win_svc_name }}"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Register Service", "module": "ansible.windows.win_command", "index": 26, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Register Service", "when": "not zabbix_windows_service.exists"}, "module_options": "\"{{ zabbix_win_exe_path }}\" --config \"{{ zabbix_win_install_dir }}\\conf\\{{ zabbix_win_config_name }}\" --install", "executable": "ansible.windows.win_command", "executable_type": "Module", "fqcn": "ansible.windows.win_command", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery", "module": "ansible.windows.win_service", "index": 27, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery"}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "start_mode": "auto", "failure_actions": [{"type": "restart", "delay_ms": 5000}, {"type": "restart", "delay_ms": 10000}, {"type": "restart", "delay_ms": 20000}], "failure_reset_period_sec": 86400}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_agent2.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "options": {"when": "(zabbix_agent_os_family != \"Windows\") or (zabbix_agent_docker | bool)"}, "module_options": "tlspsk_auto_agent2_linux.yml", "executable": "tlspsk_auto_agent2_linux.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "options": {"when": "zabbix_agent_os_family == \"Windows\""}, "module_options": "tlspsk_auto_agent2_windows.yml", "executable": "tlspsk_auto_agent2_windows.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "options": {"name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "when": "zabbix_api_create_hosts"}, "module_options": {"zabbix_agent2_tlsaccept": "psk", "zabbix_agent2_tlsconnect": "psk"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Suse.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install zypper repo dependency", "module": "community.general.zypper", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Install zypper repo dependency", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "zabbix_agent_package_dependency", "until": "zabbix_agent_package_dependency is succeeded"}, "module_options": {"name": ["python-xml", "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['python_libxml2_package'] }}"], "state": "present"}, "executable": "community.general.zypper", "executable_type": "Module", "fqcn": "community.general.zypper", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Suse | Install basic repo file", "module": "community.general.zypper_repository", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Suse | Install basic repo file", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['url'] }}", "name": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['name'] }}", "state": "present"}, "executable": "community.general.zypper_repository", "executable_type": "Module", "fqcn": "community.general.zypper_repository", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Only install the Zabbix Agent", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Only install the Zabbix Agent", "when": ["zabbix_agent_install_agent_only"]}, "module_options": {"zabbix_agent_packages": ["{{ zabbix_agent_package }}"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install zabbix-agent", "module": "community.general.zypper", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Suse | Install zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"name": "{{ zabbix_agent_packages }}", "state": "{{ zabbix_agent_package_state }}", "disable_gpg_check": true}, "executable": "community.general.zypper", "executable_type": "Module", "fqcn": "community.general.zypper", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_windows.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Windows", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Set default path variables for Windows"}, "module_options": {"zabbix_agent_tlspskfile": "{{ zabbix_win_install_dir }}\\tls_psk_auto.secret.txt", "zabbix_agent_tlspskidentity_file": "{{ zabbix_win_install_dir }}\\tls_psk_auto.identity.txt"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Windows)", "module": "ansible.windows.win_stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Windows)", "register": "zabbix_agent_tlspskcheck"}, "module_options": {"path": "{{ zabbix_agent_tlspskfile }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "module": "ansible.windows.win_stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "register": "zabbix_agent_tlspskidentity_check"}, "module_options": {"path": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Windows)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Windows)", "register": "zabbix_agent_tlspsk_base64", "when": ["zabbix_agent_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "register": "zabbix_agent_tlspskidentity_base64", "when": "zabbix_agent_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {}, "module_options": "tlspsk_auto_common.yml", "executable": "tlspsk_auto_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file (Windows)", "module": "win_copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file (Windows)", "when": ["zabbix_agent_tlspskidentity_file is defined", "zabbix_agent_tlspskidentity is defined"], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskidentity_file }}", "content": "{{ zabbix_agent_tlspskidentity }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Windows)", "module": "win_copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Windows)", "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined", "zabbix_agent_os_family == \"Windows\""], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "Darwin.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}", "zabbix_agent2_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent2_server) }}", "zabbix_agent2_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent2_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["zabbix_agent_listeninterface", "(zabbix_agent_listeninterface not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set network interface", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}", "zabbix_agent_ip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing Agent", "module": "include_tasks", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Installing Agent", "tags": ["always"]}, "module_options": "macOS.yml", "executable": "macOS.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart mac zabbix agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "/usr/local/etc/zabbix/{{ zabbix_agent_conf }}", "owner": "root", "group": "wheel", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include }}", "owner": "root", "group": "zabbix", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create pid file directory for zabbix-agent", "module": "file", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Create pid file directory for zabbix-agent", "become": true}, "module_options": {"path": "/var/run/zabbix", "state": "directory", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if zabbix-agent service is running", "module": "shell", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Check if zabbix-agent service is running", "register": "launchctl_pid", "check_mode": false, "changed_when": false, "failed_when": "launchctl_pid.rc == 2", "become": true, "tags": ["init", "service"]}, "module_options": "set -o pipefail\nlaunchctl list | grep com.zabbix.zabbix_agentd | awk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "command", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)", "launchctl_pid.stdout == \"-\""], "tags": ["init", "service"]}, "module_options": "launchctl start com.zabbix.zabbix_agentd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "userparameter.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows | Installing user-defined userparameters", "module": "ansible.windows.win_template", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined userparameters", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_win_include }}\\{{ item.name }}.conf"}, "executable": "ansible.windows.win_template", "executable_type": "Module", "fqcn": "ansible.windows.win_template", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Installing user-defined scripts", "module": "ansible.windows.win_copy", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined scripts", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "{{ zabbix_win_install_dir }}\\scripts\\"}, "executable": "ansible.windows.win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Installing user-defined userparameters", "module": "template", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined userparameters", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_include }}/userparameter_{{ item.name }}.conf", "owner": "zabbix", "group": "zabbix", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined scripts", "module": "copy", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined scripts", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "/etc/zabbix/scripts/", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined userparameters", "module": "template", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined userparameters", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent2_include }}/userparameter_{{ item.name }}.conf", "owner": "zabbix", "group": "zabbix", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined scripts", "module": "copy", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined scripts", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "/etc/zabbix/scripts/", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "macOS.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "tasks": [{"py/object": "struct4.Task", "name": "macOS | Check installed package version", "module": "shell", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "options": {"name": "macOS | Check installed package version", "register": "pkgutil_version", "check_mode": false, "changed_when": false, "failed_when": "pkgutil_version.rc == 2"}, "module_options": "set -o pipefail\npkgutil --pkg-info 'com.zabbix.pkg.ZabbixAgent' | grep 'version:' | cut -d ' ' -f 2\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "macOS | Download the Zabbix package", "module": "get_url", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "options": {"name": "macOS | Download the Zabbix package", "when": "pkgutil_version.stdout != zabbix_version_long"}, "module_options": {"url": "{{ zabbix_mac_download_link }}", "dest": "/tmp/{{ zabbix_mac_package }}", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "macOS | Install the Zabbix package", "module": "command", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "options": {"name": "macOS | Install the Zabbix package", "become": true, "when": "pkgutil_version.stdout != zabbix_version_long", "tags": ["zabbix-agent"]}, "module_options": "installer -pkg \"/tmp/{{ zabbix_mac_package }}\" -target /", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 9}"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing gnupg", "module": "apt", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing gnupg", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "gnupg_installed", "until": "gnupg_installed is succeeded", "become": true}, "module_options": {"pkg": "gnupg", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][zabbix_agent_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Check for zabbix repositories", "module": "find", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Check for zabbix repositories", "register": "repositories", "become": true, "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"paths": "/etc/apt/sources.list.d", "patterns": "repo_zabbix_com_zabbix*.list", "excludes": "repo_zabbix_com_zabbix_{{ zabbix_underscore_version }}_ubuntu.list"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Remove unecessary zabbix repositories", "module": "file", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Remove unecessary zabbix repositories", "loop": "{{ repositories.files }}", "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\"", "zabbix_agent_src_reinstall"], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"path": "{{ item.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Debian", "module": "apt_repository", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Debian", "module": "apt_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Ubuntu Arm64", "module": "apt_repository", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Ubuntu Arm64", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu-arm64/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Ubuntu Arm64", "module": "apt_repository", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Ubuntu Arm64", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu-arm64/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Ubuntu", "module": "apt_repository", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine != \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Ubuntu", "module": "apt_repository", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine != \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_agent_apt_priority | int"], "become": true}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_agent_apt_priority | int"], "become": true}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix-agent-{{ zabbix_underscore_version }}", "content": "Package: {{ zabbix_agent_package }}\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_agent_apt_priority | int }}\n", "owner": "root", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-agent", "module": "apt", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "check_mode": false, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "{{ zabbix_agent_package }}", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-{sender,get}", "module": "apt", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-{sender,get}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "not zabbix_agent_install_agent_only"], "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "check_mode": false, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": ["{{ zabbix_sender_package }}", "{{ zabbix_get_package }}"], "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Mint | Installing zabbix-agent", "module": "apt", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Mint | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution not in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "zabbix-agent", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Enable the service", "module": "service", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "SELinux | Debian | Install policycoreutils-python", "module": "apt", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Debian | Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "when": ["zabbix_agent_os_family == \"Debian\""]}, "module_options": {"pkg": "policycoreutils-python-utils", "state": "present", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install policycoreutils-python", "module": "package", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": ["zabbix_agent_os_family == \"RedHat\"", "(zabbix_agent_distribution_major_version == \"6\" or zabbix_agent_distribution_major_version == \"7\")"], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "policycoreutils-python", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install python3-policycoreutils on RHEL8", "module": "package", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install python3-policycoreutils on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": ["zabbix_agent_os_family == \"RedHat\"", "ansible_distribution_major_version == \"8\""], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "python3-policycoreutils", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install selinux-policy-targeted", "module": "package", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install selinux-policy-targeted", "register": "zabbix_agent_selinuxpolicytargeted_installed", "until": "zabbix_agent_selinuxpolicytargeted_installed is succeeded", "when": ["zabbix_agent_os_family == \"RedHat\""], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "selinux-policy-targeted", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | Get getenforce binary", "module": "stat", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Get getenforce binary", "register": "getenforce_bin", "become": true}, "module_options": {"path": "/usr/sbin/getenforce"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | Collect getenforce output", "module": "command", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Collect getenforce output", "register": "sestatus", "when": "getenforce_bin.stat.exists", "changed_when": false, "become": true, "check_mode": false}, "module_options": "/usr/sbin/getenforce", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "when": ["getenforce_bin.stat.exists and (\"Enforcing\" in sestatus.stdout or \"Permissive\" in sestatus.stdout)"]}, "module_options": {"zabbix_selinux": "{{ true }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | Allow zabbix_agent to start (SELinux)", "module": "community.general.selinux_permissive", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Allow zabbix_agent to start (SELinux)", "become": true}, "module_options": {"name": "zabbix_agent_t", "permissive": true}, "executable": "community.general.selinux_permissive", "executable_type": "Module", "fqcn": "community.general.selinux_permissive", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | Allow zabbix to run sudo commands (SELinux)", "module": "ansible.posix.seboolean", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Allow zabbix to run sudo commands (SELinux)", "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_run_sudo|bool"], "tags": "selinux"}, "module_options": {"name": "zabbix_run_sudo", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "remove.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "tasks": [{"py/object": "struct4.Task", "name": "Pull service facts", "module": "service_facts", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Pull service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove | Make sure the \"old\" zabbix-agent service stopped", "module": "service", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Remove | Make sure the \"old\" zabbix-agent service stopped", "become": true, "when": "ansible_facts.services[\"zabbix-agent.service\"] is defined or\nansible_facts.services[\"zabbix-agent\"] is defined\n"}, "module_options": {"name": "zabbix-agent", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove | Package removal", "module": "package", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Remove | Package removal", "become": true}, "module_options": {"name": "zabbix-agent", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove | Remove the agent-include-dir", "module": "file", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Remove | Remove the agent-include-dir", "become": true}, "module_options": {"path": "{{ zabbix_agent_include }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_agent2_windows.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Windows", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Set default path variables for Windows"}, "module_options": {"zabbix_agent2_tlspskfile": "{{ zabbix_win_install_dir }}\\tls_psk_auto.secret.txt", "zabbix_agent2_tlspskidentity_file": "{{ zabbix_win_install_dir }}\\tls_psk_auto.identity.txt"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Windows)", "module": "ansible.windows.win_stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Windows)", "register": "zabbix_agent2_tlspskcheck"}, "module_options": {"path": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "module": "ansible.windows.win_stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "register": "zabbix_agent2_tlspskidentity_check"}, "module_options": {"path": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Windows)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Windows)", "register": "zabbix_agent2_tlspsk_base64", "when": ["zabbix_agent2_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "register": "zabbix_agent2_tlspskidentity_base64", "when": "zabbix_agent2_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {}, "module_options": "tlspsk_auto_agent2_common.yml", "executable": "tlspsk_auto_agent2_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | AutoPSK | Template TLS PSK identity in file (Windows)", "module": "win_copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "Windows | AutoPSK | Template TLS PSK identity in file (Windows)", "when": ["zabbix_agent2_tlspskidentity_file is defined", "zabbix_agent2_tlspskidentity is defined"], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskidentity_file }}", "content": "{{ zabbix_agent2_tlspskidentity }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Windows)", "module": "win_copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Windows)", "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspsk_secret is defined"], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskfile }}", "content": "{{ zabbix_agent2_tlspsk_secret }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml\", \"index\": 1}"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_agent2_common.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Save existing TLS PSK secret", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Save existing TLS PSK secret", "when": "zabbix_agent2_tlspskcheck.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspsk_read": "{{ zabbix_agent2_tlspsk_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK secret", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK secret", "when": ["zabbix_agent2_tlspskcheck.stat.exists", "zabbix_agent2_tlspsk_read|length >= 32"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspsk_secret": "{{ zabbix_agent2_tlspsk_read }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK secret", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK secret", "when": ["not zabbix_agent2_tlspskcheck.stat.exists", "(zabbix_agent2_tlspsk_read is not defined) or (zabbix_agent2_tlspsk_read|length < 32)"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspsk_secret": "{{ lookup('password', '/dev/null chars=hexdigits length=64') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK identity", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK identity", "when": ["zabbix_agent2_tlspskidentity_check.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspskidentity": "{{ zabbix_agent2_tlspskidentity_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK identity", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK identity", "when": "not zabbix_agent2_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspskidentity": "{{\n  zabbix_agent_visible_hostname\n  | default(((zabbix_agent2 == True) | ternary(zabbix_agent2_hostname, zabbix_agent_hostname)))\n  + '_'\n  + lookup('password', '/dev/null chars=hexdigits length=4')\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml\", \"index\": 5}"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "firewall.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "tasks": [{"py/object": "struct4.Task", "name": "Firewall | Configure IPTables (zabbix_agent_listenport)", "module": "iptables", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure IPTables (zabbix_agent_listenport)", "become": true, "when": ["zabbix_agent_firewall_enable | bool"]}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Firewall | Configure IPTables (zabbix_agent_jmx_listenport)", "module": "iptables", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure IPTables (zabbix_agent_jmx_listenport)", "become": true, "when": ["zabbix_agent_firewall_enable | bool", "zabbix_agent_jmx_listenport | bool"]}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Firewall | Configure firewalld (zabbix_agent_listenport)", "module": "ansible.posix.firewalld", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure firewalld (zabbix_agent_listenport)", "become": true, "when": ["zabbix_agent_firewalld_enable | bool"], "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "ansible.posix.firewalld", "executable_type": "Module", "fqcn": "ansible.posix.firewalld", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Firewall | Configure firewalld (zabbix_agent_jmx_listenport)", "module": "ansible.posix.firewalld", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure firewalld (zabbix_agent_jmx_listenport)", "become": true, "when": ["zabbix_agent_firewalld_enable | bool", "zabbix_agent_jmx_listenport | bool"], "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_jmx_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "ansible.posix.firewalld", "executable_type": "Module", "fqcn": "ansible.posix.firewalld", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined", "not (zabbix_agent_dont_detect_ip)"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}", "zabbix_agent2_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent2_server) }}", "zabbix_agent2_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent2_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["(zabbix_agent_listeninterface)", "(zabbix_agent_listeninterface not in ansible_interfaces)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set network interface", "when": ["(zabbix_agent_listeninterface)", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["(zabbix_agent_listeninterface)", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not (zabbix_agent_listenip)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding zabbix group", "module": "group", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Adding zabbix group", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "state": "present", "gid": "{{ zabbix_agent_docker_user_gid | default(omit) }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding zabbix user", "module": "user", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Adding zabbix user", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "group": "zabbix", "state": "present", "create_home": false, "home": "/etc/zabbix", "uid": "{{ zabbix_agent_docker_user_uid | default(omit) }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart zabbix-agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "{{ 'zabbix_agentd.conf.j2' if not zabbix_agent2 else 'zabbix_agent2.conf.j2' }}", "dest": "/etc/zabbix/{{ zabbix_agent_conf if not zabbix_agent2 else zabbix_agent2_conf }}", "owner": "root", "group": "root", "mode": "{{ zabbix_agent_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspskfile", "not (zabbix_agent2 | bool)"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist (zabbix-agent2)", "module": "file", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Create directory for PSK file if not exist (zabbix-agent2)", "become": true, "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspskfile", "zabbix_agent2 | bool"]}, "module_options": {"path": "{{ zabbix_agent2_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspskfile", "zabbix_agent_tlspsk_secret is defined", "not (zabbix_agent2 | bool)"], "notify": ["restart zabbix-agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File (zabbix-agent2)", "module": "copy", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Place TLS PSK File (zabbix-agent2)", "become": true, "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspskfile", "zabbix_agent2_tlspsk_secret is defined", "zabbix_agent2 | bool"], "notify": ["restart zabbix-agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskfile }}", "content": "{{ zabbix_agent2_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include if not zabbix_agent2 else zabbix_agent2_include }}", "owner": "root", "group": "zabbix", "mode": "{{ zabbix_agent_include_mode if not zabbix_agent2 else zabbix_agent2_include_mode }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure the firewall(d|iptables)", "module": "include", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Configure the firewall(d|iptables)", "when": ["(zabbix_agent_firewall_enable | bool) or (zabbix_agent_firewalld_enable | bool)"]}, "module_options": "firewall.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove zabbix-agent installation when zabbix-agent2 is used.", "module": "include", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Remove zabbix-agent installation when zabbix-agent2 is used.", "when": ["zabbix_agent2 | bool", "zabbix_agent_package_remove"]}, "module_options": "remove.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "service", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_agent2_linux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables (Linux)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Set default path variables (Linux)"}, "module_options": {"zabbix_agent2_tlspskfile": "/etc/zabbix/tls_psk_auto.secret", "zabbix_agent2_tlspskidentity_file": "/etc/zabbix/tls_psk_auto.identity"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Linux)", "module": "stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Linux)", "register": "zabbix_agent2_tlspskcheck", "become": true}, "module_options": {"path": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "module": "stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "register": "zabbix_agent2_tlspskidentity_check", "become": true}, "module_options": {"path": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Linux)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Linux)", "register": "zabbix_agent2_tlspsk_base64", "become": true, "when": ["zabbix_agent2_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "register": "zabbix_agent2_tlspskidentity_base64", "become": true, "when": "zabbix_agent2_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {}, "module_options": "tlspsk_auto_agent2_common.yml", "executable": "tlspsk_auto_agent2_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file (Linux)", "module": "copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file (Linux)", "become": true, "when": ["zabbix_agent2_tlspskidentity_file is defined", "zabbix_agent2_tlspskidentity is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskidentity_file }}", "content": "{{ zabbix_agent2_tlspskidentity }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Linux)", "module": "copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Linux)", "become": true, "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspsk_secret is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskfile }}", "content": "{{ zabbix_agent2_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml\", \"index\": 0}"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_common.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Save existing TLS PSK secret", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Save existing TLS PSK secret", "when": "zabbix_agent_tlspskcheck.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspsk_read": "{{ zabbix_agent_tlspsk_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK secret", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK secret", "when": ["zabbix_agent_tlspskcheck.stat.exists", "zabbix_agent_tlspsk_read|length >= 32"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ zabbix_agent_tlspsk_read }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK secret", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK secret", "when": ["(not zabbix_agent_tlspskcheck.stat.exists) or (zabbix_agent_tlspsk_read|length < 32)"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ lookup('password', '/dev/null chars=hexdigits length=64') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK identity", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK identity", "when": ["zabbix_agent_tlspskidentity_check.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspskidentity": "{{ zabbix_agent_tlspskidentity_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK identity", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK identity", "when": "not zabbix_agent_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspskidentity": "{{\n  zabbix_agent_visible_hostname\n  | default(((zabbix_agent2 != True) | ternary(zabbix_agent_hostname, zabbix_agent_hostname)))\n  + '_'\n  + lookup('password', '/dev/null chars=hexdigits length=4')\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml\", \"index\": 5}"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "options": {"when": "(zabbix_agent_os_family != \"Windows\") or (zabbix_agent_docker | bool)"}, "module_options": "tlspsk_auto_linux.yml", "executable": "tlspsk_auto_linux.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "options": {"when": "zabbix_agent_os_family == \"Windows\""}, "module_options": "tlspsk_auto_windows.yml", "executable": "tlspsk_auto_windows.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "when": "zabbix_api_create_hosts"}, "module_options": {"zabbix_agent_tlsaccept": "psk", "zabbix_agent_tlsconnect": "psk"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows_conf.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_ip_addresses' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_ip_addresses'][0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Configure zabbix-agent", "module": "ansible.windows.win_template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Configure zabbix-agent", "notify": "restart win zabbix agent"}, "module_options": {"src": "{{ zabbix_win_config_name }}.j2", "dest": "{{ zabbix_win_install_dir }}\\conf\\{{ zabbix_win_config_name }}"}, "executable": "ansible.windows.win_template", "executable_type": "Module", "fqcn": "ansible.windows.win_template", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery", "module": "ansible.windows.win_service", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery"}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "start_mode": "auto", "state": "started", "failure_actions": [{"type": "restart", "delay_ms": 5000}, {"type": "restart", "delay_ms": 10000}, {"type": "restart", "delay_ms": 20000}], "failure_reset_period_sec": 86400}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Check firewall service", "module": "ansible.windows.win_service_info", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Check firewall service", "register": "firewall_info", "when": "zabbix_win_firewall_management"}, "module_options": {"name": "MpsSvc"}, "executable": "ansible.windows.win_service_info", "executable_type": "Module", "fqcn": "ansible.windows.win_service_info", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Firewall rule", "module": "community.windows.win_firewall_rule", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Firewall rule", "when": ["zabbix_win_firewall_management", "firewall_info.services[0].state == 'started' or firewall_info.services[0].start_mode == 'auto'"]}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "localport": "{{ zabbix_agent_listenport }}", "action": "allow", "direction": "in", "protocol": "tcp", "state": "present", "enabled": true}, "executable": "community.windows.win_firewall_rule", "executable_type": "Module", "fqcn": "community.windows.win_firewall_rule", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "Docker.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create volume mount string", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "options": {"name": "Create volume mount string", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"volume_mount": "{{ zabbix_agent_tlspskfile }}:/var/lib/zabbix/enc/tlspskfile", "tls_key": {"ZBX_TLSPSKFILE": "tlspskfile"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add zabbix_agent_tlspskfile to volume mount", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "options": {"name": "Add zabbix_agent_tlspskfile to volume mount", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"zabbix_agent_docker_volumes": "{{ zabbix_agent_docker_volumes + [ volume_mount ] }}", "zabbix_agent_docker_env": "{{ zabbix_agent_docker_env | combine(tls_key) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Zabbix Docker container is running", "module": "community.docker.docker_container", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "options": {"name": "Ensure Zabbix Docker container is running", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true}, "module_options": {"name": "{{ zabbix_agent_docker_name }}", "image": "{{ zabbix_agent_docker_image }}:{{ zabbix_agent_docker_image_tag }}", "state": "{{ zabbix_agent_docker_state }}", "restart_policy": "{{ zabbix_agent_docker_restart_policy }}", "network_mode": "{{ zabbix_agent_docker_network_mode }}", "published_ports": "{{ zabbix_agent_docker_ports }}", "privileged": "{{ zabbix_agent_docker_privileged }}", "security_opts": "{{ zabbix_agent_docker_security_opts }}", "volumes": "{{ zabbix_agent_docker_volumes }}", "env": "{{ zabbix_agent_docker_env }}"}, "executable": "community.docker.docker_container", "executable_type": "Module", "fqcn": "community.docker.docker_container", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_linux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables (Linux)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Set default path variables (Linux)"}, "module_options": {"zabbix_agent_tlspskfile": "/etc/zabbix/tls_psk_auto.secret", "zabbix_agent_tlspskidentity_file": "/etc/zabbix/tls_psk_auto.identity"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Linux)", "module": "stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Linux)", "register": "zabbix_agent_tlspskcheck", "become": true}, "module_options": {"path": "{{ zabbix_agent_tlspskfile }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "module": "stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "register": "zabbix_agent_tlspskidentity_check", "become": true}, "module_options": {"path": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Linux)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Linux)", "register": "zabbix_agent_tlspsk_base64", "become": true, "when": ["zabbix_agent_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "register": "zabbix_agent_tlspskidentity_base64", "become": true, "when": "zabbix_agent_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {}, "module_options": "tlspsk_auto_common.yml", "executable": "tlspsk_auto_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file (Linux)", "module": "copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file (Linux)", "become": true, "when": ["zabbix_agent_tlspskidentity_file is defined", "zabbix_agent_tlspskidentity is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskidentity_file }}", "content": "{{ zabbix_agent_tlspskidentity }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Linux)", "module": "copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Linux)", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml\", \"index\": 0}"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set variables specific for Zabbix Agent 2", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Set variables specific for Zabbix Agent 2", "when": ["zabbix_agent2 is defined", "zabbix_agent2"], "tags": ["always"]}, "module_options": {"zabbix_agent_service": "zabbix-agent2", "zabbix_agent_package": "zabbix-agent2"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reset zabbix_agent_version for Ubuntu 22.04 to 6.0", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Reset zabbix_agent_version for Ubuntu 22.04 to 6.0", "when": ["ansible_distribution_release == \"jammy\"", "( zabbix_agent_version is version ('6.0','lt') or zabbix_version is version ('6.0','lt') )"]}, "module_options": {"zabbix_version": 6.0, "zabbix_agent_version": 6.0}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for linuxmint - distribution release", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - distribution release", "when": ["ansible_os_family == \"Linuxmint\"", "ansible_distribution_release == \"sonya\" or ansible_distribution_release == \"serena\""], "tags": ["always"]}, "module_options": {"zabbix_agent_distribution_release": "xenial"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for linuxmint - family", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - family", "when": ["ansible_os_family == \"Linuxmint\""], "tags": ["always"]}, "module_options": {"zabbix_agent_os_family": "Debian"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for XCP-ng - family", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Fix facts for XCP-ng - family", "when": ["ansible_os_family == \"XCP-ng\""]}, "module_options": {"zabbix_agent_os_family": "RedHat"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": ["always"]}, "module_options": "{{ zabbix_agent_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["not (zabbix_agent_docker | bool)"], "tags": ["always"]}, "module_options": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install local python-netaddr package", "module": "pip", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Install local python-netaddr package", "register": "zabbix_python_netaddr_package_installed", "until": "zabbix_python_netaddr_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "ansible_all_ipv4_addresses is defined or (zabbix_agent_ip is not defined and total_private_ip_addresses is defined)"]}, "module_options": {"name": "netaddr", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Encrypt with TLS PSK auto management", "module": "include_tasks", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Encrypt with TLS PSK auto management", "when": ["not zabbix_agent2", "zabbix_agent_tlspsk_auto | bool", "(zabbix_agent_tlspskfile is undefined) or (zabbix_agent_tlspskfile | length == '0')", "(zabbix_agent_tlspsk_secret is undefined) or (zabbix_agent_tlspsk_secret | length == '0')"]}, "module_options": "tlspsk_auto.yml", "executable": "tlspsk_auto.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Encrypt with TLS PSK auto management", "module": "include_tasks", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Encrypt with TLS PSK auto management", "when": ["zabbix_agent2 | bool", "zabbix_agent2_tlspsk_auto | bool", "(zabbix_agent2_tlspskfile is undefined) or (zabbix_agent2_tlspskfile | length == '0')", "(zabbix_agent2_tlspsk_secret is undefined) or (zabbix_agent2_tlspsk_secret | length == '0')"]}, "module_options": "tlspsk_auto_agent2.yml", "executable": "tlspsk_auto_agent2.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Agent", "module": "include_tasks", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Configure Agent", "when": ["zabbix_agent_os_family == \"Windows\""], "tags": ["always"]}, "module_options": "Windows_conf.yml", "executable": "Windows_conf.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Agent", "module": "include_tasks", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Configure Agent", "when": ["(zabbix_agent_os_family != \"Windows\" and zabbix_agent_os_family != \"Darwin\") or (zabbix_agent_docker | bool)"], "tags": ["always"]}, "module_options": "Linux.yml", "executable": "Linux.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run the API calls to Zabbix Server", "module": "include_tasks", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Run the API calls to Zabbix Server", "when": ["(zabbix_api_create_hostgroup | bool) or (zabbix_api_create_hosts | bool)"], "tags": ["api"]}, "module_options": "api.yml", "executable": "api.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Including userparameters", "module": "include_tasks", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Including userparameters", "when": "zabbix_agent_userparameters|length > 0", "tags": ["zabbix-agent", "userparameter"]}, "module_options": "userparameter.yml", "executable": "userparameter.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": ["testdata4/scm_repo/site.yml"]}, {"py/object": "struct4.Role", "name": "zabbix_javagateway", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway", "fqcn": "community.zabbix.zabbix_javagateway", "collection": "community.zabbix", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-java-gateway", "module": "package", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-java-gateway", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_java_gateway_install", "until": "zabbix_java_gateway_install is succeeded", "become": true}, "module_options": {"pkg": "zabbix-java-gateway", "state": "{{ zabbix_javagateway_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "zabbix_javagateway", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some variables", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Set some variables"}, "module_options": {"zabbix_short_version": "{{ zabbix_javagateway_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "become": true}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Debian", "module": "apt_repository", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Debian", "become": true, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/debian/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Debian", "module": "apt_repository", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Debian", "become": true, "when": ["ansible_distribution == \"Debian\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/debian/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu-arm64/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine != \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu-arm64/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-java-gateway", "module": "apt", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-java-gateway", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_java_gateway_install", "until": "zabbix_java_gateway_install is succeeded", "become": true}, "module_options": {"pkg": "zabbix-java-gateway", "state": "{{ zabbix_javagateway_package_state }}", "update_cache": true, "force": true, "cache_valid_time": 3600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure Zabbix Java Gateway is not yet running", "module": "systemd", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Make sure Zabbix Java Gateway is not yet running", "when": ["zabbix_java_gateway_install.changed"]}, "module_options": {"name": "zabbix-java-gateway", "state": "stopped", "enabled": true, "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "zabbix_javagateway", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"RedHat\""]}, "module_options": "RedHat.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"Debian\""]}, "module_options": "Debian.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place systemd unit file", "module": "copy", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Place systemd unit file", "register": "systemd_state", "when": ["zabbix_version is version('5.4', '<')"]}, "module_options": {"src": "systemd.service", "dest": "/etc/systemd/system/zabbix-java-gateway.service", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd", "module": "shell", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Reload systemd", "when": ["zabbix_version is version('5.4', '<')", "systemd_state.changed"], "tags": ["skip_ansible_lint"]}, "module_options": "systemctl daemon-reload", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-proxy", "module": "template", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Configure zabbix-proxy", "notify": ["zabbix-java-gateway restarted"]}, "module_options": {"src": "zabbix_java_gateway.conf.j2", "dest": "/etc/zabbix/zabbix_java_gateway.conf", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_java_gateway_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure Zabbix Java Gateway is running", "module": "systemd", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Make sure Zabbix Java Gateway is running"}, "module_options": {"name": "zabbix-java-gateway", "state": "started", "enabled": true, "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "zabbix_javagateway", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "zabbix_proxy", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy", "fqcn": "community.zabbix.zabbix_proxy", "collection": "community.zabbix", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-proxy", "init"]}, "module_options": {"zabbix_proxy_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-proxy"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Define package with version", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Define package with version", "when": ["zabbix_proxy_rhel_version is defined", "zabbix_repo != \"epel\""]}, "module_options": {"zabbix_proxy_package": "zabbix{{ zabbix_short_version }}-proxy-{{ zabbix_proxy_database }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Define package without version", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Define package without version", "when": ["zabbix_proxy_rhel_version is not defined", "zabbix_repo != \"epel\""]}, "module_options": {"zabbix_proxy_package": "zabbix-proxy-{{ zabbix_proxy_database }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set some facts Zabbix < 3.0", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts Zabbix < 3.0", "when": ["zabbix_version is version('3.0', '<')"], "tags": ["zabbix-proxy"]}, "module_options": {"apache_log": "httpd", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}-{{ zabbix_version }}*/create"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 3.0", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 3.0", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-proxy"]}, "module_options": {"apache_log": "httpd", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}-{{ zabbix_version }}*"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 5.4", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_proxy_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 3.0 and RedHat 8", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 3.0 and RedHat 8", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')", "ansible_distribution_major_version == '8'"], "tags": ["zabbix-proxy"]}, "module_options": {"apache_log": "httpd", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set some facts EPEL", "module": "set_fact", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts EPEL", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/zabbix-{{ zabbix_proxy_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' group (EPEL)", "module": "group", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' group (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_proxy_groupname | default('zabbix') }}", "gid": "{{ zabbix_proxy_groupid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' user (EPEL)", "module": "user", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' user (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_proxy_username | default('zabbix') }}", "comment": "Zabbix Monitoring System", "uid": "{{ zabbix_proxy_userid | default(omit) }}", "group": "zabbix"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure old file is absent", "module": "file", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "Make sure old file is absent", "become": true}, "module_options": {"path": "/etc/yum.repos.d/zabbix-supported.repo", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": ["zabbix_repo == \"zabbix\""], "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-agent"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "module": "package", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "when": "zabbix_repo != \"other\"", "register": "is_zabbix_proxy_package_installed", "until": "is_zabbix_proxy_package_installed is succeeded"}, "module_options": {"pkg": "{{ zabbix_proxy_package }}-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }} (When zabbix_repo == other)", "module": "package", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }} (When zabbix_repo == other)", "become": true, "when": "zabbix_repo == \"other\"", "register": "is_zabbix_proxy_package_installed", "until": "is_zabbix_proxy_package_installed is succeeded"}, "module_options": {"pkg": "{{ zabbix_proxy_package }}-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts", "module": "package", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_sql_package_installed", "until": "zabbix_proxy_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo != \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "module": "package", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "register": "zabbix_proxy_sql_package_installed", "until": "zabbix_proxy_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo == \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Ansible PostgreSQL module dependencies", "module": "yum", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible PostgreSQL module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'pgsql'", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-proxy", "init"]}, "module_options": {"name": "python-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Ansible module dependencies on RHEL8", "module": "yum", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible module dependencies on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation", "zabbix_proxy_database == 'pgsql'", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": "python3-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL7", "module": "yum", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL7", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'mysql'", "ansible_distribution_major_version == '7'"], "tags": ["zabbix-proxy", "init"]}, "module_options": {"name": ["mariadb", "MySQL-python"], "state": "installed"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client packages RHEL8", "module": "yum", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client packages RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'mysql'", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-proxy", "init"]}, "module_options": {"name": ["mysql", "python3-PyMySQL"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL5 - 6", "module": "yum", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL5 - 6", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'mysql'", "ansible_distribution_major_version == \"6\" or ansible_distribution_major_version == \"5\"", "zabbix_proxy_install_database_client"], "tags": ["zabbix-proxy", "init", "database"]}, "module_options": {"name": ["mysql", "MySQL-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install PostgreSQL client package", "module": "yum", "index": 22, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install PostgreSQL client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'pgsql'", "zabbix_proxy_install_database_client"], "tags": ["zabbix-proxy", "init", "database"]}, "module_options": {"name": "postgresql", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install sqlite3", "module": "yum", "index": 23, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install sqlite3", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'sqlite3'"], "tags": ["zabbix-proxy"]}, "module_options": {"name": ["sqlite"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 24, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "postgresql.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_proxy_dbhost if (zabbix_proxy_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["not zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database", "module": "community.postgresql.postgresql_db", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database"}, "module_options": {"name": "{{ zabbix_proxy_dbname }}", "port": "{{ zabbix_proxy_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database user", "module": "postgresql_user", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database user"}, "module_options": {"db": "{{ zabbix_proxy_dbname }}", "name": "{{ zabbix_proxy_dbuser }}", "password": "md5{{ (zabbix_proxy_dbpassword + zabbix_proxy_dbuser)|hash('md5') }}", "port": "{{ zabbix_proxy_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database", "module": "community.postgresql.postgresql_db", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database"}, "module_options": {"login_host": "{{ zabbix_proxy_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_pgsql_login_password | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_pgsql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_proxy_dbname }}", "port": "{{ zabbix_proxy_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database user", "module": "postgresql_user", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database user"}, "module_options": {"login_host": "{{ zabbix_proxy_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_pgsql_login_password | default(omit) }}", "db": "{{ zabbix_proxy_dbname }}", "name": "{{ zabbix_proxy_dbuser }}", "password": "md5{{ (zabbix_proxy_dbpassword + zabbix_proxy_dbuser)|hash('md5') }}", "port": "{{ zabbix_proxy_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Importing schema file", "module": "shell", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing schema file", "args": {"creates": "/etc/zabbix/schema.done", "executable": "/bin/bash"}, "environment": {"PGPASSWORD": "{{ zabbix_proxy_dbpassword }}"}, "when": ["zabbix_database_creation"]}, "module_options": "set -euxo pipefail\nFILE={{ 'schema.sql' if zabbix_version is version('6.0', '<') else 'proxy.sql' }}\ncd {{ datafiles_path }}\nif [ -f ${FILE}.gz ]\n  then zcat ${FILE}.gz > /tmp/schema.sql\nelse\n  cp ${FILE} /tmp/schema.sql\nfi\ncat /tmp/schema.sql | psql -h '{{ zabbix_proxy_dbhost }}' -U '{{ zabbix_proxy_dbuser }}' \\\n-d '{{ zabbix_proxy_dbname }}'\ntouch /etc/zabbix/schema.done\nrm -f /tmp/schema.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "mysql.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_proxy_dbhost if (zabbix_proxy_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["not zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "when": "zabbix_proxy_real_dbhost | default(false)"}, "module_options": {"delegated_dbhost": "{{ zabbix_proxy_real_dbhost }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Create database", "module": "community.mysql.mysql_db", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Create database", "when": "zabbix_database_creation", "register": "zabbix_database_created", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database", "skip_ansible_lint"]}, "module_options": {"name": "{{ zabbix_proxy_dbname }}", "encoding": "{{ zabbix_proxy_dbencoding }}", "collation": "{{ zabbix_proxy_dbcollation }}", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}", "state": "present"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Create database user", "module": "community.mysql.mysql_user", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Create database user", "when": "zabbix_database_creation", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_proxy_dbuser }}", "password": "{{ zabbix_proxy_dbpassword }}", "priv": "{{ zabbix_proxy_dbname }}.*:ALL", "host": "{{ zabbix_proxy_privileged_host }}", "state": "present"}, "executable": "community.mysql.mysql_user", "executable_type": "Module", "fqcn": "community.mysql.mysql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get the file for schema.sql", "module": "shell", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Get the file for schema.sql", "changed_when": false, "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\""], "register": "ls_output_create", "tags": ["zabbix-proxy", "database"]}, "module_options": "ls -1 {{ datafiles_path }}/{{ 'schema' if zabbix_version is version('6.0', '<') else 'proxy' }}.sq*", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if we have done files", "module": "stat", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Check if we have done files", "register": "done_file", "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\""]}, "module_options": {"path": "/etc/zabbix/schema.done"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Get version_comment", "module": "community.mysql.mysql_variables", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Get version_comment", "delegate_to": "{{ delegated_dbhost }}", "register": "install_mysql_version", "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "version", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Get current value for innodb_default_row_format", "module": "community.mysql.mysql_variables", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Get current value for innodb_default_row_format", "delegate_to": "{{ delegated_dbhost }}", "register": "mysql_innodb_default_row_format", "when": ["install_mysql_version.msg is version('5.6', '>=')"], "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "innodb_default_row_format", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Set innodb_default_row_format to dynamic", "module": "community.mysql.mysql_variables", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Set innodb_default_row_format to dynamic", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "not done_file.stat.exists", "install_mysql_version.msg is version('5.6', '>=')", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "dynamic", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Create database and import file", "module": "community.mysql.mysql_db", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Create database and import file", "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\"", "not done_file.stat.exists"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_proxy_dbname }}", "encoding": "{{ zabbix_proxy_dbencoding }}", "collation": "{{ zabbix_proxy_dbcollation }}", "state": "import", "target": "{{ ls_output_create.stdout }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Revert innodb_default_row_format to previous value", "module": "community.mysql.mysql_variables", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Revert innodb_default_row_format to previous value", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "not done_file.stat.exists", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "{{ mysql_innodb_default_row_format.msg }}", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create done file", "module": "file", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Create done file", "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\"", "not done_file.stat.exists"]}, "module_options": {"path": "/etc/zabbix/schema.done", "state": "touch", "mode": "0644"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "sqlite3.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "tasks": [{"py/object": "struct4.Task", "name": "Sqlite3 | Default Database Path", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Sqlite3 | Default Database Path", "when": ["zabbix_proxy_dbname == \"zabbix_proxy\""]}, "module_options": {"zabbix_proxy_dbname": "/var/lib/zabbix/zabbix_proxy.db"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sqlite3 | Create database", "module": "file", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Sqlite3 | Create database", "become": true, "when": ["zabbix_database_creation"]}, "module_options": {"name": "{{ zabbix_proxy_dbname | dirname }}", "mode": 484, "owner": "zabbix", "group": "zabbix", "seuser": "system_u", "serole": "object_r", "setype": "zabbix_var_lib_t", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sqlite3 | Importing schema file", "module": "shell", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Sqlite3 | Importing schema file", "become": true, "become_user": "zabbix", "args": {"creates": "{{ zabbix_proxy_dbname }}", "executable": "/bin/bash"}, "environment": {"PGPASSWORD": "{{ zabbix_proxy_dbpassword }}"}, "when": ["zabbix_database_creation"]}, "module_options": "set -o pipefail\nFILE={{ 'schema.sql' if zabbix_version is version('6.0', '<') else 'proxy.sql' }}\ncd {{ datafiles_path }}\nif [ -f ${FILE}.gz ]\n  then zcat ${FILE}.gz > /tmp/schema.sql\nelse\n  cp ${FILE} /tmp/schema.sql\nfi\ncat /tmp/schema.sql | sqlite3 {{ zabbix_proxy_dbname }}\nrm -f /tmp/schema.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix zabbix db file permission (SELinux)", "module": "file", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Fix zabbix db file permission (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "zabbix_database_creation"], "tags": "selinux"}, "module_options": {"path": "{{ zabbix_proxy_dbname }}", "state": "file", "seuser": "system_u", "serole": "object_r", "setype": "zabbix_var_lib_t"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_python_prefix": "python{% if ansible_python_version is version('3', '>=') %}3{% endif %}", "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Set some facts", "when": ["zabbix_version is version_compare('3.0', '<')"], "tags": ["zabbix-proxy", "init", "config"]}, "module_options": {"apache_log": "apache2", "datafiles_path": "/usr/share/zabbix-proxy-{{ zabbix_proxy_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-proxy", "init", "config"]}, "module_options": {"apache_log": "apache2", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 5.4", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_proxy_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing gnupg", "module": "apt", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing gnupg", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "gnupg_installed", "until": "gnupg_installed is succeeded", "become": true}, "module_options": {"pkg": "gnupg", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-proxy", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "when": "zabbix_repo == \"zabbix\"", "become": true, "with_items": ["deb-src", "deb"], "tags": ["zabbix-proxy", "init"]}, "module_options": {"repo": "{{ item }} http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Select Zabbix proxy version", "module": "set_fact", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Select Zabbix proxy version", "when": ["ansible_distribution == \"Debian\"", "zabbix_proxy_debian_version is defined"]}, "module_options": {"zabbix_proxy_deb_version": "{{ zabbix_proxy_debian_version }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ubuntu | Select Zabbix proxy version", "module": "set_fact", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Ubuntu | Select Zabbix proxy version", "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_proxy_ubuntu_version is defined"]}, "module_options": {"zabbix_proxy_deb_version": "{{ zabbix_proxy_ubuntu_version }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Define package with version", "module": "set_fact", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Define package with version", "when": "zabbix_proxy_deb_version is defined"}, "module_options": {"deb_pkg": "zabbix-proxy-{{ zabbix_proxy_database }}={{ zabbix_proxy_deb_version }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Define package without version", "module": "set_fact", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Define package without version", "when": "zabbix_proxy_deb_version is not defined"}, "module_options": {"deb_pkg": "zabbix-proxy-{{ zabbix_proxy_database }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_proxy_apt_priority | int"], "become": true}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_proxy_apt_priority | int"], "become": true}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix-proxy-{{ zabbix_proxy_database }}", "content": "Package: zabbix-proxy-{{ zabbix_proxy_database }}\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_proxy_apt_priority }}\n", "owner": "root", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "module": "apt", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "is_zabbix_proxy_package_installed", "until": "is_zabbix_proxy_package_installed is succeeded", "become": true}, "module_options": {"pkg": "{{ deb_pkg }}", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "{{ zabbix_proxy_package_state }}", "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-sql-scripts", "module": "apt", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_package_sql_installed", "until": "zabbix_proxy_package_sql_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')"], "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"pkg": "zabbix-sql-scripts", "state": "{{ zabbix_proxy_package_state }}", "update_cache": true, "cache_valid_time": 0, "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Ansible module dependencies", "module": "apt", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install Ansible module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation"], "tags": ["zabbix-server", "init"]}, "module_options": {"name": "{{ zabbix_python_prefix }}-psycopg2", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Mysql Client package", "module": "apt", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'mysql'", "zabbix_proxy_install_database_client", "ansible_distribution_release != \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["mysql-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian 10 | Install Mysql Client package", "module": "apt", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian 10 | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'mysql'", "zabbix_proxy_install_database_client", "ansible_distribution_release == \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["mariadb-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install PostgreSQL Client package", "module": "apt", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install PostgreSQL Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "become": true, "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'pgsql'", "zabbix_proxy_install_database_client"], "tags": ["zabbix-proxy", "init", "database"]}, "module_options": {"name": "postgresql-client", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install sqlite3", "module": "apt", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install sqlite3", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'sqlite3'"], "tags": ["zabbix-proxy"]}, "module_options": {"name": "sqlite3", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues", "module": "yum", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-proxy"]}, "module_options": {"name": ["policycoreutils-python", "libsemanage-python", "checkpolicy"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "module": "yum", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-proxy"]}, "module_options": {"name": ["policycoreutils", "checkpolicy", "python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_proxy_alerter.sock", "module": "script", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_proxy_alerter.sock", "args": {"creates": "/etc/selinux/targeted/active/modules/400/zabbix_proxy_add/cil"}, "become": true, "when": ["ansible_os_family == \"RedHat\""], "tags": ["zabbix-proxy"]}, "module_options": {"cmd": "files/install_semodule.bsx"}, "executable": "script", "executable_type": "Module", "fqcn": "ansible.builtin.script", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Replace Sangoma with RedHat task", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Replace Sangoma with RedHat task", "when": ["ansible_os_family == 'Sangoma'"]}, "module_options": {"ansible_os_family": "RedHat"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default ip address for zabbix_proxy_ip", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Set default ip address for zabbix_proxy_ip", "when": ["zabbix_proxy_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_proxy_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set OS dependent variables", "module": "include_vars", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Set OS dependent variables", "with_first_found": ["../vars/{{ ansible_distribution }}.yml", "../vars/main.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"RedHat\""]}, "module_options": "RedHat.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"Debian\""]}, "module_options": "Debian.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing the database", "module": "include", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Installing the database"}, "module_options": "{{ zabbix_proxy_database_long }}.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-proxy", "module": "file", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Create include dir zabbix-proxy", "become": true}, "module_options": {"path": "{{ zabbix_proxy_include }}", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_proxy_include_mode }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create module dir zabbix-proxy", "module": "file", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Create module dir zabbix-proxy", "become": true}, "module_options": {"path": "{{ zabbix_proxy_loadmodulepath }}", "owner": "zabbix", "group": "zabbix", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_proxy_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_proxy_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_proxy_tlspskfile is defined", "zabbix_proxy_tlspsk_secret is defined"], "notify": ["restart zabbix-proxy"]}, "module_options": {"dest": "{{ zabbix_proxy_tlspskfile }}", "content": "{{ zabbix_proxy_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow zabbix-proxy to open connections (SELinux)", "module": "ansible.posix.seboolean", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Allow zabbix-proxy to open connections (SELinux)", "become": true, "when": "ansible_selinux.status == \"enabled\"", "tags": "selinux"}, "module_options": {"name": "zabbix_can_network", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Allow zabbix-proxy to connect to zabbix_proxy_preprocessing.sock (SELinux)", "module": "ansible.posix.seboolean", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Allow zabbix-proxy to connect to zabbix_proxy_preprocessing.sock (SELinux)", "become": true, "when": "ansible_selinux.status == \"enabled\"", "tags": "selinux"}, "module_options": {"name": "daemons_enable_cluster_mode", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Configure zabbix-proxy", "module": "template", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Configure zabbix-proxy", "notify": "restart zabbix-proxy", "become": true}, "module_options": {"src": "zabbix_proxy.conf.j2", "dest": "/etc/zabbix/zabbix_proxy.conf", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_proxy_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing the Zabbix-api package on localhost", "module": "pip", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Installing the Zabbix-api package on localhost", "register": "zabbix_api_package_installed", "until": "zabbix_api_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_proxy_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "zabbix_api_create_proxy | bool"], "tags": ["api"]}, "module_options": {"name": "zabbix-api", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure proxy definition is up-to-date (added/updated/removed)", "module": "zabbix_proxy", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Ensure proxy definition is up-to-date (added/updated/removed)", "when": ["zabbix_api_create_proxy | bool"], "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "state": "{{ zabbix_proxy_state }}", "status": "{{ zabbix_proxy_status }}", "proxy_name": "{{ zabbix_proxy_name }}", "description": "{{ zabbix_proxy_description | default(omit) }}", "interface": "{{ zabbix_proxy_interface }}", "tls_psk": "{{ zabbix_proxy_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_proxy_tlspskidentity | default(omit) }}", "tls_subject": "{{ zabbix_proxy_tls_subject | default(omit) }}", "tls_accept": "{{ zabbix_proxy_tls_config[zabbix_proxy_tlsaccept if zabbix_proxy_tlsaccept else 'no_encryption'] }}", "tls_connect": "{{ zabbix_proxy_tls_config[zabbix_proxy_tlsconnect if zabbix_proxy_tlsconnect else 'no_encryption'] }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}"}, "executable": "zabbix_proxy", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_proxy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "zabbix-proxy started", "module": "service", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "zabbix-proxy started", "become": true, "when": "zabbix_proxy_manage_service | bool"}, "module_options": {"name": "zabbix-proxy", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "zabbix_web", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web", "fqcn": "community.zabbix.zabbix_web", "collection": "community.zabbix", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-web"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file (Zabbix 5.x)", "module": "yum_repository", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file (Zabbix 5.x)", "with_items": "{{ zabbix_5_repo_yum }}", "become": true, "when": ["zabbix_repo == \"zabbix\"", "zabbix_version is version('5.0', '>=')", "ansible_distribution_major_version != '8'"], "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-web"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (CentOS)", "module": "yum", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (CentOS)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependency_package_install", "until": "zabbix_web_dependency_package_install is succeeded", "become": true, "when": ["zabbix_version is version('5.0', '>=')", "zabbix_web_centos_release", "ansible_distribution_major_version != '8'", "ansible_distribution == \"CentOS\""], "tags": ["zabbix-web"]}, "module_options": {"pkg": ["centos-release-scl"], "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (RHEL)", "module": "yum", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (RHEL)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependency_package_install", "until": "zabbix_web_dependency_package_install is succeeded", "become": true, "when": ["zabbix_version is version('5.0', '>=')", "zabbix_web_centos_release", "ansible_distribution_major_version != '8'", "ansible_distribution == \"RedHat\""], "tags": ["zabbix-web"]}, "module_options": {"pkg": ["scl-utils", "scl-utils-build"], "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web (Zabbix 5.x)", "module": "yum", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web (Zabbix 5.x)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_package_install", "until": "zabbix_web_package_install is succeeded", "become": true, "when": ["zabbix_version is version('5.0', '>=')", "ansible_distribution_major_version != '8'", "zabbix_websrv == 'apache'"], "tags": ["zabbix-web"]}, "module_options": {"pkg": ["zabbix-apache-conf-scl-{{ zabbix_web_version }}.{{ zabbix_web_version_minor }}"], "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web-{{ zabbix_server_database }}", "module": "yum", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web-{{ zabbix_server_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_package_install", "until": "zabbix_web_package_install is succeeded", "become": true, "tags": ["zabbix-web"]}, "module_options": {"pkg": "zabbix-web-{{ zabbix_server_database }}{{ '-scl' if zabbix_version is version('5.0', '>=') and ansible_distribution_major_version != '8' else '' }}-{{ zabbix_web_version }}.{{ zabbix_web_version_minor }}", "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install PHP", "module": "template", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install PHP", "become": true, "when": ["zabbix_vhost"], "notify": ["restart redhat-php-fpm"]}, "module_options": {"src": "php-fpm.conf.j2", "dest": "{{ zabbix_php_fpm_dir }}/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"vars": {"zabbix_apache_servername": "{{ zabbix_websrv_servername }}"}, "when": ["zabbix_websrv == 'apache'"]}, "module_options": "apache_RedHat.yml", "executable": "apache_RedHat.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Nginx vhost", "module": "template", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install Nginx vhost", "when": ["zabbix_vhost", "zabbix_websrv == 'nginx'"], "become": true, "notify": ["restart nginx"], "tags": ["zabbix-web", "init", "config", "nginx"]}, "module_options": {"src": "nginx_vhost.conf.j2", "dest": "/etc/nginx/conf.d/zabbix.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "apache_RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "options": {}, "module_options": "apache.yml", "executable": "apache.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install apache vhost", "module": "template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "options": {"name": "RedHat | Install apache vhost", "when": "zabbix_vhost", "become": true, "notify": ["restart apache"], "tags": ["zabbix-server"]}, "module_options": {"src": "apache_vhost.conf.j2", "dest": "/etc/httpd/conf.d/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "zabbix_web", "used_in": ["{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml\", \"index\": 7}"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "php_Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"when": ["zabbix_websrv == 'apache'"]}, "module_options": "apache.yml", "executable": "apache.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Determine php prefix for packages installations (legacy php5)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"name": "Debian | Determine php prefix for packages installations (legacy php5)", "when": ["ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('16.04', '<') or ansible_distribution == 'Debian' and ansible_distribution_version is version_compare('9', '<')"]}, "module_options": {"_zabbix_php_package_prefix": 5}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Determine php prefix for packages installations (Current distros)", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"name": "Debian | Determine php prefix for packages installations (Current distros)", "when": ["ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('16.04', '>=') or ansible_distribution == 'Debian' and ansible_distribution_version is version_compare('9', '>=')", "zabbix_version is version_compare('5.0', '>=')", "not _zabbix_web_apache_php_addition"]}, "module_options": {"_zabbix_php_package_prefix": "{{ zabbix_php_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install php packages", "module": "apt", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"name": "Debian | Install php packages", "register": "zabbix_web_php_dependency_install", "until": "zabbix_web_php_dependency_install is succeeded", "become": true, "tags": ["zabbix-web", "init"]}, "module_options": {"state": "present", "update_cache": true, "cache_valid_time": 3600, "name": ["php{{ _zabbix_php_package_prefix }}-{{ zabbix_server_database }}", "php{{ _zabbix_php_package_prefix }}-bcmath", "php{{ _zabbix_php_package_prefix }}-mbstring", "php{{ _zabbix_php_package_prefix }}-ldap", "php{{ _zabbix_php_package_prefix }}-xml", "php{{ _zabbix_php_package_prefix }}-gd"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "apache_Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Debian | Install legacy PHP integration for Apache", "module": "apt", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | Install legacy PHP integration for Apache", "become": true}, "module_options": {"state": "present", "update_cache": true, "cache_valid_time": 3600, "name": ["libapache2-mod-php"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | install apache vhost", "module": "template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | install apache vhost", "when": "zabbix_vhost", "become": true, "notify": ["restart apache"], "tags": ["zabbix-web", "init", "config", "apache"]}, "module_options": {"src": "apache_vhost.conf.j2", "dest": "/etc/apache2/sites-available/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Remove provided zabbix.conf files", "module": "file", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | Remove provided zabbix.conf files", "when": "zabbix_vhost", "become": true, "with_items": ["/etc/apache2/conf-available/zabbix.conf", "/etc/apache2/conf-enabled/zabbix.conf"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | enable apache vhost", "module": "file", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | enable apache vhost", "when": "zabbix_vhost", "become": true, "notify": ["restart apache"], "tags": ["zabbix-server", "init", "config", "apache"]}, "module_options": {"src": "/etc/apache2/sites-available/zabbix.conf", "dest": "/etc/apache2/sites-enabled/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "nginx.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "tasks": [{"py/object": "struct4.Task", "name": "Nginx | Set websrv specific variables", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Set websrv specific variables"}, "module_options": {"zabbix_web_conf_web_user": "{{ zabbix_web_conf_web_user if zabbix_web_conf_web_user is defined else _nginx_user }}", "zabbix_web_conf_web_group": "{{ zabbix_web_conf_web_group if zabbix_web_conf_web_group is defined else _nginx_group }}", "zabbix_nginx_config_path": "{{ zabbix_nginx_config_path if zabbix_nginx_config_path is defined else _nginx_config_path }}", "zabbix_nginx_log_path": "{{ zabbix_nginx_log_path if zabbix_nginx_log_path is defined else _nginx_log_path }}", "zabbix_nginx_service": "{{ zabbix_nginx_service if zabbix_nginx_service is defined else _nginx_service }}", "zabbix_nginx_tls_crt": "{{ zabbix_nginx_tls_crt if zabbix_nginx_tls_crt is defined else _nginx_tls_crt }}", "zabbix_nginx_tls_key": "{{ zabbix_nginx_tls_key if zabbix_nginx_tls_key is defined else _nginx_tls_key }}", "zabbix_nginx_tls_dhparam": "{{ zabbix_nginx_tls_dhparam if zabbix_nginx_tls_dhparam is defined else _nginx_tls_dhparam }}", "zabbix_apache_service": "{{ zabbix_apache_service if zabbix_apache_service is defined else _apache_service }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Check Apache service if same ports", "module": "command", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Check Apache service if same ports", "failed_when": false, "register": "zabbix_apache_service_check", "changed_when": "zabbix_apache_service_check.rc == 0", "check_mode": false, "when": ["zabbix_apache_vhost_port == zabbix_nginx_vhost_port", "zabbix_apache_vhost_tls_port == zabbix_nginx_vhost_tls_port"]}, "module_options": "systemctl status \"{{ zabbix_apache_service }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Stop Apache running on same ports", "module": "service", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Stop Apache running on same ports", "tags": ["zabbix-web"], "when": ["zabbix_apache_vhost_port == zabbix_nginx_vhost_port", "zabbix_apache_vhost_tls_port == zabbix_nginx_vhost_tls_port", "zabbix_apache_service_check.rc == 0"]}, "module_options": {"name": "{{ zabbix_apache_service }}", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Debian | Install Nginx and ssl-cert packages", "module": "apt", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Debian | Install Nginx and ssl-cert packages", "when": "ansible_os_family == \"Debian\""}, "module_options": {"state": "present", "name": ["nginx-light", "ssl-cert"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | RedHat | Install Nginx packages", "module": "yum", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | RedHat | Install Nginx packages", "when": "ansible_os_family == \"RedHat\""}, "module_options": {"state": "present", "name": ["nginx"]}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Start and enable service", "module": "service", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Start and enable service"}, "module_options": {"name": "{{ zabbix_nginx_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Install OpenSSL package for DH parameters", "module": "package", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Install OpenSSL package for DH parameters"}, "module_options": {"name": "openssl", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Generate SSL DH parameters", "module": "command", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Generate SSL DH parameters", "args": {"creates": "{{ zabbix_nginx_tls_dhparam }}"}}, "module_options": "openssl dhparam -out {{ zabbix_nginx_tls_dhparam }} {{ zabbix_nginx_tls_dhparam_bits | default('2048') }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | check for certificate created by certbot", "module": "stat", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | check for certificate created by certbot", "register": "zabbix_letsencrypt_cert", "failed_when": false, "when": "zabbix_letsencrypt"}, "module_options": {"path": "/etc/letsencrypt/live/{{ zabbix_websrv_servername }}/fullchain.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | Create directory for certbot webroot if not exist", "module": "file", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Create directory for certbot webroot if not exist", "when": ["zabbix_letsencrypt"], "become": true}, "module_options": {"path": "{{ zabbix_letsencrypt_webroot_path }}", "mode": "{{ zabbix_letsencrypt_webroot_mode }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Install vhost in conf.d", "module": "template", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Install vhost in conf.d", "when": ["zabbix_vhost"], "become": true, "notify": ["restart nginx"]}, "module_options": {"src": "nginx_vhost.conf.j2", "dest": "{{ zabbix_nginx_config_path }}/zabbix.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | Check if zabbix_websrv_servername is resolvable", "module": "set_fact", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Check if zabbix_websrv_servername is resolvable", "changed_when": "zabbix_websrv_servername_ip != ansible_default_ipv4.address", "register": "zabbix_letsencrypt_resolve", "when": "zabbix_letsencrypt"}, "module_options": {"zabbix_websrv_servername_ip": "{{ lookup('dig', 'qtype=A', zabbix_websrv_servername) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | check if certbot CLI is present", "module": "shell", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | check if certbot CLI is present", "register": "zabbix_cerbot_check", "changed_when": "zabbix_cerbot_check.rc != 0", "check_mode": false, "when": "zabbix_letsencrypt"}, "module_options": "certbot --version", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | flash all handlers before certbot", "module": "meta", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | flash all handlers before certbot", "when": ["zabbix_letsencrypt", "zabbix_letsencrypt_resolve is not changed", "zabbix_cerbot_check.rc == 0"]}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | generate certs with certbot CLI", "module": "command", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | generate certs with certbot CLI", "args": {"creates": "/etc/letsencrypt/live/{{ zabbix_websrv_servername }}/fullchain.pem"}, "when": ["zabbix_letsencrypt", "zabbix_letsencrypt_resolve is not changed", "zabbix_cerbot_check.rc == 0"]}, "module_options": "certbot --non-interactive certonly --expand -a webroot --webroot-path={{ zabbix_letsencrypt_webroot_path }} --email {{ zabbix_letsencrypt_account_email }} --agree-tos --cert-name {{ zabbix_websrv_servername }} -d {{ zabbix_websrv_servername }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | Check for certificate created by certbot", "module": "stat", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Check for certificate created by certbot", "register": "zabbix_letsencrypt_cert", "failed_when": false, "when": "zabbix_letsencrypt"}, "module_options": {"path": "/etc/letsencrypt/live/{{ zabbix_websrv_servername }}/fullchain.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | Reinstall Nginx vhost", "module": "template", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Reinstall Nginx vhost", "when": ["zabbix_letsencrypt", "zabbix_letsencrypt_resolve is not changed", "zabbix_cerbot_check.rc == 0"], "become": true, "notify": ["restart nginx"]}, "module_options": {"src": "nginx_vhost.conf.j2", "dest": "/etc/nginx/conf.d/zabbix.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-web", "init", "config"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "become": true, "when": ["zabbix_repo == \"zabbix\"", "ansible_machine != \"aarch64\""], "with_items": ["deb-src", "deb"], "tags": ["zabbix-web", "init", "config"]}, "module_options": {"repo": "{{ item }} http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "become": true, "when": ["zabbix_repo == \"zabbix\"", "ansible_machine == \"aarch64\""], "with_items": ["deb-src", "deb"], "tags": ["zabbix-web", "init", "config"]}, "module_options": {"repo": "{{ item }} http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}-arm64/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install PHP apart from zabbix-frontend-php deps", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install PHP apart from zabbix-frontend-php deps", "when": "zabbix_php_install"}, "module_options": "php_Debian.yml", "executable": "php_Debian.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install zabbix-web", "module": "apt", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install zabbix-web", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_package_install", "until": "zabbix_web_package_install is succeeded", "become": true, "tags": ["zabbix-web", "init", "config"]}, "module_options": {"pkg": "zabbix-frontend-php{{ '-deprecated' if zabbix_php_frontend_deprecated else '' }}", "state": "{{ zabbix_web_package_state }}", "update_cache": true, "cache_valid_time": 0}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Link graphfont.ttf (workaround ZBX-10467)", "module": "file", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Link graphfont.ttf (workaround ZBX-10467)", "tags": ["zabbix-web", "init", "config"]}, "module_options": {"src": "/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf", "path": "/usr/share/zabbix/fonts/graphfont.ttf", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install PHP", "module": "template", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install PHP", "become": true, "when": ["zabbix_vhost"], "notify": ["restart php-fpm-version"]}, "module_options": {"src": "php-fpm.conf.j2", "dest": "{{ zabbix_php_fpm_dir }}/zabbix.conf", "owner": "{{ _apache_user }}", "group": "{{ _apache_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Including Apache Configuration", "module": "include_tasks", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Including Apache Configuration", "vars": {"zabbix_apache_servername": "{{ zabbix_websrv_servername }}"}, "when": ["zabbix_websrv == 'apache'"]}, "module_options": "apache_Debian.yml", "executable": "apache_Debian.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package", "module": "yum", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependencies_installed", "until": "zabbix_web_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-web"]}, "module_options": {"name": ["libsemanage-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package on RHEL8", "module": "yum", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependencies_installed", "until": "zabbix_web_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-web"]}, "module_options": {"name": ["python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "module": "ansible.posix.seboolean", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network"], "tags": ["zabbix-web"]}, "module_options": {"name": "zabbix_can_network", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | Allow httpd to connect to db (SELinux)", "module": "ansible.posix.seboolean", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | Allow httpd to connect to db (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_can_network"], "tags": "selinux"}, "module_options": {"name": "httpd_can_network_connect_db", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | Allow httpd to connect to zabbix (SELinux)", "module": "ansible.posix.seboolean", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | Allow httpd to connect to zabbix (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_can_network"], "tags": "selinux"}, "module_options": {"name": "httpd_can_connect_zabbix", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | Allow httpd to connect to ldap (SELinux)", "module": "ansible.posix.seboolean", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | Allow httpd to connect to ldap (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "zabbix_apache_can_connect_ldap | bool"], "tags": "selinux"}, "module_options": {"name": "httpd_can_connect_ldap", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_web", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "apache.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "tasks": [{"py/object": "struct4.Task", "name": "Apache | Get Apache version", "module": "shell", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Apache | Get Apache version", "changed_when": false, "register": "apachectl_version", "check_mode": false, "args": {"executable": "/bin/bash"}, "tags": ["zabbix-web"]}, "module_options": "PATH=/usr/sbin:$PATH\nset -o pipefail\napachectl -v | grep 'version' | awk -F '/' '{ print $2 }'| awk '{ print $1 }' | cut -c 1-3\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Apache | Set correct apache_version", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Apache | Set correct apache_version", "tags": ["zabbix-web"]}, "module_options": {"apache_version": "{{ apachectl_version.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Set some", "when": ["zabbix_version is version('4.4', '<=')"], "tags": ["zabbix-web"]}, "module_options": {"_zabbix_web_apache_php_addition": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Set some", "when": ["ansible_os_family == \"Debian\""], "tags": ["zabbix-web"]}, "module_options": {"_zabbix_web_apache_php_addition": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_web", "used_in": ["{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml\", \"index\": 0}", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml\", \"index\": 0}"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "access.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "tasks": [{"py/object": "struct4.Task", "name": "htpasswd | check Python version to set prefix variable", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "options": {"name": "htpasswd | check Python version to set prefix variable", "when": ["zabbix_web_htpasswd is defined", "zabbix_web_htpasswd", "zabbix_web_htpasswd_users is defined"]}, "module_options": {"zabbix_python_prefix": "python{% if ansible_python_version is version_compare('3', '>=') %}3{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "htpasswd | install passlib for Python interpreter", "module": "package", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "options": {"name": "htpasswd | install passlib for Python interpreter", "when": ["zabbix_web_htpasswd is defined", "zabbix_web_htpasswd", "zabbix_web_htpasswd_users is defined"]}, "module_options": {"name": "{{ zabbix_python_prefix }}-passlib", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "htpasswd | manage HTTP authentication controls", "module": "community.general.htpasswd", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "options": {"name": "htpasswd | manage HTTP authentication controls", "loop_control": {"label": "{{ item.value.htpasswd_user }}"}, "with_dict": "{{ zabbix_web_htpasswd_users }}", "when": ["zabbix_web_htpasswd is defined", "zabbix_web_htpasswd", "zabbix_web_htpasswd_users is defined"]}, "module_options": {"path": "{{ zabbix_web_htpasswd_file }}", "name": "{{ item.value.htpasswd_user }}", "password": "{{ item.value.htpasswd_pass }}", "group": "www-data", "state": "present"}, "executable": "community.general.htpasswd", "executable_type": "Module", "fqcn": "community.general.htpasswd", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_web", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": ["always"]}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include distribution and version-specific vars", "module": "include_vars", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Include distribution and version-specific vars", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"]}], "tags": ["always"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some versions", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set some versions", "tags": ["always"]}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_php_version": "{{ zabbix_php_version if zabbix_php_version is defined else _zabbix_php_version }}", "_zabbix_php_package_prefix": ""}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default PHP-FPM variables", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set default PHP-FPM variables", "when": ["not zabbix_php_fpm"]}, "module_options": {"zabbix_php_fpm_dir": "{{ zabbix_php_fpm_dir if zabbix_php_fpm_dir is defined else _php_fpm_dir }}", "zabbix_php_fpm_session": "{{ zabbix_php_fpm_session if zabbix_php_fpm_session is defined else _php_fpm_session }}", "zabbix_php_fpm_listen": "{{ zabbix_php_fpm_listen if zabbix_php_fpm_listen is defined else _php_fpm_listen }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default PHP-FPM variables specific RH provided", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set default PHP-FPM variables specific RH provided", "when": ["zabbix_php_fpm", "ansible_os_family == \"RedHat\""]}, "module_options": {"zabbix_php_fpm_dir": "{{ zabbix_php_fpm_dir if zabbix_php_fpm_dir is defined else _php_fpm_dir }}", "zabbix_php_fpm_session": "{{ zabbix_php_fpm_session if zabbix_php_fpm_session is defined else _zabbix_php_fpm_session }}", "zabbix_php_fpm_listen": "{{ zabbix_php_fpm_listen if zabbix_php_fpm_listen is defined else _zabbix_php_fpm_listen }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set websrv specific variables (Apache)", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set websrv specific variables (Apache)", "when": ["zabbix_websrv == 'apache'"]}, "module_options": {"zabbix_web_conf_web_user": "{{ zabbix_web_conf_web_user if zabbix_web_conf_web_user is defined else _apache_user }}", "zabbix_web_conf_web_group": "{{ zabbix_web_conf_web_group if zabbix_web_conf_web_group is defined else _apache_group }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"when": ["zabbix_websrv == 'nginx'"]}, "module_options": "nginx.yml", "executable": "nginx.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Install the correct repository", "when": "ansible_os_family == \"RedHat\"", "tags": ["zabbix-web"]}, "module_options": "RedHat.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Install the correct repository", "when": "ansible_os_family == \"Debian\"", "tags": ["zabbix-web"]}, "module_options": "Debian.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create zabbix-web directory", "module": "file", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Create zabbix-web directory", "tags": ["zabbix-web", "init", "config"]}, "module_options": {"path": "/etc/zabbix/web", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-web", "module": "template", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Configure zabbix-web", "notify": ["restart apache"], "tags": ["zabbix-web", "init", "config"]}, "module_options": {"src": "zabbix.conf.php.j2", "dest": "/etc/zabbix/web/zabbix.conf.php", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": "{{ zabbix_web_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"when": ["zabbix_web_htpasswd"], "tags": ["zabbix-web", "init", "config"]}, "module_options": "access.yml", "executable": "access.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "zabbix_server", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server", "fqcn": "community.zabbix.zabbix_server", "collection": "community.zabbix", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Use Zabbix package name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Use Zabbix package name", "when": ["zabbix_repo == \"zabbix\" or zabbix_repo == \"other\""], "tags": ["zabbix-server"]}, "module_options": {"zabbix_server_package": "zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-server"]}, "module_options": {"zabbix_server_package": "zabbix{{ zabbix_short_version }}-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set some facts Zabbix <= 3.2", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts Zabbix <= 3.2", "when": ["zabbix_version is version('3.2', '<=')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}-{{ zabbix_version }}*"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix > 3.2", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix > 3.2", "when": ["zabbix_version is version('3.2', '>')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}*"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 5.4", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_server_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for RHEL8", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for RHEL8", "when": ["ansible_distribution_major_version == \"8\"", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set some facts EPEL", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts EPEL", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/zabbix-{{ zabbix_server_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' group (EPEL)", "module": "group", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' group (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_server_groupname | default('zabbix') }}", "gid": "{{ zabbix_server_groupid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' user (EPEL)", "module": "user", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' user (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_server_username | default('zabbix') }}", "comment": "Zabbix Monitoring System", "uid": "{{ zabbix_server_userid | default(omit) }}", "group": "zabbix"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure old file is absent", "module": "file", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "Make sure old file is absent", "become": true}, "module_options": {"path": "/etc/yum.repos.d/zabbix-supported.repo", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-server"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }}", "module": "package", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_package_installed", "until": "zabbix_server_package_installed is succeeded", "when": "zabbix_repo != \"other\"", "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "{{ zabbix_server_package }}-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }} (When zabbix_repo == other)", "module": "package", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }} (When zabbix_repo == other)", "register": "zabbix_server_package_installed", "until": "zabbix_server_package_installed is succeeded", "when": "zabbix_repo == \"other\"", "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "{{ zabbix_server_package }}-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts", "module": "package", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_sql_package_installed", "until": "zabbix_server_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo != \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "module": "package", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_sql_package_installed", "until": "zabbix_server_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo == \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Ansible module dependencies", "module": "yum", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation", "zabbix_server_database == 'pgsql'", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-server"]}, "module_options": {"name": "python-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Ansible module dependencies on RHEL8", "module": "yum", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible module dependencies on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation", "zabbix_server_database == 'pgsql'", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": "python3-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client packages RHEL8", "module": "yum", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client packages RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["mysql", "python3-PyMySQL"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL7", "module": "yum", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL7", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_major_version == \"7\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["mariadb", "MySQL-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL5 - 6", "module": "yum", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL5 - 6", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_major_version == \"6\" or ansible_distribution_major_version == \"5\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["mysql", "MySQL-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install PostgreSQL client package", "module": "yum", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install PostgreSQL client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'pgsql'", "zabbix_server_install_database_client"], "tags": ["zabbix-server"]}, "module_options": {"name": "postgresql", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 22, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "postgresql.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_server_dbhost if (zabbix_server_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["not zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database", "module": "community.postgresql.postgresql_db", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database"}, "module_options": {"name": "{{ zabbix_server_dbname }}", "port": "{{ zabbix_server_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database user", "module": "community.postgresql.postgresql_user", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database user"}, "module_options": {"db": "{{ zabbix_server_dbname }}", "name": "{{ zabbix_server_dbuser }}", "password": "md5{{ (zabbix_server_dbpassword + zabbix_server_dbuser)|hash('md5') }}", "port": "{{ zabbix_server_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "community.postgresql.postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create timescaledb extension", "module": "community.postgresql.postgresql_ext", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create timescaledb extension", "when": "zabbix_database_timescaledb"}, "module_options": {"db": "{{ zabbix_server_dbname }}", "name": "timescaledb"}, "executable": "community.postgresql.postgresql_ext", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_ext", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database", "module": "community.postgresql.postgresql_db", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database"}, "module_options": {"login_host": "{{ zabbix_server_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_pgsql_login_password | default(omit) }}", "login_unix_socket": "{{ zabbix_server_pgsql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_server_dbname }}", "port": "{{ zabbix_server_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database user", "module": "community.postgresql.postgresql_user", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database user"}, "module_options": {"login_host": "{{ zabbix_server_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_pgsql_login_password | default(omit) }}", "db": "{{ zabbix_server_dbname }}", "name": "{{ zabbix_server_dbuser }}", "password": "md5{{ (zabbix_server_dbpassword + zabbix_server_dbuser)|hash('md5') }}", "port": "{{ zabbix_server_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "community.postgresql.postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create timescaledb extension", "module": "community.postgresql.postgresql_ext", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create timescaledb extension", "when": "zabbix_database_timescaledb"}, "module_options": {"login_host": "{{ zabbix_server_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_pgsql_login_password | default(omit) }}", "login_unix_socket": "{{ zabbix_server_pgsql_login_unix_socket | default(omit) }}", "db": "{{ zabbix_server_dbname }}", "name": "timescaledb"}, "executable": "community.postgresql.postgresql_ext", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_ext", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Create schema", "module": "shell", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Create schema", "args": {"creates": "/etc/zabbix/schema.done", "executable": "/bin/bash", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload"], "tags": ["zabbix-server", "database"]}, "module_options": "set -euxo pipefail\nFILE={{ 'create.sql' if zabbix_version is version('6.0', '<') else 'server.sql' }}\ncd {{ datafiles_path }}\nif [ -f ${FILE}.gz ]\n  then zcat ${FILE}.gz > /tmp/create.sql\nelse\n  cp ${FILE} /tmp/create.sql\nfi\ncat /tmp/create.sql | psql -h '{{ zabbix_server_dbhost }}' \\\n-U '{{ zabbix_server_dbuser }}' \\\n-d '{{ zabbix_server_dbname }}' \\\n-p '{{ zabbix_server_dbport }}'\ntouch /etc/zabbix/schema.done\nrm -f /tmp/create.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Create TimescaleDB hypertables", "module": "shell", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Create TimescaleDB hypertables", "args": {"creates": "/etc/zabbix/timescaledb.done", "executable": "/bin/bash", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_timescaledb"], "tags": ["zabbix-server", "database"]}, "module_options": "set -euxo pipefail\ncd {{ datafiles_path }} &&\nif [ -f timescaledb.sql.gz ]; then zcat timescaledb.sql.gz > /etc/timescaledb.sql ; else cp -p timescaledb.sql /etc/timescaledb.sql ; fi\ncat /etc/timescaledb.sql | psql -h '{{ zabbix_server_dbhost }}' \\\n-U '{{ zabbix_server_dbuser }}' \\\n-d '{{ zabbix_server_dbname }}' \\\n-p '{{ zabbix_server_dbport }}'\ntouch /etc/zabbix/timescaledb.done\nrm -f /tmp/timescaledb.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get complete path", "module": "shell", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Get complete path", "register": "datafiles_path_full", "changed_when": false, "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)"], "tags": ["skip_ansible_lint"]}, "module_options": "ls -d {{ datafiles_path }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if we have a create dir", "module": "stat", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Check if we have a create dir", "register": "create_dir_or_not", "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)"]}, "module_options": {"path": "{{ datafiles_path_full.stdout }}/create"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact", "module": "set_fact", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Set fact", "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)", "create_dir_or_not.stat.isdir is defined and create_dir_or_not.stat.isdir", "create_dir_or_not.stat.exists"]}, "module_options": {"datafiles_path": "{{ datafiles_path }}/create"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Importing schema file", "module": "shell", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing schema file", "args": {"creates": "/etc/zabbix/schema.done", "executable": "/bin/bash", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)"], "tags": ["zabbix-server", "database"]}, "module_options": "set -euxo pipefail\ncd {{ datafiles_path }}\nif [ -f schema.sql.gz ]; then zcat schema.sql.gz > /tmp/schema.sql ; else cp -p schema.sql /tmp/schema.sql ;fi\ncat /tmp/schema.sql | psql -h '{{ zabbix_server_dbhost }}' \\\n-U '{{ zabbix_server_dbuser }}' \\\n-d '{{ zabbix_server_dbname }}' \\\n-p '{{ zabbix_server_dbport }}'\ntouch /etc/zabbix/schema.done\nrm -f /etc/schema.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Importing images file", "module": "shell", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing images file", "args": {"creates": "/etc/zabbix/images.done", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": "(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)", "tags": ["zabbix-server", "database"]}, "module_options": "cd {{ datafiles_path }} && psql -h '{{ zabbix_server_dbhost }}' -U '{{ zabbix_server_dbuser }}' -d '{{ zabbix_server_dbname }}' -p '{{ zabbix_server_dbport }}' -f images.sql && touch /etc/zabbix/images.done\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Importing data file", "module": "shell", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing data file", "args": {"creates": "/etc/zabbix/data.done", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": "(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)", "tags": ["zabbix-server", "database"]}, "module_options": "cd {{ datafiles_path }} && psql -h '{{ zabbix_server_dbhost }}' -U '{{ zabbix_server_dbuser }}' -d '{{ zabbix_server_dbname }}' -p '{{ zabbix_server_dbport }}' -f data.sql && touch /etc/zabbix/data.done\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "mysql.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_server_dbhost if (zabbix_server_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["not zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "when": "zabbix_server_real_dbhost | default(false)"}, "module_options": {"delegated_dbhost": "{{ zabbix_server_real_dbhost }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Create database", "module": "community.mysql.mysql_db", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database", "when": "zabbix_database_creation", "register": "zabbix_database_created", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database", "skip_ansible_lint"]}, "module_options": {"name": "{{ zabbix_server_dbname }}", "encoding": "{{ zabbix_server_dbencoding }}", "collation": "{{ zabbix_server_dbcollation }}", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}", "state": "present"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Create database user", "module": "community.mysql.mysql_user", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database user", "when": "zabbix_database_creation", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_server_dbuser }}", "password": "{{ zabbix_server_dbpassword }}", "priv": "{{ zabbix_server_dbname }}.*:ALL", "host": "{{ zabbix_server_privileged_host }}", "state": "present"}, "executable": "community.mysql.mysql_user", "executable_type": "Module", "fqcn": "community.mysql.mysql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get the file for create.sql >= 3.0", "module": "shell", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Get the file for create.sql >= 3.0", "changed_when": false, "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\""], "register": "ls_output_create", "tags": ["zabbix-server", "database"]}, "module_options": "ls -1 {{ datafiles_path }}/{{ 'create' if zabbix_version is version('6.0', '<') else 'server' }}.sq*", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Get current database version", "module": "shell", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Get current database version", "register": "mysql_db_version", "changed_when": false, "ignore_errors": true}, "module_options": "mysql -h {{ zabbix_server_dbhost }} -u{{ zabbix_server_dbuser }} \\\n-p'{{ zabbix_server_dbpassword }}' -D '{{ zabbix_server_dbname }}' \\\n-e 'SELECT mandatory FROM dbversion;'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Check if database needs to be populated", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Check if database needs to be populated"}, "module_options": {"mysql_schema_empty": "{{ mysql_db_version is failed }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Get version_comment", "module": "community.mysql.mysql_variables", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Get version_comment", "delegate_to": "{{ delegated_dbhost }}", "register": "install_mysql_version", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "version", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Get current value for innodb_default_row_format", "module": "community.mysql.mysql_variables", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Get current value for innodb_default_row_format", "delegate_to": "{{ delegated_dbhost }}", "register": "mysql_innodb_default_row_format", "when": ["install_mysql_version.msg is version('5.6', '>=')"], "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_default_row_format", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Set innodb_default_row_format to dynamic", "module": "community.mysql.mysql_variables", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Set innodb_default_row_format to dynamic", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty", "install_mysql_version.msg is version('5.6', '>=')", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "dynamic", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Disable InnoDB Strict Mode", "module": "community.mysql.mysql_variables", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Disable InnoDB Strict Mode", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty", "install_mysql_version.msg is version('5.6', '>=')", "ansible_distribution_release == \"buster\""], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_strict_mode", "value": 0, "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Fetch sql create file", "module": "fetch", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Fetch sql create file", "when": ["delegated_dbhost != inventory_hostname", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"]}, "module_options": {"src": "{{ ls_output_create.stdout }}", "dest": "/tmp/{{ role_name }}/", "flat": true}, "executable": "fetch", "executable_type": "Module", "fqcn": "ansible.builtin.fetch", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy sql create file", "module": "copy", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Copy sql create file", "delegate_to": "{{ delegated_dbhost }}", "when": ["delegated_dbhost != inventory_hostname", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"]}, "module_options": {"src": "/tmp/{{ role_name }}/", "dest": "{{ ls_output_create.stdout | dirname }}", "mode": "0640"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Create database and import file >= 3.0", "module": "community.mysql.mysql_db", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database and import file >= 3.0", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_server_dbname }}", "encoding": "{{ zabbix_server_dbencoding }}", "collation": "{{ zabbix_server_dbcollation }}", "state": "import", "target": "{{ ls_output_create.stdout }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Revert innodb_default_row_format to previous value", "module": "community.mysql.mysql_variables", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Revert innodb_default_row_format to previous value", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "{{ mysql_innodb_default_row_format.msg }}", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check if we have sql_done files >= 3.0", "module": "file", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Check if we have sql_done files >= 3.0", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"]}, "module_options": {"path": "/etc/zabbix/create.done", "state": "touch", "mode": "0644"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the correct path for the SQL files < 3.0", "module": "shell", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Get the correct path for the SQL files < 3.0", "changed_when": false, "register": "ls_output_schema", "with_items": ["schema", "images", "data"], "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool"], "tags": ["zabbix-server", "database"]}, "module_options": "ls -1 {{ datafiles_path }}/{{ mysql_create_dir }}{{ item }}.sql*", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if we have done files < 3.0", "module": "stat", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Check if we have done files < 3.0", "register": "done_files", "with_items": ["schema", "images", "data"], "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool"], "tags": ["zabbix-server", "database"]}, "module_options": {"path": "/etc/zabbix/{{ item }}.done"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create fact if sql_done files exists", "module": "set_fact", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Create fact if sql_done files exists", "with_items": "{{ done_files.results }}", "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool"], "tags": ["zabbix-server", "database"]}, "module_options": {"sql_files_executed": "{{ sql_files_executed | default({}) | combine({item.item: item.stat}) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Create database and import files < 3.0", "module": "community.mysql.mysql_db", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database and import files < 3.0", "with_items": "{{ ls_output_schema.results }}", "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool", "not sql_files_executed[item.item].exists"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"name": "{{ zabbix_server_dbname }}", "encoding": "{{ zabbix_server_dbencoding }}", "collation": "{{ zabbix_server_dbcollation }}", "state": "import", "target": "{{ item.stdout }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check if we have sql_done files < 3.0", "module": "file", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Check if we have sql_done files < 3.0", "with_items": ["schema", "images", "data"], "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool", "not sql_files_executed[item].exists"], "tags": ["zabbix-server", "database"]}, "module_options": {"path": "/etc/zabbix/{{ item }}.done", "state": "touch", "mode": "0644"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some variables", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Set some variables", "when": ["ansible_machine != \"aarch64\""]}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_server_apt_repository": ["http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}/", "{{ ansible_distribution_release }}", "main"], "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}", "zabbix_python_prefix": "python{% if ansible_python_version is version('3', '>=') %}3{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some variables", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Set some variables", "when": ["ansible_machine == \"aarch64\""]}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_server_apt_repository": ["http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}-arm64/", "{{ ansible_distribution_release }}", "main"], "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}", "zabbix_python_prefix": "python{% if ansible_python_version is version('3', '>=') %}3{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Set some facts", "when": ["zabbix_version is version('3.0', '<')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 5.4", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_server_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing gnupg", "module": "apt", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing gnupg", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "gnupg_installed", "until": "gnupg_installed is succeeded", "become": true}, "module_options": {"pkg": "gnupg", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "register": "zabbix_server_repo_files_installed", "until": "zabbix_server_repo_files_installed is succeeded", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "when": "zabbix_repo == \"zabbix\"", "become": true, "with_items": ["deb-src", "deb"], "tags": ["zabbix-server", "init"]}, "module_options": {"repo": "{{ item }} {{ zabbix_server_apt_repository | join(' ') }}", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_server_apt_priority | int"], "become": true}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_server_apt_priority | int"], "become": true}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix_server-{{ zabbix_proxy_database }}", "content": "Package: zabbix_server-{{ zabbix_proxy_database }}\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_server_apt_priority }}\n", "owner": "root", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "apt-get clean", "module": "shell", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "apt-get clean", "args": {"warn": false}, "changed_when": false, "become": true, "tags": ["skip_ansible_lint"]}, "module_options": "apt-get clean; apt-get update", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for the dpkg exclude line", "module": "command", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Check for the dpkg exclude line", "register": "dpkg_exclude_line", "failed_when": false, "changed_when": false, "check_mode": false}, "module_options": "grep -F 'path-exclude=/usr/share/doc/*' /etc/dpkg/dpkg.cfg.d/excludes", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow Zabbix dpkg installs to /usr/share/doc/zabbix*", "module": "lineinfile", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Allow Zabbix dpkg installs to /usr/share/doc/zabbix*", "become": true, "when": ["dpkg_exclude_line.rc == 0"]}, "module_options": {"path": "/etc/dpkg/dpkg.cfg.d/excludes", "line": "path-include=/usr/share/doc/zabbix*"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-server-{{ zabbix_server_database }}", "module": "apt", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-server-{{ zabbix_server_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_package_installed", "until": "zabbix_server_package_installed is succeeded", "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"pkg": "zabbix-server-{{ zabbix_server_database }}", "state": "{{ zabbix_server_package_state }}", "update_cache": true, "cache_valid_time": 0, "install_recommends": "{{ zabbix_server_install_recommends }}", "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-sql-scripts", "module": "apt", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_package_sql_installed", "until": "zabbix_server_package_sql_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')"], "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"pkg": "zabbix-sql-scripts", "state": "{{ zabbix_server_package_state }}", "update_cache": true, "cache_valid_time": 0, "install_recommends": "{{ zabbix_server_install_recommends }}", "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Ansible module dependencies", "module": "apt", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install Ansible module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation"], "tags": ["zabbix-server", "init"]}, "module_options": {"name": "{{ zabbix_python_prefix }}-psycopg2", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Mysql Client package", "module": "apt", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_release != \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["default-mysql-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian 10 | Install Mysql Client package", "module": "apt", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian 10 | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_release == \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["mariadb-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install PostgreSQL Client package", "module": "apt", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install PostgreSQL Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'pgsql'", "zabbix_server_install_database_client"], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": "postgresql-client", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get getenforce binary", "module": "stat", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "Get getenforce binary", "register": "getenforce_bin", "become": true}, "module_options": {"path": "/usr/sbin/getenforce"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Collect getenforce output", "module": "command", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "Collect getenforce output", "register": "sestatus", "when": "getenforce_bin.stat.exists", "changed_when": false, "become": true, "check_mode": false}, "module_options": "getenforce", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "when": "getenforce_bin.stat.exists and (\"Enforcing\" in sestatus.stdout or \"Permissive\" in sestatus.stdout)"}, "module_options": {"zabbix_selinux": "{{ true }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package", "module": "yum", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["libsemanage-python", "policycoreutils", "checkpolicy"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package on RHEL8", "module": "yum", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Enable httpd_can_connect_zabbix SELinux boolean", "module": "ansible.posix.seboolean", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Enable httpd_can_connect_zabbix SELinux boolean", "become": true, "when": ["selinux_allow_zabbix_can_http"], "tags": ["zabbix-server"]}, "module_options": {"name": "httpd_can_connect_zabbix", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "module": "ansible.posix.seboolean", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "become": true, "when": ["selinux_allow_zabbix_can_network"], "tags": ["zabbix-server"]}, "module_options": {"name": "zabbix_can_network", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues", "module": "yum", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["policycoreutils-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "module": "yum", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["policycoreutils", "checkpolicy", "python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_server_alerter.sock", "module": "script", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_server_alerter.sock", "args": {"creates": "/etc/selinux/targeted/active/modules/400/zabbix_server_add/cil", "become": true}}, "module_options": {"cmd": "files/install_semodule.bsx"}, "executable": "script", "executable_type": "Module", "fqcn": "ansible.builtin.script", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Include OS-specific variables"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Install the correct repository"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "{{ ansible_os_family }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing the {{ zabbix_server_database_long }} database", "module": "include_tasks", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Installing the {{ zabbix_server_database_long }} database"}, "module_options": "{{ zabbix_server_database_long }}.yml", "executable": "{{ zabbix_server_database_long }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-server", "module": "template", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Configure zabbix-server", "notify": ["zabbix-server restarted"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"src": "zabbix_server.conf.j2", "dest": "/etc/zabbix/zabbix_server.conf", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_server_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-server", "module": "file", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Create include dir zabbix-server", "tags": ["zabbix-server", "init", "config"]}, "module_options": {"path": "{{ zabbix_server_include }}", "owner": "zabbix", "group": "zabbix", "state": "directory", "mode": "{{ zabbix_server_include_mode }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add zabbix-server scripts", "module": "include", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Add zabbix-server scripts", "when": "( zabbix_server_alertscripts is defined ) or ( zabbix_server_externalscripts is defined )"}, "module_options": "scripts.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Zabbix-server started", "module": "service", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Zabbix-server started", "tags": ["zabbix-server"], "when": "zabbix_server_manage_service | bool"}, "module_options": {"name": "zabbix-server", "state": "{{ zabbix_service_state }}", "enabled": "{{ zabbix_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "scripts.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/scripts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configure zabbix-server alertscripts", "module": "template", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/scripts.yml", "options": {"name": "Configure zabbix-server alertscripts", "with_items": "{{ zabbix_server_alertscripts }}", "when": "zabbix_server_alertscripts is defined"}, "module_options": {"src": "{{ item.path }}", "dest": "{{ zabbix_server_alertscriptspath }}/{{ item.name }}", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-server externalscripts", "module": "template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/scripts.yml", "options": {"name": "Configure zabbix-server externalscripts", "with_items": "{{ zabbix_server_externalscripts }}", "when": "zabbix_server_externalscripts is defined"}, "module_options": {"src": "{{ item.path }}", "dest": "{{ zabbix_server_externalscriptspath }}/{{ item.name }}", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}], "modules": [{"py/object": "struct4.Module", "name": "zabbix_user", "fqcn": "community.zabbix.zabbix_user", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_discovery_rule", "fqcn": "community.zabbix.zabbix_discovery_rule", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_discovery_rule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_globalmacro", "fqcn": "community.zabbix.zabbix_globalmacro", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_globalmacro.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_autoregister", "fqcn": "community.zabbix.zabbix_autoregister", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_autoregister.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_template", "fqcn": "community.zabbix.zabbix_template", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_template.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_script", "fqcn": "community.zabbix.zabbix_script", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_script.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_mediatype", "fqcn": "community.zabbix.zabbix_mediatype", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_mediatype.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_user_info", "fqcn": "community.zabbix.zabbix_user_info", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_host_events_info", "fqcn": "community.zabbix.zabbix_host_events_info", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_host_events_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_proxy_info", "fqcn": "community.zabbix.zabbix_proxy_info", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_proxy_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_group", "fqcn": "community.zabbix.zabbix_group", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_group.py", "builtin": false, "used_in": ["{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml\", \"index\": 1}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_host", "fqcn": "community.zabbix.zabbix_host", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_host.py", "builtin": false, "used_in": ["{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml\", \"index\": 2}", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml\", \"index\": 3}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_host_info", "fqcn": "community.zabbix.zabbix_host_info", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_host_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_template_info", "fqcn": "community.zabbix.zabbix_template_info", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_template_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_map", "fqcn": "community.zabbix.zabbix_map", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_map.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_group_facts", "fqcn": "community.zabbix.zabbix_group_facts", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_group_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_service", "fqcn": "community.zabbix.zabbix_service", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_group_info", "fqcn": "community.zabbix.zabbix_group_info", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_hostmacro", "fqcn": "community.zabbix.zabbix_hostmacro", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_hostmacro.py", "builtin": false, "used_in": ["{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml\", \"index\": 4}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_action", "fqcn": "community.zabbix.zabbix_action", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_action.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_valuemap", "fqcn": "community.zabbix.zabbix_valuemap", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_valuemap.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_maintenance", "fqcn": "community.zabbix.zabbix_maintenance", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_maintenance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_proxy", "fqcn": "community.zabbix.zabbix_proxy", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_proxy.py", "builtin": false, "used_in": ["{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 14}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_usergroup", "fqcn": "community.zabbix.zabbix_usergroup", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_usergroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_housekeeping", "fqcn": "community.zabbix.zabbix_housekeeping", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_housekeeping.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_authentication", "fqcn": "community.zabbix.zabbix_authentication", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_authentication.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_host_facts", "fqcn": "community.zabbix.zabbix_host_facts", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_host_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zabbix_screen", "fqcn": "community.zabbix.zabbix_screen", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_screen.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}], "installed_roles_path": "", "installed_roles": [], "modules": [], "taskfiles": [], "version": "", "module_dict": {"ansible.posix.patch": {"py/object": "struct4.Module", "name": "patch", "fqcn": "ansible.posix.patch", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/patch.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.selinux": {"py/object": "struct4.Module", "name": "selinux", "fqcn": "ansible.posix.selinux", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/selinux.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.firewalld": {"py/object": "struct4.Module", "name": "firewalld", "fqcn": "ansible.posix.firewalld", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/firewalld.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.at": {"py/object": "struct4.Module", "name": "at", "fqcn": "ansible.posix.at", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/at.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.authorized_key": {"py/object": "struct4.Module", "name": "authorized_key", "fqcn": "ansible.posix.authorized_key", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/authorized_key.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.acl": {"py/object": "struct4.Module", "name": "acl", "fqcn": "ansible.posix.acl", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/acl.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.synchronize": {"py/object": "struct4.Module", "name": "synchronize", "fqcn": "ansible.posix.synchronize", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/synchronize.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.mount": {"py/object": "struct4.Module", "name": "mount", "fqcn": "ansible.posix.mount", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/mount.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.sysctl": {"py/object": "struct4.Module", "name": "sysctl", "fqcn": "ansible.posix.sysctl", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/sysctl.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.firewalld_info": {"py/object": "struct4.Module", "name": "firewalld_info", "fqcn": "ansible.posix.firewalld_info", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/firewalld_info.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.seboolean": {"py/object": "struct4.Module", "name": "seboolean", "fqcn": "ansible.posix.seboolean", "collection": "ansible.posix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/seboolean.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_banner": {"py/object": "struct4.Module", "name": "net_banner", "fqcn": "ansible.netcommon.net_banner", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_banner.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_l3_interface": {"py/object": "struct4.Module", "name": "net_l3_interface", "fqcn": "ansible.netcommon.net_l3_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_l3_interface.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_vlan": {"py/object": "struct4.Module", "name": "net_vlan", "fqcn": "ansible.netcommon.net_vlan", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_vlan.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.telnet": {"py/object": "struct4.Module", "name": "telnet", "fqcn": "ansible.netcommon.telnet", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/telnet.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_get": {"py/object": "struct4.Module", "name": "net_get", "fqcn": "ansible.netcommon.net_get", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_get.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_logging": {"py/object": "struct4.Module", "name": "net_logging", "fqcn": "ansible.netcommon.net_logging", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_logging.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.cli_config": {"py/object": "struct4.Module", "name": "cli_config", "fqcn": "ansible.netcommon.cli_config", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/cli_config.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_l2_interface": {"py/object": "struct4.Module", "name": "net_l2_interface", "fqcn": "ansible.netcommon.net_l2_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_l2_interface.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_user": {"py/object": "struct4.Module", "name": "net_user", "fqcn": "ansible.netcommon.net_user", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_user.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.netconf_rpc": {"py/object": "struct4.Module", "name": "netconf_rpc", "fqcn": "ansible.netcommon.netconf_rpc", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/netconf_rpc.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_lldp_interface": {"py/object": "struct4.Module", "name": "net_lldp_interface", "fqcn": "ansible.netcommon.net_lldp_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_lldp_interface.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.netconf_get": {"py/object": "struct4.Module", "name": "netconf_get", "fqcn": "ansible.netcommon.netconf_get", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/netconf_get.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_static_route": {"py/object": "struct4.Module", "name": "net_static_route", "fqcn": "ansible.netcommon.net_static_route", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_static_route.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_interface": {"py/object": "struct4.Module", "name": "net_interface", "fqcn": "ansible.netcommon.net_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_interface.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.netconf_config": {"py/object": "struct4.Module", "name": "netconf_config", "fqcn": "ansible.netcommon.netconf_config", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/netconf_config.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_lldp": {"py/object": "struct4.Module", "name": "net_lldp", "fqcn": "ansible.netcommon.net_lldp", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_lldp.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.restconf_get": {"py/object": "struct4.Module", "name": "restconf_get", "fqcn": "ansible.netcommon.restconf_get", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/restconf_get.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.cli_command": {"py/object": "struct4.Module", "name": "cli_command", "fqcn": "ansible.netcommon.cli_command", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/cli_command.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.network_resource": {"py/object": "struct4.Module", "name": "network_resource", "fqcn": "ansible.netcommon.network_resource", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/network_resource.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_vrf": {"py/object": "struct4.Module", "name": "net_vrf", "fqcn": "ansible.netcommon.net_vrf", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_vrf.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_ping": {"py/object": "struct4.Module", "name": "net_ping", "fqcn": "ansible.netcommon.net_ping", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_ping.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.restconf_config": {"py/object": "struct4.Module", "name": "restconf_config", "fqcn": "ansible.netcommon.restconf_config", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/restconf_config.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_linkagg": {"py/object": "struct4.Module", "name": "net_linkagg", "fqcn": "ansible.netcommon.net_linkagg", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_linkagg.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_put": {"py/object": "struct4.Module", "name": "net_put", "fqcn": "ansible.netcommon.net_put", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_put.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_system": {"py/object": "struct4.Module", "name": "net_system", "fqcn": "ansible.netcommon.net_system", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_system.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.utils.cli_parse": {"py/object": "struct4.Module", "name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "collection": "ansible.utils", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/cli_parse.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.utils.fact_diff": {"py/object": "struct4.Module", "name": "fact_diff", "fqcn": "ansible.utils.fact_diff", "collection": "ansible.utils", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/fact_diff.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.utils.update_fact": {"py/object": "struct4.Module", "name": "update_fact", "fqcn": "ansible.utils.update_fact", "collection": "ansible.utils", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/update_fact.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.utils.validate": {"py/object": "struct4.Module", "name": "validate", "fqcn": "ansible.utils.validate", "collection": "ansible.utils", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/validate.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_dsc": {"py/object": "struct4.Module", "name": "win_dsc", "fqcn": "ansible.windows.win_dsc", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_dsc.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_whoami": {"py/object": "struct4.Module", "name": "win_whoami", "fqcn": "ansible.windows.win_whoami", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_whoami.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_tempfile": {"py/object": "struct4.Module", "name": "win_tempfile", "fqcn": "ansible.windows.win_tempfile", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_tempfile.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_stat": {"py/object": "struct4.Module", "name": "win_stat", "fqcn": "ansible.windows.win_stat", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_stat.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_find": {"py/object": "struct4.Module", "name": "win_find", "fqcn": "ansible.windows.win_find", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_find.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_powershell": {"py/object": "struct4.Module", "name": "win_powershell", "fqcn": "ansible.windows.win_powershell", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_powershell.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_owner": {"py/object": "struct4.Module", "name": "win_owner", "fqcn": "ansible.windows.win_owner", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_owner.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_reboot": {"py/object": "struct4.Module", "name": "win_reboot", "fqcn": "ansible.windows.win_reboot", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_reboot.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_service_info": {"py/object": "struct4.Module", "name": "win_service_info", "fqcn": "ansible.windows.win_service_info", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_service_info.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_dns_client": {"py/object": "struct4.Module", "name": "win_dns_client", "fqcn": "ansible.windows.win_dns_client", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_dns_client.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_acl_inheritance": {"py/object": "struct4.Module", "name": "win_acl_inheritance", "fqcn": "ansible.windows.win_acl_inheritance", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_acl_inheritance.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_wait_for": {"py/object": "struct4.Module", "name": "win_wait_for", "fqcn": "ansible.windows.win_wait_for", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_wait_for.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_domain_controller": {"py/object": "struct4.Module", "name": "win_domain_controller", "fqcn": "ansible.windows.win_domain_controller", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_domain_controller.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_shell": {"py/object": "struct4.Module", "name": "win_shell", "fqcn": "ansible.windows.win_shell", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_shell.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_file": {"py/object": "struct4.Module", "name": "win_file", "fqcn": "ansible.windows.win_file", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_file.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_get_url": {"py/object": "struct4.Module", "name": "win_get_url", "fqcn": "ansible.windows.win_get_url", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_get_url.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_path": {"py/object": "struct4.Module", "name": "win_path", "fqcn": "ansible.windows.win_path", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_path.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_ping": {"py/object": "struct4.Module", "name": "win_ping", "fqcn": "ansible.windows.win_ping", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_ping.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_reg_stat": {"py/object": "struct4.Module", "name": "win_reg_stat", "fqcn": "ansible.windows.win_reg_stat", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_reg_stat.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_service": {"py/object": "struct4.Module", "name": "win_service", "fqcn": "ansible.windows.win_service", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_service.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_user_right": {"py/object": "struct4.Module", "name": "win_user_right", "fqcn": "ansible.windows.win_user_right", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_user_right.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_regedit": {"py/object": "struct4.Module", "name": "win_regedit", "fqcn": "ansible.windows.win_regedit", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_regedit.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_package": {"py/object": "struct4.Module", "name": "win_package", "fqcn": "ansible.windows.win_package", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_package.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_certificate_store": {"py/object": "struct4.Module", "name": "win_certificate_store", "fqcn": "ansible.windows.win_certificate_store", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_certificate_store.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_optional_feature": {"py/object": "struct4.Module", "name": "win_optional_feature", "fqcn": "ansible.windows.win_optional_feature", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_optional_feature.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_command": {"py/object": "struct4.Module", "name": "win_command", "fqcn": "ansible.windows.win_command", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_command.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_user": {"py/object": "struct4.Module", "name": "win_user", "fqcn": "ansible.windows.win_user", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_user.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_domain": {"py/object": "struct4.Module", "name": "win_domain", "fqcn": "ansible.windows.win_domain", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_domain.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_group_membership": {"py/object": "struct4.Module", "name": "win_group_membership", "fqcn": "ansible.windows.win_group_membership", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_group_membership.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_template": {"py/object": "struct4.Module", "name": "win_template", "fqcn": "ansible.windows.win_template", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_template.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_environment": {"py/object": "struct4.Module", "name": "win_environment", "fqcn": "ansible.windows.win_environment", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_environment.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_copy": {"py/object": "struct4.Module", "name": "win_copy", "fqcn": "ansible.windows.win_copy", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_copy.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_share": {"py/object": "struct4.Module", "name": "win_share", "fqcn": "ansible.windows.win_share", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_share.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_updates": {"py/object": "struct4.Module", "name": "win_updates", "fqcn": "ansible.windows.win_updates", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_updates.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_uri": {"py/object": "struct4.Module", "name": "win_uri", "fqcn": "ansible.windows.win_uri", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_uri.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_group": {"py/object": "struct4.Module", "name": "win_group", "fqcn": "ansible.windows.win_group", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_group.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_feature": {"py/object": "struct4.Module", "name": "win_feature", "fqcn": "ansible.windows.win_feature", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_feature.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_acl": {"py/object": "struct4.Module", "name": "win_acl", "fqcn": "ansible.windows.win_acl", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_acl.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_domain_membership": {"py/object": "struct4.Module", "name": "win_domain_membership", "fqcn": "ansible.windows.win_domain_membership", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_domain_membership.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.windows.win_hostname": {"py/object": "struct4.Module", "name": "win_hostname", "fqcn": "ansible.windows.win_hostname", "collection": "ansible.windows", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/ansible/windows/plugins/modules/win_hostname.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_sequence": {"py/object": "struct4.Module", "name": "postgresql_sequence", "fqcn": "community.postgresql.postgresql_sequence", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_sequence.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_script": {"py/object": "struct4.Module", "name": "postgresql_script", "fqcn": "community.postgresql.postgresql_script", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_script.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_user": {"py/object": "struct4.Module", "name": "postgresql_user", "fqcn": "community.postgresql.postgresql_user", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_lang": {"py/object": "struct4.Module", "name": "postgresql_lang", "fqcn": "community.postgresql.postgresql_lang", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_lang.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_privs": {"py/object": "struct4.Module", "name": "postgresql_privs", "fqcn": "community.postgresql.postgresql_privs", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_privs.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_publication": {"py/object": "struct4.Module", "name": "postgresql_publication", "fqcn": "community.postgresql.postgresql_publication", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_publication.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_schema": {"py/object": "struct4.Module", "name": "postgresql_schema", "fqcn": "community.postgresql.postgresql_schema", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_schema.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_pg_hba": {"py/object": "struct4.Module", "name": "postgresql_pg_hba", "fqcn": "community.postgresql.postgresql_pg_hba", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_pg_hba.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_membership": {"py/object": "struct4.Module", "name": "postgresql_membership", "fqcn": "community.postgresql.postgresql_membership", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_membership.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_table": {"py/object": "struct4.Module", "name": "postgresql_table", "fqcn": "community.postgresql.postgresql_table", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_table.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_copy": {"py/object": "struct4.Module", "name": "postgresql_copy", "fqcn": "community.postgresql.postgresql_copy", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_copy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_slot": {"py/object": "struct4.Module", "name": "postgresql_slot", "fqcn": "community.postgresql.postgresql_slot", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_slot.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_subscription": {"py/object": "struct4.Module", "name": "postgresql_subscription", "fqcn": "community.postgresql.postgresql_subscription", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_query": {"py/object": "struct4.Module", "name": "postgresql_query", "fqcn": "community.postgresql.postgresql_query", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_query.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_ext": {"py/object": "struct4.Module", "name": "postgresql_ext", "fqcn": "community.postgresql.postgresql_ext", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_ext.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_user_obj_stat_info": {"py/object": "struct4.Module", "name": "postgresql_user_obj_stat_info", "fqcn": "community.postgresql.postgresql_user_obj_stat_info", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_user_obj_stat_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_set": {"py/object": "struct4.Module", "name": "postgresql_set", "fqcn": "community.postgresql.postgresql_set", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_set.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_info": {"py/object": "struct4.Module", "name": "postgresql_info", "fqcn": "community.postgresql.postgresql_info", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_db": {"py/object": "struct4.Module", "name": "postgresql_db", "fqcn": "community.postgresql.postgresql_db", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_db.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_idx": {"py/object": "struct4.Module", "name": "postgresql_idx", "fqcn": "community.postgresql.postgresql_idx", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_idx.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_owner": {"py/object": "struct4.Module", "name": "postgresql_owner", "fqcn": "community.postgresql.postgresql_owner", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_owner.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_tablespace": {"py/object": "struct4.Module", "name": "postgresql_tablespace", "fqcn": "community.postgresql.postgresql_tablespace", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_tablespace.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_ping": {"py/object": "struct4.Module", "name": "postgresql_ping", "fqcn": "community.postgresql.postgresql_ping", "collection": "community.postgresql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_ping.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bundler": {"py/object": "struct4.Module", "name": "bundler", "fqcn": "community.general.bundler", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/bundler.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pip_package_info": {"py/object": "struct4.Module", "name": "pip_package_info", "fqcn": "community.general.pip_package_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/pip_package_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.easy_install": {"py/object": "struct4.Module", "name": "easy_install", "fqcn": "community.general.easy_install", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/easy_install.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.composer": {"py/object": "struct4.Module", "name": "composer", "fqcn": "community.general.composer", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/composer.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.maven_artifact": {"py/object": "struct4.Module", "name": "maven_artifact", "fqcn": "community.general.maven_artifact", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/maven_artifact.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cargo": {"py/object": "struct4.Module", "name": "cargo", "fqcn": "community.general.cargo", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/cargo.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.npm": {"py/object": "struct4.Module", "name": "npm", "fqcn": "community.general.npm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/npm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.yarn": {"py/object": "struct4.Module", "name": "yarn", "fqcn": "community.general.yarn", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/yarn.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bower": {"py/object": "struct4.Module", "name": "bower", "fqcn": "community.general.bower", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/bower.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pear": {"py/object": "struct4.Module", "name": "pear", "fqcn": "community.general.pear", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/pear.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cpanm": {"py/object": "struct4.Module", "name": "cpanm", "fqcn": "community.general.cpanm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/cpanm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ansible_galaxy_install": {"py/object": "struct4.Module", "name": "ansible_galaxy_install", "fqcn": "community.general.ansible_galaxy_install", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/ansible_galaxy_install.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pipx": {"py/object": "struct4.Module", "name": "pipx", "fqcn": "community.general.pipx", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/pipx.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gem": {"py/object": "struct4.Module", "name": "gem", "fqcn": "community.general.gem", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/gem.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xbps": {"py/object": "struct4.Module", "name": "xbps", "fqcn": "community.general.xbps", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/xbps.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pkgutil": {"py/object": "struct4.Module", "name": "pkgutil", "fqcn": "community.general.pkgutil", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkgutil.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pacman": {"py/object": "struct4.Module", "name": "pacman", "fqcn": "community.general.pacman", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pacman.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pulp_repo": {"py/object": "struct4.Module", "name": "pulp_repo", "fqcn": "community.general.pulp_repo", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pulp_repo.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pkgng": {"py/object": "struct4.Module", "name": "pkgng", "fqcn": "community.general.pkgng", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkgng.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.copr": {"py/object": "struct4.Module", "name": "copr", "fqcn": "community.general.copr", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/copr.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.snap_alias": {"py/object": "struct4.Module", "name": "snap_alias", "fqcn": "community.general.snap_alias", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/snap_alias.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.zypper": {"py/object": "struct4.Module", "name": "zypper", "fqcn": "community.general.zypper", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/zypper.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.apt_repo": {"py/object": "struct4.Module", "name": "apt_repo", "fqcn": "community.general.apt_repo", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/apt_repo.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.swdepot": {"py/object": "struct4.Module", "name": "swdepot", "fqcn": "community.general.swdepot", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/swdepot.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.flatpak_remote": {"py/object": "struct4.Module", "name": "flatpak_remote", "fqcn": "community.general.flatpak_remote", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/flatpak_remote.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.layman": {"py/object": "struct4.Module", "name": "layman", "fqcn": "community.general.layman", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/layman.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pacman_key": {"py/object": "struct4.Module", "name": "pacman_key", "fqcn": "community.general.pacman_key", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pacman_key.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.portage": {"py/object": "struct4.Module", "name": "portage", "fqcn": "community.general.portage", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/portage.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.apk": {"py/object": "struct4.Module", "name": "apk", "fqcn": "community.general.apk", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/apk.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.snap": {"py/object": "struct4.Module", "name": "snap", "fqcn": "community.general.snap", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/snap.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.homebrew": {"py/object": "struct4.Module", "name": "homebrew", "fqcn": "community.general.homebrew", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/homebrew.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.mas": {"py/object": "struct4.Module", "name": "mas", "fqcn": "community.general.mas", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/mas.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redhat_subscription": {"py/object": "struct4.Module", "name": "redhat_subscription", "fqcn": "community.general.redhat_subscription", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/redhat_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.openbsd_pkg": {"py/object": "struct4.Module", "name": "openbsd_pkg", "fqcn": "community.general.openbsd_pkg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/openbsd_pkg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.zypper_repository": {"py/object": "struct4.Module", "name": "zypper_repository", "fqcn": "community.general.zypper_repository", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/zypper_repository.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.dnf_versionlock": {"py/object": "struct4.Module", "name": "dnf_versionlock", "fqcn": "community.general.dnf_versionlock", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/dnf_versionlock.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.urpmi": {"py/object": "struct4.Module", "name": "urpmi", "fqcn": "community.general.urpmi", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/urpmi.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.swupd": {"py/object": "struct4.Module", "name": "swupd", "fqcn": "community.general.swupd", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/swupd.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.homebrew_tap": {"py/object": "struct4.Module", "name": "homebrew_tap", "fqcn": "community.general.homebrew_tap", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/homebrew_tap.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rhn_channel": {"py/object": "struct4.Module", "name": "rhn_channel", "fqcn": "community.general.rhn_channel", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/rhn_channel.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pkgin": {"py/object": "struct4.Module", "name": "pkgin", "fqcn": "community.general.pkgin", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkgin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.svr4pkg": {"py/object": "struct4.Module", "name": "svr4pkg", "fqcn": "community.general.svr4pkg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/svr4pkg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.installp": {"py/object": "struct4.Module", "name": "installp", "fqcn": "community.general.installp", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/installp.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.homebrew_cask": {"py/object": "struct4.Module", "name": "homebrew_cask", "fqcn": "community.general.homebrew_cask", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/homebrew_cask.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sorcery": {"py/object": "struct4.Module", "name": "sorcery", "fqcn": "community.general.sorcery", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/sorcery.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.slackpkg": {"py/object": "struct4.Module", "name": "slackpkg", "fqcn": "community.general.slackpkg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/slackpkg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.flatpak": {"py/object": "struct4.Module", "name": "flatpak", "fqcn": "community.general.flatpak", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/flatpak.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rpm_ostree_pkg": {"py/object": "struct4.Module", "name": "rpm_ostree_pkg", "fqcn": "community.general.rpm_ostree_pkg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/rpm_ostree_pkg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.portinstall": {"py/object": "struct4.Module", "name": "portinstall", "fqcn": "community.general.portinstall", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/portinstall.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rhsm_repository": {"py/object": "struct4.Module", "name": "rhsm_repository", "fqcn": "community.general.rhsm_repository", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/rhsm_repository.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.yum_versionlock": {"py/object": "struct4.Module", "name": "yum_versionlock", "fqcn": "community.general.yum_versionlock", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/yum_versionlock.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pkg5": {"py/object": "struct4.Module", "name": "pkg5", "fqcn": "community.general.pkg5", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkg5.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rhsm_release": {"py/object": "struct4.Module", "name": "rhsm_release", "fqcn": "community.general.rhsm_release", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/rhsm_release.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.opkg": {"py/object": "struct4.Module", "name": "opkg", "fqcn": "community.general.opkg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/opkg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pkg5_publisher": {"py/object": "struct4.Module", "name": "pkg5_publisher", "fqcn": "community.general.pkg5_publisher", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkg5_publisher.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rhn_register": {"py/object": "struct4.Module", "name": "rhn_register", "fqcn": "community.general.rhn_register", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/rhn_register.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.apt_rpm": {"py/object": "struct4.Module", "name": "apt_rpm", "fqcn": "community.general.apt_rpm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/apt_rpm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.macports": {"py/object": "struct4.Module", "name": "macports", "fqcn": "community.general.macports", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/macports.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.odbc": {"py/object": "struct4.Module", "name": "odbc", "fqcn": "community.general.odbc", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/odbc.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redis_data_info": {"py/object": "struct4.Module", "name": "redis_data_info", "fqcn": "community.general.redis_data_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/redis_data_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redis_data_incr": {"py/object": "struct4.Module", "name": "redis_data_incr", "fqcn": "community.general.redis_data_incr", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/redis_data_incr.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.kibana_plugin": {"py/object": "struct4.Module", "name": "kibana_plugin", "fqcn": "community.general.kibana_plugin", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/kibana_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.elasticsearch_plugin": {"py/object": "struct4.Module", "name": "elasticsearch_plugin", "fqcn": "community.general.elasticsearch_plugin", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/elasticsearch_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.riak": {"py/object": "struct4.Module", "name": "riak", "fqcn": "community.general.riak", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/riak.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redis": {"py/object": "struct4.Module", "name": "redis", "fqcn": "community.general.redis", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/redis.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redis_data": {"py/object": "struct4.Module", "name": "redis_data", "fqcn": "community.general.redis_data", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/redis_data.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redis_info": {"py/object": "struct4.Module", "name": "redis_info", "fqcn": "community.general.redis_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/redis_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.influxdb_user": {"py/object": "struct4.Module", "name": "influxdb_user", "fqcn": "community.general.influxdb_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.influxdb_write": {"py/object": "struct4.Module", "name": "influxdb_write", "fqcn": "community.general.influxdb_write", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_write.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.influxdb_query": {"py/object": "struct4.Module", "name": "influxdb_query", "fqcn": "community.general.influxdb_query", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_query.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.influxdb_database": {"py/object": "struct4.Module", "name": "influxdb_database", "fqcn": "community.general.influxdb_database", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_database.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.influxdb_retention_policy": {"py/object": "struct4.Module", "name": "influxdb_retention_policy", "fqcn": "community.general.influxdb_retention_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_retention_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.aerospike_migrations": {"py/object": "struct4.Module", "name": "aerospike_migrations", "fqcn": "community.general.aerospike_migrations", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/aerospike/aerospike_migrations.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vertica_role": {"py/object": "struct4.Module", "name": "vertica_role", "fqcn": "community.general.vertica_role", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_role.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vertica_user": {"py/object": "struct4.Module", "name": "vertica_user", "fqcn": "community.general.vertica_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vertica_configuration": {"py/object": "struct4.Module", "name": "vertica_configuration", "fqcn": "community.general.vertica_configuration", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_configuration.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vertica_info": {"py/object": "struct4.Module", "name": "vertica_info", "fqcn": "community.general.vertica_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vertica_schema": {"py/object": "struct4.Module", "name": "vertica_schema", "fqcn": "community.general.vertica_schema", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_schema.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.mssql_script": {"py/object": "struct4.Module", "name": "mssql_script", "fqcn": "community.general.mssql_script", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/mssql/mssql_script.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.mssql_db": {"py/object": "struct4.Module", "name": "mssql_db", "fqcn": "community.general.mssql_db", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/mssql/mssql_db.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hana_query": {"py/object": "struct4.Module", "name": "hana_query", "fqcn": "community.general.hana_query", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/database/saphana/hana_query.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.onepassword_info": {"py/object": "struct4.Module", "name": "onepassword_info", "fqcn": "community.general.onepassword_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/onepassword_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_role": {"py/object": "struct4.Module", "name": "ipa_role", "fqcn": "community.general.ipa_role", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_role.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_hbacrule": {"py/object": "struct4.Module", "name": "ipa_hbacrule", "fqcn": "community.general.ipa_hbacrule", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_hbacrule.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_host": {"py/object": "struct4.Module", "name": "ipa_host", "fqcn": "community.general.ipa_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_group": {"py/object": "struct4.Module", "name": "ipa_group", "fqcn": "community.general.ipa_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_vault": {"py/object": "struct4.Module", "name": "ipa_vault", "fqcn": "community.general.ipa_vault", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_vault.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_sudocmdgroup": {"py/object": "struct4.Module", "name": "ipa_sudocmdgroup", "fqcn": "community.general.ipa_sudocmdgroup", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_sudocmdgroup.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_user": {"py/object": "struct4.Module", "name": "ipa_user", "fqcn": "community.general.ipa_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_otptoken": {"py/object": "struct4.Module", "name": "ipa_otptoken", "fqcn": "community.general.ipa_otptoken", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_otptoken.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_dnszone": {"py/object": "struct4.Module", "name": "ipa_dnszone", "fqcn": "community.general.ipa_dnszone", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_dnszone.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_otpconfig": {"py/object": "struct4.Module", "name": "ipa_otpconfig", "fqcn": "community.general.ipa_otpconfig", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_otpconfig.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_sudorule": {"py/object": "struct4.Module", "name": "ipa_sudorule", "fqcn": "community.general.ipa_sudorule", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_sudorule.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_service": {"py/object": "struct4.Module", "name": "ipa_service", "fqcn": "community.general.ipa_service", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_service.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_subca": {"py/object": "struct4.Module", "name": "ipa_subca", "fqcn": "community.general.ipa_subca", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_subca.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_pwpolicy": {"py/object": "struct4.Module", "name": "ipa_pwpolicy", "fqcn": "community.general.ipa_pwpolicy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_pwpolicy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_sudocmd": {"py/object": "struct4.Module", "name": "ipa_sudocmd", "fqcn": "community.general.ipa_sudocmd", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_sudocmd.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_hostgroup": {"py/object": "struct4.Module", "name": "ipa_hostgroup", "fqcn": "community.general.ipa_hostgroup", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_hostgroup.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_dnsrecord": {"py/object": "struct4.Module", "name": "ipa_dnsrecord", "fqcn": "community.general.ipa_dnsrecord", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_dnsrecord.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_config": {"py/object": "struct4.Module", "name": "ipa_config", "fqcn": "community.general.ipa_config", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_config.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keycloak_group": {"py/object": "struct4.Module", "name": "keycloak_group", "fqcn": "community.general.keycloak_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keycloak_user_federation": {"py/object": "struct4.Module", "name": "keycloak_user_federation", "fqcn": "community.general.keycloak_user_federation", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_user_federation.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keycloak_realm_info": {"py/object": "struct4.Module", "name": "keycloak_realm_info", "fqcn": "community.general.keycloak_realm_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_realm_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keycloak_authentication": {"py/object": "struct4.Module", "name": "keycloak_authentication", "fqcn": "community.general.keycloak_authentication", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_authentication.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keycloak_client": {"py/object": "struct4.Module", "name": "keycloak_client", "fqcn": "community.general.keycloak_client", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_client.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keycloak_realm": {"py/object": "struct4.Module", "name": "keycloak_realm", "fqcn": "community.general.keycloak_realm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_realm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keycloak_identity_provider": {"py/object": "struct4.Module", "name": "keycloak_identity_provider", "fqcn": "community.general.keycloak_identity_provider", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_identity_provider.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keycloak_clienttemplate": {"py/object": "struct4.Module", "name": "keycloak_clienttemplate", "fqcn": "community.general.keycloak_clienttemplate", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_clienttemplate.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keycloak_client_rolemapping": {"py/object": "struct4.Module", "name": "keycloak_client_rolemapping", "fqcn": "community.general.keycloak_client_rolemapping", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_client_rolemapping.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keycloak_role": {"py/object": "struct4.Module", "name": "keycloak_role", "fqcn": "community.general.keycloak_role", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_role.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keycloak_clientscope": {"py/object": "struct4.Module", "name": "keycloak_clientscope", "fqcn": "community.general.keycloak_clientscope", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_clientscope.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.opendj_backendprop": {"py/object": "struct4.Module", "name": "opendj_backendprop", "fqcn": "community.general.opendj_backendprop", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/opendj/opendj_backendprop.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.mail": {"py/object": "struct4.Module", "name": "mail", "fqcn": "community.general.mail", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/mail.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.matrix": {"py/object": "struct4.Module", "name": "matrix", "fqcn": "community.general.matrix", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/matrix.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.grove": {"py/object": "struct4.Module", "name": "grove", "fqcn": "community.general.grove", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/grove.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jabber": {"py/object": "struct4.Module", "name": "jabber", "fqcn": "community.general.jabber", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/jabber.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hipchat": {"py/object": "struct4.Module", "name": "hipchat", "fqcn": "community.general.hipchat", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/hipchat.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bearychat": {"py/object": "struct4.Module", "name": "bearychat", "fqcn": "community.general.bearychat", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/bearychat.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.telegram": {"py/object": "struct4.Module", "name": "telegram", "fqcn": "community.general.telegram", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/telegram.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.say": {"py/object": "struct4.Module", "name": "say", "fqcn": "community.general.say", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/say.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pushover": {"py/object": "struct4.Module", "name": "pushover", "fqcn": "community.general.pushover", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/pushover.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.discord": {"py/object": "struct4.Module", "name": "discord", "fqcn": "community.general.discord", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/discord.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.irc": {"py/object": "struct4.Module", "name": "irc", "fqcn": "community.general.irc", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/irc.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.mattermost": {"py/object": "struct4.Module", "name": "mattermost", "fqcn": "community.general.mattermost", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/mattermost.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nexmo": {"py/object": "struct4.Module", "name": "nexmo", "fqcn": "community.general.nexmo", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/nexmo.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.typetalk": {"py/object": "struct4.Module", "name": "typetalk", "fqcn": "community.general.typetalk", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/typetalk.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.mqtt": {"py/object": "struct4.Module", "name": "mqtt", "fqcn": "community.general.mqtt", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/mqtt.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.office_365_connector_card": {"py/object": "struct4.Module", "name": "office_365_connector_card", "fqcn": "community.general.office_365_connector_card", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/office_365_connector_card.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.syslogger": {"py/object": "struct4.Module", "name": "syslogger", "fqcn": "community.general.syslogger", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/syslogger.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.campfire": {"py/object": "struct4.Module", "name": "campfire", "fqcn": "community.general.campfire", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/campfire.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.flowdock": {"py/object": "struct4.Module", "name": "flowdock", "fqcn": "community.general.flowdock", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/flowdock.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sendgrid": {"py/object": "struct4.Module", "name": "sendgrid", "fqcn": "community.general.sendgrid", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/sendgrid.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cisco_webex": {"py/object": "struct4.Module", "name": "cisco_webex", "fqcn": "community.general.cisco_webex", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/cisco_webex.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.twilio": {"py/object": "struct4.Module", "name": "twilio", "fqcn": "community.general.twilio", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/twilio.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pushbullet": {"py/object": "struct4.Module", "name": "pushbullet", "fqcn": "community.general.pushbullet", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/pushbullet.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.slack": {"py/object": "struct4.Module", "name": "slack", "fqcn": "community.general.slack", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/slack.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rocketchat": {"py/object": "struct4.Module", "name": "rocketchat", "fqcn": "community.general.rocketchat", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/rocketchat.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.logentries_msg": {"py/object": "struct4.Module", "name": "logentries_msg", "fqcn": "community.general.logentries_msg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/logentries_msg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.catapult": {"py/object": "struct4.Module", "name": "catapult", "fqcn": "community.general.catapult", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/catapult.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.wakeonlan": {"py/object": "struct4.Module", "name": "wakeonlan", "fqcn": "community.general.wakeonlan", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/wakeonlan.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.imc_rest": {"py/object": "struct4.Module", "name": "imc_rest", "fqcn": "community.general.imc_rest", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/imc/imc_rest.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lxca_nodes": {"py/object": "struct4.Module", "name": "lxca_nodes", "fqcn": "community.general.lxca_nodes", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/lxca/lxca_nodes.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lxca_cmms": {"py/object": "struct4.Module", "name": "lxca_cmms", "fqcn": "community.general.lxca_cmms", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/lxca/lxca_cmms.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.stacki_host": {"py/object": "struct4.Module", "name": "stacki_host", "fqcn": "community.general.stacki_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/stacki/stacki_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ilo_redfish_config": {"py/object": "struct4.Module", "name": "ilo_redfish_config", "fqcn": "community.general.ilo_redfish_config", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/ilo_redfish_config.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ilo_redfish_info": {"py/object": "struct4.Module", "name": "ilo_redfish_info", "fqcn": "community.general.ilo_redfish_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/ilo_redfish_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.idrac_redfish_config": {"py/object": "struct4.Module", "name": "idrac_redfish_config", "fqcn": "community.general.idrac_redfish_config", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/idrac_redfish_config.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.idrac_redfish_info": {"py/object": "struct4.Module", "name": "idrac_redfish_info", "fqcn": "community.general.idrac_redfish_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/idrac_redfish_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redfish_config": {"py/object": "struct4.Module", "name": "redfish_config", "fqcn": "community.general.redfish_config", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/redfish_config.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.idrac_redfish_command": {"py/object": "struct4.Module", "name": "idrac_redfish_command", "fqcn": "community.general.idrac_redfish_command", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/idrac_redfish_command.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redfish_command": {"py/object": "struct4.Module", "name": "redfish_command", "fqcn": "community.general.redfish_command", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/redfish_command.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redfish_info": {"py/object": "struct4.Module", "name": "redfish_info", "fqcn": "community.general.redfish_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/redfish_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_san_manager": {"py/object": "struct4.Module", "name": "oneview_san_manager", "fqcn": "community.general.oneview_san_manager", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_san_manager.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_fcoe_network": {"py/object": "struct4.Module", "name": "oneview_fcoe_network", "fqcn": "community.general.oneview_fcoe_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_fcoe_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_logical_interconnect_group_info": {"py/object": "struct4.Module", "name": "oneview_logical_interconnect_group_info", "fqcn": "community.general.oneview_logical_interconnect_group_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_logical_interconnect_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_logical_interconnect_group": {"py/object": "struct4.Module", "name": "oneview_logical_interconnect_group", "fqcn": "community.general.oneview_logical_interconnect_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_logical_interconnect_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_network_set_info": {"py/object": "struct4.Module", "name": "oneview_network_set_info", "fqcn": "community.general.oneview_network_set_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_network_set_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_san_manager_info": {"py/object": "struct4.Module", "name": "oneview_san_manager_info", "fqcn": "community.general.oneview_san_manager_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_san_manager_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_fc_network_info": {"py/object": "struct4.Module", "name": "oneview_fc_network_info", "fqcn": "community.general.oneview_fc_network_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_fc_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_network_set": {"py/object": "struct4.Module", "name": "oneview_network_set", "fqcn": "community.general.oneview_network_set", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_network_set.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_fc_network": {"py/object": "struct4.Module", "name": "oneview_fc_network", "fqcn": "community.general.oneview_fc_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_fc_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_fcoe_network_info": {"py/object": "struct4.Module", "name": "oneview_fcoe_network_info", "fqcn": "community.general.oneview_fcoe_network_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_fcoe_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_ethernet_network": {"py/object": "struct4.Module", "name": "oneview_ethernet_network", "fqcn": "community.general.oneview_ethernet_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_ethernet_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_datacenter_info": {"py/object": "struct4.Module", "name": "oneview_datacenter_info", "fqcn": "community.general.oneview_datacenter_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_datacenter_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_enclosure_info": {"py/object": "struct4.Module", "name": "oneview_enclosure_info", "fqcn": "community.general.oneview_enclosure_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_enclosure_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_ethernet_network_info": {"py/object": "struct4.Module", "name": "oneview_ethernet_network_info", "fqcn": "community.general.oneview_ethernet_network_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_ethernet_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xcc_redfish_command": {"py/object": "struct4.Module", "name": "xcc_redfish_command", "fqcn": "community.general.xcc_redfish_command", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/lenovoxcc/xcc_redfish_command.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cobbler_sync": {"py/object": "struct4.Module", "name": "cobbler_sync", "fqcn": "community.general.cobbler_sync", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/cobbler/cobbler_sync.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cobbler_system": {"py/object": "struct4.Module", "name": "cobbler_system", "fqcn": "community.general.cobbler_system", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/cobbler/cobbler_system.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hpilo_boot": {"py/object": "struct4.Module", "name": "hpilo_boot", "fqcn": "community.general.hpilo_boot", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/hpilo/hpilo_boot.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hpilo_info": {"py/object": "struct4.Module", "name": "hpilo_info", "fqcn": "community.general.hpilo_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/hpilo/hpilo_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hponcfg": {"py/object": "struct4.Module", "name": "hponcfg", "fqcn": "community.general.hponcfg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/hpilo/hponcfg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipmi_boot": {"py/object": "struct4.Module", "name": "ipmi_boot", "fqcn": "community.general.ipmi_boot", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/ipmi/ipmi_boot.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipmi_power": {"py/object": "struct4.Module", "name": "ipmi_power", "fqcn": "community.general.ipmi_power", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/ipmi/ipmi_power.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_tags": {"py/object": "struct4.Module", "name": "manageiq_tags", "fqcn": "community.general.manageiq_tags", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_tags.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_user": {"py/object": "struct4.Module", "name": "manageiq_user", "fqcn": "community.general.manageiq_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_policies": {"py/object": "struct4.Module", "name": "manageiq_policies", "fqcn": "community.general.manageiq_policies", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_policies.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_group": {"py/object": "struct4.Module", "name": "manageiq_group", "fqcn": "community.general.manageiq_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_provider": {"py/object": "struct4.Module", "name": "manageiq_provider", "fqcn": "community.general.manageiq_provider", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_provider.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_tenant": {"py/object": "struct4.Module", "name": "manageiq_tenant", "fqcn": "community.general.manageiq_tenant", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_tenant.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_alert_profiles": {"py/object": "struct4.Module", "name": "manageiq_alert_profiles", "fqcn": "community.general.manageiq_alert_profiles", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_alert_profiles.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_alerts": {"py/object": "struct4.Module", "name": "manageiq_alerts", "fqcn": "community.general.manageiq_alerts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_alerts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rundeck_job_run": {"py/object": "struct4.Module", "name": "rundeck_job_run", "fqcn": "community.general.rundeck_job_run", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/rundeck_job_run.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.supervisorctl": {"py/object": "struct4.Module", "name": "supervisorctl", "fqcn": "community.general.supervisorctl", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/supervisorctl.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.htpasswd": {"py/object": "struct4.Module", "name": "htpasswd", "fqcn": "community.general.htpasswd", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/htpasswd.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jboss": {"py/object": "struct4.Module", "name": "jboss", "fqcn": "community.general.jboss", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jboss.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.apache2_module": {"py/object": "struct4.Module", "name": "apache2_module", "fqcn": "community.general.apache2_module", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/apache2_module.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.taiga_issue": {"py/object": "struct4.Module", "name": "taiga_issue", "fqcn": "community.general.taiga_issue", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/taiga_issue.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nginx_status_info": {"py/object": "struct4.Module", "name": "nginx_status_info", "fqcn": "community.general.nginx_status_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/nginx_status_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jenkins_build": {"py/object": "struct4.Module", "name": "jenkins_build", "fqcn": "community.general.jenkins_build", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_build.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rundeck_project": {"py/object": "struct4.Module", "name": "rundeck_project", "fqcn": "community.general.rundeck_project", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/rundeck_project.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jenkins_job_info": {"py/object": "struct4.Module", "name": "jenkins_job_info", "fqcn": "community.general.jenkins_job_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_job_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gunicorn": {"py/object": "struct4.Module", "name": "gunicorn", "fqcn": "community.general.gunicorn", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/gunicorn.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rundeck_job_executions_info": {"py/object": "struct4.Module", "name": "rundeck_job_executions_info", "fqcn": "community.general.rundeck_job_executions_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/rundeck_job_executions_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jenkins_script": {"py/object": "struct4.Module", "name": "jenkins_script", "fqcn": "community.general.jenkins_script", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_script.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jenkins_job": {"py/object": "struct4.Module", "name": "jenkins_job", "fqcn": "community.general.jenkins_job", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_job.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.django_manage": {"py/object": "struct4.Module", "name": "django_manage", "fqcn": "community.general.django_manage", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/django_manage.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jira": {"py/object": "struct4.Module", "name": "jira", "fqcn": "community.general.jira", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jira.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jenkins_plugin": {"py/object": "struct4.Module", "name": "jenkins_plugin", "fqcn": "community.general.jenkins_plugin", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.apache2_mod_proxy": {"py/object": "struct4.Module", "name": "apache2_mod_proxy", "fqcn": "community.general.apache2_mod_proxy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/apache2_mod_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.deploy_helper": {"py/object": "struct4.Module", "name": "deploy_helper", "fqcn": "community.general.deploy_helper", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/deploy_helper.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rundeck_acl_policy": {"py/object": "struct4.Module", "name": "rundeck_acl_policy", "fqcn": "community.general.rundeck_acl_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/rundeck_acl_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ejabberd_user": {"py/object": "struct4.Module", "name": "ejabberd_user", "fqcn": "community.general.ejabberd_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/ejabberd_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_ca_host_key_cert": {"py/object": "struct4.Module", "name": "utm_ca_host_key_cert", "fqcn": "community.general.utm_ca_host_key_cert", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_ca_host_key_cert.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_ca_host_key_cert_info": {"py/object": "struct4.Module", "name": "utm_ca_host_key_cert_info", "fqcn": "community.general.utm_ca_host_key_cert_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_ca_host_key_cert_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_proxy_location_info": {"py/object": "struct4.Module", "name": "utm_proxy_location_info", "fqcn": "community.general.utm_proxy_location_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_location_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_network_interface_address": {"py/object": "struct4.Module", "name": "utm_network_interface_address", "fqcn": "community.general.utm_network_interface_address", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_network_interface_address.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_proxy_frontend": {"py/object": "struct4.Module", "name": "utm_proxy_frontend", "fqcn": "community.general.utm_proxy_frontend", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_frontend.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_network_interface_address_info": {"py/object": "struct4.Module", "name": "utm_network_interface_address_info", "fqcn": "community.general.utm_network_interface_address_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_network_interface_address_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_proxy_location": {"py/object": "struct4.Module", "name": "utm_proxy_location", "fqcn": "community.general.utm_proxy_location", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_location.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_aaa_group_info": {"py/object": "struct4.Module", "name": "utm_aaa_group_info", "fqcn": "community.general.utm_aaa_group_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_aaa_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_aaa_group": {"py/object": "struct4.Module", "name": "utm_aaa_group", "fqcn": "community.general.utm_aaa_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_aaa_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_dns_host": {"py/object": "struct4.Module", "name": "utm_dns_host", "fqcn": "community.general.utm_dns_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_dns_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_proxy_frontend_info": {"py/object": "struct4.Module", "name": "utm_proxy_frontend_info", "fqcn": "community.general.utm_proxy_frontend_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_frontend_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_proxy_exception": {"py/object": "struct4.Module", "name": "utm_proxy_exception", "fqcn": "community.general.utm_proxy_exception", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_exception.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_proxy_auth_profile": {"py/object": "struct4.Module", "name": "utm_proxy_auth_profile", "fqcn": "community.general.utm_proxy_auth_profile", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_auth_profile.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.etcd3": {"py/object": "struct4.Module", "name": "etcd3", "fqcn": "community.general.etcd3", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/etcd3.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.znode": {"py/object": "struct4.Module", "name": "znode", "fqcn": "community.general.znode", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/znode.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pacemaker_cluster": {"py/object": "struct4.Module", "name": "pacemaker_cluster", "fqcn": "community.general.pacemaker_cluster", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/pacemaker_cluster.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nomad_job_info": {"py/object": "struct4.Module", "name": "nomad_job_info", "fqcn": "community.general.nomad_job_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/nomad/nomad_job_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nomad_job": {"py/object": "struct4.Module", "name": "nomad_job", "fqcn": "community.general.nomad_job", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/nomad/nomad_job.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.consul_acl": {"py/object": "struct4.Module", "name": "consul_acl", "fqcn": "community.general.consul_acl", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/consul/consul_acl.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.consul_session": {"py/object": "struct4.Module", "name": "consul_session", "fqcn": "community.general.consul_session", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/consul/consul_session.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.consul": {"py/object": "struct4.Module", "name": "consul", "fqcn": "community.general.consul", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/consul/consul.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.consul_kv": {"py/object": "struct4.Module", "name": "consul_kv", "fqcn": "community.general.consul_kv", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/consul/consul_kv.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ss_3par_cpg": {"py/object": "struct4.Module", "name": "ss_3par_cpg", "fqcn": "community.general.ss_3par_cpg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/hpe3par/ss_3par_cpg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vexata_volume": {"py/object": "struct4.Module", "name": "vexata_volume", "fqcn": "community.general.vexata_volume", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/vexata/vexata_volume.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vexata_eg": {"py/object": "struct4.Module", "name": "vexata_eg", "fqcn": "community.general.vexata_eg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/vexata/vexata_eg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pmem": {"py/object": "struct4.Module", "name": "pmem", "fqcn": "community.general.pmem", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/pmem/pmem.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ibm_sa_host": {"py/object": "struct4.Module", "name": "ibm_sa_host", "fqcn": "community.general.ibm_sa_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ibm_sa_domain": {"py/object": "struct4.Module", "name": "ibm_sa_domain", "fqcn": "community.general.ibm_sa_domain", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_domain.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ibm_sa_host_ports": {"py/object": "struct4.Module", "name": "ibm_sa_host_ports", "fqcn": "community.general.ibm_sa_host_ports", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_host_ports.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ibm_sa_vol_map": {"py/object": "struct4.Module", "name": "ibm_sa_vol_map", "fqcn": "community.general.ibm_sa_vol_map", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_vol_map.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ibm_sa_pool": {"py/object": "struct4.Module", "name": "ibm_sa_pool", "fqcn": "community.general.ibm_sa_pool", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_pool.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ibm_sa_vol": {"py/object": "struct4.Module", "name": "ibm_sa_vol", "fqcn": "community.general.ibm_sa_vol", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_vol.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.zfs_facts": {"py/object": "struct4.Module", "name": "zfs_facts", "fqcn": "community.general.zfs_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/zfs/zfs_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.zfs": {"py/object": "struct4.Module", "name": "zfs", "fqcn": "community.general.zfs", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/zfs/zfs.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.zfs_delegate_admin": {"py/object": "struct4.Module", "name": "zfs_delegate_admin", "fqcn": "community.general.zfs_delegate_admin", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/zfs/zfs_delegate_admin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.zpool_facts": {"py/object": "struct4.Module", "name": "zpool_facts", "fqcn": "community.general.zpool_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/zfs/zpool_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.emc_vnx_sg_member": {"py/object": "struct4.Module", "name": "emc_vnx_sg_member", "fqcn": "community.general.emc_vnx_sg_member", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/emc/emc_vnx_sg_member.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cronvar": {"py/object": "struct4.Module", "name": "cronvar", "fqcn": "community.general.cronvar", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/cronvar.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.osx_defaults": {"py/object": "struct4.Module", "name": "osx_defaults", "fqcn": "community.general.osx_defaults", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/osx_defaults.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.aix_lvg": {"py/object": "struct4.Module", "name": "aix_lvg", "fqcn": "community.general.aix_lvg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_lvg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.iptables_state": {"py/object": "struct4.Module", "name": "iptables_state", "fqcn": "community.general.iptables_state", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/iptables_state.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.selogin": {"py/object": "struct4.Module", "name": "selogin", "fqcn": "community.general.selogin", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/selogin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sefcontext": {"py/object": "struct4.Module", "name": "sefcontext", "fqcn": "community.general.sefcontext", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/sefcontext.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.syspatch": {"py/object": "struct4.Module", "name": "syspatch", "fqcn": "community.general.syspatch", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/syspatch.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.crypttab": {"py/object": "struct4.Module", "name": "crypttab", "fqcn": "community.general.crypttab", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/crypttab.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gconftool2": {"py/object": "struct4.Module", "name": "gconftool2", "fqcn": "community.general.gconftool2", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/gconftool2.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.open_iscsi": {"py/object": "struct4.Module", "name": "open_iscsi", "fqcn": "community.general.open_iscsi", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/open_iscsi.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.aix_inittab": {"py/object": "struct4.Module", "name": "aix_inittab", "fqcn": "community.general.aix_inittab", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_inittab.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.dpkg_divert": {"py/object": "struct4.Module", "name": "dpkg_divert", "fqcn": "community.general.dpkg_divert", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/dpkg_divert.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ohai": {"py/object": "struct4.Module", "name": "ohai", "fqcn": "community.general.ohai", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/ohai.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xfconf": {"py/object": "struct4.Module", "name": "xfconf", "fqcn": "community.general.xfconf", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/xfconf.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.modprobe": {"py/object": "struct4.Module", "name": "modprobe", "fqcn": "community.general.modprobe", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/modprobe.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.filesystem": {"py/object": "struct4.Module", "name": "filesystem", "fqcn": "community.general.filesystem", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/filesystem.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.homectl": {"py/object": "struct4.Module", "name": "homectl", "fqcn": "community.general.homectl", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/homectl.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.facter": {"py/object": "struct4.Module", "name": "facter", "fqcn": "community.general.facter", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/facter.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.shutdown": {"py/object": "struct4.Module", "name": "shutdown", "fqcn": "community.general.shutdown", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/shutdown.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gconftool2_info": {"py/object": "struct4.Module", "name": "gconftool2_info", "fqcn": "community.general.gconftool2_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/gconftool2_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.dconf": {"py/object": "struct4.Module", "name": "dconf", "fqcn": "community.general.dconf", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/dconf.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.beadm": {"py/object": "struct4.Module", "name": "beadm", "fqcn": "community.general.beadm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/beadm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.mksysb": {"py/object": "struct4.Module", "name": "mksysb", "fqcn": "community.general.mksysb", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/mksysb.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xfs_quota": {"py/object": "struct4.Module", "name": "xfs_quota", "fqcn": "community.general.xfs_quota", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/xfs_quota.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ufw": {"py/object": "struct4.Module", "name": "ufw", "fqcn": "community.general.ufw", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/ufw.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.solaris_zone": {"py/object": "struct4.Module", "name": "solaris_zone", "fqcn": "community.general.solaris_zone", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/solaris_zone.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xfconf_info": {"py/object": "struct4.Module", "name": "xfconf_info", "fqcn": "community.general.xfconf_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/xfconf_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.listen_ports_facts": {"py/object": "struct4.Module", "name": "listen_ports_facts", "fqcn": "community.general.listen_ports_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/listen_ports_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nosh": {"py/object": "struct4.Module", "name": "nosh", "fqcn": "community.general.nosh", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/nosh.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lbu": {"py/object": "struct4.Module", "name": "lbu", "fqcn": "community.general.lbu", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/lbu.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.aix_filesystem": {"py/object": "struct4.Module", "name": "aix_filesystem", "fqcn": "community.general.aix_filesystem", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_filesystem.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pamd": {"py/object": "struct4.Module", "name": "pamd", "fqcn": "community.general.pamd", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/pamd.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.aix_lvol": {"py/object": "struct4.Module", "name": "aix_lvol", "fqcn": "community.general.aix_lvol", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_lvol.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sysupgrade": {"py/object": "struct4.Module", "name": "sysupgrade", "fqcn": "community.general.sysupgrade", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/sysupgrade.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.svc": {"py/object": "struct4.Module", "name": "svc", "fqcn": "community.general.svc", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/svc.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vdo": {"py/object": "struct4.Module", "name": "vdo", "fqcn": "community.general.vdo", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/vdo.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keyring": {"py/object": "struct4.Module", "name": "keyring", "fqcn": "community.general.keyring", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/keyring.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.openwrt_init": {"py/object": "struct4.Module", "name": "openwrt_init", "fqcn": "community.general.openwrt_init", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/openwrt_init.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ssh_config": {"py/object": "struct4.Module", "name": "ssh_config", "fqcn": "community.general.ssh_config", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/ssh_config.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.capabilities": {"py/object": "struct4.Module", "name": "capabilities", "fqcn": "community.general.capabilities", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/capabilities.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.java_keystore": {"py/object": "struct4.Module", "name": "java_keystore", "fqcn": "community.general.java_keystore", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/java_keystore.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.puppet": {"py/object": "struct4.Module", "name": "puppet", "fqcn": "community.general.puppet", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/puppet.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.runit": {"py/object": "struct4.Module", "name": "runit", "fqcn": "community.general.runit", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/runit.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sudoers": {"py/object": "struct4.Module", "name": "sudoers", "fqcn": "community.general.sudoers", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/sudoers.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pam_limits": {"py/object": "struct4.Module", "name": "pam_limits", "fqcn": "community.general.pam_limits", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/pam_limits.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pids": {"py/object": "struct4.Module", "name": "pids", "fqcn": "community.general.pids", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/pids.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.awall": {"py/object": "struct4.Module", "name": "awall", "fqcn": "community.general.awall", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/awall.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.kernel_blacklist": {"py/object": "struct4.Module", "name": "kernel_blacklist", "fqcn": "community.general.kernel_blacklist", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/kernel_blacklist.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.parted": {"py/object": "struct4.Module", "name": "parted", "fqcn": "community.general.parted", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/parted.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lvol": {"py/object": "struct4.Module", "name": "lvol", "fqcn": "community.general.lvol", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/lvol.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sap_task_list_execute": {"py/object": "struct4.Module", "name": "sap_task_list_execute", "fqcn": "community.general.sap_task_list_execute", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/sap_task_list_execute.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.make": {"py/object": "struct4.Module", "name": "make", "fqcn": "community.general.make", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/make.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.launchd": {"py/object": "struct4.Module", "name": "launchd", "fqcn": "community.general.launchd", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/launchd.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.java_cert": {"py/object": "struct4.Module", "name": "java_cert", "fqcn": "community.general.java_cert", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/java_cert.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lvg": {"py/object": "struct4.Module", "name": "lvg", "fqcn": "community.general.lvg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/lvg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.locale_gen": {"py/object": "struct4.Module", "name": "locale_gen", "fqcn": "community.general.locale_gen", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/locale_gen.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keyring_info": {"py/object": "struct4.Module", "name": "keyring_info", "fqcn": "community.general.keyring_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/keyring_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sysrc": {"py/object": "struct4.Module", "name": "sysrc", "fqcn": "community.general.sysrc", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/sysrc.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.timezone": {"py/object": "struct4.Module", "name": "timezone", "fqcn": "community.general.timezone", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/timezone.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.seport": {"py/object": "struct4.Module", "name": "seport", "fqcn": "community.general.seport", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/seport.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.python_requirements_info": {"py/object": "struct4.Module", "name": "python_requirements_info", "fqcn": "community.general.python_requirements_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/python_requirements_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.alternatives": {"py/object": "struct4.Module", "name": "alternatives", "fqcn": "community.general.alternatives", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/alternatives.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.interfaces_file": {"py/object": "struct4.Module", "name": "interfaces_file", "fqcn": "community.general.interfaces_file", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/interfaces_file.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.aix_devices": {"py/object": "struct4.Module", "name": "aix_devices", "fqcn": "community.general.aix_devices", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_devices.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.selinux_permissive": {"py/object": "struct4.Module", "name": "selinux_permissive", "fqcn": "community.general.selinux_permissive", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/system/selinux_permissive.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ali_instance": {"py/object": "struct4.Module", "name": "ali_instance", "fqcn": "community.general.ali_instance", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/alicloud/ali_instance.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ali_instance_info": {"py/object": "struct4.Module", "name": "ali_instance_info", "fqcn": "community.general.ali_instance_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/alicloud/ali_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.webfaction_site": {"py/object": "struct4.Module", "name": "webfaction_site", "fqcn": "community.general.webfaction_site", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_site.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.webfaction_domain": {"py/object": "struct4.Module", "name": "webfaction_domain", "fqcn": "community.general.webfaction_domain", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_domain.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.webfaction_db": {"py/object": "struct4.Module", "name": "webfaction_db", "fqcn": "community.general.webfaction_db", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_db.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.webfaction_mailbox": {"py/object": "struct4.Module", "name": "webfaction_mailbox", "fqcn": "community.general.webfaction_mailbox", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_mailbox.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.webfaction_app": {"py/object": "struct4.Module", "name": "webfaction_app", "fqcn": "community.general.webfaction_app", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_app.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.serverless": {"py/object": "struct4.Module", "name": "serverless", "fqcn": "community.general.serverless", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/serverless.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox_domain_info": {"py/object": "struct4.Module", "name": "proxmox_domain_info", "fqcn": "community.general.proxmox_domain_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_domain_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rhevm": {"py/object": "struct4.Module", "name": "rhevm", "fqcn": "community.general.rhevm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/rhevm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox_tasks_info": {"py/object": "struct4.Module", "name": "proxmox_tasks_info", "fqcn": "community.general.proxmox_tasks_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_tasks_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox_snap": {"py/object": "struct4.Module", "name": "proxmox_snap", "fqcn": "community.general.proxmox_snap", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_snap.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cloud_init_data_facts": {"py/object": "struct4.Module", "name": "cloud_init_data_facts", "fqcn": "community.general.cloud_init_data_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/cloud_init_data_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.terraform": {"py/object": "struct4.Module", "name": "terraform", "fqcn": "community.general.terraform", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/terraform.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox_user_info": {"py/object": "struct4.Module", "name": "proxmox_user_info", "fqcn": "community.general.proxmox_user_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox_storage_info": {"py/object": "struct4.Module", "name": "proxmox_storage_info", "fqcn": "community.general.proxmox_storage_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_storage_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox": {"py/object": "struct4.Module", "name": "proxmox", "fqcn": "community.general.proxmox", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox_template": {"py/object": "struct4.Module", "name": "proxmox_template", "fqcn": "community.general.proxmox_template", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_template.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox_group_info": {"py/object": "struct4.Module", "name": "proxmox_group_info", "fqcn": "community.general.proxmox_group_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox_nic": {"py/object": "struct4.Module", "name": "proxmox_nic", "fqcn": "community.general.proxmox_nic", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_nic.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xenserver_facts": {"py/object": "struct4.Module", "name": "xenserver_facts", "fqcn": "community.general.xenserver_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/xenserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox_kvm": {"py/object": "struct4.Module", "name": "proxmox_kvm", "fqcn": "community.general.proxmox_kvm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_kvm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovh_monthly_billing": {"py/object": "struct4.Module", "name": "ovh_monthly_billing", "fqcn": "community.general.ovh_monthly_billing", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovh/ovh_monthly_billing.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovh_ip_loadbalancing_backend": {"py/object": "struct4.Module", "name": "ovh_ip_loadbalancing_backend", "fqcn": "community.general.ovh_ip_loadbalancing_backend", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovh/ovh_ip_loadbalancing_backend.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovh_ip_failover": {"py/object": "struct4.Module", "name": "ovh_ip_failover", "fqcn": "community.general.ovh_ip_failover", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovh/ovh_ip_failover.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_security_group": {"py/object": "struct4.Module", "name": "hwc_vpc_security_group", "fqcn": "community.general.hwc_vpc_security_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_security_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_evs_disk": {"py/object": "struct4.Module", "name": "hwc_evs_disk", "fqcn": "community.general.hwc_evs_disk", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_evs_disk.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_subnet": {"py/object": "struct4.Module", "name": "hwc_vpc_subnet", "fqcn": "community.general.hwc_vpc_subnet", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_subnet.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_security_group_rule": {"py/object": "struct4.Module", "name": "hwc_vpc_security_group_rule", "fqcn": "community.general.hwc_vpc_security_group_rule", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_security_group_rule.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_private_ip": {"py/object": "struct4.Module", "name": "hwc_vpc_private_ip", "fqcn": "community.general.hwc_vpc_private_ip", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_private_ip.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_port": {"py/object": "struct4.Module", "name": "hwc_vpc_port", "fqcn": "community.general.hwc_vpc_port", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_port.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_smn_topic": {"py/object": "struct4.Module", "name": "hwc_smn_topic", "fqcn": "community.general.hwc_smn_topic", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_smn_topic.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_ecs_instance": {"py/object": "struct4.Module", "name": "hwc_ecs_instance", "fqcn": "community.general.hwc_ecs_instance", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_ecs_instance.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_network_vpc": {"py/object": "struct4.Module", "name": "hwc_network_vpc", "fqcn": "community.general.hwc_network_vpc", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_network_vpc.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_eip": {"py/object": "struct4.Module", "name": "hwc_vpc_eip", "fqcn": "community.general.hwc_vpc_eip", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_eip.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_route": {"py/object": "struct4.Module", "name": "hwc_vpc_route", "fqcn": "community.general.hwc_vpc_route", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_route.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_peering_connect": {"py/object": "struct4.Module", "name": "hwc_vpc_peering_connect", "fqcn": "community.general.hwc_vpc_peering_connect", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_peering_connect.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sl_vm": {"py/object": "struct4.Module", "name": "sl_vm", "fqcn": "community.general.sl_vm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/softlayer/sl_vm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.profitbricks_datacenter": {"py/object": "struct4.Module", "name": "profitbricks_datacenter", "fqcn": "community.general.profitbricks_datacenter", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks_datacenter.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.profitbricks_nic": {"py/object": "struct4.Module", "name": "profitbricks_nic", "fqcn": "community.general.profitbricks_nic", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks_nic.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.profitbricks": {"py/object": "struct4.Module", "name": "profitbricks", "fqcn": "community.general.profitbricks", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.profitbricks_volume_attachments": {"py/object": "struct4.Module", "name": "profitbricks_volume_attachments", "fqcn": "community.general.profitbricks_volume_attachments", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks_volume_attachments.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.profitbricks_volume": {"py/object": "struct4.Module", "name": "profitbricks_volume", "fqcn": "community.general.profitbricks_volume", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks_volume.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.memset_dns_reload": {"py/object": "struct4.Module", "name": "memset_dns_reload", "fqcn": "community.general.memset_dns_reload", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_dns_reload.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.memset_server_info": {"py/object": "struct4.Module", "name": "memset_server_info", "fqcn": "community.general.memset_server_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.memset_zone_domain": {"py/object": "struct4.Module", "name": "memset_zone_domain", "fqcn": "community.general.memset_zone_domain", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_zone_domain.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.memset_zone_record": {"py/object": "struct4.Module", "name": "memset_zone_record", "fqcn": "community.general.memset_zone_record", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_zone_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.memset_memstore_info": {"py/object": "struct4.Module", "name": "memset_memstore_info", "fqcn": "community.general.memset_memstore_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_memstore_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.memset_zone": {"py/object": "struct4.Module", "name": "memset_zone", "fqcn": "community.general.memset_zone", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_zone.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.heroku_collaborator": {"py/object": "struct4.Module", "name": "heroku_collaborator", "fqcn": "community.general.heroku_collaborator", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/heroku/heroku_collaborator.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.linode": {"py/object": "struct4.Module", "name": "linode", "fqcn": "community.general.linode", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/linode/linode.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.linode_v4": {"py/object": "struct4.Module", "name": "linode_v4", "fqcn": "community.general.linode_v4", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/linode/linode_v4.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_cdb_user": {"py/object": "struct4.Module", "name": "rax_cdb_user", "fqcn": "community.general.rax_cdb_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cdb_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_dns_record": {"py/object": "struct4.Module", "name": "rax_dns_record", "fqcn": "community.general.rax_dns_record", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_dns_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_mon_notification": {"py/object": "struct4.Module", "name": "rax_mon_notification", "fqcn": "community.general.rax_mon_notification", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_notification.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_files_objects": {"py/object": "struct4.Module", "name": "rax_files_objects", "fqcn": "community.general.rax_files_objects", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_files_objects.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_cbs": {"py/object": "struct4.Module", "name": "rax_cbs", "fqcn": "community.general.rax_cbs", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cbs.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_facts": {"py/object": "struct4.Module", "name": "rax_facts", "fqcn": "community.general.rax_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_files": {"py/object": "struct4.Module", "name": "rax_files", "fqcn": "community.general.rax_files", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_files.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_queue": {"py/object": "struct4.Module", "name": "rax_queue", "fqcn": "community.general.rax_queue", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_queue.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_clb_nodes": {"py/object": "struct4.Module", "name": "rax_clb_nodes", "fqcn": "community.general.rax_clb_nodes", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_clb_nodes.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_network": {"py/object": "struct4.Module", "name": "rax_network", "fqcn": "community.general.rax_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_meta": {"py/object": "struct4.Module", "name": "rax_meta", "fqcn": "community.general.rax_meta", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_meta.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_scaling_policy": {"py/object": "struct4.Module", "name": "rax_scaling_policy", "fqcn": "community.general.rax_scaling_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_scaling_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_clb": {"py/object": "struct4.Module", "name": "rax_clb", "fqcn": "community.general.rax_clb", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_clb.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_mon_entity": {"py/object": "struct4.Module", "name": "rax_mon_entity", "fqcn": "community.general.rax_mon_entity", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_entity.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax": {"py/object": "struct4.Module", "name": "rax", "fqcn": "community.general.rax", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_keypair": {"py/object": "struct4.Module", "name": "rax_keypair", "fqcn": "community.general.rax_keypair", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_keypair.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_cdb_database": {"py/object": "struct4.Module", "name": "rax_cdb_database", "fqcn": "community.general.rax_cdb_database", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cdb_database.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_dns": {"py/object": "struct4.Module", "name": "rax_dns", "fqcn": "community.general.rax_dns", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_dns.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_clb_ssl": {"py/object": "struct4.Module", "name": "rax_clb_ssl", "fqcn": "community.general.rax_clb_ssl", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_clb_ssl.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_mon_check": {"py/object": "struct4.Module", "name": "rax_mon_check", "fqcn": "community.general.rax_mon_check", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_check.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_identity": {"py/object": "struct4.Module", "name": "rax_identity", "fqcn": "community.general.rax_identity", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_identity.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_cdb": {"py/object": "struct4.Module", "name": "rax_cdb", "fqcn": "community.general.rax_cdb", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cdb.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_cbs_attachments": {"py/object": "struct4.Module", "name": "rax_cbs_attachments", "fqcn": "community.general.rax_cbs_attachments", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cbs_attachments.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_mon_notification_plan": {"py/object": "struct4.Module", "name": "rax_mon_notification_plan", "fqcn": "community.general.rax_mon_notification_plan", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_notification_plan.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_scaling_group": {"py/object": "struct4.Module", "name": "rax_scaling_group", "fqcn": "community.general.rax_scaling_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_scaling_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_mon_alarm": {"py/object": "struct4.Module", "name": "rax_mon_alarm", "fqcn": "community.general.rax_mon_alarm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_alarm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pubnub_blocks": {"py/object": "struct4.Module", "name": "pubnub_blocks", "fqcn": "community.general.pubnub_blocks", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/pubnub/pubnub_blocks.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oci_vcn": {"py/object": "struct4.Module", "name": "oci_vcn", "fqcn": "community.general.oci_vcn", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oracle/oci_vcn.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_group": {"py/object": "struct4.Module", "name": "clc_group", "fqcn": "community.general.clc_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_firewall_policy": {"py/object": "struct4.Module", "name": "clc_firewall_policy", "fqcn": "community.general.clc_firewall_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_firewall_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_loadbalancer": {"py/object": "struct4.Module", "name": "clc_loadbalancer", "fqcn": "community.general.clc_loadbalancer", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_loadbalancer.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_server": {"py/object": "struct4.Module", "name": "clc_server", "fqcn": "community.general.clc_server", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_server.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_aa_policy": {"py/object": "struct4.Module", "name": "clc_aa_policy", "fqcn": "community.general.clc_aa_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_aa_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_publicip": {"py/object": "struct4.Module", "name": "clc_publicip", "fqcn": "community.general.clc_publicip", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_publicip.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_server_snapshot": {"py/object": "struct4.Module", "name": "clc_server_snapshot", "fqcn": "community.general.clc_server_snapshot", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_server_snapshot.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_modify_server": {"py/object": "struct4.Module", "name": "clc_modify_server", "fqcn": "community.general.clc_modify_server", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_modify_server.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_blueprint_package": {"py/object": "struct4.Module", "name": "clc_blueprint_package", "fqcn": "community.general.clc_blueprint_package", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_blueprint_package.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_alert_policy": {"py/object": "struct4.Module", "name": "clc_alert_policy", "fqcn": "community.general.clc_alert_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_alert_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.atomic_image": {"py/object": "struct4.Module", "name": "atomic_image", "fqcn": "community.general.atomic_image", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/atomic/atomic_image.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.atomic_container": {"py/object": "struct4.Module", "name": "atomic_container", "fqcn": "community.general.atomic_container", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/atomic/atomic_container.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.atomic_host": {"py/object": "struct4.Module", "name": "atomic_host", "fqcn": "community.general.atomic_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/atomic/atomic_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneandone_public_ip": {"py/object": "struct4.Module", "name": "oneandone_public_ip", "fqcn": "community.general.oneandone_public_ip", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_public_ip.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneandone_monitoring_policy": {"py/object": "struct4.Module", "name": "oneandone_monitoring_policy", "fqcn": "community.general.oneandone_monitoring_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_monitoring_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneandone_firewall_policy": {"py/object": "struct4.Module", "name": "oneandone_firewall_policy", "fqcn": "community.general.oneandone_firewall_policy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_firewall_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneandone_server": {"py/object": "struct4.Module", "name": "oneandone_server", "fqcn": "community.general.oneandone_server", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_server.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneandone_private_network": {"py/object": "struct4.Module", "name": "oneandone_private_network", "fqcn": "community.general.oneandone_private_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_private_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneandone_load_balancer": {"py/object": "struct4.Module", "name": "oneandone_load_balancer", "fqcn": "community.general.oneandone_load_balancer", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_load_balancer.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lxc_container": {"py/object": "struct4.Module", "name": "lxc_container", "fqcn": "community.general.lxc_container", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/lxc/lxc_container.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lxd_container": {"py/object": "struct4.Module", "name": "lxd_container", "fqcn": "community.general.lxd_container", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/lxd/lxd_container.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lxd_project": {"py/object": "struct4.Module", "name": "lxd_project", "fqcn": "community.general.lxd_project", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/lxd/lxd_project.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lxd_profile": {"py/object": "struct4.Module", "name": "lxd_profile", "fqcn": "community.general.lxd_profile", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/lxd/lxd_profile.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.spotinst_aws_elastigroup": {"py/object": "struct4.Module", "name": "spotinst_aws_elastigroup", "fqcn": "community.general.spotinst_aws_elastigroup", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/spotinst/spotinst_aws_elastigroup.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.imgadm": {"py/object": "struct4.Module", "name": "imgadm", "fqcn": "community.general.imgadm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/smartos/imgadm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nictagadm": {"py/object": "struct4.Module", "name": "nictagadm", "fqcn": "community.general.nictagadm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/smartos/nictagadm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.smartos_image_info": {"py/object": "struct4.Module", "name": "smartos_image_info", "fqcn": "community.general.smartos_image_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/smartos/smartos_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vmadm": {"py/object": "struct4.Module", "name": "vmadm", "fqcn": "community.general.vmadm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/smartos/vmadm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_compute": {"py/object": "struct4.Module", "name": "scaleway_compute", "fqcn": "community.general.scaleway_compute", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_compute.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_volume": {"py/object": "struct4.Module", "name": "scaleway_volume", "fqcn": "community.general.scaleway_volume", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_volume.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_sshkey": {"py/object": "struct4.Module", "name": "scaleway_sshkey", "fqcn": "community.general.scaleway_sshkey", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_sshkey.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_organization_info": {"py/object": "struct4.Module", "name": "scaleway_organization_info", "fqcn": "community.general.scaleway_organization_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_organization_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_server_info": {"py/object": "struct4.Module", "name": "scaleway_server_info", "fqcn": "community.general.scaleway_server_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_database_backup": {"py/object": "struct4.Module", "name": "scaleway_database_backup", "fqcn": "community.general.scaleway_database_backup", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_database_backup.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_image_info": {"py/object": "struct4.Module", "name": "scaleway_image_info", "fqcn": "community.general.scaleway_image_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_ip": {"py/object": "struct4.Module", "name": "scaleway_ip", "fqcn": "community.general.scaleway_ip", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_ip.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_security_group": {"py/object": "struct4.Module", "name": "scaleway_security_group", "fqcn": "community.general.scaleway_security_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_security_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_security_group_info": {"py/object": "struct4.Module", "name": "scaleway_security_group_info", "fqcn": "community.general.scaleway_security_group_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_security_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_user_data": {"py/object": "struct4.Module", "name": "scaleway_user_data", "fqcn": "community.general.scaleway_user_data", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_user_data.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_private_network": {"py/object": "struct4.Module", "name": "scaleway_private_network", "fqcn": "community.general.scaleway_private_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_private_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_volume_info": {"py/object": "struct4.Module", "name": "scaleway_volume_info", "fqcn": "community.general.scaleway_volume_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_volume_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_ip_info": {"py/object": "struct4.Module", "name": "scaleway_ip_info", "fqcn": "community.general.scaleway_ip_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_ip_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_security_group_rule": {"py/object": "struct4.Module", "name": "scaleway_security_group_rule", "fqcn": "community.general.scaleway_security_group_rule", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_security_group_rule.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_snapshot_info": {"py/object": "struct4.Module", "name": "scaleway_snapshot_info", "fqcn": "community.general.scaleway_snapshot_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_snapshot_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_compute_private_network": {"py/object": "struct4.Module", "name": "scaleway_compute_private_network", "fqcn": "community.general.scaleway_compute_private_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_compute_private_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_lb": {"py/object": "struct4.Module", "name": "scaleway_lb", "fqcn": "community.general.scaleway_lb", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_lb.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xenserver_guest": {"py/object": "struct4.Module", "name": "xenserver_guest", "fqcn": "community.general.xenserver_guest", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/xenserver/xenserver_guest.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xenserver_guest_powerstate": {"py/object": "struct4.Module", "name": "xenserver_guest_powerstate", "fqcn": "community.general.xenserver_guest_powerstate", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/xenserver/xenserver_guest_powerstate.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xenserver_guest_info": {"py/object": "struct4.Module", "name": "xenserver_guest_info", "fqcn": "community.general.xenserver_guest_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/xenserver/xenserver_guest_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.online_server_info": {"py/object": "struct4.Module", "name": "online_server_info", "fqcn": "community.general.online_server_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/online/online_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.online_user_info": {"py/object": "struct4.Module", "name": "online_user_info", "fqcn": "community.general.online_user_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/online/online_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.dimensiondata_network": {"py/object": "struct4.Module", "name": "dimensiondata_network", "fqcn": "community.general.dimensiondata_network", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/dimensiondata/dimensiondata_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.dimensiondata_vlan": {"py/object": "struct4.Module", "name": "dimensiondata_vlan", "fqcn": "community.general.dimensiondata_vlan", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/dimensiondata/dimensiondata_vlan.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.packet_device": {"py/object": "struct4.Module", "name": "packet_device", "fqcn": "community.general.packet_device", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_device.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.packet_project": {"py/object": "struct4.Module", "name": "packet_project", "fqcn": "community.general.packet_project", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_project.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.packet_ip_subnet": {"py/object": "struct4.Module", "name": "packet_ip_subnet", "fqcn": "community.general.packet_ip_subnet", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_ip_subnet.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.packet_volume_attachment": {"py/object": "struct4.Module", "name": "packet_volume_attachment", "fqcn": "community.general.packet_volume_attachment", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_volume_attachment.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.packet_volume": {"py/object": "struct4.Module", "name": "packet_volume", "fqcn": "community.general.packet_volume", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_volume.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.packet_sshkey": {"py/object": "struct4.Module", "name": "packet_sshkey", "fqcn": "community.general.packet_sshkey", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_sshkey.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.udm_user": {"py/object": "struct4.Module", "name": "udm_user", "fqcn": "community.general.udm_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.udm_share": {"py/object": "struct4.Module", "name": "udm_share", "fqcn": "community.general.udm_share", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_share.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.udm_group": {"py/object": "struct4.Module", "name": "udm_group", "fqcn": "community.general.udm_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.udm_dns_record": {"py/object": "struct4.Module", "name": "udm_dns_record", "fqcn": "community.general.udm_dns_record", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_dns_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.udm_dns_zone": {"py/object": "struct4.Module", "name": "udm_dns_zone", "fqcn": "community.general.udm_dns_zone", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_dns_zone.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.one_image": {"py/object": "struct4.Module", "name": "one_image", "fqcn": "community.general.one_image", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_image.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.one_template": {"py/object": "struct4.Module", "name": "one_template", "fqcn": "community.general.one_template", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_template.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.one_image_info": {"py/object": "struct4.Module", "name": "one_image_info", "fqcn": "community.general.one_image_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.one_vm": {"py/object": "struct4.Module", "name": "one_vm", "fqcn": "community.general.one_vm", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_vm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.one_service": {"py/object": "struct4.Module", "name": "one_service", "fqcn": "community.general.one_service", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_service.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.one_host": {"py/object": "struct4.Module", "name": "one_host", "fqcn": "community.general.one_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.read_csv": {"py/object": "struct4.Module", "name": "read_csv", "fqcn": "community.general.read_csv", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/read_csv.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.filesize": {"py/object": "struct4.Module", "name": "filesize", "fqcn": "community.general.filesize", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/filesize.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xml": {"py/object": "struct4.Module", "name": "xml", "fqcn": "community.general.xml", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/xml.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xattr": {"py/object": "struct4.Module", "name": "xattr", "fqcn": "community.general.xattr", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/xattr.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.archive": {"py/object": "struct4.Module", "name": "archive", "fqcn": "community.general.archive", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/archive.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.iso_create": {"py/object": "struct4.Module", "name": "iso_create", "fqcn": "community.general.iso_create", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/iso_create.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.iso_extract": {"py/object": "struct4.Module", "name": "iso_extract", "fqcn": "community.general.iso_extract", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/iso_extract.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sapcar_extract": {"py/object": "struct4.Module", "name": "sapcar_extract", "fqcn": "community.general.sapcar_extract", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/sapcar_extract.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ini_file": {"py/object": "struct4.Module", "name": "ini_file", "fqcn": "community.general.ini_file", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/files/ini_file.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.spectrum_model_attrs": {"py/object": "struct4.Module", "name": "spectrum_model_attrs", "fqcn": "community.general.spectrum_model_attrs", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/spectrum_model_attrs.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nagios": {"py/object": "struct4.Module", "name": "nagios", "fqcn": "community.general.nagios", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/nagios.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.circonus_annotation": {"py/object": "struct4.Module", "name": "circonus_annotation", "fqcn": "community.general.circonus_annotation", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/circonus_annotation.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bigpanda": {"py/object": "struct4.Module", "name": "bigpanda", "fqcn": "community.general.bigpanda", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/bigpanda.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.statusio_maintenance": {"py/object": "struct4.Module", "name": "statusio_maintenance", "fqcn": "community.general.statusio_maintenance", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/statusio_maintenance.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.monit": {"py/object": "struct4.Module", "name": "monit", "fqcn": "community.general.monit", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/monit.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.honeybadger_deployment": {"py/object": "struct4.Module", "name": "honeybadger_deployment", "fqcn": "community.general.honeybadger_deployment", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/honeybadger_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.icinga2_host": {"py/object": "struct4.Module", "name": "icinga2_host", "fqcn": "community.general.icinga2_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/icinga2_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.logstash_plugin": {"py/object": "struct4.Module", "name": "logstash_plugin", "fqcn": "community.general.logstash_plugin", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/logstash_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.logentries": {"py/object": "struct4.Module", "name": "logentries", "fqcn": "community.general.logentries", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/logentries.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pagerduty_alert": {"py/object": "struct4.Module", "name": "pagerduty_alert", "fqcn": "community.general.pagerduty_alert", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pagerduty_alert.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pagerduty_user": {"py/object": "struct4.Module", "name": "pagerduty_user", "fqcn": "community.general.pagerduty_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pagerduty_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.newrelic_deployment": {"py/object": "struct4.Module", "name": "newrelic_deployment", "fqcn": "community.general.newrelic_deployment", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/newrelic_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.uptimerobot": {"py/object": "struct4.Module", "name": "uptimerobot", "fqcn": "community.general.uptimerobot", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/uptimerobot.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.librato_annotation": {"py/object": "struct4.Module", "name": "librato_annotation", "fqcn": "community.general.librato_annotation", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/librato_annotation.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.icinga2_feature": {"py/object": "struct4.Module", "name": "icinga2_feature", "fqcn": "community.general.icinga2_feature", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/icinga2_feature.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rollbar_deployment": {"py/object": "struct4.Module", "name": "rollbar_deployment", "fqcn": "community.general.rollbar_deployment", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/rollbar_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.airbrake_deployment": {"py/object": "struct4.Module", "name": "airbrake_deployment", "fqcn": "community.general.airbrake_deployment", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/airbrake_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pingdom": {"py/object": "struct4.Module", "name": "pingdom", "fqcn": "community.general.pingdom", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pingdom.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.statsd": {"py/object": "struct4.Module", "name": "statsd", "fqcn": "community.general.statsd", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/statsd.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pagerduty": {"py/object": "struct4.Module", "name": "pagerduty", "fqcn": "community.general.pagerduty", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pagerduty.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.alerta_customer": {"py/object": "struct4.Module", "name": "alerta_customer", "fqcn": "community.general.alerta_customer", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/alerta_customer.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pagerduty_change": {"py/object": "struct4.Module", "name": "pagerduty_change", "fqcn": "community.general.pagerduty_change", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pagerduty_change.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.stackdriver": {"py/object": "struct4.Module", "name": "stackdriver", "fqcn": "community.general.stackdriver", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/stackdriver.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.spectrum_device": {"py/object": "struct4.Module", "name": "spectrum_device", "fqcn": "community.general.spectrum_device", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/spectrum_device.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.datadog_monitor": {"py/object": "struct4.Module", "name": "datadog_monitor", "fqcn": "community.general.datadog_monitor", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/datadog/datadog_monitor.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.datadog_downtime": {"py/object": "struct4.Module", "name": "datadog_downtime", "fqcn": "community.general.datadog_downtime", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/datadog/datadog_downtime.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.datadog_event": {"py/object": "struct4.Module", "name": "datadog_event", "fqcn": "community.general.datadog_event", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/datadog/datadog_event.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sensu_check": {"py/object": "struct4.Module", "name": "sensu_check", "fqcn": "community.general.sensu_check", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_check.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sensu_handler": {"py/object": "struct4.Module", "name": "sensu_handler", "fqcn": "community.general.sensu_handler", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_handler.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sensu_silence": {"py/object": "struct4.Module", "name": "sensu_silence", "fqcn": "community.general.sensu_silence", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_silence.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sensu_client": {"py/object": "struct4.Module", "name": "sensu_client", "fqcn": "community.general.sensu_client", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_client.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sensu_subscription": {"py/object": "struct4.Module", "name": "sensu_subscription", "fqcn": "community.general.sensu_subscription", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.netcup_dns": {"py/object": "struct4.Module", "name": "netcup_dns", "fqcn": "community.general.netcup_dns", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/netcup_dns.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.snmp_facts": {"py/object": "struct4.Module", "name": "snmp_facts", "fqcn": "community.general.snmp_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/snmp_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipinfoio_facts": {"py/object": "struct4.Module", "name": "ipinfoio_facts", "fqcn": "community.general.ipinfoio_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ipinfoio_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ip_netns": {"py/object": "struct4.Module", "name": "ip_netns", "fqcn": "community.general.ip_netns", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ip_netns.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cloudflare_dns": {"py/object": "struct4.Module", "name": "cloudflare_dns", "fqcn": "community.general.cloudflare_dns", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/cloudflare_dns.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.haproxy": {"py/object": "struct4.Module", "name": "haproxy", "fqcn": "community.general.haproxy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/haproxy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gandi_livedns": {"py/object": "struct4.Module", "name": "gandi_livedns", "fqcn": "community.general.gandi_livedns", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/gandi_livedns.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.dnsimple": {"py/object": "struct4.Module", "name": "dnsimple", "fqcn": "community.general.dnsimple", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/dnsimple.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.omapi_host": {"py/object": "struct4.Module", "name": "omapi_host", "fqcn": "community.general.omapi_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/omapi_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lldp": {"py/object": "struct4.Module", "name": "lldp", "fqcn": "community.general.lldp", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/lldp.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nsupdate": {"py/object": "struct4.Module", "name": "nsupdate", "fqcn": "community.general.nsupdate", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nsupdate.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipwcli_dns": {"py/object": "struct4.Module", "name": "ipwcli_dns", "fqcn": "community.general.ipwcli_dns", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ipwcli_dns.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipify_facts": {"py/object": "struct4.Module", "name": "ipify_facts", "fqcn": "community.general.ipify_facts", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ipify_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nmcli": {"py/object": "struct4.Module", "name": "nmcli", "fqcn": "community.general.nmcli", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nmcli.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.dnsmadeeasy": {"py/object": "struct4.Module", "name": "dnsmadeeasy", "fqcn": "community.general.dnsmadeeasy", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/dnsmadeeasy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.dnsimple_info": {"py/object": "struct4.Module", "name": "dnsimple_info", "fqcn": "community.general.dnsimple_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/dnsimple_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pritunl_org_info": {"py/object": "struct4.Module", "name": "pritunl_org_info", "fqcn": "community.general.pritunl_org_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/pritunl/pritunl_org_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pritunl_user_info": {"py/object": "struct4.Module", "name": "pritunl_user_info", "fqcn": "community.general.pritunl_user_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/pritunl/pritunl_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pritunl_user": {"py/object": "struct4.Module", "name": "pritunl_user", "fqcn": "community.general.pritunl_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/pritunl/pritunl_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pritunl_org": {"py/object": "struct4.Module", "name": "pritunl_org", "fqcn": "community.general.pritunl_org", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/pritunl/pritunl_org.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ldap_passwd": {"py/object": "struct4.Module", "name": "ldap_passwd", "fqcn": "community.general.ldap_passwd", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ldap/ldap_passwd.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ldap_search": {"py/object": "struct4.Module", "name": "ldap_search", "fqcn": "community.general.ldap_search", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ldap/ldap_search.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ldap_attrs": {"py/object": "struct4.Module", "name": "ldap_attrs", "fqcn": "community.general.ldap_attrs", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ldap/ldap_attrs.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ldap_entry": {"py/object": "struct4.Module", "name": "ldap_entry", "fqcn": "community.general.ldap_entry", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ldap/ldap_entry.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.infinity": {"py/object": "struct4.Module", "name": "infinity", "fqcn": "community.general.infinity", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/infinity/infinity.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bzr": {"py/object": "struct4.Module", "name": "bzr", "fqcn": "community.general.bzr", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bzr.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.git_config": {"py/object": "struct4.Module", "name": "git_config", "fqcn": "community.general.git_config", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/git_config.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hg": {"py/object": "struct4.Module", "name": "hg", "fqcn": "community.general.hg", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/hg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_protected_branch": {"py/object": "struct4.Module", "name": "gitlab_protected_branch", "fqcn": "community.general.gitlab_protected_branch", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_protected_branch.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_branch": {"py/object": "struct4.Module", "name": "gitlab_branch", "fqcn": "community.general.gitlab_branch", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_branch.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_group_variable": {"py/object": "struct4.Module", "name": "gitlab_group_variable", "fqcn": "community.general.gitlab_group_variable", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_group_variable.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_deploy_key": {"py/object": "struct4.Module", "name": "gitlab_deploy_key", "fqcn": "community.general.gitlab_deploy_key", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_deploy_key.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_project_variable": {"py/object": "struct4.Module", "name": "gitlab_project_variable", "fqcn": "community.general.gitlab_project_variable", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_project_variable.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_runner": {"py/object": "struct4.Module", "name": "gitlab_runner", "fqcn": "community.general.gitlab_runner", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_runner.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_group": {"py/object": "struct4.Module", "name": "gitlab_group", "fqcn": "community.general.gitlab_group", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_project_members": {"py/object": "struct4.Module", "name": "gitlab_project_members", "fqcn": "community.general.gitlab_project_members", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_project_members.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_user": {"py/object": "struct4.Module", "name": "gitlab_user", "fqcn": "community.general.gitlab_user", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_hook": {"py/object": "struct4.Module", "name": "gitlab_hook", "fqcn": "community.general.gitlab_hook", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_hook.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_project": {"py/object": "struct4.Module", "name": "gitlab_project", "fqcn": "community.general.gitlab_project", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_project.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_group_members": {"py/object": "struct4.Module", "name": "gitlab_group_members", "fqcn": "community.general.gitlab_group_members", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_group_members.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.github_deploy_key": {"py/object": "struct4.Module", "name": "github_deploy_key", "fqcn": "community.general.github_deploy_key", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_deploy_key.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.github_webhook_info": {"py/object": "struct4.Module", "name": "github_webhook_info", "fqcn": "community.general.github_webhook_info", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_webhook_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.github_issue": {"py/object": "struct4.Module", "name": "github_issue", "fqcn": "community.general.github_issue", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_issue.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.github_release": {"py/object": "struct4.Module", "name": "github_release", "fqcn": "community.general.github_release", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_release.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.github_webhook": {"py/object": "struct4.Module", "name": "github_webhook", "fqcn": "community.general.github_webhook", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_webhook.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.github_repo": {"py/object": "struct4.Module", "name": "github_repo", "fqcn": "community.general.github_repo", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_repo.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.github_key": {"py/object": "struct4.Module", "name": "github_key", "fqcn": "community.general.github_key", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_key.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bitbucket_pipeline_variable": {"py/object": "struct4.Module", "name": "bitbucket_pipeline_variable", "fqcn": "community.general.bitbucket_pipeline_variable", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bitbucket/bitbucket_pipeline_variable.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bitbucket_pipeline_key_pair": {"py/object": "struct4.Module", "name": "bitbucket_pipeline_key_pair", "fqcn": "community.general.bitbucket_pipeline_key_pair", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bitbucket/bitbucket_pipeline_key_pair.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bitbucket_access_key": {"py/object": "struct4.Module", "name": "bitbucket_access_key", "fqcn": "community.general.bitbucket_access_key", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bitbucket/bitbucket_access_key.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bitbucket_pipeline_known_host": {"py/object": "struct4.Module", "name": "bitbucket_pipeline_known_host", "fqcn": "community.general.bitbucket_pipeline_known_host", "collection": "community.general", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bitbucket/bitbucket_pipeline_known_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.mysql.mysql_info": {"py/object": "struct4.Module", "name": "mysql_info", "fqcn": "community.mysql.mysql_info", "collection": "community.mysql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.mysql.mysql_variables": {"py/object": "struct4.Module", "name": "mysql_variables", "fqcn": "community.mysql.mysql_variables", "collection": "community.mysql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_variables.py", "builtin": false, "used_in": [], "annotations": {}}, "community.mysql.mysql_replication": {"py/object": "struct4.Module", "name": "mysql_replication", "fqcn": "community.mysql.mysql_replication", "collection": "community.mysql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_replication.py", "builtin": false, "used_in": [], "annotations": {}}, "community.mysql.mysql_query": {"py/object": "struct4.Module", "name": "mysql_query", "fqcn": "community.mysql.mysql_query", "collection": "community.mysql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_query.py", "builtin": false, "used_in": [], "annotations": {}}, "community.mysql.mysql_role": {"py/object": "struct4.Module", "name": "mysql_role", "fqcn": "community.mysql.mysql_role", "collection": "community.mysql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_role.py", "builtin": false, "used_in": [], "annotations": {}}, "community.mysql.mysql_db": {"py/object": "struct4.Module", "name": "mysql_db", "fqcn": "community.mysql.mysql_db", "collection": "community.mysql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_db.py", "builtin": false, "used_in": [], "annotations": {}}, "community.mysql.mysql_user": {"py/object": "struct4.Module", "name": "mysql_user", "fqcn": "community.mysql.mysql_user", "collection": "community.mysql", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_user": {"py/object": "struct4.Module", "name": "zabbix_user", "fqcn": "community.zabbix.zabbix_user", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_discovery_rule": {"py/object": "struct4.Module", "name": "zabbix_discovery_rule", "fqcn": "community.zabbix.zabbix_discovery_rule", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_discovery_rule.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_globalmacro": {"py/object": "struct4.Module", "name": "zabbix_globalmacro", "fqcn": "community.zabbix.zabbix_globalmacro", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_globalmacro.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_autoregister": {"py/object": "struct4.Module", "name": "zabbix_autoregister", "fqcn": "community.zabbix.zabbix_autoregister", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_autoregister.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_template": {"py/object": "struct4.Module", "name": "zabbix_template", "fqcn": "community.zabbix.zabbix_template", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_template.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_script": {"py/object": "struct4.Module", "name": "zabbix_script", "fqcn": "community.zabbix.zabbix_script", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_script.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_mediatype": {"py/object": "struct4.Module", "name": "zabbix_mediatype", "fqcn": "community.zabbix.zabbix_mediatype", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_mediatype.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_user_info": {"py/object": "struct4.Module", "name": "zabbix_user_info", "fqcn": "community.zabbix.zabbix_user_info", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_host_events_info": {"py/object": "struct4.Module", "name": "zabbix_host_events_info", "fqcn": "community.zabbix.zabbix_host_events_info", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_host_events_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_proxy_info": {"py/object": "struct4.Module", "name": "zabbix_proxy_info", "fqcn": "community.zabbix.zabbix_proxy_info", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_proxy_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_group": {"py/object": "struct4.Module", "name": "zabbix_group", "fqcn": "community.zabbix.zabbix_group", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_group.py", "builtin": false, "used_in": ["{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml\", \"index\": 1}"], "annotations": {}}, "community.zabbix.zabbix_host": {"py/object": "struct4.Module", "name": "zabbix_host", "fqcn": "community.zabbix.zabbix_host", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_host.py", "builtin": false, "used_in": ["{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml\", \"index\": 2}", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml\", \"index\": 3}"], "annotations": {}}, "community.zabbix.zabbix_host_info": {"py/object": "struct4.Module", "name": "zabbix_host_info", "fqcn": "community.zabbix.zabbix_host_info", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_host_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_template_info": {"py/object": "struct4.Module", "name": "zabbix_template_info", "fqcn": "community.zabbix.zabbix_template_info", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_template_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_map": {"py/object": "struct4.Module", "name": "zabbix_map", "fqcn": "community.zabbix.zabbix_map", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_map.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_group_facts": {"py/object": "struct4.Module", "name": "zabbix_group_facts", "fqcn": "community.zabbix.zabbix_group_facts", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_group_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_service": {"py/object": "struct4.Module", "name": "zabbix_service", "fqcn": "community.zabbix.zabbix_service", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_service.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_group_info": {"py/object": "struct4.Module", "name": "zabbix_group_info", "fqcn": "community.zabbix.zabbix_group_info", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_hostmacro": {"py/object": "struct4.Module", "name": "zabbix_hostmacro", "fqcn": "community.zabbix.zabbix_hostmacro", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_hostmacro.py", "builtin": false, "used_in": ["{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml\", \"index\": 4}"], "annotations": {}}, "community.zabbix.zabbix_action": {"py/object": "struct4.Module", "name": "zabbix_action", "fqcn": "community.zabbix.zabbix_action", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_action.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_valuemap": {"py/object": "struct4.Module", "name": "zabbix_valuemap", "fqcn": "community.zabbix.zabbix_valuemap", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_valuemap.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_maintenance": {"py/object": "struct4.Module", "name": "zabbix_maintenance", "fqcn": "community.zabbix.zabbix_maintenance", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_maintenance.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_proxy": {"py/object": "struct4.Module", "name": "zabbix_proxy", "fqcn": "community.zabbix.zabbix_proxy", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_proxy.py", "builtin": false, "used_in": ["{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 14}"], "annotations": {}}, "community.zabbix.zabbix_usergroup": {"py/object": "struct4.Module", "name": "zabbix_usergroup", "fqcn": "community.zabbix.zabbix_usergroup", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_usergroup.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_housekeeping": {"py/object": "struct4.Module", "name": "zabbix_housekeeping", "fqcn": "community.zabbix.zabbix_housekeeping", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_housekeeping.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_authentication": {"py/object": "struct4.Module", "name": "zabbix_authentication", "fqcn": "community.zabbix.zabbix_authentication", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_authentication.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_host_facts": {"py/object": "struct4.Module", "name": "zabbix_host_facts", "fqcn": "community.zabbix.zabbix_host_facts", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_host_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.zabbix.zabbix_screen": {"py/object": "struct4.Module", "name": "zabbix_screen", "fqcn": "community.zabbix.zabbix_screen", "collection": "community.zabbix", "role": "", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/plugins/modules/zabbix_screen.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.builtin.jsonfile": {"py/object": "struct4.Module", "name": "jsonfile", "fqcn": "ansible.builtin.jsonfile", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.include_role": {"py/object": "struct4.Module", "name": "include_role", "fqcn": "ansible.builtin.include_role", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.oneline": {"py/object": "struct4.Module", "name": "oneline", "fqcn": "ansible.builtin.oneline", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.meta": {"py/object": "struct4.Module", "name": "meta", "fqcn": "ansible.builtin.meta", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.psrp": {"py/object": "struct4.Module", "name": "psrp", "fqcn": "ansible.builtin.psrp", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.add_host": {"py/object": "struct4.Module", "name": "add_host", "fqcn": "ansible.builtin.add_host", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.import_role": {"py/object": "struct4.Module", "name": "import_role", "fqcn": "ansible.builtin.import_role", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.set_fact": {"py/object": "struct4.Module", "name": "set_fact", "fqcn": "ansible.builtin.set_fact", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.uri": {"py/object": "struct4.Module", "name": "uri", "fqcn": "ansible.builtin.uri", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.debug": {"py/object": "struct4.Module", "name": "debug", "fqcn": "ansible.builtin.debug", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.command": {"py/object": "struct4.Module", "name": "command", "fqcn": "ansible.builtin.command", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.setup": {"py/object": "struct4.Module", "name": "setup", "fqcn": "ansible.builtin.setup", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.toml": {"py/object": "struct4.Module", "name": "toml", "fqcn": "ansible.builtin.toml", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.wait_for": {"py/object": "struct4.Module", "name": "wait_for", "fqcn": "ansible.builtin.wait_for", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.unarchive": {"py/object": "struct4.Module", "name": "unarchive", "fqcn": "ansible.builtin.unarchive", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.advanced_host_list": {"py/object": "struct4.Module", "name": "advanced_host_list", "fqcn": "ansible.builtin.advanced_host_list", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.get_url": {"py/object": "struct4.Module", "name": "get_url", "fqcn": "ansible.builtin.get_url", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.dict": {"py/object": "struct4.Module", "name": "dict", "fqcn": "ansible.builtin.dict", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.host_pinned": {"py/object": "struct4.Module", "name": "host_pinned", "fqcn": "ansible.builtin.host_pinned", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.dpkg_selections": {"py/object": "struct4.Module", "name": "dpkg_selections", "fqcn": "ansible.builtin.dpkg_selections", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.async_status": {"py/object": "struct4.Module", "name": "async_status", "fqcn": "ansible.builtin.async_status", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.package_facts": {"py/object": "struct4.Module", "name": "package_facts", "fqcn": "ansible.builtin.package_facts", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.tempfile": {"py/object": "struct4.Module", "name": "tempfile", "fqcn": "ansible.builtin.tempfile", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.yum_repository": {"py/object": "struct4.Module", "name": "yum_repository", "fqcn": "ansible.builtin.yum_repository", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.subelements": {"py/object": "struct4.Module", "name": "subelements", "fqcn": "ansible.builtin.subelements", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.pip": {"py/object": "struct4.Module", "name": "pip", "fqcn": "ansible.builtin.pip", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.apt_repository": {"py/object": "struct4.Module", "name": "apt_repository", "fqcn": "ansible.builtin.apt_repository", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.subversion": {"py/object": "struct4.Module", "name": "subversion", "fqcn": "ansible.builtin.subversion", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.items": {"py/object": "struct4.Module", "name": "items", "fqcn": "ansible.builtin.items", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.shell": {"py/object": "struct4.Module", "name": "shell", "fqcn": "ansible.builtin.shell", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.varnames": {"py/object": "struct4.Module", "name": "varnames", "fqcn": "ansible.builtin.varnames", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.cron": {"py/object": "struct4.Module", "name": "cron", "fqcn": "ansible.builtin.cron", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.package": {"py/object": "struct4.Module", "name": "package", "fqcn": "ansible.builtin.package", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.assert": {"py/object": "struct4.Module", "name": "assert", "fqcn": "ansible.builtin.assert", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.script": {"py/object": "struct4.Module", "name": "script", "fqcn": "ansible.builtin.script", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.template": {"py/object": "struct4.Module", "name": "template", "fqcn": "ansible.builtin.template", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.auto": {"py/object": "struct4.Module", "name": "auto", "fqcn": "ansible.builtin.auto", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.file": {"py/object": "struct4.Module", "name": "file", "fqcn": "ansible.builtin.file", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.lines": {"py/object": "struct4.Module", "name": "lines", "fqcn": "ansible.builtin.lines", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.tree": {"py/object": "struct4.Module", "name": "tree", "fqcn": "ansible.builtin.tree", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.password": {"py/object": "struct4.Module", "name": "password", "fqcn": "ansible.builtin.password", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.runas": {"py/object": "struct4.Module", "name": "runas", "fqcn": "ansible.builtin.runas", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.list": {"py/object": "struct4.Module", "name": "list", "fqcn": "ansible.builtin.list", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.include_tasks": {"py/object": "struct4.Module", "name": "include_tasks", "fqcn": "ansible.builtin.include_tasks", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.raw": {"py/object": "struct4.Module", "name": "raw", "fqcn": "ansible.builtin.raw", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.junit": {"py/object": "struct4.Module", "name": "junit", "fqcn": "ansible.builtin.junit", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.validate_argument_spec": {"py/object": "struct4.Module", "name": "validate_argument_spec", "fqcn": "ansible.builtin.validate_argument_spec", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.include": {"py/object": "struct4.Module", "name": "include", "fqcn": "ansible.builtin.include", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.service": {"py/object": "struct4.Module", "name": "service", "fqcn": "ansible.builtin.service", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.ping": {"py/object": "struct4.Module", "name": "ping", "fqcn": "ansible.builtin.ping", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.linear": {"py/object": "struct4.Module", "name": "linear", "fqcn": "ansible.builtin.linear", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.vars": {"py/object": "struct4.Module", "name": "vars", "fqcn": "ansible.builtin.vars", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.host_group_vars": {"py/object": "struct4.Module", "name": "host_group_vars", "fqcn": "ansible.builtin.host_group_vars", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.import_playbook": {"py/object": "struct4.Module", "name": "import_playbook", "fqcn": "ansible.builtin.import_playbook", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.include_vars": {"py/object": "struct4.Module", "name": "include_vars", "fqcn": "ansible.builtin.include_vars", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.systemd": {"py/object": "struct4.Module", "name": "systemd", "fqcn": "ansible.builtin.systemd", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.nested": {"py/object": "struct4.Module", "name": "nested", "fqcn": "ansible.builtin.nested", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.import_tasks": {"py/object": "struct4.Module", "name": "import_tasks", "fqcn": "ansible.builtin.import_tasks", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.generator": {"py/object": "struct4.Module", "name": "generator", "fqcn": "ansible.builtin.generator", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.yaml": {"py/object": "struct4.Module", "name": "yaml", "fqcn": "ansible.builtin.yaml", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.stat": {"py/object": "struct4.Module", "name": "stat", "fqcn": "ansible.builtin.stat", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.gather_facts": {"py/object": "struct4.Module", "name": "gather_facts", "fqcn": "ansible.builtin.gather_facts", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.random_choice": {"py/object": "struct4.Module", "name": "random_choice", "fqcn": "ansible.builtin.random_choice", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.copy": {"py/object": "struct4.Module", "name": "copy", "fqcn": "ansible.builtin.copy", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.ssh": {"py/object": "struct4.Module", "name": "ssh", "fqcn": "ansible.builtin.ssh", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.iptables": {"py/object": "struct4.Module", "name": "iptables", "fqcn": "ansible.builtin.iptables", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.reboot": {"py/object": "struct4.Module", "name": "reboot", "fqcn": "ansible.builtin.reboot", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.user": {"py/object": "struct4.Module", "name": "user", "fqcn": "ansible.builtin.user", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.fail": {"py/object": "struct4.Module", "name": "fail", "fqcn": "ansible.builtin.fail", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.inventory_hostnames": {"py/object": "struct4.Module", "name": "inventory_hostnames", "fqcn": "ansible.builtin.inventory_hostnames", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.sudo": {"py/object": "struct4.Module", "name": "sudo", "fqcn": "ansible.builtin.sudo", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.group": {"py/object": "struct4.Module", "name": "group", "fqcn": "ansible.builtin.group", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.rpm_key": {"py/object": "struct4.Module", "name": "rpm_key", "fqcn": "ansible.builtin.rpm_key", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.hostname": {"py/object": "struct4.Module", "name": "hostname", "fqcn": "ansible.builtin.hostname", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.ini": {"py/object": "struct4.Module", "name": "ini", "fqcn": "ansible.builtin.ini", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.blockinfile": {"py/object": "struct4.Module", "name": "blockinfile", "fqcn": "ansible.builtin.blockinfile", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.indexed_items": {"py/object": "struct4.Module", "name": "indexed_items", "fqcn": "ansible.builtin.indexed_items", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.host_list": {"py/object": "struct4.Module", "name": "host_list", "fqcn": "ansible.builtin.host_list", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.fetch": {"py/object": "struct4.Module", "name": "fetch", "fqcn": "ansible.builtin.fetch", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.unvault": {"py/object": "struct4.Module", "name": "unvault", "fqcn": "ansible.builtin.unvault", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.expect": {"py/object": "struct4.Module", "name": "expect", "fqcn": "ansible.builtin.expect", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.replace": {"py/object": "struct4.Module", "name": "replace", "fqcn": "ansible.builtin.replace", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.slurp": {"py/object": "struct4.Module", "name": "slurp", "fqcn": "ansible.builtin.slurp", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.su": {"py/object": "struct4.Module", "name": "su", "fqcn": "ansible.builtin.su", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.apt": {"py/object": "struct4.Module", "name": "apt", "fqcn": "ansible.builtin.apt", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.group_by": {"py/object": "struct4.Module", "name": "group_by", "fqcn": "ansible.builtin.group_by", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.csvfile": {"py/object": "struct4.Module", "name": "csvfile", "fqcn": "ansible.builtin.csvfile", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.apt_key": {"py/object": "struct4.Module", "name": "apt_key", "fqcn": "ansible.builtin.apt_key", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.url": {"py/object": "struct4.Module", "name": "url", "fqcn": "ansible.builtin.url", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.wait_for_connection": {"py/object": "struct4.Module", "name": "wait_for_connection", "fqcn": "ansible.builtin.wait_for_connection", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.paramiko_ssh": {"py/object": "struct4.Module", "name": "paramiko_ssh", "fqcn": "ansible.builtin.paramiko_ssh", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.powershell": {"py/object": "struct4.Module", "name": "powershell", "fqcn": "ansible.builtin.powershell", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.free": {"py/object": "struct4.Module", "name": "free", "fqcn": "ansible.builtin.free", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.set_stats": {"py/object": "struct4.Module", "name": "set_stats", "fqcn": "ansible.builtin.set_stats", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.yum": {"py/object": "struct4.Module", "name": "yum", "fqcn": "ansible.builtin.yum", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.sysvinit": {"py/object": "struct4.Module", "name": "sysvinit", "fqcn": "ansible.builtin.sysvinit", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.together": {"py/object": "struct4.Module", "name": "together", "fqcn": "ansible.builtin.together", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.sh": {"py/object": "struct4.Module", "name": "sh", "fqcn": "ansible.builtin.sh", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.dnf": {"py/object": "struct4.Module", "name": "dnf", "fqcn": "ansible.builtin.dnf", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.known_hosts": {"py/object": "struct4.Module", "name": "known_hosts", "fqcn": "ansible.builtin.known_hosts", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.pipe": {"py/object": "struct4.Module", "name": "pipe", "fqcn": "ansible.builtin.pipe", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.sequence": {"py/object": "struct4.Module", "name": "sequence", "fqcn": "ansible.builtin.sequence", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.find": {"py/object": "struct4.Module", "name": "find", "fqcn": "ansible.builtin.find", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.default": {"py/object": "struct4.Module", "name": "default", "fqcn": "ansible.builtin.default", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.pause": {"py/object": "struct4.Module", "name": "pause", "fqcn": "ansible.builtin.pause", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.memory": {"py/object": "struct4.Module", "name": "memory", "fqcn": "ansible.builtin.memory", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.getent": {"py/object": "struct4.Module", "name": "getent", "fqcn": "ansible.builtin.getent", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.git": {"py/object": "struct4.Module", "name": "git", "fqcn": "ansible.builtin.git", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.env": {"py/object": "struct4.Module", "name": "env", "fqcn": "ansible.builtin.env", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.service_facts": {"py/object": "struct4.Module", "name": "service_facts", "fqcn": "ansible.builtin.service_facts", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.cmd": {"py/object": "struct4.Module", "name": "cmd", "fqcn": "ansible.builtin.cmd", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.constructed": {"py/object": "struct4.Module", "name": "constructed", "fqcn": "ansible.builtin.constructed", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.winrm": {"py/object": "struct4.Module", "name": "winrm", "fqcn": "ansible.builtin.winrm", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.assemble": {"py/object": "struct4.Module", "name": "assemble", "fqcn": "ansible.builtin.assemble", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.minimal": {"py/object": "struct4.Module", "name": "minimal", "fqcn": "ansible.builtin.minimal", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.lineinfile": {"py/object": "struct4.Module", "name": "lineinfile", "fqcn": "ansible.builtin.lineinfile", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.config": {"py/object": "struct4.Module", "name": "config", "fqcn": "ansible.builtin.config", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.fileglob": {"py/object": "struct4.Module", "name": "fileglob", "fqcn": "ansible.builtin.fileglob", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.debconf": {"py/object": "struct4.Module", "name": "debconf", "fqcn": "ansible.builtin.debconf", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.local": {"py/object": "struct4.Module", "name": "local", "fqcn": "ansible.builtin.local", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.first_found": {"py/object": "struct4.Module", "name": "first_found", "fqcn": "ansible.builtin.first_found", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}}, "task_dict": {"{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"zabbix_agent_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-agent", "zabbix_sender_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-sender", "zabbix_get_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-get"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"NA\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2018\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora <= 27", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora <= 27", "when": ["ansible_distribution == \"Fedora\"", "ansible_distribution_major_version <= \"27\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora >= 27", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora >= 27", "when": ["ansible_distribution == \"Fedora\"", "ansible_distribution_major_version >= \"27\""]}, "module_options": {"zabbix_agent_distribution_major_version": 8}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "when": ["ansible_distribution == \"XCP-ng\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-agent"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Do a yum clean", "module": "shell", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "Do a yum clean", "args": {"warn": false}, "when": "yum_repo_installed.changed", "become": true, "tags": ["skip_ansible_lint"]}, "module_options": "yum clean all", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-agent", "module": "package", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": "zabbix_repo != \"other\"", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_agent_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}", "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-agent (When zabbix_repo == other)", "module": "package", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-agent (When zabbix_repo == other)", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": "zabbix_repo == \"other\"", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_agent_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-{sender,get}", "module": "package", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-{sender,get}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": ["zabbix_repo not in ['epel', 'other']", "not zabbix_agent_install_agent_only"], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_sender_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}", "{{ zabbix_get_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}", "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-{sender,get} (When zabbix_repo == other)", "module": "package", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-{sender,get} (When zabbix_repo == other)", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": ["zabbix_repo == \"other\"", "not zabbix_agent_install_agent_only"], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_sender_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}", "{{ zabbix_get_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "RedHat | Enable the service", "module": "service", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "API | Installing the Zabbix-api package on localhost", "module": "pip", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Installing the Zabbix-api package on localhost", "register": "zabbix_api_package_installed", "until": "zabbix_api_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "(zabbix_api_create_hostgroup | bool) or (zabbix_api_create_hosts | bool)"]}, "module_options": {"name": "zabbix-api", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "API | Create host groups", "module": "zabbix_group", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Create host groups", "when": ["zabbix_api_create_hostgroup | bool"], "register": "zabbix_api_hostgroup_created", "until": "zabbix_api_hostgroup_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_group": "{{ zabbix_host_groups }}", "state": "{{ zabbix_agent_hostgroups_state }}", "validate_certs": "{{ zabbix_api_validate_certs|default(omit) }}", "timeout": "{{ zabbix_api_timeout }}"}, "executable": "zabbix_group", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_group", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "API | Create a new host or update an existing host's info", "module": "zabbix_host", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Create a new host or update an existing host's info", "when": ["not zabbix_agent2"], "register": "zabbix_api_host_created", "until": "zabbix_api_host_created is succeeded", "delegate_to": "localhost", "become": false, "changed_when": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_name": "{{ zabbix_agent_hostname }}", "host_groups": "{{ zabbix_host_groups }}", "link_templates": "{{ zabbix_agent_link_templates }}", "status": "{{ zabbix_host_status }}", "state": "{{ zabbix_agent_host_state }}", "force": "{{ zabbix_agent_host_update }}", "proxy": "{{ zabbix_agent_proxy }}", "inventory_mode": "{{ zabbix_agent_inventory_mode }}", "interfaces": "{{ zabbix_agent_interfaces }}", "visible_name": "{{ zabbix_agent_visible_hostname | default(zabbix_agent_hostname) }}", "tls_psk": "{{ zabbix_agent_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_agent_tlspskidentity | default(omit) }}", "tls_issuer": "{{ zabbix_agent_tlsservercertissuer | default(omit) }}", "tls_subject": "{{ zabbix_agent_tls_subject | default(omit) }}", "tls_accept": "{{ zabbix_agent_tls_config[zabbix_agent_tlsaccept if zabbix_agent_tlsaccept else 'unencrypted'] }}", "tls_connect": "{{ zabbix_agent_tls_config[zabbix_agent_tlsconnect if zabbix_agent_tlsconnect else 'unencrypted'] }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}", "description": "{{ zabbix_agent_description | default(omit) }}", "inventory_zabbix": "{{ zabbix_agent_inventory_zabbix | default({}) }}", "ipmi_authtype": "{{ zabbix_agent_ipmi_authtype | default(omit) }}", "ipmi_password": "{{ zabbix_agent_ipmi_password| default(omit) }}", "ipmi_privilege": "{{ zabbix_agent_ipmi_privilege | default(omit) }}", "ipmi_username": "{{ zabbix_agent_ipmi_username | default(omit) }}"}, "executable": "zabbix_host", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_host", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "API | Create a new host using agent2 or update an existing host's info", "module": "zabbix_host", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Create a new host using agent2 or update an existing host's info", "when": ["zabbix_agent2 | bool"], "register": "zabbix_api_host_created", "until": "zabbix_api_host_created is succeeded", "delegate_to": "localhost", "become": false, "changed_when": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_name": "{{ zabbix_agent2_hostname }}", "host_groups": "{{ zabbix_host_groups }}", "link_templates": "{{ zabbix_agent_link_templates }}", "status": "{{ zabbix_host_status }}", "state": "{{ zabbix_agent_host_state }}", "force": "{{ zabbix_agent_host_update }}", "proxy": "{{ zabbix_agent_proxy }}", "inventory_mode": "{{ zabbix_agent_inventory_mode }}", "interfaces": "{{ zabbix_agent_interfaces }}", "visible_name": "{{ zabbix_agent_visible_hostname | default(zabbix_agent2_hostname) }}", "tls_psk": "{{ zabbix_agent2_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_agent2_tlspskidentity | default(omit) }}", "tls_issuer": "{{ zabbix_agent2_tlsservercertissuer | default(omit) }}", "tls_subject": "{{ zabbix_agent2_tls_subject | default(omit) }}", "tls_accept": "{{ zabbix_agent_tls_config[zabbix_agent2_tlsaccept if zabbix_agent2_tlsaccept else 'unencrypted'] }}", "tls_connect": "{{ zabbix_agent_tls_config[zabbix_agent2_tlsconnect if zabbix_agent2_tlsconnect else 'unencrypted'] }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}", "description": "{{ zabbix_agent_description | default(omit) }}", "inventory_zabbix": "{{ zabbix_agent_inventory_zabbix | default({}) }}", "ipmi_authtype": "{{ zabbix_agent_ipmi_authtype | default(omit) }}", "ipmi_password": "{{ zabbix_agent_ipmi_password| default(omit) }}", "ipmi_privilege": "{{ zabbix_agent_ipmi_privilege | default(omit) }}", "ipmi_username": "{{ zabbix_agent_ipmi_username | default(omit) }}"}, "executable": "zabbix_host", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_host", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "API | Updating host configuration with macros", "module": "zabbix_hostmacro", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Updating host configuration with macros", "with_items": "{{ zabbix_agent_macros | default([]) }}", "when": ["zabbix_agent_macros is defined", "item.macro_key is defined"], "register": "zabbix_api_hostmarcro_created", "until": "zabbix_api_hostmarcro_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_name": "{{ (zabbix_agent2 | bool) | ternary(zabbix_agent2_hostname, zabbix_agent_hostname) }}", "macro_name": "{{ item.macro_key }}", "macro_value": "{{ item.macro_value }}", "macro_type": "{{ item.macro_type|default('text') }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}"}, "executable": "zabbix_hostmacro", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_hostmacro", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Windows | Set default architecture", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set default architecture"}, "module_options": {"windows_arch": 32}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Windows | Override architecture if 64-bit", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Override architecture if 64-bit", "when": ["ansible_architecture == \"64-bit\""]}, "module_options": {"windows_arch": 64}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Windows | Set path to zabbix.exe", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set path to zabbix.exe"}, "module_options": {"zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\win{{ windows_arch }}\\zabbix_agentd.exe"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Windows | Set variables specific to Zabbix >= 4", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set variables specific to Zabbix >= 4", "when": ["zabbix_version_long is version('4.0.0', '>=')"]}, "module_options": {"zabbix_win_svc_name": "Zabbix Agent", "zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\zabbix_agentd.exe", "zabbix_win_config_name": "zabbix_agentd.conf", "zabbix2_win_svc_name": "Zabbix Agent 2", "zabbix2_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\zabbix_agent2.exe", "zabbix2_win_config_name": "zabbix_agent2.conf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Windows | Check if Zabbix agent is present", "module": "ansible.windows.win_stat", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if Zabbix agent is present", "with_items": ["{{ zabbix_win_exe_path }}", "{{ zabbix2_win_exe_path }}"], "register": "agent_file_info"}, "module_options": {"path": "{{ item }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Windows | Get Installed Zabbix Agent Version", "module": "community.windows.win_file_version", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Get Installed Zabbix Agent Version", "register": "zabbix_win_exe_info", "when": ["item.stat.exists | bool"], "with_items": "{{ agent_file_info.results }}"}, "module_options": {"path": "{{ item.item }}"}, "executable": "community.windows.win_file_version", "executable_type": "Module", "fqcn": "community.windows.win_file_version", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Windows | Set facts current zabbix agent installation", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts current zabbix agent installation", "when": ["zabbix_win_exe_info.results[0] is defined", "zabbix_win_exe_info.results[0].item.stat.exists", "zabbix_win_exe_info.results[0].item.stat.path == zabbix_win_exe_path", "zabbix_win_exe_info.results[0].win_file_version.product_version"]}, "module_options": {"zabbix_agent_1_binary_exist": true, "zabbix_agent_1_version": "zabbix_win_exe_info.results[0].win_file_version.product_version"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Windows | Set facts current zabbix agent installation (agent 2)", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts current zabbix agent installation (agent 2)", "when": ["zabbix_win_exe_info.results[1] is defined", "zabbix_win_exe_info.results[1].item.stat.exists", "zabbix_win_exe_info.results[1].item.stat.path == zabbix2_win_exe_path", "zabbix_win_exe_info.results[1].win_file_version.product_version"]}, "module_options": {"zabbix_agent_2_binary_exist": true, "zabbix_agent_2_version": "zabbix_win_exe_info.results[1].win_file_version.product_version"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Windows | Check Zabbix service", "module": "ansible.windows.win_service", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check Zabbix service", "register": "zabbix_service_info", "when": "item.item.stat.exists", "with_items": "{{ zabbix_win_exe_info.results }}"}, "module_options": {"name": "{{ (item.item.stat.path == zabbix_win_exe_path ) | ternary(zabbix_win_svc_name,zabbix2_win_svc_name) }}"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Windows | Set facts about current zabbix agent service state", "module": "set_fact", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts about current zabbix agent service state", "when": ["zabbix_service_info.results[0].exists is defined", "zabbix_service_info.results[0].exists", "zabbix_service_info.results[0].display_name == zabbix_win_svc_name"]}, "module_options": {"zabbix_agent_1_service_exist": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Windows | Set facts about current zabbix agent service state (agent 2)", "module": "set_fact", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts about current zabbix agent service state (agent 2)", "when": ["zabbix_service_info.results[1].exists is defined", "zabbix_service_info.results[1].exists", "zabbix_service_info.results[1].display_name == zabbix2_win_svc_name"]}, "module_options": {"zabbix_agent_2_service_exist": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Windows | Set fact about version change requirement", "module": "set_fact", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set fact about version change requirement", "when": "(zabbix_agent_1_binary_exist | default(false) and\n zabbix_win_exe_info.results[0].win_file_version.product_version is version(zabbix_version_long, '<>'))\nor (zabbix_agent_2_binary_exist | default(false) and\n zabbix_win_exe_info.results[1].win_file_version.product_version is version(zabbix_version_long, '<>'))\nor (zabbix_agent_1_binary_exist | default(false) and zabbix_agent2) or (zabbix_agent_2_binary_exist | default(false) and not zabbix_agent2)\n"}, "module_options": {"zabbix_agent_version_change": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Windows | Stop Zabbix agent v1", "module": "ansible.windows.win_service", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Stop Zabbix agent v1", "when": ["zabbix_agent_version_change | default(false) or zabbix_agent2", "zabbix_agent_1_service_exist | default(false)"]}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "start_mode": "auto", "state": "stopped"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Windows | Stop Zabbix agent v2", "module": "ansible.windows.win_service", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Stop Zabbix agent v2", "when": ["zabbix_agent_version_change | default(false) or not zabbix_agent2", "zabbix_agent_2_service_exist | default(false)"]}, "module_options": {"name": "{{ zabbix2_win_svc_name }}", "start_mode": "auto", "state": "stopped"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Windows | Uninstall Zabbix v1", "module": "ansible.windows.win_command", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Uninstall Zabbix v1", "when": ["zabbix_agent_version_change | default(false) or zabbix_agent2", "zabbix_agent_1_service_exist | default(false)"]}, "module_options": "\"{{ zabbix_win_exe_path }}\" --config \"{{ zabbix_win_install_dir }}\\conf\\{{ zabbix_win_config_name }}\" --uninstall", "executable": "ansible.windows.win_command", "executable_type": "Module", "fqcn": "ansible.windows.win_command", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Windows | Uninstall Zabbix v2", "module": "ansible.windows.win_command", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Uninstall Zabbix v2", "when": ["zabbix_agent_version_change | default(false) or not zabbix_agent2", "zabbix_agent_2_service_exist | default(false)"]}, "module_options": "\"{{ zabbix2_win_exe_path }}\" --config \"{{ zabbix_win_install_dir }}\\conf\\{{ zabbix2_win_config_name }}\" --uninstall", "executable": "ansible.windows.win_command", "executable_type": "Module", "fqcn": "ansible.windows.win_command", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Windows | Removing Zabbix Directory", "module": "ansible.windows.win_file", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Removing Zabbix Directory", "when": "((zabbix_agent_version_change | default(false) or zabbix_agent2) and zabbix_agent_1_binary_exist | default(false)) or ((zabbix_agent_version_change | default(false) or not zabbix_agent2) and zabbix_agent_2_binary_exist | default(false))"}, "module_options": {"path": "{{ zabbix_win_install_dir }}", "state": "absent"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Windows | Create directory structure", "module": "ansible.windows.win_file", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Create directory structure", "with_items": ["{{ zabbix_win_install_dir }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Windows | Create directory structure, includes", "module": "ansible.windows.win_file", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Create directory structure, includes", "with_items": ["{{ zabbix_agent_win_include }}"], "when": ["('.conf' not in zabbix_agent_win_include)"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Windows | Set installation settings (agent 2)", "module": "set_fact", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set installation settings (agent 2)", "when": "zabbix_agent2 | bool"}, "module_options": {"zabbix_win_package": "{{ zabbix2_win_package }}", "zabbix_win_download_link": "{{ zabbix2_win_download_link }}", "zabbix_win_exe_path": "{{ zabbix2_win_exe_path }}", "zabbix_win_config_name": "{{ zabbix2_win_config_name }}", "zabbix_win_svc_name": "{{ zabbix2_win_svc_name }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Windows | Check if agent file is already downloaded", "module": "ansible.windows.win_stat", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if agent file is already downloaded", "register": "file_info"}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Windows | Check if agent binaries in place", "module": "ansible.windows.win_stat", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if agent binaries in place", "register": "zabbix_windows_binaries"}, "module_options": {"path": "{{ zabbix_win_exe_path }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Windows | Download Zabbix Agent Zip file", "module": "ansible.windows.win_get_url", "index": 22, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Download Zabbix Agent Zip file", "when": ["not file_info.stat.exists", "not zabbix_windows_binaries.stat.exists"], "register": "zabbix_agent_win_download_zip", "until": "zabbix_agent_win_download_zip is succeeded", "throttle": "{{ zabbix_download_throttle | default(5) | int }}"}, "module_options": {"url": "{{ zabbix_win_download_link }}", "dest": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "url_username": "{{ zabbix_download_user | default(omit) }}", "url_password": "{{ zabbix_download_pass | default(omit) }}", "force": false, "follow_redirects": "all", "proxy_url": "{{ zabbix_https_proxy | default(None) | default(omit) }}", "validate_certs": "{{ zabbix_download_validate_certs | default(False) | bool }}", "timeout": "{{ zabbix_download_timeout | default(120) | int }}"}, "executable": "ansible.windows.win_get_url", "executable_type": "Module", "fqcn": "ansible.windows.win_get_url", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Windows | Unzip file", "module": "community.windows.win_unzip", "index": 23, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Unzip file"}, "module_options": {"src": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "dest": "{{ zabbix_win_install_dir }}", "creates": "{{ zabbix_win_exe_path }}"}, "executable": "community.windows.win_unzip", "executable_type": "Module", "fqcn": "community.windows.win_unzip", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Windows | Cleanup downloaded Zabbix Agent Zip file", "module": "ansible.windows.win_file", "index": 24, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Cleanup downloaded Zabbix Agent Zip file", "when": ["zabbix_agent_win_download_zip.changed"]}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "state": "absent"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Windows | Check if windows service exist", "module": "ansible.windows.win_service", "index": 25, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if windows service exist", "register": "zabbix_windows_service"}, "module_options": {"name": "{{ zabbix_win_svc_name }}"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Windows | Register Service", "module": "ansible.windows.win_command", "index": 26, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Register Service", "when": "not zabbix_windows_service.exists"}, "module_options": "\"{{ zabbix_win_exe_path }}\" --config \"{{ zabbix_win_install_dir }}\\conf\\{{ zabbix_win_config_name }}\" --install", "executable": "ansible.windows.win_command", "executable_type": "Module", "fqcn": "ansible.windows.win_command", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery", "module": "ansible.windows.win_service", "index": 27, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery"}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "start_mode": "auto", "failure_actions": [{"type": "restart", "delay_ms": 5000}, {"type": "restart", "delay_ms": 10000}, {"type": "restart", "delay_ms": 20000}], "failure_reset_period_sec": 86400}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "options": {"when": "(zabbix_agent_os_family != \"Windows\") or (zabbix_agent_docker | bool)"}, "module_options": "tlspsk_auto_agent2_linux.yml", "executable": "tlspsk_auto_agent2_linux.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "options": {"when": "zabbix_agent_os_family == \"Windows\""}, "module_options": "tlspsk_auto_agent2_windows.yml", "executable": "tlspsk_auto_agent2_windows.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "options": {"name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "when": "zabbix_api_create_hosts"}, "module_options": {"zabbix_agent2_tlsaccept": "psk", "zabbix_agent2_tlsconnect": "psk"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install zypper repo dependency", "module": "community.general.zypper", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Install zypper repo dependency", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "zabbix_agent_package_dependency", "until": "zabbix_agent_package_dependency is succeeded"}, "module_options": {"name": ["python-xml", "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['python_libxml2_package'] }}"], "state": "present"}, "executable": "community.general.zypper", "executable_type": "Module", "fqcn": "community.general.zypper", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Suse | Install basic repo file", "module": "community.general.zypper_repository", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Suse | Install basic repo file", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['url'] }}", "name": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['name'] }}", "state": "present"}, "executable": "community.general.zypper_repository", "executable_type": "Module", "fqcn": "community.general.zypper_repository", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Only install the Zabbix Agent", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Only install the Zabbix Agent", "when": ["zabbix_agent_install_agent_only"]}, "module_options": {"zabbix_agent_packages": ["{{ zabbix_agent_package }}"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Suse | Install zabbix-agent", "module": "community.general.zypper", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Suse | Install zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"name": "{{ zabbix_agent_packages }}", "state": "{{ zabbix_agent_package_state }}", "disable_gpg_check": true}, "executable": "community.general.zypper", "executable_type": "Module", "fqcn": "community.general.zypper", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Windows", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Set default path variables for Windows"}, "module_options": {"zabbix_agent_tlspskfile": "{{ zabbix_win_install_dir }}\\tls_psk_auto.secret.txt", "zabbix_agent_tlspskidentity_file": "{{ zabbix_win_install_dir }}\\tls_psk_auto.identity.txt"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Windows)", "module": "ansible.windows.win_stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Windows)", "register": "zabbix_agent_tlspskcheck"}, "module_options": {"path": "{{ zabbix_agent_tlspskfile }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "module": "ansible.windows.win_stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "register": "zabbix_agent_tlspskidentity_check"}, "module_options": {"path": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Windows)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Windows)", "register": "zabbix_agent_tlspsk_base64", "when": ["zabbix_agent_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "register": "zabbix_agent_tlspskidentity_base64", "when": "zabbix_agent_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {}, "module_options": "tlspsk_auto_common.yml", "executable": "tlspsk_auto_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file (Windows)", "module": "win_copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file (Windows)", "when": ["zabbix_agent_tlspskidentity_file is defined", "zabbix_agent_tlspskidentity is defined"], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskidentity_file }}", "content": "{{ zabbix_agent_tlspskidentity }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Windows)", "module": "win_copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Windows)", "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined", "zabbix_agent_os_family == \"Windows\""], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}", "zabbix_agent2_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent2_server) }}", "zabbix_agent2_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent2_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["zabbix_agent_listeninterface", "(zabbix_agent_listeninterface not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set network interface", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}", "zabbix_agent_ip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Installing Agent", "module": "include_tasks", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Installing Agent", "tags": ["always"]}, "module_options": "macOS.yml", "executable": "macOS.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart mac zabbix agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "/usr/local/etc/zabbix/{{ zabbix_agent_conf }}", "owner": "root", "group": "wheel", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include }}", "owner": "root", "group": "zabbix", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Create pid file directory for zabbix-agent", "module": "file", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Create pid file directory for zabbix-agent", "become": true}, "module_options": {"path": "/var/run/zabbix", "state": "directory", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Check if zabbix-agent service is running", "module": "shell", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Check if zabbix-agent service is running", "register": "launchctl_pid", "check_mode": false, "changed_when": false, "failed_when": "launchctl_pid.rc == 2", "become": true, "tags": ["init", "service"]}, "module_options": "set -o pipefail\nlaunchctl list | grep com.zabbix.zabbix_agentd | awk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "command", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)", "launchctl_pid.stdout == \"-\""], "tags": ["init", "service"]}, "module_options": "launchctl start com.zabbix.zabbix_agentd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Windows | Installing user-defined userparameters", "module": "ansible.windows.win_template", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined userparameters", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_win_include }}\\{{ item.name }}.conf"}, "executable": "ansible.windows.win_template", "executable_type": "Module", "fqcn": "ansible.windows.win_template", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Windows | Installing user-defined scripts", "module": "ansible.windows.win_copy", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined scripts", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "{{ zabbix_win_install_dir }}\\scripts\\"}, "executable": "ansible.windows.win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Installing user-defined userparameters", "module": "template", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined userparameters", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_include }}/userparameter_{{ item.name }}.conf", "owner": "zabbix", "group": "zabbix", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Installing user-defined scripts", "module": "copy", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined scripts", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "/etc/zabbix/scripts/", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Installing user-defined userparameters", "module": "template", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined userparameters", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent2_include }}/userparameter_{{ item.name }}.conf", "owner": "zabbix", "group": "zabbix", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Installing user-defined scripts", "module": "copy", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined scripts", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "/etc/zabbix/scripts/", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "macOS | Check installed package version", "module": "shell", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "options": {"name": "macOS | Check installed package version", "register": "pkgutil_version", "check_mode": false, "changed_when": false, "failed_when": "pkgutil_version.rc == 2"}, "module_options": "set -o pipefail\npkgutil --pkg-info 'com.zabbix.pkg.ZabbixAgent' | grep 'version:' | cut -d ' ' -f 2\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "macOS | Download the Zabbix package", "module": "get_url", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "options": {"name": "macOS | Download the Zabbix package", "when": "pkgutil_version.stdout != zabbix_version_long"}, "module_options": {"url": "{{ zabbix_mac_download_link }}", "dest": "/tmp/{{ zabbix_mac_package }}", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "macOS | Install the Zabbix package", "module": "command", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "options": {"name": "macOS | Install the Zabbix package", "become": true, "when": "pkgutil_version.stdout != zabbix_version_long", "tags": ["zabbix-agent"]}, "module_options": "installer -pkg \"/tmp/{{ zabbix_mac_package }}\" -target /", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Debian | Installing gnupg", "module": "apt", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing gnupg", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "gnupg_installed", "until": "gnupg_installed is succeeded", "become": true}, "module_options": {"pkg": "gnupg", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][zabbix_agent_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Debian | Check for zabbix repositories", "module": "find", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Check for zabbix repositories", "register": "repositories", "become": true, "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"paths": "/etc/apt/sources.list.d", "patterns": "repo_zabbix_com_zabbix*.list", "excludes": "repo_zabbix_com_zabbix_{{ zabbix_underscore_version }}_ubuntu.list"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Debian | Remove unecessary zabbix repositories", "module": "file", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Remove unecessary zabbix repositories", "loop": "{{ repositories.files }}", "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\"", "zabbix_agent_src_reinstall"], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"path": "{{ item.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Debian", "module": "apt_repository", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Debian", "module": "apt_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Ubuntu Arm64", "module": "apt_repository", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Ubuntu Arm64", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu-arm64/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Ubuntu Arm64", "module": "apt_repository", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Ubuntu Arm64", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu-arm64/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Ubuntu", "module": "apt_repository", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine != \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Ubuntu", "module": "apt_repository", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine != \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_agent_apt_priority | int"], "become": true}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_agent_apt_priority | int"], "become": true}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix-agent-{{ zabbix_underscore_version }}", "content": "Package: {{ zabbix_agent_package }}\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_agent_apt_priority | int }}\n", "owner": "root", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-agent", "module": "apt", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "check_mode": false, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "{{ zabbix_agent_package }}", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-{sender,get}", "module": "apt", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-{sender,get}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "not zabbix_agent_install_agent_only"], "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "check_mode": false, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": ["{{ zabbix_sender_package }}", "{{ zabbix_get_package }}"], "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Mint | Installing zabbix-agent", "module": "apt", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Mint | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution not in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "zabbix-agent", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Debian | Enable the service", "module": "service", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "SELinux | Debian | Install policycoreutils-python", "module": "apt", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Debian | Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "when": ["zabbix_agent_os_family == \"Debian\""]}, "module_options": {"pkg": "policycoreutils-python-utils", "state": "present", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install policycoreutils-python", "module": "package", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": ["zabbix_agent_os_family == \"RedHat\"", "(zabbix_agent_distribution_major_version == \"6\" or zabbix_agent_distribution_major_version == \"7\")"], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "policycoreutils-python", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install python3-policycoreutils on RHEL8", "module": "package", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install python3-policycoreutils on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": ["zabbix_agent_os_family == \"RedHat\"", "ansible_distribution_major_version == \"8\""], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "python3-policycoreutils", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install selinux-policy-targeted", "module": "package", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install selinux-policy-targeted", "register": "zabbix_agent_selinuxpolicytargeted_installed", "until": "zabbix_agent_selinuxpolicytargeted_installed is succeeded", "when": ["zabbix_agent_os_family == \"RedHat\""], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "selinux-policy-targeted", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "SELinux | Get getenforce binary", "module": "stat", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Get getenforce binary", "register": "getenforce_bin", "become": true}, "module_options": {"path": "/usr/sbin/getenforce"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "SELinux | Collect getenforce output", "module": "command", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Collect getenforce output", "register": "sestatus", "when": "getenforce_bin.stat.exists", "changed_when": false, "become": true, "check_mode": false}, "module_options": "/usr/sbin/getenforce", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "SELinux | Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "when": ["getenforce_bin.stat.exists and (\"Enforcing\" in sestatus.stdout or \"Permissive\" in sestatus.stdout)"]}, "module_options": {"zabbix_selinux": "{{ true }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "SELinux | Allow zabbix_agent to start (SELinux)", "module": "community.general.selinux_permissive", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Allow zabbix_agent to start (SELinux)", "become": true}, "module_options": {"name": "zabbix_agent_t", "permissive": true}, "executable": "community.general.selinux_permissive", "executable_type": "Module", "fqcn": "community.general.selinux_permissive", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "SELinux | Allow zabbix to run sudo commands (SELinux)", "module": "ansible.posix.seboolean", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Allow zabbix to run sudo commands (SELinux)", "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_run_sudo|bool"], "tags": "selinux"}, "module_options": {"name": "zabbix_run_sudo", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Pull service facts", "module": "service_facts", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Pull service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Remove | Make sure the \"old\" zabbix-agent service stopped", "module": "service", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Remove | Make sure the \"old\" zabbix-agent service stopped", "become": true, "when": "ansible_facts.services[\"zabbix-agent.service\"] is defined or\nansible_facts.services[\"zabbix-agent\"] is defined\n"}, "module_options": {"name": "zabbix-agent", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Remove | Package removal", "module": "package", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Remove | Package removal", "become": true}, "module_options": {"name": "zabbix-agent", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Remove | Remove the agent-include-dir", "module": "file", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Remove | Remove the agent-include-dir", "become": true}, "module_options": {"path": "{{ zabbix_agent_include }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Windows", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Set default path variables for Windows"}, "module_options": {"zabbix_agent2_tlspskfile": "{{ zabbix_win_install_dir }}\\tls_psk_auto.secret.txt", "zabbix_agent2_tlspskidentity_file": "{{ zabbix_win_install_dir }}\\tls_psk_auto.identity.txt"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Windows)", "module": "ansible.windows.win_stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Windows)", "register": "zabbix_agent2_tlspskcheck"}, "module_options": {"path": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "module": "ansible.windows.win_stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "register": "zabbix_agent2_tlspskidentity_check"}, "module_options": {"path": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Windows)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Windows)", "register": "zabbix_agent2_tlspsk_base64", "when": ["zabbix_agent2_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "register": "zabbix_agent2_tlspskidentity_base64", "when": "zabbix_agent2_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {}, "module_options": "tlspsk_auto_agent2_common.yml", "executable": "tlspsk_auto_agent2_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Windows | AutoPSK | Template TLS PSK identity in file (Windows)", "module": "win_copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "Windows | AutoPSK | Template TLS PSK identity in file (Windows)", "when": ["zabbix_agent2_tlspskidentity_file is defined", "zabbix_agent2_tlspskidentity is defined"], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskidentity_file }}", "content": "{{ zabbix_agent2_tlspskidentity }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Windows)", "module": "win_copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Windows)", "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspsk_secret is defined"], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskfile }}", "content": "{{ zabbix_agent2_tlspsk_secret }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "AutoPSK | Save existing TLS PSK secret", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Save existing TLS PSK secret", "when": "zabbix_agent2_tlspskcheck.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspsk_read": "{{ zabbix_agent2_tlspsk_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK secret", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK secret", "when": ["zabbix_agent2_tlspskcheck.stat.exists", "zabbix_agent2_tlspsk_read|length >= 32"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspsk_secret": "{{ zabbix_agent2_tlspsk_read }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK secret", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK secret", "when": ["not zabbix_agent2_tlspskcheck.stat.exists", "(zabbix_agent2_tlspsk_read is not defined) or (zabbix_agent2_tlspsk_read|length < 32)"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspsk_secret": "{{ lookup('password', '/dev/null chars=hexdigits length=64') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK identity", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK identity", "when": ["zabbix_agent2_tlspskidentity_check.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspskidentity": "{{ zabbix_agent2_tlspskidentity_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK identity", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK identity", "when": "not zabbix_agent2_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspskidentity": "{{\n  zabbix_agent_visible_hostname\n  | default(((zabbix_agent2 == True) | ternary(zabbix_agent2_hostname, zabbix_agent_hostname)))\n  + '_'\n  + lookup('password', '/dev/null chars=hexdigits length=4')\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Firewall | Configure IPTables (zabbix_agent_listenport)", "module": "iptables", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure IPTables (zabbix_agent_listenport)", "become": true, "when": ["zabbix_agent_firewall_enable | bool"]}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Firewall | Configure IPTables (zabbix_agent_jmx_listenport)", "module": "iptables", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure IPTables (zabbix_agent_jmx_listenport)", "become": true, "when": ["zabbix_agent_firewall_enable | bool", "zabbix_agent_jmx_listenport | bool"]}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Firewall | Configure firewalld (zabbix_agent_listenport)", "module": "ansible.posix.firewalld", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure firewalld (zabbix_agent_listenport)", "become": true, "when": ["zabbix_agent_firewalld_enable | bool"], "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "ansible.posix.firewalld", "executable_type": "Module", "fqcn": "ansible.posix.firewalld", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Firewall | Configure firewalld (zabbix_agent_jmx_listenport)", "module": "ansible.posix.firewalld", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure firewalld (zabbix_agent_jmx_listenport)", "become": true, "when": ["zabbix_agent_firewalld_enable | bool", "zabbix_agent_jmx_listenport | bool"], "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_jmx_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "ansible.posix.firewalld", "executable_type": "Module", "fqcn": "ansible.posix.firewalld", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined", "not (zabbix_agent_dont_detect_ip)"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}", "zabbix_agent2_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent2_server) }}", "zabbix_agent2_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent2_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["(zabbix_agent_listeninterface)", "(zabbix_agent_listeninterface not in ansible_interfaces)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set network interface", "when": ["(zabbix_agent_listeninterface)", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["(zabbix_agent_listeninterface)", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not (zabbix_agent_listenip)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Adding zabbix group", "module": "group", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Adding zabbix group", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "state": "present", "gid": "{{ zabbix_agent_docker_user_gid | default(omit) }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Adding zabbix user", "module": "user", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Adding zabbix user", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "group": "zabbix", "state": "present", "create_home": false, "home": "/etc/zabbix", "uid": "{{ zabbix_agent_docker_user_uid | default(omit) }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart zabbix-agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "{{ 'zabbix_agentd.conf.j2' if not zabbix_agent2 else 'zabbix_agent2.conf.j2' }}", "dest": "/etc/zabbix/{{ zabbix_agent_conf if not zabbix_agent2 else zabbix_agent2_conf }}", "owner": "root", "group": "root", "mode": "{{ zabbix_agent_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspskfile", "not (zabbix_agent2 | bool)"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist (zabbix-agent2)", "module": "file", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Create directory for PSK file if not exist (zabbix-agent2)", "become": true, "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspskfile", "zabbix_agent2 | bool"]}, "module_options": {"path": "{{ zabbix_agent2_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspskfile", "zabbix_agent_tlspsk_secret is defined", "not (zabbix_agent2 | bool)"], "notify": ["restart zabbix-agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Place TLS PSK File (zabbix-agent2)", "module": "copy", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Place TLS PSK File (zabbix-agent2)", "become": true, "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspskfile", "zabbix_agent2_tlspsk_secret is defined", "zabbix_agent2 | bool"], "notify": ["restart zabbix-agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskfile }}", "content": "{{ zabbix_agent2_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include if not zabbix_agent2 else zabbix_agent2_include }}", "owner": "root", "group": "zabbix", "mode": "{{ zabbix_agent_include_mode if not zabbix_agent2 else zabbix_agent2_include_mode }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Configure the firewall(d|iptables)", "module": "include", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Configure the firewall(d|iptables)", "when": ["(zabbix_agent_firewall_enable | bool) or (zabbix_agent_firewalld_enable | bool)"]}, "module_options": "firewall.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Remove zabbix-agent installation when zabbix-agent2 is used.", "module": "include", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Remove zabbix-agent installation when zabbix-agent2 is used.", "when": ["zabbix_agent2 | bool", "zabbix_agent_package_remove"]}, "module_options": "remove.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "service", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables (Linux)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Set default path variables (Linux)"}, "module_options": {"zabbix_agent2_tlspskfile": "/etc/zabbix/tls_psk_auto.secret", "zabbix_agent2_tlspskidentity_file": "/etc/zabbix/tls_psk_auto.identity"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Linux)", "module": "stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Linux)", "register": "zabbix_agent2_tlspskcheck", "become": true}, "module_options": {"path": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "module": "stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "register": "zabbix_agent2_tlspskidentity_check", "become": true}, "module_options": {"path": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Linux)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Linux)", "register": "zabbix_agent2_tlspsk_base64", "become": true, "when": ["zabbix_agent2_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "register": "zabbix_agent2_tlspskidentity_base64", "become": true, "when": "zabbix_agent2_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {}, "module_options": "tlspsk_auto_agent2_common.yml", "executable": "tlspsk_auto_agent2_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file (Linux)", "module": "copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file (Linux)", "become": true, "when": ["zabbix_agent2_tlspskidentity_file is defined", "zabbix_agent2_tlspskidentity is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskidentity_file }}", "content": "{{ zabbix_agent2_tlspskidentity }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Linux)", "module": "copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Linux)", "become": true, "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspsk_secret is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskfile }}", "content": "{{ zabbix_agent2_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "AutoPSK | Save existing TLS PSK secret", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Save existing TLS PSK secret", "when": "zabbix_agent_tlspskcheck.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspsk_read": "{{ zabbix_agent_tlspsk_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK secret", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK secret", "when": ["zabbix_agent_tlspskcheck.stat.exists", "zabbix_agent_tlspsk_read|length >= 32"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ zabbix_agent_tlspsk_read }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK secret", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK secret", "when": ["(not zabbix_agent_tlspskcheck.stat.exists) or (zabbix_agent_tlspsk_read|length < 32)"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ lookup('password', '/dev/null chars=hexdigits length=64') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK identity", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK identity", "when": ["zabbix_agent_tlspskidentity_check.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspskidentity": "{{ zabbix_agent_tlspskidentity_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK identity", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK identity", "when": "not zabbix_agent_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspskidentity": "{{\n  zabbix_agent_visible_hostname\n  | default(((zabbix_agent2 != True) | ternary(zabbix_agent_hostname, zabbix_agent_hostname)))\n  + '_'\n  + lookup('password', '/dev/null chars=hexdigits length=4')\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "options": {"when": "(zabbix_agent_os_family != \"Windows\") or (zabbix_agent_docker | bool)"}, "module_options": "tlspsk_auto_linux.yml", "executable": "tlspsk_auto_linux.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "options": {"when": "zabbix_agent_os_family == \"Windows\""}, "module_options": "tlspsk_auto_windows.yml", "executable": "tlspsk_auto_windows.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "when": "zabbix_api_create_hosts"}, "module_options": {"zabbix_agent_tlsaccept": "psk", "zabbix_agent_tlsconnect": "psk"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_ip_addresses' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_ip_addresses'][0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Windows | Configure zabbix-agent", "module": "ansible.windows.win_template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Configure zabbix-agent", "notify": "restart win zabbix agent"}, "module_options": {"src": "{{ zabbix_win_config_name }}.j2", "dest": "{{ zabbix_win_install_dir }}\\conf\\{{ zabbix_win_config_name }}"}, "executable": "ansible.windows.win_template", "executable_type": "Module", "fqcn": "ansible.windows.win_template", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery", "module": "ansible.windows.win_service", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery"}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "start_mode": "auto", "state": "started", "failure_actions": [{"type": "restart", "delay_ms": 5000}, {"type": "restart", "delay_ms": 10000}, {"type": "restart", "delay_ms": 20000}], "failure_reset_period_sec": 86400}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Windows | Check firewall service", "module": "ansible.windows.win_service_info", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Check firewall service", "register": "firewall_info", "when": "zabbix_win_firewall_management"}, "module_options": {"name": "MpsSvc"}, "executable": "ansible.windows.win_service_info", "executable_type": "Module", "fqcn": "ansible.windows.win_service_info", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Windows | Firewall rule", "module": "community.windows.win_firewall_rule", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Firewall rule", "when": ["zabbix_win_firewall_management", "firewall_info.services[0].state == 'started' or firewall_info.services[0].start_mode == 'auto'"]}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "localport": "{{ zabbix_agent_listenport }}", "action": "allow", "direction": "in", "protocol": "tcp", "state": "present", "enabled": true}, "executable": "community.windows.win_firewall_rule", "executable_type": "Module", "fqcn": "community.windows.win_firewall_rule", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create volume mount string", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "options": {"name": "Create volume mount string", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"volume_mount": "{{ zabbix_agent_tlspskfile }}:/var/lib/zabbix/enc/tlspskfile", "tls_key": {"ZBX_TLSPSKFILE": "tlspskfile"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add zabbix_agent_tlspskfile to volume mount", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "options": {"name": "Add zabbix_agent_tlspskfile to volume mount", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"zabbix_agent_docker_volumes": "{{ zabbix_agent_docker_volumes + [ volume_mount ] }}", "zabbix_agent_docker_env": "{{ zabbix_agent_docker_env | combine(tls_key) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure Zabbix Docker container is running", "module": "community.docker.docker_container", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "options": {"name": "Ensure Zabbix Docker container is running", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true}, "module_options": {"name": "{{ zabbix_agent_docker_name }}", "image": "{{ zabbix_agent_docker_image }}:{{ zabbix_agent_docker_image_tag }}", "state": "{{ zabbix_agent_docker_state }}", "restart_policy": "{{ zabbix_agent_docker_restart_policy }}", "network_mode": "{{ zabbix_agent_docker_network_mode }}", "published_ports": "{{ zabbix_agent_docker_ports }}", "privileged": "{{ zabbix_agent_docker_privileged }}", "security_opts": "{{ zabbix_agent_docker_security_opts }}", "volumes": "{{ zabbix_agent_docker_volumes }}", "env": "{{ zabbix_agent_docker_env }}"}, "executable": "community.docker.docker_container", "executable_type": "Module", "fqcn": "community.docker.docker_container", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables (Linux)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Set default path variables (Linux)"}, "module_options": {"zabbix_agent_tlspskfile": "/etc/zabbix/tls_psk_auto.secret", "zabbix_agent_tlspskidentity_file": "/etc/zabbix/tls_psk_auto.identity"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Linux)", "module": "stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Linux)", "register": "zabbix_agent_tlspskcheck", "become": true}, "module_options": {"path": "{{ zabbix_agent_tlspskfile }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "module": "stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "register": "zabbix_agent_tlspskidentity_check", "become": true}, "module_options": {"path": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Linux)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Linux)", "register": "zabbix_agent_tlspsk_base64", "become": true, "when": ["zabbix_agent_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "register": "zabbix_agent_tlspskidentity_base64", "become": true, "when": "zabbix_agent_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {}, "module_options": "tlspsk_auto_common.yml", "executable": "tlspsk_auto_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file (Linux)", "module": "copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file (Linux)", "become": true, "when": ["zabbix_agent_tlspskidentity_file is defined", "zabbix_agent_tlspskidentity is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskidentity_file }}", "content": "{{ zabbix_agent_tlspskidentity }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Linux)", "module": "copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Linux)", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set variables specific for Zabbix Agent 2", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Set variables specific for Zabbix Agent 2", "when": ["zabbix_agent2 is defined", "zabbix_agent2"], "tags": ["always"]}, "module_options": {"zabbix_agent_service": "zabbix-agent2", "zabbix_agent_package": "zabbix-agent2"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Reset zabbix_agent_version for Ubuntu 22.04 to 6.0", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Reset zabbix_agent_version for Ubuntu 22.04 to 6.0", "when": ["ansible_distribution_release == \"jammy\"", "( zabbix_agent_version is version ('6.0','lt') or zabbix_version is version ('6.0','lt') )"]}, "module_options": {"zabbix_version": 6.0, "zabbix_agent_version": 6.0}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Fix facts for linuxmint - distribution release", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - distribution release", "when": ["ansible_os_family == \"Linuxmint\"", "ansible_distribution_release == \"sonya\" or ansible_distribution_release == \"serena\""], "tags": ["always"]}, "module_options": {"zabbix_agent_distribution_release": "xenial"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Fix facts for linuxmint - family", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - family", "when": ["ansible_os_family == \"Linuxmint\""], "tags": ["always"]}, "module_options": {"zabbix_agent_os_family": "Debian"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Fix facts for XCP-ng - family", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Fix facts for XCP-ng - family", "when": ["ansible_os_family == \"XCP-ng\""]}, "module_options": {"zabbix_agent_os_family": "RedHat"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": ["always"]}, "module_options": "{{ zabbix_agent_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["not (zabbix_agent_docker | bool)"], "tags": ["always"]}, "module_options": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Install local python-netaddr package", "module": "pip", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Install local python-netaddr package", "register": "zabbix_python_netaddr_package_installed", "until": "zabbix_python_netaddr_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "ansible_all_ipv4_addresses is defined or (zabbix_agent_ip is not defined and total_private_ip_addresses is defined)"]}, "module_options": {"name": "netaddr", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Encrypt with TLS PSK auto management", "module": "include_tasks", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Encrypt with TLS PSK auto management", "when": ["not zabbix_agent2", "zabbix_agent_tlspsk_auto | bool", "(zabbix_agent_tlspskfile is undefined) or (zabbix_agent_tlspskfile | length == '0')", "(zabbix_agent_tlspsk_secret is undefined) or (zabbix_agent_tlspsk_secret | length == '0')"]}, "module_options": "tlspsk_auto.yml", "executable": "tlspsk_auto.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Encrypt with TLS PSK auto management", "module": "include_tasks", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Encrypt with TLS PSK auto management", "when": ["zabbix_agent2 | bool", "zabbix_agent2_tlspsk_auto | bool", "(zabbix_agent2_tlspskfile is undefined) or (zabbix_agent2_tlspskfile | length == '0')", "(zabbix_agent2_tlspsk_secret is undefined) or (zabbix_agent2_tlspsk_secret | length == '0')"]}, "module_options": "tlspsk_auto_agent2.yml", "executable": "tlspsk_auto_agent2.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Configure Agent", "module": "include_tasks", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Configure Agent", "when": ["zabbix_agent_os_family == \"Windows\""], "tags": ["always"]}, "module_options": "Windows_conf.yml", "executable": "Windows_conf.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Configure Agent", "module": "include_tasks", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Configure Agent", "when": ["(zabbix_agent_os_family != \"Windows\" and zabbix_agent_os_family != \"Darwin\") or (zabbix_agent_docker | bool)"], "tags": ["always"]}, "module_options": "Linux.yml", "executable": "Linux.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Run the API calls to Zabbix Server", "module": "include_tasks", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Run the API calls to Zabbix Server", "when": ["(zabbix_api_create_hostgroup | bool) or (zabbix_api_create_hosts | bool)"], "tags": ["api"]}, "module_options": "api.yml", "executable": "api.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Including userparameters", "module": "include_tasks", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Including userparameters", "when": "zabbix_agent_userparameters|length > 0", "tags": ["zabbix-agent", "userparameter"]}, "module_options": "userparameter.yml", "executable": "userparameter.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-java-gateway", "module": "package", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-java-gateway", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_java_gateway_install", "until": "zabbix_java_gateway_install is succeeded", "become": true}, "module_options": {"pkg": "zabbix-java-gateway", "state": "{{ zabbix_javagateway_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set some variables", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Set some variables"}, "module_options": {"zabbix_short_version": "{{ zabbix_javagateway_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "become": true}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Debian | Installing repository Debian", "module": "apt_repository", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Debian", "become": true, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/debian/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Debian | Installing repository Debian", "module": "apt_repository", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Debian", "become": true, "when": ["ansible_distribution == \"Debian\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/debian/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu-arm64/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine != \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu-arm64/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-java-gateway", "module": "apt", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-java-gateway", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_java_gateway_install", "until": "zabbix_java_gateway_install is succeeded", "become": true}, "module_options": {"pkg": "zabbix-java-gateway", "state": "{{ zabbix_javagateway_package_state }}", "update_cache": true, "force": true, "cache_valid_time": 3600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Make sure Zabbix Java Gateway is not yet running", "module": "systemd", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Make sure Zabbix Java Gateway is not yet running", "when": ["zabbix_java_gateway_install.changed"]}, "module_options": {"name": "zabbix-java-gateway", "state": "stopped", "enabled": true, "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"RedHat\""]}, "module_options": "RedHat.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"Debian\""]}, "module_options": "Debian.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Place systemd unit file", "module": "copy", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Place systemd unit file", "register": "systemd_state", "when": ["zabbix_version is version('5.4', '<')"]}, "module_options": {"src": "systemd.service", "dest": "/etc/systemd/system/zabbix-java-gateway.service", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Reload systemd", "module": "shell", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Reload systemd", "when": ["zabbix_version is version('5.4', '<')", "systemd_state.changed"], "tags": ["skip_ansible_lint"]}, "module_options": "systemctl daemon-reload", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Configure zabbix-proxy", "module": "template", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Configure zabbix-proxy", "notify": ["zabbix-java-gateway restarted"]}, "module_options": {"src": "zabbix_java_gateway.conf.j2", "dest": "/etc/zabbix/zabbix_java_gateway.conf", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_java_gateway_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Make sure Zabbix Java Gateway is running", "module": "systemd", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Make sure Zabbix Java Gateway is running"}, "module_options": {"name": "zabbix-java-gateway", "state": "started", "enabled": true, "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-proxy", "init"]}, "module_options": {"zabbix_proxy_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-proxy"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "RedHat | Define package with version", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Define package with version", "when": ["zabbix_proxy_rhel_version is defined", "zabbix_repo != \"epel\""]}, "module_options": {"zabbix_proxy_package": "zabbix{{ zabbix_short_version }}-proxy-{{ zabbix_proxy_database }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "RedHat | Define package without version", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Define package without version", "when": ["zabbix_proxy_rhel_version is not defined", "zabbix_repo != \"epel\""]}, "module_options": {"zabbix_proxy_package": "zabbix-proxy-{{ zabbix_proxy_database }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "RedHat | Set some facts Zabbix < 3.0", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts Zabbix < 3.0", "when": ["zabbix_version is version('3.0', '<')"], "tags": ["zabbix-proxy"]}, "module_options": {"apache_log": "httpd", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}-{{ zabbix_version }}*/create"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 3.0", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 3.0", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-proxy"]}, "module_options": {"apache_log": "httpd", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}-{{ zabbix_version }}*"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 5.4", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_proxy_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 3.0 and RedHat 8", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 3.0 and RedHat 8", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')", "ansible_distribution_major_version == '8'"], "tags": ["zabbix-proxy"]}, "module_options": {"apache_log": "httpd", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "RedHat | Set some facts EPEL", "module": "set_fact", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts EPEL", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/zabbix-{{ zabbix_proxy_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' group (EPEL)", "module": "group", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' group (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_proxy_groupname | default('zabbix') }}", "gid": "{{ zabbix_proxy_groupid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' user (EPEL)", "module": "user", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' user (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_proxy_username | default('zabbix') }}", "comment": "Zabbix Monitoring System", "uid": "{{ zabbix_proxy_userid | default(omit) }}", "group": "zabbix"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Make sure old file is absent", "module": "file", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "Make sure old file is absent", "become": true}, "module_options": {"path": "/etc/yum.repos.d/zabbix-supported.repo", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": ["zabbix_repo == \"zabbix\""], "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-agent"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "module": "package", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "when": "zabbix_repo != \"other\"", "register": "is_zabbix_proxy_package_installed", "until": "is_zabbix_proxy_package_installed is succeeded"}, "module_options": {"pkg": "{{ zabbix_proxy_package }}-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }} (When zabbix_repo == other)", "module": "package", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }} (When zabbix_repo == other)", "become": true, "when": "zabbix_repo == \"other\"", "register": "is_zabbix_proxy_package_installed", "until": "is_zabbix_proxy_package_installed is succeeded"}, "module_options": {"pkg": "{{ zabbix_proxy_package }}-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts", "module": "package", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_sql_package_installed", "until": "zabbix_proxy_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo != \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "module": "package", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "register": "zabbix_proxy_sql_package_installed", "until": "zabbix_proxy_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo == \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "RedHat | Install Ansible PostgreSQL module dependencies", "module": "yum", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible PostgreSQL module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'pgsql'", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-proxy", "init"]}, "module_options": {"name": "python-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "RedHat | Install Ansible module dependencies on RHEL8", "module": "yum", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible module dependencies on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation", "zabbix_proxy_database == 'pgsql'", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": "python3-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL7", "module": "yum", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL7", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'mysql'", "ansible_distribution_major_version == '7'"], "tags": ["zabbix-proxy", "init"]}, "module_options": {"name": ["mariadb", "MySQL-python"], "state": "installed"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client packages RHEL8", "module": "yum", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client packages RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'mysql'", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-proxy", "init"]}, "module_options": {"name": ["mysql", "python3-PyMySQL"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL5 - 6", "module": "yum", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL5 - 6", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'mysql'", "ansible_distribution_major_version == \"6\" or ansible_distribution_major_version == \"5\"", "zabbix_proxy_install_database_client"], "tags": ["zabbix-proxy", "init", "database"]}, "module_options": {"name": ["mysql", "MySQL-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "RedHat | Install PostgreSQL client package", "module": "yum", "index": 22, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install PostgreSQL client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'pgsql'", "zabbix_proxy_install_database_client"], "tags": ["zabbix-proxy", "init", "database"]}, "module_options": {"name": "postgresql", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "RedHat | Install sqlite3", "module": "yum", "index": 23, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install sqlite3", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'sqlite3'"], "tags": ["zabbix-proxy"]}, "module_options": {"name": ["sqlite"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 24, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_proxy_dbhost if (zabbix_proxy_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["not zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database", "module": "community.postgresql.postgresql_db", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database"}, "module_options": {"name": "{{ zabbix_proxy_dbname }}", "port": "{{ zabbix_proxy_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database user", "module": "postgresql_user", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database user"}, "module_options": {"db": "{{ zabbix_proxy_dbname }}", "name": "{{ zabbix_proxy_dbuser }}", "password": "md5{{ (zabbix_proxy_dbpassword + zabbix_proxy_dbuser)|hash('md5') }}", "port": "{{ zabbix_proxy_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database", "module": "community.postgresql.postgresql_db", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database"}, "module_options": {"login_host": "{{ zabbix_proxy_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_pgsql_login_password | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_pgsql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_proxy_dbname }}", "port": "{{ zabbix_proxy_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database user", "module": "postgresql_user", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database user"}, "module_options": {"login_host": "{{ zabbix_proxy_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_pgsql_login_password | default(omit) }}", "db": "{{ zabbix_proxy_dbname }}", "name": "{{ zabbix_proxy_dbuser }}", "password": "md5{{ (zabbix_proxy_dbpassword + zabbix_proxy_dbuser)|hash('md5') }}", "port": "{{ zabbix_proxy_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "PostgreSQL | Importing schema file", "module": "shell", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing schema file", "args": {"creates": "/etc/zabbix/schema.done", "executable": "/bin/bash"}, "environment": {"PGPASSWORD": "{{ zabbix_proxy_dbpassword }}"}, "when": ["zabbix_database_creation"]}, "module_options": "set -euxo pipefail\nFILE={{ 'schema.sql' if zabbix_version is version('6.0', '<') else 'proxy.sql' }}\ncd {{ datafiles_path }}\nif [ -f ${FILE}.gz ]\n  then zcat ${FILE}.gz > /tmp/schema.sql\nelse\n  cp ${FILE} /tmp/schema.sql\nfi\ncat /tmp/schema.sql | psql -h '{{ zabbix_proxy_dbhost }}' -U '{{ zabbix_proxy_dbuser }}' \\\n-d '{{ zabbix_proxy_dbname }}'\ntouch /etc/zabbix/schema.done\nrm -f /tmp/schema.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_proxy_dbhost if (zabbix_proxy_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["not zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "when": "zabbix_proxy_real_dbhost | default(false)"}, "module_options": {"delegated_dbhost": "{{ zabbix_proxy_real_dbhost }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "MySQL | Create database", "module": "community.mysql.mysql_db", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Create database", "when": "zabbix_database_creation", "register": "zabbix_database_created", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database", "skip_ansible_lint"]}, "module_options": {"name": "{{ zabbix_proxy_dbname }}", "encoding": "{{ zabbix_proxy_dbencoding }}", "collation": "{{ zabbix_proxy_dbcollation }}", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}", "state": "present"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "MySQL | Create database user", "module": "community.mysql.mysql_user", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Create database user", "when": "zabbix_database_creation", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_proxy_dbuser }}", "password": "{{ zabbix_proxy_dbpassword }}", "priv": "{{ zabbix_proxy_dbname }}.*:ALL", "host": "{{ zabbix_proxy_privileged_host }}", "state": "present"}, "executable": "community.mysql.mysql_user", "executable_type": "Module", "fqcn": "community.mysql.mysql_user", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Get the file for schema.sql", "module": "shell", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Get the file for schema.sql", "changed_when": false, "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\""], "register": "ls_output_create", "tags": ["zabbix-proxy", "database"]}, "module_options": "ls -1 {{ datafiles_path }}/{{ 'schema' if zabbix_version is version('6.0', '<') else 'proxy' }}.sq*", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Check if we have done files", "module": "stat", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Check if we have done files", "register": "done_file", "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\""]}, "module_options": {"path": "/etc/zabbix/schema.done"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "MySQL | Get version_comment", "module": "community.mysql.mysql_variables", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Get version_comment", "delegate_to": "{{ delegated_dbhost }}", "register": "install_mysql_version", "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "version", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "MySQL | Get current value for innodb_default_row_format", "module": "community.mysql.mysql_variables", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Get current value for innodb_default_row_format", "delegate_to": "{{ delegated_dbhost }}", "register": "mysql_innodb_default_row_format", "when": ["install_mysql_version.msg is version('5.6', '>=')"], "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "innodb_default_row_format", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "MySQL | Set innodb_default_row_format to dynamic", "module": "community.mysql.mysql_variables", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Set innodb_default_row_format to dynamic", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "not done_file.stat.exists", "install_mysql_version.msg is version('5.6', '>=')", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "dynamic", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "MySQL | Create database and import file", "module": "community.mysql.mysql_db", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Create database and import file", "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\"", "not done_file.stat.exists"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_proxy_dbname }}", "encoding": "{{ zabbix_proxy_dbencoding }}", "collation": "{{ zabbix_proxy_dbcollation }}", "state": "import", "target": "{{ ls_output_create.stdout }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "MySQL | Revert innodb_default_row_format to previous value", "module": "community.mysql.mysql_variables", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Revert innodb_default_row_format to previous value", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "not done_file.stat.exists", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "{{ mysql_innodb_default_row_format.msg }}", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Create done file", "module": "file", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Create done file", "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\"", "not done_file.stat.exists"]}, "module_options": {"path": "/etc/zabbix/schema.done", "state": "touch", "mode": "0644"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Sqlite3 | Default Database Path", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Sqlite3 | Default Database Path", "when": ["zabbix_proxy_dbname == \"zabbix_proxy\""]}, "module_options": {"zabbix_proxy_dbname": "/var/lib/zabbix/zabbix_proxy.db"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Sqlite3 | Create database", "module": "file", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Sqlite3 | Create database", "become": true, "when": ["zabbix_database_creation"]}, "module_options": {"name": "{{ zabbix_proxy_dbname | dirname }}", "mode": 484, "owner": "zabbix", "group": "zabbix", "seuser": "system_u", "serole": "object_r", "setype": "zabbix_var_lib_t", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Sqlite3 | Importing schema file", "module": "shell", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Sqlite3 | Importing schema file", "become": true, "become_user": "zabbix", "args": {"creates": "{{ zabbix_proxy_dbname }}", "executable": "/bin/bash"}, "environment": {"PGPASSWORD": "{{ zabbix_proxy_dbpassword }}"}, "when": ["zabbix_database_creation"]}, "module_options": "set -o pipefail\nFILE={{ 'schema.sql' if zabbix_version is version('6.0', '<') else 'proxy.sql' }}\ncd {{ datafiles_path }}\nif [ -f ${FILE}.gz ]\n  then zcat ${FILE}.gz > /tmp/schema.sql\nelse\n  cp ${FILE} /tmp/schema.sql\nfi\ncat /tmp/schema.sql | sqlite3 {{ zabbix_proxy_dbname }}\nrm -f /tmp/schema.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Fix zabbix db file permission (SELinux)", "module": "file", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Fix zabbix db file permission (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "zabbix_database_creation"], "tags": "selinux"}, "module_options": {"path": "{{ zabbix_proxy_dbname }}", "state": "file", "seuser": "system_u", "serole": "object_r", "setype": "zabbix_var_lib_t"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_python_prefix": "python{% if ansible_python_version is version('3', '>=') %}3{% endif %}", "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Debian | Set some facts", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Set some facts", "when": ["zabbix_version is version_compare('3.0', '<')"], "tags": ["zabbix-proxy", "init", "config"]}, "module_options": {"apache_log": "apache2", "datafiles_path": "/usr/share/zabbix-proxy-{{ zabbix_proxy_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-proxy", "init", "config"]}, "module_options": {"apache_log": "apache2", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 5.4", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_proxy_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Debian | Installing gnupg", "module": "apt", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing gnupg", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "gnupg_installed", "until": "gnupg_installed is succeeded", "become": true}, "module_options": {"pkg": "gnupg", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-proxy", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "when": "zabbix_repo == \"zabbix\"", "become": true, "with_items": ["deb-src", "deb"], "tags": ["zabbix-proxy", "init"]}, "module_options": {"repo": "{{ item }} http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Debian | Select Zabbix proxy version", "module": "set_fact", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Select Zabbix proxy version", "when": ["ansible_distribution == \"Debian\"", "zabbix_proxy_debian_version is defined"]}, "module_options": {"zabbix_proxy_deb_version": "{{ zabbix_proxy_debian_version }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Ubuntu | Select Zabbix proxy version", "module": "set_fact", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Ubuntu | Select Zabbix proxy version", "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_proxy_ubuntu_version is defined"]}, "module_options": {"zabbix_proxy_deb_version": "{{ zabbix_proxy_ubuntu_version }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Debian | Define package with version", "module": "set_fact", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Define package with version", "when": "zabbix_proxy_deb_version is defined"}, "module_options": {"deb_pkg": "zabbix-proxy-{{ zabbix_proxy_database }}={{ zabbix_proxy_deb_version }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Debian | Define package without version", "module": "set_fact", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Define package without version", "when": "zabbix_proxy_deb_version is not defined"}, "module_options": {"deb_pkg": "zabbix-proxy-{{ zabbix_proxy_database }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_proxy_apt_priority | int"], "become": true}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_proxy_apt_priority | int"], "become": true}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix-proxy-{{ zabbix_proxy_database }}", "content": "Package: zabbix-proxy-{{ zabbix_proxy_database }}\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_proxy_apt_priority }}\n", "owner": "root", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "module": "apt", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "is_zabbix_proxy_package_installed", "until": "is_zabbix_proxy_package_installed is succeeded", "become": true}, "module_options": {"pkg": "{{ deb_pkg }}", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "{{ zabbix_proxy_package_state }}", "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-sql-scripts", "module": "apt", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_package_sql_installed", "until": "zabbix_proxy_package_sql_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')"], "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"pkg": "zabbix-sql-scripts", "state": "{{ zabbix_proxy_package_state }}", "update_cache": true, "cache_valid_time": 0, "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Debian | Install Ansible module dependencies", "module": "apt", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install Ansible module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation"], "tags": ["zabbix-server", "init"]}, "module_options": {"name": "{{ zabbix_python_prefix }}-psycopg2", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Debian | Install Mysql Client package", "module": "apt", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'mysql'", "zabbix_proxy_install_database_client", "ansible_distribution_release != \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["mysql-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Debian 10 | Install Mysql Client package", "module": "apt", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian 10 | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'mysql'", "zabbix_proxy_install_database_client", "ansible_distribution_release == \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["mariadb-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Debian | Install PostgreSQL Client package", "module": "apt", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install PostgreSQL Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "become": true, "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'pgsql'", "zabbix_proxy_install_database_client"], "tags": ["zabbix-proxy", "init", "database"]}, "module_options": {"name": "postgresql-client", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Debian | Install sqlite3", "module": "apt", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install sqlite3", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'sqlite3'"], "tags": ["zabbix-proxy"]}, "module_options": {"name": "sqlite3", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues", "module": "yum", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-proxy"]}, "module_options": {"name": ["policycoreutils-python", "libsemanage-python", "checkpolicy"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "module": "yum", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-proxy"]}, "module_options": {"name": ["policycoreutils", "checkpolicy", "python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_proxy_alerter.sock", "module": "script", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_proxy_alerter.sock", "args": {"creates": "/etc/selinux/targeted/active/modules/400/zabbix_proxy_add/cil"}, "become": true, "when": ["ansible_os_family == \"RedHat\""], "tags": ["zabbix-proxy"]}, "module_options": {"cmd": "files/install_semodule.bsx"}, "executable": "script", "executable_type": "Module", "fqcn": "ansible.builtin.script", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Replace Sangoma with RedHat task", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Replace Sangoma with RedHat task", "when": ["ansible_os_family == 'Sangoma'"]}, "module_options": {"ansible_os_family": "RedHat"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set default ip address for zabbix_proxy_ip", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Set default ip address for zabbix_proxy_ip", "when": ["zabbix_proxy_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_proxy_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set OS dependent variables", "module": "include_vars", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Set OS dependent variables", "with_first_found": ["../vars/{{ ansible_distribution }}.yml", "../vars/main.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"RedHat\""]}, "module_options": "RedHat.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"Debian\""]}, "module_options": "Debian.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Installing the database", "module": "include", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Installing the database"}, "module_options": "{{ zabbix_proxy_database_long }}.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create include dir zabbix-proxy", "module": "file", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Create include dir zabbix-proxy", "become": true}, "module_options": {"path": "{{ zabbix_proxy_include }}", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_proxy_include_mode }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create module dir zabbix-proxy", "module": "file", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Create module dir zabbix-proxy", "become": true}, "module_options": {"path": "{{ zabbix_proxy_loadmodulepath }}", "owner": "zabbix", "group": "zabbix", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_proxy_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_proxy_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_proxy_tlspskfile is defined", "zabbix_proxy_tlspsk_secret is defined"], "notify": ["restart zabbix-proxy"]}, "module_options": {"dest": "{{ zabbix_proxy_tlspskfile }}", "content": "{{ zabbix_proxy_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Allow zabbix-proxy to open connections (SELinux)", "module": "ansible.posix.seboolean", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Allow zabbix-proxy to open connections (SELinux)", "become": true, "when": "ansible_selinux.status == \"enabled\"", "tags": "selinux"}, "module_options": {"name": "zabbix_can_network", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Allow zabbix-proxy to connect to zabbix_proxy_preprocessing.sock (SELinux)", "module": "ansible.posix.seboolean", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Allow zabbix-proxy to connect to zabbix_proxy_preprocessing.sock (SELinux)", "become": true, "when": "ansible_selinux.status == \"enabled\"", "tags": "selinux"}, "module_options": {"name": "daemons_enable_cluster_mode", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Configure zabbix-proxy", "module": "template", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Configure zabbix-proxy", "notify": "restart zabbix-proxy", "become": true}, "module_options": {"src": "zabbix_proxy.conf.j2", "dest": "/etc/zabbix/zabbix_proxy.conf", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_proxy_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Installing the Zabbix-api package on localhost", "module": "pip", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Installing the Zabbix-api package on localhost", "register": "zabbix_api_package_installed", "until": "zabbix_api_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_proxy_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "zabbix_api_create_proxy | bool"], "tags": ["api"]}, "module_options": {"name": "zabbix-api", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Ensure proxy definition is up-to-date (added/updated/removed)", "module": "zabbix_proxy", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Ensure proxy definition is up-to-date (added/updated/removed)", "when": ["zabbix_api_create_proxy | bool"], "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "state": "{{ zabbix_proxy_state }}", "status": "{{ zabbix_proxy_status }}", "proxy_name": "{{ zabbix_proxy_name }}", "description": "{{ zabbix_proxy_description | default(omit) }}", "interface": "{{ zabbix_proxy_interface }}", "tls_psk": "{{ zabbix_proxy_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_proxy_tlspskidentity | default(omit) }}", "tls_subject": "{{ zabbix_proxy_tls_subject | default(omit) }}", "tls_accept": "{{ zabbix_proxy_tls_config[zabbix_proxy_tlsaccept if zabbix_proxy_tlsaccept else 'no_encryption'] }}", "tls_connect": "{{ zabbix_proxy_tls_config[zabbix_proxy_tlsconnect if zabbix_proxy_tlsconnect else 'no_encryption'] }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}"}, "executable": "zabbix_proxy", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_proxy", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "zabbix-proxy started", "module": "service", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "zabbix-proxy started", "become": true, "when": "zabbix_proxy_manage_service | bool"}, "module_options": {"name": "zabbix-proxy", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-web"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file (Zabbix 5.x)", "module": "yum_repository", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file (Zabbix 5.x)", "with_items": "{{ zabbix_5_repo_yum }}", "become": true, "when": ["zabbix_repo == \"zabbix\"", "zabbix_version is version('5.0', '>=')", "ansible_distribution_major_version != '8'"], "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-web"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (CentOS)", "module": "yum", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (CentOS)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependency_package_install", "until": "zabbix_web_dependency_package_install is succeeded", "become": true, "when": ["zabbix_version is version('5.0', '>=')", "zabbix_web_centos_release", "ansible_distribution_major_version != '8'", "ansible_distribution == \"CentOS\""], "tags": ["zabbix-web"]}, "module_options": {"pkg": ["centos-release-scl"], "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (RHEL)", "module": "yum", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (RHEL)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependency_package_install", "until": "zabbix_web_dependency_package_install is succeeded", "become": true, "when": ["zabbix_version is version('5.0', '>=')", "zabbix_web_centos_release", "ansible_distribution_major_version != '8'", "ansible_distribution == \"RedHat\""], "tags": ["zabbix-web"]}, "module_options": {"pkg": ["scl-utils", "scl-utils-build"], "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web (Zabbix 5.x)", "module": "yum", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web (Zabbix 5.x)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_package_install", "until": "zabbix_web_package_install is succeeded", "become": true, "when": ["zabbix_version is version('5.0', '>=')", "ansible_distribution_major_version != '8'", "zabbix_websrv == 'apache'"], "tags": ["zabbix-web"]}, "module_options": {"pkg": ["zabbix-apache-conf-scl-{{ zabbix_web_version }}.{{ zabbix_web_version_minor }}"], "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web-{{ zabbix_server_database }}", "module": "yum", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web-{{ zabbix_server_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_package_install", "until": "zabbix_web_package_install is succeeded", "become": true, "tags": ["zabbix-web"]}, "module_options": {"pkg": "zabbix-web-{{ zabbix_server_database }}{{ '-scl' if zabbix_version is version('5.0', '>=') and ansible_distribution_major_version != '8' else '' }}-{{ zabbix_web_version }}.{{ zabbix_web_version_minor }}", "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "RedHat | Install PHP", "module": "template", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install PHP", "become": true, "when": ["zabbix_vhost"], "notify": ["restart redhat-php-fpm"]}, "module_options": {"src": "php-fpm.conf.j2", "dest": "{{ zabbix_php_fpm_dir }}/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"vars": {"zabbix_apache_servername": "{{ zabbix_websrv_servername }}"}, "when": ["zabbix_websrv == 'apache'"]}, "module_options": "apache_RedHat.yml", "executable": "apache_RedHat.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "RedHat | Install Nginx vhost", "module": "template", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install Nginx vhost", "when": ["zabbix_vhost", "zabbix_websrv == 'nginx'"], "become": true, "notify": ["restart nginx"], "tags": ["zabbix-web", "init", "config", "nginx"]}, "module_options": {"src": "nginx_vhost.conf.j2", "dest": "/etc/nginx/conf.d/zabbix.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "options": {}, "module_options": "apache.yml", "executable": "apache.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "RedHat | Install apache vhost", "module": "template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "options": {"name": "RedHat | Install apache vhost", "when": "zabbix_vhost", "become": true, "notify": ["restart apache"], "tags": ["zabbix-server"]}, "module_options": {"src": "apache_vhost.conf.j2", "dest": "/etc/httpd/conf.d/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"when": ["zabbix_websrv == 'apache'"]}, "module_options": "apache.yml", "executable": "apache.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Debian | Determine php prefix for packages installations (legacy php5)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"name": "Debian | Determine php prefix for packages installations (legacy php5)", "when": ["ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('16.04', '<') or ansible_distribution == 'Debian' and ansible_distribution_version is version_compare('9', '<')"]}, "module_options": {"_zabbix_php_package_prefix": 5}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Debian | Determine php prefix for packages installations (Current distros)", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"name": "Debian | Determine php prefix for packages installations (Current distros)", "when": ["ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('16.04', '>=') or ansible_distribution == 'Debian' and ansible_distribution_version is version_compare('9', '>=')", "zabbix_version is version_compare('5.0', '>=')", "not _zabbix_web_apache_php_addition"]}, "module_options": {"_zabbix_php_package_prefix": "{{ zabbix_php_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Debian | Install php packages", "module": "apt", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"name": "Debian | Install php packages", "register": "zabbix_web_php_dependency_install", "until": "zabbix_web_php_dependency_install is succeeded", "become": true, "tags": ["zabbix-web", "init"]}, "module_options": {"state": "present", "update_cache": true, "cache_valid_time": 3600, "name": ["php{{ _zabbix_php_package_prefix }}-{{ zabbix_server_database }}", "php{{ _zabbix_php_package_prefix }}-bcmath", "php{{ _zabbix_php_package_prefix }}-mbstring", "php{{ _zabbix_php_package_prefix }}-ldap", "php{{ _zabbix_php_package_prefix }}-xml", "php{{ _zabbix_php_package_prefix }}-gd"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Debian | Install legacy PHP integration for Apache", "module": "apt", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | Install legacy PHP integration for Apache", "become": true}, "module_options": {"state": "present", "update_cache": true, "cache_valid_time": 3600, "name": ["libapache2-mod-php"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Debian | install apache vhost", "module": "template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | install apache vhost", "when": "zabbix_vhost", "become": true, "notify": ["restart apache"], "tags": ["zabbix-web", "init", "config", "apache"]}, "module_options": {"src": "apache_vhost.conf.j2", "dest": "/etc/apache2/sites-available/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Debian | Remove provided zabbix.conf files", "module": "file", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | Remove provided zabbix.conf files", "when": "zabbix_vhost", "become": true, "with_items": ["/etc/apache2/conf-available/zabbix.conf", "/etc/apache2/conf-enabled/zabbix.conf"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Debian | enable apache vhost", "module": "file", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | enable apache vhost", "when": "zabbix_vhost", "become": true, "notify": ["restart apache"], "tags": ["zabbix-server", "init", "config", "apache"]}, "module_options": {"src": "/etc/apache2/sites-available/zabbix.conf", "dest": "/etc/apache2/sites-enabled/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Nginx | Set websrv specific variables", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Set websrv specific variables"}, "module_options": {"zabbix_web_conf_web_user": "{{ zabbix_web_conf_web_user if zabbix_web_conf_web_user is defined else _nginx_user }}", "zabbix_web_conf_web_group": "{{ zabbix_web_conf_web_group if zabbix_web_conf_web_group is defined else _nginx_group }}", "zabbix_nginx_config_path": "{{ zabbix_nginx_config_path if zabbix_nginx_config_path is defined else _nginx_config_path }}", "zabbix_nginx_log_path": "{{ zabbix_nginx_log_path if zabbix_nginx_log_path is defined else _nginx_log_path }}", "zabbix_nginx_service": "{{ zabbix_nginx_service if zabbix_nginx_service is defined else _nginx_service }}", "zabbix_nginx_tls_crt": "{{ zabbix_nginx_tls_crt if zabbix_nginx_tls_crt is defined else _nginx_tls_crt }}", "zabbix_nginx_tls_key": "{{ zabbix_nginx_tls_key if zabbix_nginx_tls_key is defined else _nginx_tls_key }}", "zabbix_nginx_tls_dhparam": "{{ zabbix_nginx_tls_dhparam if zabbix_nginx_tls_dhparam is defined else _nginx_tls_dhparam }}", "zabbix_apache_service": "{{ zabbix_apache_service if zabbix_apache_service is defined else _apache_service }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Nginx | Check Apache service if same ports", "module": "command", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Check Apache service if same ports", "failed_when": false, "register": "zabbix_apache_service_check", "changed_when": "zabbix_apache_service_check.rc == 0", "check_mode": false, "when": ["zabbix_apache_vhost_port == zabbix_nginx_vhost_port", "zabbix_apache_vhost_tls_port == zabbix_nginx_vhost_tls_port"]}, "module_options": "systemctl status \"{{ zabbix_apache_service }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Nginx | Stop Apache running on same ports", "module": "service", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Stop Apache running on same ports", "tags": ["zabbix-web"], "when": ["zabbix_apache_vhost_port == zabbix_nginx_vhost_port", "zabbix_apache_vhost_tls_port == zabbix_nginx_vhost_tls_port", "zabbix_apache_service_check.rc == 0"]}, "module_options": {"name": "{{ zabbix_apache_service }}", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Nginx | Debian | Install Nginx and ssl-cert packages", "module": "apt", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Debian | Install Nginx and ssl-cert packages", "when": "ansible_os_family == \"Debian\""}, "module_options": {"state": "present", "name": ["nginx-light", "ssl-cert"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Nginx | RedHat | Install Nginx packages", "module": "yum", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | RedHat | Install Nginx packages", "when": "ansible_os_family == \"RedHat\""}, "module_options": {"state": "present", "name": ["nginx"]}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Nginx | Start and enable service", "module": "service", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Start and enable service"}, "module_options": {"name": "{{ zabbix_nginx_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Nginx | Install OpenSSL package for DH parameters", "module": "package", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Install OpenSSL package for DH parameters"}, "module_options": {"name": "openssl", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Nginx | Generate SSL DH parameters", "module": "command", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Generate SSL DH parameters", "args": {"creates": "{{ zabbix_nginx_tls_dhparam }}"}}, "module_options": "openssl dhparam -out {{ zabbix_nginx_tls_dhparam }} {{ zabbix_nginx_tls_dhparam_bits | default('2048') }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Let's Encrypt | check for certificate created by certbot", "module": "stat", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | check for certificate created by certbot", "register": "zabbix_letsencrypt_cert", "failed_when": false, "when": "zabbix_letsencrypt"}, "module_options": {"path": "/etc/letsencrypt/live/{{ zabbix_websrv_servername }}/fullchain.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Let's Encrypt | Create directory for certbot webroot if not exist", "module": "file", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Create directory for certbot webroot if not exist", "when": ["zabbix_letsencrypt"], "become": true}, "module_options": {"path": "{{ zabbix_letsencrypt_webroot_path }}", "mode": "{{ zabbix_letsencrypt_webroot_mode }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Nginx | Install vhost in conf.d", "module": "template", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Install vhost in conf.d", "when": ["zabbix_vhost"], "become": true, "notify": ["restart nginx"]}, "module_options": {"src": "nginx_vhost.conf.j2", "dest": "{{ zabbix_nginx_config_path }}/zabbix.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Let's Encrypt | Check if zabbix_websrv_servername is resolvable", "module": "set_fact", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Check if zabbix_websrv_servername is resolvable", "changed_when": "zabbix_websrv_servername_ip != ansible_default_ipv4.address", "register": "zabbix_letsencrypt_resolve", "when": "zabbix_letsencrypt"}, "module_options": {"zabbix_websrv_servername_ip": "{{ lookup('dig', 'qtype=A', zabbix_websrv_servername) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Let's Encrypt | check if certbot CLI is present", "module": "shell", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | check if certbot CLI is present", "register": "zabbix_cerbot_check", "changed_when": "zabbix_cerbot_check.rc != 0", "check_mode": false, "when": "zabbix_letsencrypt"}, "module_options": "certbot --version", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Let's Encrypt | flash all handlers before certbot", "module": "meta", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | flash all handlers before certbot", "when": ["zabbix_letsencrypt", "zabbix_letsencrypt_resolve is not changed", "zabbix_cerbot_check.rc == 0"]}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Let's Encrypt | generate certs with certbot CLI", "module": "command", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | generate certs with certbot CLI", "args": {"creates": "/etc/letsencrypt/live/{{ zabbix_websrv_servername }}/fullchain.pem"}, "when": ["zabbix_letsencrypt", "zabbix_letsencrypt_resolve is not changed", "zabbix_cerbot_check.rc == 0"]}, "module_options": "certbot --non-interactive certonly --expand -a webroot --webroot-path={{ zabbix_letsencrypt_webroot_path }} --email {{ zabbix_letsencrypt_account_email }} --agree-tos --cert-name {{ zabbix_websrv_servername }} -d {{ zabbix_websrv_servername }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Let's Encrypt | Check for certificate created by certbot", "module": "stat", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Check for certificate created by certbot", "register": "zabbix_letsencrypt_cert", "failed_when": false, "when": "zabbix_letsencrypt"}, "module_options": {"path": "/etc/letsencrypt/live/{{ zabbix_websrv_servername }}/fullchain.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Let's Encrypt | Reinstall Nginx vhost", "module": "template", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Reinstall Nginx vhost", "when": ["zabbix_letsencrypt", "zabbix_letsencrypt_resolve is not changed", "zabbix_cerbot_check.rc == 0"], "become": true, "notify": ["restart nginx"]}, "module_options": {"src": "nginx_vhost.conf.j2", "dest": "/etc/nginx/conf.d/zabbix.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-web", "init", "config"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "become": true, "when": ["zabbix_repo == \"zabbix\"", "ansible_machine != \"aarch64\""], "with_items": ["deb-src", "deb"], "tags": ["zabbix-web", "init", "config"]}, "module_options": {"repo": "{{ item }} http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "become": true, "when": ["zabbix_repo == \"zabbix\"", "ansible_machine == \"aarch64\""], "with_items": ["deb-src", "deb"], "tags": ["zabbix-web", "init", "config"]}, "module_options": {"repo": "{{ item }} http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}-arm64/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Debian | Install PHP apart from zabbix-frontend-php deps", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install PHP apart from zabbix-frontend-php deps", "when": "zabbix_php_install"}, "module_options": "php_Debian.yml", "executable": "php_Debian.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Debian | Install zabbix-web", "module": "apt", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install zabbix-web", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_package_install", "until": "zabbix_web_package_install is succeeded", "become": true, "tags": ["zabbix-web", "init", "config"]}, "module_options": {"pkg": "zabbix-frontend-php{{ '-deprecated' if zabbix_php_frontend_deprecated else '' }}", "state": "{{ zabbix_web_package_state }}", "update_cache": true, "cache_valid_time": 0}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Debian | Link graphfont.ttf (workaround ZBX-10467)", "module": "file", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Link graphfont.ttf (workaround ZBX-10467)", "tags": ["zabbix-web", "init", "config"]}, "module_options": {"src": "/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf", "path": "/usr/share/zabbix/fonts/graphfont.ttf", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Debian | Install PHP", "module": "template", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install PHP", "become": true, "when": ["zabbix_vhost"], "notify": ["restart php-fpm-version"]}, "module_options": {"src": "php-fpm.conf.j2", "dest": "{{ zabbix_php_fpm_dir }}/zabbix.conf", "owner": "{{ _apache_user }}", "group": "{{ _apache_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Including Apache Configuration", "module": "include_tasks", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Including Apache Configuration", "vars": {"zabbix_apache_servername": "{{ zabbix_websrv_servername }}"}, "when": ["zabbix_websrv == 'apache'"]}, "module_options": "apache_Debian.yml", "executable": "apache_Debian.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package", "module": "yum", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependencies_installed", "until": "zabbix_web_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-web"]}, "module_options": {"name": ["libsemanage-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package on RHEL8", "module": "yum", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependencies_installed", "until": "zabbix_web_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-web"]}, "module_options": {"name": ["python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "module": "ansible.posix.seboolean", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network"], "tags": ["zabbix-web"]}, "module_options": {"name": "zabbix_can_network", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "SELinux | Allow httpd to connect to db (SELinux)", "module": "ansible.posix.seboolean", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | Allow httpd to connect to db (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_can_network"], "tags": "selinux"}, "module_options": {"name": "httpd_can_network_connect_db", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "SELinux | Allow httpd to connect to zabbix (SELinux)", "module": "ansible.posix.seboolean", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | Allow httpd to connect to zabbix (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_can_network"], "tags": "selinux"}, "module_options": {"name": "httpd_can_connect_zabbix", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "SELinux | Allow httpd to connect to ldap (SELinux)", "module": "ansible.posix.seboolean", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | Allow httpd to connect to ldap (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "zabbix_apache_can_connect_ldap | bool"], "tags": "selinux"}, "module_options": {"name": "httpd_can_connect_ldap", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Apache | Get Apache version", "module": "shell", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Apache | Get Apache version", "changed_when": false, "register": "apachectl_version", "check_mode": false, "args": {"executable": "/bin/bash"}, "tags": ["zabbix-web"]}, "module_options": "PATH=/usr/sbin:$PATH\nset -o pipefail\napachectl -v | grep 'version' | awk -F '/' '{ print $2 }'| awk '{ print $1 }' | cut -c 1-3\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Apache | Set correct apache_version", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Apache | Set correct apache_version", "tags": ["zabbix-web"]}, "module_options": {"apache_version": "{{ apachectl_version.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set some", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Set some", "when": ["zabbix_version is version('4.4', '<=')"], "tags": ["zabbix-web"]}, "module_options": {"_zabbix_web_apache_php_addition": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Set some", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Set some", "when": ["ansible_os_family == \"Debian\""], "tags": ["zabbix-web"]}, "module_options": {"_zabbix_web_apache_php_addition": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "htpasswd | check Python version to set prefix variable", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "options": {"name": "htpasswd | check Python version to set prefix variable", "when": ["zabbix_web_htpasswd is defined", "zabbix_web_htpasswd", "zabbix_web_htpasswd_users is defined"]}, "module_options": {"zabbix_python_prefix": "python{% if ansible_python_version is version_compare('3', '>=') %}3{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "htpasswd | install passlib for Python interpreter", "module": "package", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "options": {"name": "htpasswd | install passlib for Python interpreter", "when": ["zabbix_web_htpasswd is defined", "zabbix_web_htpasswd", "zabbix_web_htpasswd_users is defined"]}, "module_options": {"name": "{{ zabbix_python_prefix }}-passlib", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "htpasswd | manage HTTP authentication controls", "module": "community.general.htpasswd", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "options": {"name": "htpasswd | manage HTTP authentication controls", "loop_control": {"label": "{{ item.value.htpasswd_user }}"}, "with_dict": "{{ zabbix_web_htpasswd_users }}", "when": ["zabbix_web_htpasswd is defined", "zabbix_web_htpasswd", "zabbix_web_htpasswd_users is defined"]}, "module_options": {"path": "{{ zabbix_web_htpasswd_file }}", "name": "{{ item.value.htpasswd_user }}", "password": "{{ item.value.htpasswd_pass }}", "group": "www-data", "state": "present"}, "executable": "community.general.htpasswd", "executable_type": "Module", "fqcn": "community.general.htpasswd", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": ["always"]}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Include distribution and version-specific vars", "module": "include_vars", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Include distribution and version-specific vars", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"]}], "tags": ["always"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set some versions", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set some versions", "tags": ["always"]}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_php_version": "{{ zabbix_php_version if zabbix_php_version is defined else _zabbix_php_version }}", "_zabbix_php_package_prefix": ""}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Set default PHP-FPM variables", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set default PHP-FPM variables", "when": ["not zabbix_php_fpm"]}, "module_options": {"zabbix_php_fpm_dir": "{{ zabbix_php_fpm_dir if zabbix_php_fpm_dir is defined else _php_fpm_dir }}", "zabbix_php_fpm_session": "{{ zabbix_php_fpm_session if zabbix_php_fpm_session is defined else _php_fpm_session }}", "zabbix_php_fpm_listen": "{{ zabbix_php_fpm_listen if zabbix_php_fpm_listen is defined else _php_fpm_listen }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Set default PHP-FPM variables specific RH provided", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set default PHP-FPM variables specific RH provided", "when": ["zabbix_php_fpm", "ansible_os_family == \"RedHat\""]}, "module_options": {"zabbix_php_fpm_dir": "{{ zabbix_php_fpm_dir if zabbix_php_fpm_dir is defined else _php_fpm_dir }}", "zabbix_php_fpm_session": "{{ zabbix_php_fpm_session if zabbix_php_fpm_session is defined else _zabbix_php_fpm_session }}", "zabbix_php_fpm_listen": "{{ zabbix_php_fpm_listen if zabbix_php_fpm_listen is defined else _zabbix_php_fpm_listen }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Set websrv specific variables (Apache)", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set websrv specific variables (Apache)", "when": ["zabbix_websrv == 'apache'"]}, "module_options": {"zabbix_web_conf_web_user": "{{ zabbix_web_conf_web_user if zabbix_web_conf_web_user is defined else _apache_user }}", "zabbix_web_conf_web_group": "{{ zabbix_web_conf_web_group if zabbix_web_conf_web_group is defined else _apache_group }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"when": ["zabbix_websrv == 'nginx'"]}, "module_options": "nginx.yml", "executable": "nginx.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Install the correct repository", "when": "ansible_os_family == \"RedHat\"", "tags": ["zabbix-web"]}, "module_options": "RedHat.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Install the correct repository", "when": "ansible_os_family == \"Debian\"", "tags": ["zabbix-web"]}, "module_options": "Debian.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create zabbix-web directory", "module": "file", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Create zabbix-web directory", "tags": ["zabbix-web", "init", "config"]}, "module_options": {"path": "/etc/zabbix/web", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Configure zabbix-web", "module": "template", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Configure zabbix-web", "notify": ["restart apache"], "tags": ["zabbix-web", "init", "config"]}, "module_options": {"src": "zabbix.conf.php.j2", "dest": "/etc/zabbix/web/zabbix.conf.php", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": "{{ zabbix_web_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"when": ["zabbix_web_htpasswd"], "tags": ["zabbix-web", "init", "config"]}, "module_options": "access.yml", "executable": "access.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "RedHat | Use Zabbix package name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Use Zabbix package name", "when": ["zabbix_repo == \"zabbix\" or zabbix_repo == \"other\""], "tags": ["zabbix-server"]}, "module_options": {"zabbix_server_package": "zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-server"]}, "module_options": {"zabbix_server_package": "zabbix{{ zabbix_short_version }}-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "RedHat | Set some facts Zabbix <= 3.2", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts Zabbix <= 3.2", "when": ["zabbix_version is version('3.2', '<=')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}-{{ zabbix_version }}*"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix > 3.2", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix > 3.2", "when": ["zabbix_version is version('3.2', '>')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}*"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 5.4", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_server_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "RedHat | Set facts for RHEL8", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for RHEL8", "when": ["ansible_distribution_major_version == \"8\"", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "RedHat | Set some facts EPEL", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts EPEL", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/zabbix-{{ zabbix_server_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' group (EPEL)", "module": "group", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' group (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_server_groupname | default('zabbix') }}", "gid": "{{ zabbix_server_groupid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' user (EPEL)", "module": "user", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' user (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_server_username | default('zabbix') }}", "comment": "Zabbix Monitoring System", "uid": "{{ zabbix_server_userid | default(omit) }}", "group": "zabbix"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Make sure old file is absent", "module": "file", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "Make sure old file is absent", "become": true}, "module_options": {"path": "/etc/yum.repos.d/zabbix-supported.repo", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-server"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }}", "module": "package", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_package_installed", "until": "zabbix_server_package_installed is succeeded", "when": "zabbix_repo != \"other\"", "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "{{ zabbix_server_package }}-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }} (When zabbix_repo == other)", "module": "package", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }} (When zabbix_repo == other)", "register": "zabbix_server_package_installed", "until": "zabbix_server_package_installed is succeeded", "when": "zabbix_repo == \"other\"", "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "{{ zabbix_server_package }}-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts", "module": "package", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_sql_package_installed", "until": "zabbix_server_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo != \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "module": "package", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_sql_package_installed", "until": "zabbix_server_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo == \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "RedHat | Install Ansible module dependencies", "module": "yum", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation", "zabbix_server_database == 'pgsql'", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-server"]}, "module_options": {"name": "python-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "RedHat | Install Ansible module dependencies on RHEL8", "module": "yum", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible module dependencies on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation", "zabbix_server_database == 'pgsql'", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": "python3-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client packages RHEL8", "module": "yum", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client packages RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["mysql", "python3-PyMySQL"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL7", "module": "yum", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL7", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_major_version == \"7\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["mariadb", "MySQL-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL5 - 6", "module": "yum", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL5 - 6", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_major_version == \"6\" or ansible_distribution_major_version == \"5\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["mysql", "MySQL-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "RedHat | Install PostgreSQL client package", "module": "yum", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install PostgreSQL client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'pgsql'", "zabbix_server_install_database_client"], "tags": ["zabbix-server"]}, "module_options": {"name": "postgresql", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 22, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_server_dbhost if (zabbix_server_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["not zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database", "module": "community.postgresql.postgresql_db", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database"}, "module_options": {"name": "{{ zabbix_server_dbname }}", "port": "{{ zabbix_server_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database user", "module": "community.postgresql.postgresql_user", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database user"}, "module_options": {"db": "{{ zabbix_server_dbname }}", "name": "{{ zabbix_server_dbuser }}", "password": "md5{{ (zabbix_server_dbpassword + zabbix_server_dbuser)|hash('md5') }}", "port": "{{ zabbix_server_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "community.postgresql.postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create timescaledb extension", "module": "community.postgresql.postgresql_ext", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create timescaledb extension", "when": "zabbix_database_timescaledb"}, "module_options": {"db": "{{ zabbix_server_dbname }}", "name": "timescaledb"}, "executable": "community.postgresql.postgresql_ext", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_ext", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database", "module": "community.postgresql.postgresql_db", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database"}, "module_options": {"login_host": "{{ zabbix_server_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_pgsql_login_password | default(omit) }}", "login_unix_socket": "{{ zabbix_server_pgsql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_server_dbname }}", "port": "{{ zabbix_server_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database user", "module": "community.postgresql.postgresql_user", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database user"}, "module_options": {"login_host": "{{ zabbix_server_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_pgsql_login_password | default(omit) }}", "db": "{{ zabbix_server_dbname }}", "name": "{{ zabbix_server_dbuser }}", "password": "md5{{ (zabbix_server_dbpassword + zabbix_server_dbuser)|hash('md5') }}", "port": "{{ zabbix_server_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "community.postgresql.postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create timescaledb extension", "module": "community.postgresql.postgresql_ext", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create timescaledb extension", "when": "zabbix_database_timescaledb"}, "module_options": {"login_host": "{{ zabbix_server_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_pgsql_login_password | default(omit) }}", "login_unix_socket": "{{ zabbix_server_pgsql_login_unix_socket | default(omit) }}", "db": "{{ zabbix_server_dbname }}", "name": "timescaledb"}, "executable": "community.postgresql.postgresql_ext", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_ext", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "PostgreSQL | Create schema", "module": "shell", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Create schema", "args": {"creates": "/etc/zabbix/schema.done", "executable": "/bin/bash", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload"], "tags": ["zabbix-server", "database"]}, "module_options": "set -euxo pipefail\nFILE={{ 'create.sql' if zabbix_version is version('6.0', '<') else 'server.sql' }}\ncd {{ datafiles_path }}\nif [ -f ${FILE}.gz ]\n  then zcat ${FILE}.gz > /tmp/create.sql\nelse\n  cp ${FILE} /tmp/create.sql\nfi\ncat /tmp/create.sql | psql -h '{{ zabbix_server_dbhost }}' \\\n-U '{{ zabbix_server_dbuser }}' \\\n-d '{{ zabbix_server_dbname }}' \\\n-p '{{ zabbix_server_dbport }}'\ntouch /etc/zabbix/schema.done\nrm -f /tmp/create.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "PostgreSQL | Create TimescaleDB hypertables", "module": "shell", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Create TimescaleDB hypertables", "args": {"creates": "/etc/zabbix/timescaledb.done", "executable": "/bin/bash", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_timescaledb"], "tags": ["zabbix-server", "database"]}, "module_options": "set -euxo pipefail\ncd {{ datafiles_path }} &&\nif [ -f timescaledb.sql.gz ]; then zcat timescaledb.sql.gz > /etc/timescaledb.sql ; else cp -p timescaledb.sql /etc/timescaledb.sql ; fi\ncat /etc/timescaledb.sql | psql -h '{{ zabbix_server_dbhost }}' \\\n-U '{{ zabbix_server_dbuser }}' \\\n-d '{{ zabbix_server_dbname }}' \\\n-p '{{ zabbix_server_dbport }}'\ntouch /etc/zabbix/timescaledb.done\nrm -f /tmp/timescaledb.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Get complete path", "module": "shell", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Get complete path", "register": "datafiles_path_full", "changed_when": false, "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)"], "tags": ["skip_ansible_lint"]}, "module_options": "ls -d {{ datafiles_path }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Check if we have a create dir", "module": "stat", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Check if we have a create dir", "register": "create_dir_or_not", "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)"]}, "module_options": {"path": "{{ datafiles_path_full.stdout }}/create"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Set fact", "module": "set_fact", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Set fact", "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)", "create_dir_or_not.stat.isdir is defined and create_dir_or_not.stat.isdir", "create_dir_or_not.stat.exists"]}, "module_options": {"datafiles_path": "{{ datafiles_path }}/create"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "PostgreSQL | Importing schema file", "module": "shell", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing schema file", "args": {"creates": "/etc/zabbix/schema.done", "executable": "/bin/bash", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)"], "tags": ["zabbix-server", "database"]}, "module_options": "set -euxo pipefail\ncd {{ datafiles_path }}\nif [ -f schema.sql.gz ]; then zcat schema.sql.gz > /tmp/schema.sql ; else cp -p schema.sql /tmp/schema.sql ;fi\ncat /tmp/schema.sql | psql -h '{{ zabbix_server_dbhost }}' \\\n-U '{{ zabbix_server_dbuser }}' \\\n-d '{{ zabbix_server_dbname }}' \\\n-p '{{ zabbix_server_dbport }}'\ntouch /etc/zabbix/schema.done\nrm -f /etc/schema.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "PostgreSQL | Importing images file", "module": "shell", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing images file", "args": {"creates": "/etc/zabbix/images.done", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": "(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)", "tags": ["zabbix-server", "database"]}, "module_options": "cd {{ datafiles_path }} && psql -h '{{ zabbix_server_dbhost }}' -U '{{ zabbix_server_dbuser }}' -d '{{ zabbix_server_dbname }}' -p '{{ zabbix_server_dbport }}' -f images.sql && touch /etc/zabbix/images.done\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "PostgreSQL | Importing data file", "module": "shell", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing data file", "args": {"creates": "/etc/zabbix/data.done", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": "(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)", "tags": ["zabbix-server", "database"]}, "module_options": "cd {{ datafiles_path }} && psql -h '{{ zabbix_server_dbhost }}' -U '{{ zabbix_server_dbuser }}' -d '{{ zabbix_server_dbname }}' -p '{{ zabbix_server_dbport }}' -f data.sql && touch /etc/zabbix/data.done\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_server_dbhost if (zabbix_server_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["not zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "when": "zabbix_server_real_dbhost | default(false)"}, "module_options": {"delegated_dbhost": "{{ zabbix_server_real_dbhost }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "MySQL | Create database", "module": "community.mysql.mysql_db", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database", "when": "zabbix_database_creation", "register": "zabbix_database_created", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database", "skip_ansible_lint"]}, "module_options": {"name": "{{ zabbix_server_dbname }}", "encoding": "{{ zabbix_server_dbencoding }}", "collation": "{{ zabbix_server_dbcollation }}", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}", "state": "present"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "MySQL | Create database user", "module": "community.mysql.mysql_user", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database user", "when": "zabbix_database_creation", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_server_dbuser }}", "password": "{{ zabbix_server_dbpassword }}", "priv": "{{ zabbix_server_dbname }}.*:ALL", "host": "{{ zabbix_server_privileged_host }}", "state": "present"}, "executable": "community.mysql.mysql_user", "executable_type": "Module", "fqcn": "community.mysql.mysql_user", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Get the file for create.sql >= 3.0", "module": "shell", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Get the file for create.sql >= 3.0", "changed_when": false, "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\""], "register": "ls_output_create", "tags": ["zabbix-server", "database"]}, "module_options": "ls -1 {{ datafiles_path }}/{{ 'create' if zabbix_version is version('6.0', '<') else 'server' }}.sq*", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "MySQL | Get current database version", "module": "shell", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Get current database version", "register": "mysql_db_version", "changed_when": false, "ignore_errors": true}, "module_options": "mysql -h {{ zabbix_server_dbhost }} -u{{ zabbix_server_dbuser }} \\\n-p'{{ zabbix_server_dbpassword }}' -D '{{ zabbix_server_dbname }}' \\\n-e 'SELECT mandatory FROM dbversion;'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "MySQL | Check if database needs to be populated", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Check if database needs to be populated"}, "module_options": {"mysql_schema_empty": "{{ mysql_db_version is failed }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "MySQL | Get version_comment", "module": "community.mysql.mysql_variables", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Get version_comment", "delegate_to": "{{ delegated_dbhost }}", "register": "install_mysql_version", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "version", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "MySQL | Get current value for innodb_default_row_format", "module": "community.mysql.mysql_variables", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Get current value for innodb_default_row_format", "delegate_to": "{{ delegated_dbhost }}", "register": "mysql_innodb_default_row_format", "when": ["install_mysql_version.msg is version('5.6', '>=')"], "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_default_row_format", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "MySQL | Set innodb_default_row_format to dynamic", "module": "community.mysql.mysql_variables", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Set innodb_default_row_format to dynamic", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty", "install_mysql_version.msg is version('5.6', '>=')", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "dynamic", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "MySQL | Disable InnoDB Strict Mode", "module": "community.mysql.mysql_variables", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Disable InnoDB Strict Mode", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty", "install_mysql_version.msg is version('5.6', '>=')", "ansible_distribution_release == \"buster\""], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_strict_mode", "value": 0, "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Fetch sql create file", "module": "fetch", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Fetch sql create file", "when": ["delegated_dbhost != inventory_hostname", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"]}, "module_options": {"src": "{{ ls_output_create.stdout }}", "dest": "/tmp/{{ role_name }}/", "flat": true}, "executable": "fetch", "executable_type": "Module", "fqcn": "ansible.builtin.fetch", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Copy sql create file", "module": "copy", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Copy sql create file", "delegate_to": "{{ delegated_dbhost }}", "when": ["delegated_dbhost != inventory_hostname", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"]}, "module_options": {"src": "/tmp/{{ role_name }}/", "dest": "{{ ls_output_create.stdout | dirname }}", "mode": "0640"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "MySQL | Create database and import file >= 3.0", "module": "community.mysql.mysql_db", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database and import file >= 3.0", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_server_dbname }}", "encoding": "{{ zabbix_server_dbencoding }}", "collation": "{{ zabbix_server_dbcollation }}", "state": "import", "target": "{{ ls_output_create.stdout }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "MySQL | Revert innodb_default_row_format to previous value", "module": "community.mysql.mysql_variables", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Revert innodb_default_row_format to previous value", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "{{ mysql_innodb_default_row_format.msg }}", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Check if we have sql_done files >= 3.0", "module": "file", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Check if we have sql_done files >= 3.0", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"]}, "module_options": {"path": "/etc/zabbix/create.done", "state": "touch", "mode": "0644"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Get the correct path for the SQL files < 3.0", "module": "shell", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Get the correct path for the SQL files < 3.0", "changed_when": false, "register": "ls_output_schema", "with_items": ["schema", "images", "data"], "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool"], "tags": ["zabbix-server", "database"]}, "module_options": "ls -1 {{ datafiles_path }}/{{ mysql_create_dir }}{{ item }}.sql*", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Check if we have done files < 3.0", "module": "stat", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Check if we have done files < 3.0", "register": "done_files", "with_items": ["schema", "images", "data"], "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool"], "tags": ["zabbix-server", "database"]}, "module_options": {"path": "/etc/zabbix/{{ item }}.done"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Create fact if sql_done files exists", "module": "set_fact", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Create fact if sql_done files exists", "with_items": "{{ done_files.results }}", "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool"], "tags": ["zabbix-server", "database"]}, "module_options": {"sql_files_executed": "{{ sql_files_executed | default({}) | combine({item.item: item.stat}) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "MySQL | Create database and import files < 3.0", "module": "community.mysql.mysql_db", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database and import files < 3.0", "with_items": "{{ ls_output_schema.results }}", "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool", "not sql_files_executed[item.item].exists"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"name": "{{ zabbix_server_dbname }}", "encoding": "{{ zabbix_server_dbencoding }}", "collation": "{{ zabbix_server_dbcollation }}", "state": "import", "target": "{{ item.stdout }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Check if we have sql_done files < 3.0", "module": "file", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Check if we have sql_done files < 3.0", "with_items": ["schema", "images", "data"], "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool", "not sql_files_executed[item].exists"], "tags": ["zabbix-server", "database"]}, "module_options": {"path": "/etc/zabbix/{{ item }}.done", "state": "touch", "mode": "0644"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set some variables", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Set some variables", "when": ["ansible_machine != \"aarch64\""]}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_server_apt_repository": ["http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}/", "{{ ansible_distribution_release }}", "main"], "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}", "zabbix_python_prefix": "python{% if ansible_python_version is version('3', '>=') %}3{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set some variables", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Set some variables", "when": ["ansible_machine == \"aarch64\""]}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_server_apt_repository": ["http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}-arm64/", "{{ ansible_distribution_release }}", "main"], "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}", "zabbix_python_prefix": "python{% if ansible_python_version is version('3', '>=') %}3{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Debian | Set some facts", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Set some facts", "when": ["zabbix_version is version('3.0', '<')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 5.4", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_server_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Debian | Installing gnupg", "module": "apt", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing gnupg", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "gnupg_installed", "until": "gnupg_installed is succeeded", "become": true}, "module_options": {"pkg": "gnupg", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "register": "zabbix_server_repo_files_installed", "until": "zabbix_server_repo_files_installed is succeeded", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "when": "zabbix_repo == \"zabbix\"", "become": true, "with_items": ["deb-src", "deb"], "tags": ["zabbix-server", "init"]}, "module_options": {"repo": "{{ item }} {{ zabbix_server_apt_repository | join(' ') }}", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_server_apt_priority | int"], "become": true}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_server_apt_priority | int"], "become": true}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix_server-{{ zabbix_proxy_database }}", "content": "Package: zabbix_server-{{ zabbix_proxy_database }}\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_server_apt_priority }}\n", "owner": "root", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "apt-get clean", "module": "shell", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "apt-get clean", "args": {"warn": false}, "changed_when": false, "become": true, "tags": ["skip_ansible_lint"]}, "module_options": "apt-get clean; apt-get update", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Check for the dpkg exclude line", "module": "command", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Check for the dpkg exclude line", "register": "dpkg_exclude_line", "failed_when": false, "changed_when": false, "check_mode": false}, "module_options": "grep -F 'path-exclude=/usr/share/doc/*' /etc/dpkg/dpkg.cfg.d/excludes", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Allow Zabbix dpkg installs to /usr/share/doc/zabbix*", "module": "lineinfile", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Allow Zabbix dpkg installs to /usr/share/doc/zabbix*", "become": true, "when": ["dpkg_exclude_line.rc == 0"]}, "module_options": {"path": "/etc/dpkg/dpkg.cfg.d/excludes", "line": "path-include=/usr/share/doc/zabbix*"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-server-{{ zabbix_server_database }}", "module": "apt", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-server-{{ zabbix_server_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_package_installed", "until": "zabbix_server_package_installed is succeeded", "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"pkg": "zabbix-server-{{ zabbix_server_database }}", "state": "{{ zabbix_server_package_state }}", "update_cache": true, "cache_valid_time": 0, "install_recommends": "{{ zabbix_server_install_recommends }}", "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-sql-scripts", "module": "apt", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_package_sql_installed", "until": "zabbix_server_package_sql_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')"], "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"pkg": "zabbix-sql-scripts", "state": "{{ zabbix_server_package_state }}", "update_cache": true, "cache_valid_time": 0, "install_recommends": "{{ zabbix_server_install_recommends }}", "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Debian | Install Ansible module dependencies", "module": "apt", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install Ansible module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation"], "tags": ["zabbix-server", "init"]}, "module_options": {"name": "{{ zabbix_python_prefix }}-psycopg2", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Debian | Install Mysql Client package", "module": "apt", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_release != \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["default-mysql-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Debian 10 | Install Mysql Client package", "module": "apt", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian 10 | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_release == \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["mariadb-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Debian | Install PostgreSQL Client package", "module": "apt", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install PostgreSQL Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'pgsql'", "zabbix_server_install_database_client"], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": "postgresql-client", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Get getenforce binary", "module": "stat", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "Get getenforce binary", "register": "getenforce_bin", "become": true}, "module_options": {"path": "/usr/sbin/getenforce"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Collect getenforce output", "module": "command", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "Collect getenforce output", "register": "sestatus", "when": "getenforce_bin.stat.exists", "changed_when": false, "become": true, "check_mode": false}, "module_options": "getenforce", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "when": "getenforce_bin.stat.exists and (\"Enforcing\" in sestatus.stdout or \"Permissive\" in sestatus.stdout)"}, "module_options": {"zabbix_selinux": "{{ true }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package", "module": "yum", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["libsemanage-python", "policycoreutils", "checkpolicy"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package on RHEL8", "module": "yum", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Enable httpd_can_connect_zabbix SELinux boolean", "module": "ansible.posix.seboolean", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Enable httpd_can_connect_zabbix SELinux boolean", "become": true, "when": ["selinux_allow_zabbix_can_http"], "tags": ["zabbix-server"]}, "module_options": {"name": "httpd_can_connect_zabbix", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "module": "ansible.posix.seboolean", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "become": true, "when": ["selinux_allow_zabbix_can_network"], "tags": ["zabbix-server"]}, "module_options": {"name": "zabbix_can_network", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues", "module": "yum", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["policycoreutils-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "module": "yum", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["policycoreutils", "checkpolicy", "python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_server_alerter.sock", "module": "script", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_server_alerter.sock", "args": {"creates": "/etc/selinux/targeted/active/modules/400/zabbix_server_add/cil", "become": true}}, "module_options": {"cmd": "files/install_semodule.bsx"}, "executable": "script", "executable_type": "Module", "fqcn": "ansible.builtin.script", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Include OS-specific variables"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Install the correct repository"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "{{ ansible_os_family }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Installing the {{ zabbix_server_database_long }} database", "module": "include_tasks", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Installing the {{ zabbix_server_database_long }} database"}, "module_options": "{{ zabbix_server_database_long }}.yml", "executable": "{{ zabbix_server_database_long }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Configure zabbix-server", "module": "template", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Configure zabbix-server", "notify": ["zabbix-server restarted"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"src": "zabbix_server.conf.j2", "dest": "/etc/zabbix/zabbix_server.conf", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_server_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create include dir zabbix-server", "module": "file", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Create include dir zabbix-server", "tags": ["zabbix-server", "init", "config"]}, "module_options": {"path": "{{ zabbix_server_include }}", "owner": "zabbix", "group": "zabbix", "state": "directory", "mode": "{{ zabbix_server_include_mode }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Add zabbix-server scripts", "module": "include", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Add zabbix-server scripts", "when": "( zabbix_server_alertscripts is defined ) or ( zabbix_server_externalscripts is defined )"}, "module_options": "scripts.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Zabbix-server started", "module": "service", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Zabbix-server started", "tags": ["zabbix-server"], "when": "zabbix_server_manage_service | bool"}, "module_options": {"name": "zabbix-server", "state": "{{ zabbix_service_state }}", "enabled": "{{ zabbix_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/scripts.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Configure zabbix-server alertscripts", "module": "template", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/scripts.yml", "options": {"name": "Configure zabbix-server alertscripts", "with_items": "{{ zabbix_server_alertscripts }}", "when": "zabbix_server_alertscripts is defined"}, "module_options": {"src": "{{ item.path }}", "dest": "{{ zabbix_server_alertscriptspath }}/{{ item.name }}", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/scripts.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Configure zabbix-server externalscripts", "module": "template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/scripts.yml", "options": {"name": "Configure zabbix-server externalscripts", "with_items": "{{ zabbix_server_externalscripts }}", "when": "zabbix_server_externalscripts is defined"}, "module_options": {"src": "{{ item.path }}", "dest": "{{ zabbix_server_externalscriptspath }}/{{ item.name }}", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}}, "taskfile_dict": {"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml": {"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"zabbix_agent_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-agent", "zabbix_sender_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-sender", "zabbix_get_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-get"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"NA\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2018\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora <= 27", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora <= 27", "when": ["ansible_distribution == \"Fedora\"", "ansible_distribution_major_version <= \"27\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora >= 27", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora >= 27", "when": ["ansible_distribution == \"Fedora\"", "ansible_distribution_major_version >= \"27\""]}, "module_options": {"zabbix_agent_distribution_major_version": 8}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "when": ["ansible_distribution == \"XCP-ng\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-agent"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Do a yum clean", "module": "shell", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "Do a yum clean", "args": {"warn": false}, "when": "yum_repo_installed.changed", "become": true, "tags": ["skip_ansible_lint"]}, "module_options": "yum clean all", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-agent", "module": "package", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": "zabbix_repo != \"other\"", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_agent_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}", "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-agent (When zabbix_repo == other)", "module": "package", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-agent (When zabbix_repo == other)", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": "zabbix_repo == \"other\"", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_agent_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-{sender,get}", "module": "package", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-{sender,get}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": ["zabbix_repo not in ['epel', 'other']", "not zabbix_agent_install_agent_only"], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_sender_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}", "{{ zabbix_get_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}", "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-{sender,get} (When zabbix_repo == other)", "module": "package", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-{sender,get} (When zabbix_repo == other)", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": ["zabbix_repo == \"other\"", "not zabbix_agent_install_agent_only"], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_sender_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}", "{{ zabbix_get_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Enable the service", "module": "service", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml": {"py/object": "struct4.TaskFile", "name": "api.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "tasks": [{"py/object": "struct4.Task", "name": "API | Installing the Zabbix-api package on localhost", "module": "pip", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Installing the Zabbix-api package on localhost", "register": "zabbix_api_package_installed", "until": "zabbix_api_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "(zabbix_api_create_hostgroup | bool) or (zabbix_api_create_hosts | bool)"]}, "module_options": {"name": "zabbix-api", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "API | Create host groups", "module": "zabbix_group", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Create host groups", "when": ["zabbix_api_create_hostgroup | bool"], "register": "zabbix_api_hostgroup_created", "until": "zabbix_api_hostgroup_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_group": "{{ zabbix_host_groups }}", "state": "{{ zabbix_agent_hostgroups_state }}", "validate_certs": "{{ zabbix_api_validate_certs|default(omit) }}", "timeout": "{{ zabbix_api_timeout }}"}, "executable": "zabbix_group", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_group", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "API | Create a new host or update an existing host's info", "module": "zabbix_host", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Create a new host or update an existing host's info", "when": ["not zabbix_agent2"], "register": "zabbix_api_host_created", "until": "zabbix_api_host_created is succeeded", "delegate_to": "localhost", "become": false, "changed_when": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_name": "{{ zabbix_agent_hostname }}", "host_groups": "{{ zabbix_host_groups }}", "link_templates": "{{ zabbix_agent_link_templates }}", "status": "{{ zabbix_host_status }}", "state": "{{ zabbix_agent_host_state }}", "force": "{{ zabbix_agent_host_update }}", "proxy": "{{ zabbix_agent_proxy }}", "inventory_mode": "{{ zabbix_agent_inventory_mode }}", "interfaces": "{{ zabbix_agent_interfaces }}", "visible_name": "{{ zabbix_agent_visible_hostname | default(zabbix_agent_hostname) }}", "tls_psk": "{{ zabbix_agent_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_agent_tlspskidentity | default(omit) }}", "tls_issuer": "{{ zabbix_agent_tlsservercertissuer | default(omit) }}", "tls_subject": "{{ zabbix_agent_tls_subject | default(omit) }}", "tls_accept": "{{ zabbix_agent_tls_config[zabbix_agent_tlsaccept if zabbix_agent_tlsaccept else 'unencrypted'] }}", "tls_connect": "{{ zabbix_agent_tls_config[zabbix_agent_tlsconnect if zabbix_agent_tlsconnect else 'unencrypted'] }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}", "description": "{{ zabbix_agent_description | default(omit) }}", "inventory_zabbix": "{{ zabbix_agent_inventory_zabbix | default({}) }}", "ipmi_authtype": "{{ zabbix_agent_ipmi_authtype | default(omit) }}", "ipmi_password": "{{ zabbix_agent_ipmi_password| default(omit) }}", "ipmi_privilege": "{{ zabbix_agent_ipmi_privilege | default(omit) }}", "ipmi_username": "{{ zabbix_agent_ipmi_username | default(omit) }}"}, "executable": "zabbix_host", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_host", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "API | Create a new host using agent2 or update an existing host's info", "module": "zabbix_host", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Create a new host using agent2 or update an existing host's info", "when": ["zabbix_agent2 | bool"], "register": "zabbix_api_host_created", "until": "zabbix_api_host_created is succeeded", "delegate_to": "localhost", "become": false, "changed_when": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_name": "{{ zabbix_agent2_hostname }}", "host_groups": "{{ zabbix_host_groups }}", "link_templates": "{{ zabbix_agent_link_templates }}", "status": "{{ zabbix_host_status }}", "state": "{{ zabbix_agent_host_state }}", "force": "{{ zabbix_agent_host_update }}", "proxy": "{{ zabbix_agent_proxy }}", "inventory_mode": "{{ zabbix_agent_inventory_mode }}", "interfaces": "{{ zabbix_agent_interfaces }}", "visible_name": "{{ zabbix_agent_visible_hostname | default(zabbix_agent2_hostname) }}", "tls_psk": "{{ zabbix_agent2_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_agent2_tlspskidentity | default(omit) }}", "tls_issuer": "{{ zabbix_agent2_tlsservercertissuer | default(omit) }}", "tls_subject": "{{ zabbix_agent2_tls_subject | default(omit) }}", "tls_accept": "{{ zabbix_agent_tls_config[zabbix_agent2_tlsaccept if zabbix_agent2_tlsaccept else 'unencrypted'] }}", "tls_connect": "{{ zabbix_agent_tls_config[zabbix_agent2_tlsconnect if zabbix_agent2_tlsconnect else 'unencrypted'] }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}", "description": "{{ zabbix_agent_description | default(omit) }}", "inventory_zabbix": "{{ zabbix_agent_inventory_zabbix | default({}) }}", "ipmi_authtype": "{{ zabbix_agent_ipmi_authtype | default(omit) }}", "ipmi_password": "{{ zabbix_agent_ipmi_password| default(omit) }}", "ipmi_privilege": "{{ zabbix_agent_ipmi_privilege | default(omit) }}", "ipmi_username": "{{ zabbix_agent_ipmi_username | default(omit) }}"}, "executable": "zabbix_host", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_host", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "API | Updating host configuration with macros", "module": "zabbix_hostmacro", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Updating host configuration with macros", "with_items": "{{ zabbix_agent_macros | default([]) }}", "when": ["zabbix_agent_macros is defined", "item.macro_key is defined"], "register": "zabbix_api_hostmarcro_created", "until": "zabbix_api_hostmarcro_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_name": "{{ (zabbix_agent2 | bool) | ternary(zabbix_agent2_hostname, zabbix_agent_hostname) }}", "macro_name": "{{ item.macro_key }}", "macro_value": "{{ item.macro_value }}", "macro_type": "{{ item.macro_type|default('text') }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}"}, "executable": "zabbix_hostmacro", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_hostmacro", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml": {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows | Set default architecture", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set default architecture"}, "module_options": {"windows_arch": 32}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Override architecture if 64-bit", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Override architecture if 64-bit", "when": ["ansible_architecture == \"64-bit\""]}, "module_options": {"windows_arch": 64}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set path to zabbix.exe", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set path to zabbix.exe"}, "module_options": {"zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\win{{ windows_arch }}\\zabbix_agentd.exe"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set variables specific to Zabbix >= 4", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set variables specific to Zabbix >= 4", "when": ["zabbix_version_long is version('4.0.0', '>=')"]}, "module_options": {"zabbix_win_svc_name": "Zabbix Agent", "zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\zabbix_agentd.exe", "zabbix_win_config_name": "zabbix_agentd.conf", "zabbix2_win_svc_name": "Zabbix Agent 2", "zabbix2_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\zabbix_agent2.exe", "zabbix2_win_config_name": "zabbix_agent2.conf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if Zabbix agent is present", "module": "ansible.windows.win_stat", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if Zabbix agent is present", "with_items": ["{{ zabbix_win_exe_path }}", "{{ zabbix2_win_exe_path }}"], "register": "agent_file_info"}, "module_options": {"path": "{{ item }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Get Installed Zabbix Agent Version", "module": "community.windows.win_file_version", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Get Installed Zabbix Agent Version", "register": "zabbix_win_exe_info", "when": ["item.stat.exists | bool"], "with_items": "{{ agent_file_info.results }}"}, "module_options": {"path": "{{ item.item }}"}, "executable": "community.windows.win_file_version", "executable_type": "Module", "fqcn": "community.windows.win_file_version", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set facts current zabbix agent installation", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts current zabbix agent installation", "when": ["zabbix_win_exe_info.results[0] is defined", "zabbix_win_exe_info.results[0].item.stat.exists", "zabbix_win_exe_info.results[0].item.stat.path == zabbix_win_exe_path", "zabbix_win_exe_info.results[0].win_file_version.product_version"]}, "module_options": {"zabbix_agent_1_binary_exist": true, "zabbix_agent_1_version": "zabbix_win_exe_info.results[0].win_file_version.product_version"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set facts current zabbix agent installation (agent 2)", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts current zabbix agent installation (agent 2)", "when": ["zabbix_win_exe_info.results[1] is defined", "zabbix_win_exe_info.results[1].item.stat.exists", "zabbix_win_exe_info.results[1].item.stat.path == zabbix2_win_exe_path", "zabbix_win_exe_info.results[1].win_file_version.product_version"]}, "module_options": {"zabbix_agent_2_binary_exist": true, "zabbix_agent_2_version": "zabbix_win_exe_info.results[1].win_file_version.product_version"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check Zabbix service", "module": "ansible.windows.win_service", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check Zabbix service", "register": "zabbix_service_info", "when": "item.item.stat.exists", "with_items": "{{ zabbix_win_exe_info.results }}"}, "module_options": {"name": "{{ (item.item.stat.path == zabbix_win_exe_path ) | ternary(zabbix_win_svc_name,zabbix2_win_svc_name) }}"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Set facts about current zabbix agent service state", "module": "set_fact", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts about current zabbix agent service state", "when": ["zabbix_service_info.results[0].exists is defined", "zabbix_service_info.results[0].exists", "zabbix_service_info.results[0].display_name == zabbix_win_svc_name"]}, "module_options": {"zabbix_agent_1_service_exist": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set facts about current zabbix agent service state (agent 2)", "module": "set_fact", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts about current zabbix agent service state (agent 2)", "when": ["zabbix_service_info.results[1].exists is defined", "zabbix_service_info.results[1].exists", "zabbix_service_info.results[1].display_name == zabbix2_win_svc_name"]}, "module_options": {"zabbix_agent_2_service_exist": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set fact about version change requirement", "module": "set_fact", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set fact about version change requirement", "when": "(zabbix_agent_1_binary_exist | default(false) and\n zabbix_win_exe_info.results[0].win_file_version.product_version is version(zabbix_version_long, '<>'))\nor (zabbix_agent_2_binary_exist | default(false) and\n zabbix_win_exe_info.results[1].win_file_version.product_version is version(zabbix_version_long, '<>'))\nor (zabbix_agent_1_binary_exist | default(false) and zabbix_agent2) or (zabbix_agent_2_binary_exist | default(false) and not zabbix_agent2)\n"}, "module_options": {"zabbix_agent_version_change": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Stop Zabbix agent v1", "module": "ansible.windows.win_service", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Stop Zabbix agent v1", "when": ["zabbix_agent_version_change | default(false) or zabbix_agent2", "zabbix_agent_1_service_exist | default(false)"]}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "start_mode": "auto", "state": "stopped"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Stop Zabbix agent v2", "module": "ansible.windows.win_service", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Stop Zabbix agent v2", "when": ["zabbix_agent_version_change | default(false) or not zabbix_agent2", "zabbix_agent_2_service_exist | default(false)"]}, "module_options": {"name": "{{ zabbix2_win_svc_name }}", "start_mode": "auto", "state": "stopped"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Uninstall Zabbix v1", "module": "ansible.windows.win_command", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Uninstall Zabbix v1", "when": ["zabbix_agent_version_change | default(false) or zabbix_agent2", "zabbix_agent_1_service_exist | default(false)"]}, "module_options": "\"{{ zabbix_win_exe_path }}\" --config \"{{ zabbix_win_install_dir }}\\conf\\{{ zabbix_win_config_name }}\" --uninstall", "executable": "ansible.windows.win_command", "executable_type": "Module", "fqcn": "ansible.windows.win_command", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Uninstall Zabbix v2", "module": "ansible.windows.win_command", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Uninstall Zabbix v2", "when": ["zabbix_agent_version_change | default(false) or not zabbix_agent2", "zabbix_agent_2_service_exist | default(false)"]}, "module_options": "\"{{ zabbix2_win_exe_path }}\" --config \"{{ zabbix_win_install_dir }}\\conf\\{{ zabbix2_win_config_name }}\" --uninstall", "executable": "ansible.windows.win_command", "executable_type": "Module", "fqcn": "ansible.windows.win_command", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Removing Zabbix Directory", "module": "ansible.windows.win_file", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Removing Zabbix Directory", "when": "((zabbix_agent_version_change | default(false) or zabbix_agent2) and zabbix_agent_1_binary_exist | default(false)) or ((zabbix_agent_version_change | default(false) or not zabbix_agent2) and zabbix_agent_2_binary_exist | default(false))"}, "module_options": {"path": "{{ zabbix_win_install_dir }}", "state": "absent"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Create directory structure", "module": "ansible.windows.win_file", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Create directory structure", "with_items": ["{{ zabbix_win_install_dir }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Create directory structure, includes", "module": "ansible.windows.win_file", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Create directory structure, includes", "with_items": ["{{ zabbix_agent_win_include }}"], "when": ["('.conf' not in zabbix_agent_win_include)"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Set installation settings (agent 2)", "module": "set_fact", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set installation settings (agent 2)", "when": "zabbix_agent2 | bool"}, "module_options": {"zabbix_win_package": "{{ zabbix2_win_package }}", "zabbix_win_download_link": "{{ zabbix2_win_download_link }}", "zabbix_win_exe_path": "{{ zabbix2_win_exe_path }}", "zabbix_win_config_name": "{{ zabbix2_win_config_name }}", "zabbix_win_svc_name": "{{ zabbix2_win_svc_name }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if agent file is already downloaded", "module": "ansible.windows.win_stat", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if agent file is already downloaded", "register": "file_info"}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Check if agent binaries in place", "module": "ansible.windows.win_stat", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if agent binaries in place", "register": "zabbix_windows_binaries"}, "module_options": {"path": "{{ zabbix_win_exe_path }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Download Zabbix Agent Zip file", "module": "ansible.windows.win_get_url", "index": 22, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Download Zabbix Agent Zip file", "when": ["not file_info.stat.exists", "not zabbix_windows_binaries.stat.exists"], "register": "zabbix_agent_win_download_zip", "until": "zabbix_agent_win_download_zip is succeeded", "throttle": "{{ zabbix_download_throttle | default(5) | int }}"}, "module_options": {"url": "{{ zabbix_win_download_link }}", "dest": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "url_username": "{{ zabbix_download_user | default(omit) }}", "url_password": "{{ zabbix_download_pass | default(omit) }}", "force": false, "follow_redirects": "all", "proxy_url": "{{ zabbix_https_proxy | default(None) | default(omit) }}", "validate_certs": "{{ zabbix_download_validate_certs | default(False) | bool }}", "timeout": "{{ zabbix_download_timeout | default(120) | int }}"}, "executable": "ansible.windows.win_get_url", "executable_type": "Module", "fqcn": "ansible.windows.win_get_url", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Unzip file", "module": "community.windows.win_unzip", "index": 23, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Unzip file"}, "module_options": {"src": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "dest": "{{ zabbix_win_install_dir }}", "creates": "{{ zabbix_win_exe_path }}"}, "executable": "community.windows.win_unzip", "executable_type": "Module", "fqcn": "community.windows.win_unzip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Cleanup downloaded Zabbix Agent Zip file", "module": "ansible.windows.win_file", "index": 24, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Cleanup downloaded Zabbix Agent Zip file", "when": ["zabbix_agent_win_download_zip.changed"]}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "state": "absent"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Check if windows service exist", "module": "ansible.windows.win_service", "index": 25, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if windows service exist", "register": "zabbix_windows_service"}, "module_options": {"name": "{{ zabbix_win_svc_name }}"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Register Service", "module": "ansible.windows.win_command", "index": 26, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Register Service", "when": "not zabbix_windows_service.exists"}, "module_options": "\"{{ zabbix_win_exe_path }}\" --config \"{{ zabbix_win_install_dir }}\\conf\\{{ zabbix_win_config_name }}\" --install", "executable": "ansible.windows.win_command", "executable_type": "Module", "fqcn": "ansible.windows.win_command", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery", "module": "ansible.windows.win_service", "index": 27, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery"}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "start_mode": "auto", "failure_actions": [{"type": "restart", "delay_ms": 5000}, {"type": "restart", "delay_ms": 10000}, {"type": "restart", "delay_ms": 20000}], "failure_reset_period_sec": 86400}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml": {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_agent2.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "options": {"when": "(zabbix_agent_os_family != \"Windows\") or (zabbix_agent_docker | bool)"}, "module_options": "tlspsk_auto_agent2_linux.yml", "executable": "tlspsk_auto_agent2_linux.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "options": {"when": "zabbix_agent_os_family == \"Windows\""}, "module_options": "tlspsk_auto_agent2_windows.yml", "executable": "tlspsk_auto_agent2_windows.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "options": {"name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "when": "zabbix_api_create_hosts"}, "module_options": {"zabbix_agent2_tlsaccept": "psk", "zabbix_agent2_tlsconnect": "psk"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml": {"py/object": "struct4.TaskFile", "name": "Suse.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install zypper repo dependency", "module": "community.general.zypper", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Install zypper repo dependency", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "zabbix_agent_package_dependency", "until": "zabbix_agent_package_dependency is succeeded"}, "module_options": {"name": ["python-xml", "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['python_libxml2_package'] }}"], "state": "present"}, "executable": "community.general.zypper", "executable_type": "Module", "fqcn": "community.general.zypper", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Suse | Install basic repo file", "module": "community.general.zypper_repository", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Suse | Install basic repo file", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['url'] }}", "name": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['name'] }}", "state": "present"}, "executable": "community.general.zypper_repository", "executable_type": "Module", "fqcn": "community.general.zypper_repository", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Only install the Zabbix Agent", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Only install the Zabbix Agent", "when": ["zabbix_agent_install_agent_only"]}, "module_options": {"zabbix_agent_packages": ["{{ zabbix_agent_package }}"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install zabbix-agent", "module": "community.general.zypper", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Suse | Install zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"name": "{{ zabbix_agent_packages }}", "state": "{{ zabbix_agent_package_state }}", "disable_gpg_check": true}, "executable": "community.general.zypper", "executable_type": "Module", "fqcn": "community.general.zypper", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml": {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_windows.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Windows", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Set default path variables for Windows"}, "module_options": {"zabbix_agent_tlspskfile": "{{ zabbix_win_install_dir }}\\tls_psk_auto.secret.txt", "zabbix_agent_tlspskidentity_file": "{{ zabbix_win_install_dir }}\\tls_psk_auto.identity.txt"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Windows)", "module": "ansible.windows.win_stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Windows)", "register": "zabbix_agent_tlspskcheck"}, "module_options": {"path": "{{ zabbix_agent_tlspskfile }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "module": "ansible.windows.win_stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "register": "zabbix_agent_tlspskidentity_check"}, "module_options": {"path": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Windows)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Windows)", "register": "zabbix_agent_tlspsk_base64", "when": ["zabbix_agent_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "register": "zabbix_agent_tlspskidentity_base64", "when": "zabbix_agent_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {}, "module_options": "tlspsk_auto_common.yml", "executable": "tlspsk_auto_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file (Windows)", "module": "win_copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file (Windows)", "when": ["zabbix_agent_tlspskidentity_file is defined", "zabbix_agent_tlspskidentity is defined"], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskidentity_file }}", "content": "{{ zabbix_agent_tlspskidentity }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Windows)", "module": "win_copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Windows)", "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined", "zabbix_agent_os_family == \"Windows\""], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml": {"py/object": "struct4.TaskFile", "name": "Darwin.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}", "zabbix_agent2_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent2_server) }}", "zabbix_agent2_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent2_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["zabbix_agent_listeninterface", "(zabbix_agent_listeninterface not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set network interface", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}", "zabbix_agent_ip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing Agent", "module": "include_tasks", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Installing Agent", "tags": ["always"]}, "module_options": "macOS.yml", "executable": "macOS.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart mac zabbix agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "/usr/local/etc/zabbix/{{ zabbix_agent_conf }}", "owner": "root", "group": "wheel", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include }}", "owner": "root", "group": "zabbix", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create pid file directory for zabbix-agent", "module": "file", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Create pid file directory for zabbix-agent", "become": true}, "module_options": {"path": "/var/run/zabbix", "state": "directory", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if zabbix-agent service is running", "module": "shell", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Check if zabbix-agent service is running", "register": "launchctl_pid", "check_mode": false, "changed_when": false, "failed_when": "launchctl_pid.rc == 2", "become": true, "tags": ["init", "service"]}, "module_options": "set -o pipefail\nlaunchctl list | grep com.zabbix.zabbix_agentd | awk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "command", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)", "launchctl_pid.stdout == \"-\""], "tags": ["init", "service"]}, "module_options": "launchctl start com.zabbix.zabbix_agentd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml": {"py/object": "struct4.TaskFile", "name": "userparameter.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows | Installing user-defined userparameters", "module": "ansible.windows.win_template", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined userparameters", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_win_include }}\\{{ item.name }}.conf"}, "executable": "ansible.windows.win_template", "executable_type": "Module", "fqcn": "ansible.windows.win_template", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Installing user-defined scripts", "module": "ansible.windows.win_copy", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined scripts", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "{{ zabbix_win_install_dir }}\\scripts\\"}, "executable": "ansible.windows.win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Installing user-defined userparameters", "module": "template", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined userparameters", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_include }}/userparameter_{{ item.name }}.conf", "owner": "zabbix", "group": "zabbix", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined scripts", "module": "copy", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined scripts", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "/etc/zabbix/scripts/", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined userparameters", "module": "template", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined userparameters", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent2_include }}/userparameter_{{ item.name }}.conf", "owner": "zabbix", "group": "zabbix", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined scripts", "module": "copy", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined scripts", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "/etc/zabbix/scripts/", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml": {"py/object": "struct4.TaskFile", "name": "macOS.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "tasks": [{"py/object": "struct4.Task", "name": "macOS | Check installed package version", "module": "shell", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "options": {"name": "macOS | Check installed package version", "register": "pkgutil_version", "check_mode": false, "changed_when": false, "failed_when": "pkgutil_version.rc == 2"}, "module_options": "set -o pipefail\npkgutil --pkg-info 'com.zabbix.pkg.ZabbixAgent' | grep 'version:' | cut -d ' ' -f 2\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "macOS | Download the Zabbix package", "module": "get_url", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "options": {"name": "macOS | Download the Zabbix package", "when": "pkgutil_version.stdout != zabbix_version_long"}, "module_options": {"url": "{{ zabbix_mac_download_link }}", "dest": "/tmp/{{ zabbix_mac_package }}", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "macOS | Install the Zabbix package", "module": "command", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "options": {"name": "macOS | Install the Zabbix package", "become": true, "when": "pkgutil_version.stdout != zabbix_version_long", "tags": ["zabbix-agent"]}, "module_options": "installer -pkg \"/tmp/{{ zabbix_mac_package }}\" -target /", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 9}"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml": {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing gnupg", "module": "apt", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing gnupg", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "gnupg_installed", "until": "gnupg_installed is succeeded", "become": true}, "module_options": {"pkg": "gnupg", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][zabbix_agent_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Check for zabbix repositories", "module": "find", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Check for zabbix repositories", "register": "repositories", "become": true, "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"paths": "/etc/apt/sources.list.d", "patterns": "repo_zabbix_com_zabbix*.list", "excludes": "repo_zabbix_com_zabbix_{{ zabbix_underscore_version }}_ubuntu.list"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Remove unecessary zabbix repositories", "module": "file", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Remove unecessary zabbix repositories", "loop": "{{ repositories.files }}", "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\"", "zabbix_agent_src_reinstall"], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"path": "{{ item.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Debian", "module": "apt_repository", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Debian", "module": "apt_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Ubuntu Arm64", "module": "apt_repository", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Ubuntu Arm64", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu-arm64/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Ubuntu Arm64", "module": "apt_repository", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Ubuntu Arm64", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu-arm64/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Ubuntu", "module": "apt_repository", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine != \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Ubuntu", "module": "apt_repository", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine != \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_agent_apt_priority | int"], "become": true}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_agent_apt_priority | int"], "become": true}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix-agent-{{ zabbix_underscore_version }}", "content": "Package: {{ zabbix_agent_package }}\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_agent_apt_priority | int }}\n", "owner": "root", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-agent", "module": "apt", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "check_mode": false, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "{{ zabbix_agent_package }}", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-{sender,get}", "module": "apt", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-{sender,get}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "not zabbix_agent_install_agent_only"], "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "check_mode": false, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": ["{{ zabbix_sender_package }}", "{{ zabbix_get_package }}"], "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Mint | Installing zabbix-agent", "module": "apt", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Mint | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution not in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "zabbix-agent", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Enable the service", "module": "service", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml": {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "SELinux | Debian | Install policycoreutils-python", "module": "apt", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Debian | Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "when": ["zabbix_agent_os_family == \"Debian\""]}, "module_options": {"pkg": "policycoreutils-python-utils", "state": "present", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install policycoreutils-python", "module": "package", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": ["zabbix_agent_os_family == \"RedHat\"", "(zabbix_agent_distribution_major_version == \"6\" or zabbix_agent_distribution_major_version == \"7\")"], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "policycoreutils-python", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install python3-policycoreutils on RHEL8", "module": "package", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install python3-policycoreutils on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": ["zabbix_agent_os_family == \"RedHat\"", "ansible_distribution_major_version == \"8\""], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "python3-policycoreutils", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install selinux-policy-targeted", "module": "package", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install selinux-policy-targeted", "register": "zabbix_agent_selinuxpolicytargeted_installed", "until": "zabbix_agent_selinuxpolicytargeted_installed is succeeded", "when": ["zabbix_agent_os_family == \"RedHat\""], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "selinux-policy-targeted", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | Get getenforce binary", "module": "stat", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Get getenforce binary", "register": "getenforce_bin", "become": true}, "module_options": {"path": "/usr/sbin/getenforce"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | Collect getenforce output", "module": "command", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Collect getenforce output", "register": "sestatus", "when": "getenforce_bin.stat.exists", "changed_when": false, "become": true, "check_mode": false}, "module_options": "/usr/sbin/getenforce", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "when": ["getenforce_bin.stat.exists and (\"Enforcing\" in sestatus.stdout or \"Permissive\" in sestatus.stdout)"]}, "module_options": {"zabbix_selinux": "{{ true }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | Allow zabbix_agent to start (SELinux)", "module": "community.general.selinux_permissive", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Allow zabbix_agent to start (SELinux)", "become": true}, "module_options": {"name": "zabbix_agent_t", "permissive": true}, "executable": "community.general.selinux_permissive", "executable_type": "Module", "fqcn": "community.general.selinux_permissive", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | Allow zabbix to run sudo commands (SELinux)", "module": "ansible.posix.seboolean", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Allow zabbix to run sudo commands (SELinux)", "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_run_sudo|bool"], "tags": "selinux"}, "module_options": {"name": "zabbix_run_sudo", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml": {"py/object": "struct4.TaskFile", "name": "remove.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "tasks": [{"py/object": "struct4.Task", "name": "Pull service facts", "module": "service_facts", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Pull service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove | Make sure the \"old\" zabbix-agent service stopped", "module": "service", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Remove | Make sure the \"old\" zabbix-agent service stopped", "become": true, "when": "ansible_facts.services[\"zabbix-agent.service\"] is defined or\nansible_facts.services[\"zabbix-agent\"] is defined\n"}, "module_options": {"name": "zabbix-agent", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove | Package removal", "module": "package", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Remove | Package removal", "become": true}, "module_options": {"name": "zabbix-agent", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove | Remove the agent-include-dir", "module": "file", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Remove | Remove the agent-include-dir", "become": true}, "module_options": {"path": "{{ zabbix_agent_include }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml": {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_agent2_windows.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Windows", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Set default path variables for Windows"}, "module_options": {"zabbix_agent2_tlspskfile": "{{ zabbix_win_install_dir }}\\tls_psk_auto.secret.txt", "zabbix_agent2_tlspskidentity_file": "{{ zabbix_win_install_dir }}\\tls_psk_auto.identity.txt"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Windows)", "module": "ansible.windows.win_stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Windows)", "register": "zabbix_agent2_tlspskcheck"}, "module_options": {"path": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "module": "ansible.windows.win_stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "register": "zabbix_agent2_tlspskidentity_check"}, "module_options": {"path": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Windows)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Windows)", "register": "zabbix_agent2_tlspsk_base64", "when": ["zabbix_agent2_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "register": "zabbix_agent2_tlspskidentity_base64", "when": "zabbix_agent2_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {}, "module_options": "tlspsk_auto_agent2_common.yml", "executable": "tlspsk_auto_agent2_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | AutoPSK | Template TLS PSK identity in file (Windows)", "module": "win_copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "Windows | AutoPSK | Template TLS PSK identity in file (Windows)", "when": ["zabbix_agent2_tlspskidentity_file is defined", "zabbix_agent2_tlspskidentity is defined"], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskidentity_file }}", "content": "{{ zabbix_agent2_tlspskidentity }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Windows)", "module": "win_copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Windows)", "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspsk_secret is defined"], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskfile }}", "content": "{{ zabbix_agent2_tlspsk_secret }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml\", \"index\": 1}"], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml": {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_agent2_common.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Save existing TLS PSK secret", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Save existing TLS PSK secret", "when": "zabbix_agent2_tlspskcheck.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspsk_read": "{{ zabbix_agent2_tlspsk_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK secret", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK secret", "when": ["zabbix_agent2_tlspskcheck.stat.exists", "zabbix_agent2_tlspsk_read|length >= 32"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspsk_secret": "{{ zabbix_agent2_tlspsk_read }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK secret", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK secret", "when": ["not zabbix_agent2_tlspskcheck.stat.exists", "(zabbix_agent2_tlspsk_read is not defined) or (zabbix_agent2_tlspsk_read|length < 32)"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspsk_secret": "{{ lookup('password', '/dev/null chars=hexdigits length=64') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK identity", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK identity", "when": ["zabbix_agent2_tlspskidentity_check.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspskidentity": "{{ zabbix_agent2_tlspskidentity_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK identity", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK identity", "when": "not zabbix_agent2_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspskidentity": "{{\n  zabbix_agent_visible_hostname\n  | default(((zabbix_agent2 == True) | ternary(zabbix_agent2_hostname, zabbix_agent_hostname)))\n  + '_'\n  + lookup('password', '/dev/null chars=hexdigits length=4')\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml\", \"index\": 5}"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml": {"py/object": "struct4.TaskFile", "name": "firewall.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "tasks": [{"py/object": "struct4.Task", "name": "Firewall | Configure IPTables (zabbix_agent_listenport)", "module": "iptables", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure IPTables (zabbix_agent_listenport)", "become": true, "when": ["zabbix_agent_firewall_enable | bool"]}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Firewall | Configure IPTables (zabbix_agent_jmx_listenport)", "module": "iptables", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure IPTables (zabbix_agent_jmx_listenport)", "become": true, "when": ["zabbix_agent_firewall_enable | bool", "zabbix_agent_jmx_listenport | bool"]}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Firewall | Configure firewalld (zabbix_agent_listenport)", "module": "ansible.posix.firewalld", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure firewalld (zabbix_agent_listenport)", "become": true, "when": ["zabbix_agent_firewalld_enable | bool"], "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "ansible.posix.firewalld", "executable_type": "Module", "fqcn": "ansible.posix.firewalld", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Firewall | Configure firewalld (zabbix_agent_jmx_listenport)", "module": "ansible.posix.firewalld", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure firewalld (zabbix_agent_jmx_listenport)", "become": true, "when": ["zabbix_agent_firewalld_enable | bool", "zabbix_agent_jmx_listenport | bool"], "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_jmx_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "ansible.posix.firewalld", "executable_type": "Module", "fqcn": "ansible.posix.firewalld", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml": {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined", "not (zabbix_agent_dont_detect_ip)"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}", "zabbix_agent2_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent2_server) }}", "zabbix_agent2_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent2_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["(zabbix_agent_listeninterface)", "(zabbix_agent_listeninterface not in ansible_interfaces)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set network interface", "when": ["(zabbix_agent_listeninterface)", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["(zabbix_agent_listeninterface)", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not (zabbix_agent_listenip)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding zabbix group", "module": "group", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Adding zabbix group", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "state": "present", "gid": "{{ zabbix_agent_docker_user_gid | default(omit) }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding zabbix user", "module": "user", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Adding zabbix user", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "group": "zabbix", "state": "present", "create_home": false, "home": "/etc/zabbix", "uid": "{{ zabbix_agent_docker_user_uid | default(omit) }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart zabbix-agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "{{ 'zabbix_agentd.conf.j2' if not zabbix_agent2 else 'zabbix_agent2.conf.j2' }}", "dest": "/etc/zabbix/{{ zabbix_agent_conf if not zabbix_agent2 else zabbix_agent2_conf }}", "owner": "root", "group": "root", "mode": "{{ zabbix_agent_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspskfile", "not (zabbix_agent2 | bool)"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist (zabbix-agent2)", "module": "file", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Create directory for PSK file if not exist (zabbix-agent2)", "become": true, "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspskfile", "zabbix_agent2 | bool"]}, "module_options": {"path": "{{ zabbix_agent2_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspskfile", "zabbix_agent_tlspsk_secret is defined", "not (zabbix_agent2 | bool)"], "notify": ["restart zabbix-agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File (zabbix-agent2)", "module": "copy", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Place TLS PSK File (zabbix-agent2)", "become": true, "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspskfile", "zabbix_agent2_tlspsk_secret is defined", "zabbix_agent2 | bool"], "notify": ["restart zabbix-agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskfile }}", "content": "{{ zabbix_agent2_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include if not zabbix_agent2 else zabbix_agent2_include }}", "owner": "root", "group": "zabbix", "mode": "{{ zabbix_agent_include_mode if not zabbix_agent2 else zabbix_agent2_include_mode }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure the firewall(d|iptables)", "module": "include", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Configure the firewall(d|iptables)", "when": ["(zabbix_agent_firewall_enable | bool) or (zabbix_agent_firewalld_enable | bool)"]}, "module_options": "firewall.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove zabbix-agent installation when zabbix-agent2 is used.", "module": "include", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Remove zabbix-agent installation when zabbix-agent2 is used.", "when": ["zabbix_agent2 | bool", "zabbix_agent_package_remove"]}, "module_options": "remove.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "service", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml": {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_agent2_linux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables (Linux)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Set default path variables (Linux)"}, "module_options": {"zabbix_agent2_tlspskfile": "/etc/zabbix/tls_psk_auto.secret", "zabbix_agent2_tlspskidentity_file": "/etc/zabbix/tls_psk_auto.identity"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Linux)", "module": "stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Linux)", "register": "zabbix_agent2_tlspskcheck", "become": true}, "module_options": {"path": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "module": "stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "register": "zabbix_agent2_tlspskidentity_check", "become": true}, "module_options": {"path": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Linux)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Linux)", "register": "zabbix_agent2_tlspsk_base64", "become": true, "when": ["zabbix_agent2_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "register": "zabbix_agent2_tlspskidentity_base64", "become": true, "when": "zabbix_agent2_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {}, "module_options": "tlspsk_auto_agent2_common.yml", "executable": "tlspsk_auto_agent2_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file (Linux)", "module": "copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file (Linux)", "become": true, "when": ["zabbix_agent2_tlspskidentity_file is defined", "zabbix_agent2_tlspskidentity is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskidentity_file }}", "content": "{{ zabbix_agent2_tlspskidentity }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Linux)", "module": "copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Linux)", "become": true, "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspsk_secret is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskfile }}", "content": "{{ zabbix_agent2_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml\", \"index\": 0}"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml": {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_common.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Save existing TLS PSK secret", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Save existing TLS PSK secret", "when": "zabbix_agent_tlspskcheck.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspsk_read": "{{ zabbix_agent_tlspsk_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK secret", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK secret", "when": ["zabbix_agent_tlspskcheck.stat.exists", "zabbix_agent_tlspsk_read|length >= 32"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ zabbix_agent_tlspsk_read }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK secret", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK secret", "when": ["(not zabbix_agent_tlspskcheck.stat.exists) or (zabbix_agent_tlspsk_read|length < 32)"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ lookup('password', '/dev/null chars=hexdigits length=64') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK identity", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK identity", "when": ["zabbix_agent_tlspskidentity_check.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspskidentity": "{{ zabbix_agent_tlspskidentity_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK identity", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK identity", "when": "not zabbix_agent_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspskidentity": "{{\n  zabbix_agent_visible_hostname\n  | default(((zabbix_agent2 != True) | ternary(zabbix_agent_hostname, zabbix_agent_hostname)))\n  + '_'\n  + lookup('password', '/dev/null chars=hexdigits length=4')\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml\", \"index\": 5}"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml": {"py/object": "struct4.TaskFile", "name": "tlspsk_auto.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "options": {"when": "(zabbix_agent_os_family != \"Windows\") or (zabbix_agent_docker | bool)"}, "module_options": "tlspsk_auto_linux.yml", "executable": "tlspsk_auto_linux.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "options": {"when": "zabbix_agent_os_family == \"Windows\""}, "module_options": "tlspsk_auto_windows.yml", "executable": "tlspsk_auto_windows.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "when": "zabbix_api_create_hosts"}, "module_options": {"zabbix_agent_tlsaccept": "psk", "zabbix_agent_tlsconnect": "psk"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml": {"py/object": "struct4.TaskFile", "name": "Windows_conf.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_ip_addresses' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_ip_addresses'][0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Configure zabbix-agent", "module": "ansible.windows.win_template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Configure zabbix-agent", "notify": "restart win zabbix agent"}, "module_options": {"src": "{{ zabbix_win_config_name }}.j2", "dest": "{{ zabbix_win_install_dir }}\\conf\\{{ zabbix_win_config_name }}"}, "executable": "ansible.windows.win_template", "executable_type": "Module", "fqcn": "ansible.windows.win_template", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery", "module": "ansible.windows.win_service", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery"}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "start_mode": "auto", "state": "started", "failure_actions": [{"type": "restart", "delay_ms": 5000}, {"type": "restart", "delay_ms": 10000}, {"type": "restart", "delay_ms": 20000}], "failure_reset_period_sec": 86400}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Check firewall service", "module": "ansible.windows.win_service_info", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Check firewall service", "register": "firewall_info", "when": "zabbix_win_firewall_management"}, "module_options": {"name": "MpsSvc"}, "executable": "ansible.windows.win_service_info", "executable_type": "Module", "fqcn": "ansible.windows.win_service_info", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Firewall rule", "module": "community.windows.win_firewall_rule", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Firewall rule", "when": ["zabbix_win_firewall_management", "firewall_info.services[0].state == 'started' or firewall_info.services[0].start_mode == 'auto'"]}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "localport": "{{ zabbix_agent_listenport }}", "action": "allow", "direction": "in", "protocol": "tcp", "state": "present", "enabled": true}, "executable": "community.windows.win_firewall_rule", "executable_type": "Module", "fqcn": "community.windows.win_firewall_rule", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml": {"py/object": "struct4.TaskFile", "name": "Docker.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create volume mount string", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "options": {"name": "Create volume mount string", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"volume_mount": "{{ zabbix_agent_tlspskfile }}:/var/lib/zabbix/enc/tlspskfile", "tls_key": {"ZBX_TLSPSKFILE": "tlspskfile"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add zabbix_agent_tlspskfile to volume mount", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "options": {"name": "Add zabbix_agent_tlspskfile to volume mount", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"zabbix_agent_docker_volumes": "{{ zabbix_agent_docker_volumes + [ volume_mount ] }}", "zabbix_agent_docker_env": "{{ zabbix_agent_docker_env | combine(tls_key) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Zabbix Docker container is running", "module": "community.docker.docker_container", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "options": {"name": "Ensure Zabbix Docker container is running", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true}, "module_options": {"name": "{{ zabbix_agent_docker_name }}", "image": "{{ zabbix_agent_docker_image }}:{{ zabbix_agent_docker_image_tag }}", "state": "{{ zabbix_agent_docker_state }}", "restart_policy": "{{ zabbix_agent_docker_restart_policy }}", "network_mode": "{{ zabbix_agent_docker_network_mode }}", "published_ports": "{{ zabbix_agent_docker_ports }}", "privileged": "{{ zabbix_agent_docker_privileged }}", "security_opts": "{{ zabbix_agent_docker_security_opts }}", "volumes": "{{ zabbix_agent_docker_volumes }}", "env": "{{ zabbix_agent_docker_env }}"}, "executable": "community.docker.docker_container", "executable_type": "Module", "fqcn": "community.docker.docker_container", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml": {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_linux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables (Linux)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Set default path variables (Linux)"}, "module_options": {"zabbix_agent_tlspskfile": "/etc/zabbix/tls_psk_auto.secret", "zabbix_agent_tlspskidentity_file": "/etc/zabbix/tls_psk_auto.identity"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Linux)", "module": "stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Linux)", "register": "zabbix_agent_tlspskcheck", "become": true}, "module_options": {"path": "{{ zabbix_agent_tlspskfile }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "module": "stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "register": "zabbix_agent_tlspskidentity_check", "become": true}, "module_options": {"path": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Linux)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Linux)", "register": "zabbix_agent_tlspsk_base64", "become": true, "when": ["zabbix_agent_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "register": "zabbix_agent_tlspskidentity_base64", "become": true, "when": "zabbix_agent_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {}, "module_options": "tlspsk_auto_common.yml", "executable": "tlspsk_auto_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file (Linux)", "module": "copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file (Linux)", "become": true, "when": ["zabbix_agent_tlspskidentity_file is defined", "zabbix_agent_tlspskidentity is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskidentity_file }}", "content": "{{ zabbix_agent_tlspskidentity }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Linux)", "module": "copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Linux)", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml\", \"index\": 0}"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set variables specific for Zabbix Agent 2", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Set variables specific for Zabbix Agent 2", "when": ["zabbix_agent2 is defined", "zabbix_agent2"], "tags": ["always"]}, "module_options": {"zabbix_agent_service": "zabbix-agent2", "zabbix_agent_package": "zabbix-agent2"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reset zabbix_agent_version for Ubuntu 22.04 to 6.0", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Reset zabbix_agent_version for Ubuntu 22.04 to 6.0", "when": ["ansible_distribution_release == \"jammy\"", "( zabbix_agent_version is version ('6.0','lt') or zabbix_version is version ('6.0','lt') )"]}, "module_options": {"zabbix_version": 6.0, "zabbix_agent_version": 6.0}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for linuxmint - distribution release", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - distribution release", "when": ["ansible_os_family == \"Linuxmint\"", "ansible_distribution_release == \"sonya\" or ansible_distribution_release == \"serena\""], "tags": ["always"]}, "module_options": {"zabbix_agent_distribution_release": "xenial"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for linuxmint - family", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - family", "when": ["ansible_os_family == \"Linuxmint\""], "tags": ["always"]}, "module_options": {"zabbix_agent_os_family": "Debian"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for XCP-ng - family", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Fix facts for XCP-ng - family", "when": ["ansible_os_family == \"XCP-ng\""]}, "module_options": {"zabbix_agent_os_family": "RedHat"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": ["always"]}, "module_options": "{{ zabbix_agent_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["not (zabbix_agent_docker | bool)"], "tags": ["always"]}, "module_options": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install local python-netaddr package", "module": "pip", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Install local python-netaddr package", "register": "zabbix_python_netaddr_package_installed", "until": "zabbix_python_netaddr_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "ansible_all_ipv4_addresses is defined or (zabbix_agent_ip is not defined and total_private_ip_addresses is defined)"]}, "module_options": {"name": "netaddr", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Encrypt with TLS PSK auto management", "module": "include_tasks", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Encrypt with TLS PSK auto management", "when": ["not zabbix_agent2", "zabbix_agent_tlspsk_auto | bool", "(zabbix_agent_tlspskfile is undefined) or (zabbix_agent_tlspskfile | length == '0')", "(zabbix_agent_tlspsk_secret is undefined) or (zabbix_agent_tlspsk_secret | length == '0')"]}, "module_options": "tlspsk_auto.yml", "executable": "tlspsk_auto.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Encrypt with TLS PSK auto management", "module": "include_tasks", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Encrypt with TLS PSK auto management", "when": ["zabbix_agent2 | bool", "zabbix_agent2_tlspsk_auto | bool", "(zabbix_agent2_tlspskfile is undefined) or (zabbix_agent2_tlspskfile | length == '0')", "(zabbix_agent2_tlspsk_secret is undefined) or (zabbix_agent2_tlspsk_secret | length == '0')"]}, "module_options": "tlspsk_auto_agent2.yml", "executable": "tlspsk_auto_agent2.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Agent", "module": "include_tasks", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Configure Agent", "when": ["zabbix_agent_os_family == \"Windows\""], "tags": ["always"]}, "module_options": "Windows_conf.yml", "executable": "Windows_conf.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Agent", "module": "include_tasks", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Configure Agent", "when": ["(zabbix_agent_os_family != \"Windows\" and zabbix_agent_os_family != \"Darwin\") or (zabbix_agent_docker | bool)"], "tags": ["always"]}, "module_options": "Linux.yml", "executable": "Linux.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run the API calls to Zabbix Server", "module": "include_tasks", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Run the API calls to Zabbix Server", "when": ["(zabbix_api_create_hostgroup | bool) or (zabbix_api_create_hosts | bool)"], "tags": ["api"]}, "module_options": "api.yml", "executable": "api.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Including userparameters", "module": "include_tasks", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Including userparameters", "when": "zabbix_agent_userparameters|length > 0", "tags": ["zabbix-agent", "userparameter"]}, "module_options": "userparameter.yml", "executable": "userparameter.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/RedHat.yml": {"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-java-gateway", "module": "package", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-java-gateway", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_java_gateway_install", "until": "zabbix_java_gateway_install is succeeded", "become": true}, "module_options": {"pkg": "zabbix-java-gateway", "state": "{{ zabbix_javagateway_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "zabbix_javagateway", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml": {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some variables", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Set some variables"}, "module_options": {"zabbix_short_version": "{{ zabbix_javagateway_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "become": true}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Debian", "module": "apt_repository", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Debian", "become": true, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/debian/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Debian", "module": "apt_repository", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Debian", "become": true, "when": ["ansible_distribution == \"Debian\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/debian/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu-arm64/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine != \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu-arm64/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-java-gateway", "module": "apt", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-java-gateway", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_java_gateway_install", "until": "zabbix_java_gateway_install is succeeded", "become": true}, "module_options": {"pkg": "zabbix-java-gateway", "state": "{{ zabbix_javagateway_package_state }}", "update_cache": true, "force": true, "cache_valid_time": 3600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure Zabbix Java Gateway is not yet running", "module": "systemd", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Make sure Zabbix Java Gateway is not yet running", "when": ["zabbix_java_gateway_install.changed"]}, "module_options": {"name": "zabbix-java-gateway", "state": "stopped", "enabled": true, "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "zabbix_javagateway", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"RedHat\""]}, "module_options": "RedHat.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"Debian\""]}, "module_options": "Debian.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place systemd unit file", "module": "copy", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Place systemd unit file", "register": "systemd_state", "when": ["zabbix_version is version('5.4', '<')"]}, "module_options": {"src": "systemd.service", "dest": "/etc/systemd/system/zabbix-java-gateway.service", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd", "module": "shell", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Reload systemd", "when": ["zabbix_version is version('5.4', '<')", "systemd_state.changed"], "tags": ["skip_ansible_lint"]}, "module_options": "systemctl daemon-reload", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-proxy", "module": "template", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Configure zabbix-proxy", "notify": ["zabbix-java-gateway restarted"]}, "module_options": {"src": "zabbix_java_gateway.conf.j2", "dest": "/etc/zabbix/zabbix_java_gateway.conf", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_java_gateway_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure Zabbix Java Gateway is running", "module": "systemd", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Make sure Zabbix Java Gateway is running"}, "module_options": {"name": "zabbix-java-gateway", "state": "started", "enabled": true, "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "zabbix_javagateway", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml": {"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-proxy", "init"]}, "module_options": {"zabbix_proxy_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-proxy"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Define package with version", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Define package with version", "when": ["zabbix_proxy_rhel_version is defined", "zabbix_repo != \"epel\""]}, "module_options": {"zabbix_proxy_package": "zabbix{{ zabbix_short_version }}-proxy-{{ zabbix_proxy_database }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Define package without version", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Define package without version", "when": ["zabbix_proxy_rhel_version is not defined", "zabbix_repo != \"epel\""]}, "module_options": {"zabbix_proxy_package": "zabbix-proxy-{{ zabbix_proxy_database }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set some facts Zabbix < 3.0", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts Zabbix < 3.0", "when": ["zabbix_version is version('3.0', '<')"], "tags": ["zabbix-proxy"]}, "module_options": {"apache_log": "httpd", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}-{{ zabbix_version }}*/create"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 3.0", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 3.0", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-proxy"]}, "module_options": {"apache_log": "httpd", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}-{{ zabbix_version }}*"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 5.4", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_proxy_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 3.0 and RedHat 8", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 3.0 and RedHat 8", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')", "ansible_distribution_major_version == '8'"], "tags": ["zabbix-proxy"]}, "module_options": {"apache_log": "httpd", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set some facts EPEL", "module": "set_fact", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts EPEL", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/zabbix-{{ zabbix_proxy_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' group (EPEL)", "module": "group", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' group (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_proxy_groupname | default('zabbix') }}", "gid": "{{ zabbix_proxy_groupid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' user (EPEL)", "module": "user", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' user (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_proxy_username | default('zabbix') }}", "comment": "Zabbix Monitoring System", "uid": "{{ zabbix_proxy_userid | default(omit) }}", "group": "zabbix"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure old file is absent", "module": "file", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "Make sure old file is absent", "become": true}, "module_options": {"path": "/etc/yum.repos.d/zabbix-supported.repo", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": ["zabbix_repo == \"zabbix\""], "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-agent"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "module": "package", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "when": "zabbix_repo != \"other\"", "register": "is_zabbix_proxy_package_installed", "until": "is_zabbix_proxy_package_installed is succeeded"}, "module_options": {"pkg": "{{ zabbix_proxy_package }}-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }} (When zabbix_repo == other)", "module": "package", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }} (When zabbix_repo == other)", "become": true, "when": "zabbix_repo == \"other\"", "register": "is_zabbix_proxy_package_installed", "until": "is_zabbix_proxy_package_installed is succeeded"}, "module_options": {"pkg": "{{ zabbix_proxy_package }}-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts", "module": "package", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_sql_package_installed", "until": "zabbix_proxy_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo != \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "module": "package", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "register": "zabbix_proxy_sql_package_installed", "until": "zabbix_proxy_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo == \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Ansible PostgreSQL module dependencies", "module": "yum", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible PostgreSQL module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'pgsql'", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-proxy", "init"]}, "module_options": {"name": "python-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Ansible module dependencies on RHEL8", "module": "yum", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible module dependencies on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation", "zabbix_proxy_database == 'pgsql'", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": "python3-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL7", "module": "yum", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL7", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'mysql'", "ansible_distribution_major_version == '7'"], "tags": ["zabbix-proxy", "init"]}, "module_options": {"name": ["mariadb", "MySQL-python"], "state": "installed"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client packages RHEL8", "module": "yum", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client packages RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'mysql'", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-proxy", "init"]}, "module_options": {"name": ["mysql", "python3-PyMySQL"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL5 - 6", "module": "yum", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL5 - 6", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'mysql'", "ansible_distribution_major_version == \"6\" or ansible_distribution_major_version == \"5\"", "zabbix_proxy_install_database_client"], "tags": ["zabbix-proxy", "init", "database"]}, "module_options": {"name": ["mysql", "MySQL-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install PostgreSQL client package", "module": "yum", "index": 22, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install PostgreSQL client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'pgsql'", "zabbix_proxy_install_database_client"], "tags": ["zabbix-proxy", "init", "database"]}, "module_options": {"name": "postgresql", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install sqlite3", "module": "yum", "index": 23, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install sqlite3", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'sqlite3'"], "tags": ["zabbix-proxy"]}, "module_options": {"name": ["sqlite"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 24, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml": {"py/object": "struct4.TaskFile", "name": "postgresql.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_proxy_dbhost if (zabbix_proxy_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["not zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database", "module": "community.postgresql.postgresql_db", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database"}, "module_options": {"name": "{{ zabbix_proxy_dbname }}", "port": "{{ zabbix_proxy_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database user", "module": "postgresql_user", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database user"}, "module_options": {"db": "{{ zabbix_proxy_dbname }}", "name": "{{ zabbix_proxy_dbuser }}", "password": "md5{{ (zabbix_proxy_dbpassword + zabbix_proxy_dbuser)|hash('md5') }}", "port": "{{ zabbix_proxy_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database", "module": "community.postgresql.postgresql_db", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database"}, "module_options": {"login_host": "{{ zabbix_proxy_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_pgsql_login_password | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_pgsql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_proxy_dbname }}", "port": "{{ zabbix_proxy_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database user", "module": "postgresql_user", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database user"}, "module_options": {"login_host": "{{ zabbix_proxy_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_pgsql_login_password | default(omit) }}", "db": "{{ zabbix_proxy_dbname }}", "name": "{{ zabbix_proxy_dbuser }}", "password": "md5{{ (zabbix_proxy_dbpassword + zabbix_proxy_dbuser)|hash('md5') }}", "port": "{{ zabbix_proxy_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Importing schema file", "module": "shell", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing schema file", "args": {"creates": "/etc/zabbix/schema.done", "executable": "/bin/bash"}, "environment": {"PGPASSWORD": "{{ zabbix_proxy_dbpassword }}"}, "when": ["zabbix_database_creation"]}, "module_options": "set -euxo pipefail\nFILE={{ 'schema.sql' if zabbix_version is version('6.0', '<') else 'proxy.sql' }}\ncd {{ datafiles_path }}\nif [ -f ${FILE}.gz ]\n  then zcat ${FILE}.gz > /tmp/schema.sql\nelse\n  cp ${FILE} /tmp/schema.sql\nfi\ncat /tmp/schema.sql | psql -h '{{ zabbix_proxy_dbhost }}' -U '{{ zabbix_proxy_dbuser }}' \\\n-d '{{ zabbix_proxy_dbname }}'\ntouch /etc/zabbix/schema.done\nrm -f /tmp/schema.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml": {"py/object": "struct4.TaskFile", "name": "mysql.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_proxy_dbhost if (zabbix_proxy_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["not zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "when": "zabbix_proxy_real_dbhost | default(false)"}, "module_options": {"delegated_dbhost": "{{ zabbix_proxy_real_dbhost }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Create database", "module": "community.mysql.mysql_db", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Create database", "when": "zabbix_database_creation", "register": "zabbix_database_created", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database", "skip_ansible_lint"]}, "module_options": {"name": "{{ zabbix_proxy_dbname }}", "encoding": "{{ zabbix_proxy_dbencoding }}", "collation": "{{ zabbix_proxy_dbcollation }}", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}", "state": "present"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Create database user", "module": "community.mysql.mysql_user", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Create database user", "when": "zabbix_database_creation", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_proxy_dbuser }}", "password": "{{ zabbix_proxy_dbpassword }}", "priv": "{{ zabbix_proxy_dbname }}.*:ALL", "host": "{{ zabbix_proxy_privileged_host }}", "state": "present"}, "executable": "community.mysql.mysql_user", "executable_type": "Module", "fqcn": "community.mysql.mysql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get the file for schema.sql", "module": "shell", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Get the file for schema.sql", "changed_when": false, "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\""], "register": "ls_output_create", "tags": ["zabbix-proxy", "database"]}, "module_options": "ls -1 {{ datafiles_path }}/{{ 'schema' if zabbix_version is version('6.0', '<') else 'proxy' }}.sq*", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if we have done files", "module": "stat", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Check if we have done files", "register": "done_file", "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\""]}, "module_options": {"path": "/etc/zabbix/schema.done"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Get version_comment", "module": "community.mysql.mysql_variables", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Get version_comment", "delegate_to": "{{ delegated_dbhost }}", "register": "install_mysql_version", "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "version", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Get current value for innodb_default_row_format", "module": "community.mysql.mysql_variables", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Get current value for innodb_default_row_format", "delegate_to": "{{ delegated_dbhost }}", "register": "mysql_innodb_default_row_format", "when": ["install_mysql_version.msg is version('5.6', '>=')"], "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "innodb_default_row_format", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Set innodb_default_row_format to dynamic", "module": "community.mysql.mysql_variables", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Set innodb_default_row_format to dynamic", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "not done_file.stat.exists", "install_mysql_version.msg is version('5.6', '>=')", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "dynamic", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Create database and import file", "module": "community.mysql.mysql_db", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Create database and import file", "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\"", "not done_file.stat.exists"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_proxy_dbname }}", "encoding": "{{ zabbix_proxy_dbencoding }}", "collation": "{{ zabbix_proxy_dbcollation }}", "state": "import", "target": "{{ ls_output_create.stdout }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Revert innodb_default_row_format to previous value", "module": "community.mysql.mysql_variables", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Revert innodb_default_row_format to previous value", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "not done_file.stat.exists", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "{{ mysql_innodb_default_row_format.msg }}", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create done file", "module": "file", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Create done file", "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\"", "not done_file.stat.exists"]}, "module_options": {"path": "/etc/zabbix/schema.done", "state": "touch", "mode": "0644"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml": {"py/object": "struct4.TaskFile", "name": "sqlite3.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "tasks": [{"py/object": "struct4.Task", "name": "Sqlite3 | Default Database Path", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Sqlite3 | Default Database Path", "when": ["zabbix_proxy_dbname == \"zabbix_proxy\""]}, "module_options": {"zabbix_proxy_dbname": "/var/lib/zabbix/zabbix_proxy.db"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sqlite3 | Create database", "module": "file", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Sqlite3 | Create database", "become": true, "when": ["zabbix_database_creation"]}, "module_options": {"name": "{{ zabbix_proxy_dbname | dirname }}", "mode": 484, "owner": "zabbix", "group": "zabbix", "seuser": "system_u", "serole": "object_r", "setype": "zabbix_var_lib_t", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sqlite3 | Importing schema file", "module": "shell", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Sqlite3 | Importing schema file", "become": true, "become_user": "zabbix", "args": {"creates": "{{ zabbix_proxy_dbname }}", "executable": "/bin/bash"}, "environment": {"PGPASSWORD": "{{ zabbix_proxy_dbpassword }}"}, "when": ["zabbix_database_creation"]}, "module_options": "set -o pipefail\nFILE={{ 'schema.sql' if zabbix_version is version('6.0', '<') else 'proxy.sql' }}\ncd {{ datafiles_path }}\nif [ -f ${FILE}.gz ]\n  then zcat ${FILE}.gz > /tmp/schema.sql\nelse\n  cp ${FILE} /tmp/schema.sql\nfi\ncat /tmp/schema.sql | sqlite3 {{ zabbix_proxy_dbname }}\nrm -f /tmp/schema.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix zabbix db file permission (SELinux)", "module": "file", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Fix zabbix db file permission (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "zabbix_database_creation"], "tags": "selinux"}, "module_options": {"path": "{{ zabbix_proxy_dbname }}", "state": "file", "seuser": "system_u", "serole": "object_r", "setype": "zabbix_var_lib_t"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml": {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_python_prefix": "python{% if ansible_python_version is version('3', '>=') %}3{% endif %}", "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Set some facts", "when": ["zabbix_version is version_compare('3.0', '<')"], "tags": ["zabbix-proxy", "init", "config"]}, "module_options": {"apache_log": "apache2", "datafiles_path": "/usr/share/zabbix-proxy-{{ zabbix_proxy_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-proxy", "init", "config"]}, "module_options": {"apache_log": "apache2", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 5.4", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_proxy_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing gnupg", "module": "apt", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing gnupg", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "gnupg_installed", "until": "gnupg_installed is succeeded", "become": true}, "module_options": {"pkg": "gnupg", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-proxy", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "when": "zabbix_repo == \"zabbix\"", "become": true, "with_items": ["deb-src", "deb"], "tags": ["zabbix-proxy", "init"]}, "module_options": {"repo": "{{ item }} http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Select Zabbix proxy version", "module": "set_fact", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Select Zabbix proxy version", "when": ["ansible_distribution == \"Debian\"", "zabbix_proxy_debian_version is defined"]}, "module_options": {"zabbix_proxy_deb_version": "{{ zabbix_proxy_debian_version }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ubuntu | Select Zabbix proxy version", "module": "set_fact", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Ubuntu | Select Zabbix proxy version", "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_proxy_ubuntu_version is defined"]}, "module_options": {"zabbix_proxy_deb_version": "{{ zabbix_proxy_ubuntu_version }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Define package with version", "module": "set_fact", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Define package with version", "when": "zabbix_proxy_deb_version is defined"}, "module_options": {"deb_pkg": "zabbix-proxy-{{ zabbix_proxy_database }}={{ zabbix_proxy_deb_version }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Define package without version", "module": "set_fact", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Define package without version", "when": "zabbix_proxy_deb_version is not defined"}, "module_options": {"deb_pkg": "zabbix-proxy-{{ zabbix_proxy_database }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_proxy_apt_priority | int"], "become": true}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_proxy_apt_priority | int"], "become": true}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix-proxy-{{ zabbix_proxy_database }}", "content": "Package: zabbix-proxy-{{ zabbix_proxy_database }}\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_proxy_apt_priority }}\n", "owner": "root", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "module": "apt", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "is_zabbix_proxy_package_installed", "until": "is_zabbix_proxy_package_installed is succeeded", "become": true}, "module_options": {"pkg": "{{ deb_pkg }}", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "{{ zabbix_proxy_package_state }}", "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-sql-scripts", "module": "apt", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_package_sql_installed", "until": "zabbix_proxy_package_sql_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')"], "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"pkg": "zabbix-sql-scripts", "state": "{{ zabbix_proxy_package_state }}", "update_cache": true, "cache_valid_time": 0, "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Ansible module dependencies", "module": "apt", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install Ansible module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation"], "tags": ["zabbix-server", "init"]}, "module_options": {"name": "{{ zabbix_python_prefix }}-psycopg2", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Mysql Client package", "module": "apt", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'mysql'", "zabbix_proxy_install_database_client", "ansible_distribution_release != \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["mysql-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian 10 | Install Mysql Client package", "module": "apt", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian 10 | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'mysql'", "zabbix_proxy_install_database_client", "ansible_distribution_release == \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["mariadb-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install PostgreSQL Client package", "module": "apt", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install PostgreSQL Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "become": true, "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'pgsql'", "zabbix_proxy_install_database_client"], "tags": ["zabbix-proxy", "init", "database"]}, "module_options": {"name": "postgresql-client", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install sqlite3", "module": "apt", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install sqlite3", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'sqlite3'"], "tags": ["zabbix-proxy"]}, "module_options": {"name": "sqlite3", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml": {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues", "module": "yum", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-proxy"]}, "module_options": {"name": ["policycoreutils-python", "libsemanage-python", "checkpolicy"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "module": "yum", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-proxy"]}, "module_options": {"name": ["policycoreutils", "checkpolicy", "python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_proxy_alerter.sock", "module": "script", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_proxy_alerter.sock", "args": {"creates": "/etc/selinux/targeted/active/modules/400/zabbix_proxy_add/cil"}, "become": true, "when": ["ansible_os_family == \"RedHat\""], "tags": ["zabbix-proxy"]}, "module_options": {"cmd": "files/install_semodule.bsx"}, "executable": "script", "executable_type": "Module", "fqcn": "ansible.builtin.script", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Replace Sangoma with RedHat task", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Replace Sangoma with RedHat task", "when": ["ansible_os_family == 'Sangoma'"]}, "module_options": {"ansible_os_family": "RedHat"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default ip address for zabbix_proxy_ip", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Set default ip address for zabbix_proxy_ip", "when": ["zabbix_proxy_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_proxy_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set OS dependent variables", "module": "include_vars", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Set OS dependent variables", "with_first_found": ["../vars/{{ ansible_distribution }}.yml", "../vars/main.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"RedHat\""]}, "module_options": "RedHat.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"Debian\""]}, "module_options": "Debian.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing the database", "module": "include", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Installing the database"}, "module_options": "{{ zabbix_proxy_database_long }}.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-proxy", "module": "file", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Create include dir zabbix-proxy", "become": true}, "module_options": {"path": "{{ zabbix_proxy_include }}", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_proxy_include_mode }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create module dir zabbix-proxy", "module": "file", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Create module dir zabbix-proxy", "become": true}, "module_options": {"path": "{{ zabbix_proxy_loadmodulepath }}", "owner": "zabbix", "group": "zabbix", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_proxy_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_proxy_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_proxy_tlspskfile is defined", "zabbix_proxy_tlspsk_secret is defined"], "notify": ["restart zabbix-proxy"]}, "module_options": {"dest": "{{ zabbix_proxy_tlspskfile }}", "content": "{{ zabbix_proxy_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow zabbix-proxy to open connections (SELinux)", "module": "ansible.posix.seboolean", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Allow zabbix-proxy to open connections (SELinux)", "become": true, "when": "ansible_selinux.status == \"enabled\"", "tags": "selinux"}, "module_options": {"name": "zabbix_can_network", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Allow zabbix-proxy to connect to zabbix_proxy_preprocessing.sock (SELinux)", "module": "ansible.posix.seboolean", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Allow zabbix-proxy to connect to zabbix_proxy_preprocessing.sock (SELinux)", "become": true, "when": "ansible_selinux.status == \"enabled\"", "tags": "selinux"}, "module_options": {"name": "daemons_enable_cluster_mode", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Configure zabbix-proxy", "module": "template", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Configure zabbix-proxy", "notify": "restart zabbix-proxy", "become": true}, "module_options": {"src": "zabbix_proxy.conf.j2", "dest": "/etc/zabbix/zabbix_proxy.conf", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_proxy_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing the Zabbix-api package on localhost", "module": "pip", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Installing the Zabbix-api package on localhost", "register": "zabbix_api_package_installed", "until": "zabbix_api_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_proxy_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "zabbix_api_create_proxy | bool"], "tags": ["api"]}, "module_options": {"name": "zabbix-api", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure proxy definition is up-to-date (added/updated/removed)", "module": "zabbix_proxy", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Ensure proxy definition is up-to-date (added/updated/removed)", "when": ["zabbix_api_create_proxy | bool"], "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "state": "{{ zabbix_proxy_state }}", "status": "{{ zabbix_proxy_status }}", "proxy_name": "{{ zabbix_proxy_name }}", "description": "{{ zabbix_proxy_description | default(omit) }}", "interface": "{{ zabbix_proxy_interface }}", "tls_psk": "{{ zabbix_proxy_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_proxy_tlspskidentity | default(omit) }}", "tls_subject": "{{ zabbix_proxy_tls_subject | default(omit) }}", "tls_accept": "{{ zabbix_proxy_tls_config[zabbix_proxy_tlsaccept if zabbix_proxy_tlsaccept else 'no_encryption'] }}", "tls_connect": "{{ zabbix_proxy_tls_config[zabbix_proxy_tlsconnect if zabbix_proxy_tlsconnect else 'no_encryption'] }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}"}, "executable": "zabbix_proxy", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_proxy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "zabbix-proxy started", "module": "service", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "zabbix-proxy started", "become": true, "when": "zabbix_proxy_manage_service | bool"}, "module_options": {"name": "zabbix-proxy", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml": {"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-web"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file (Zabbix 5.x)", "module": "yum_repository", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file (Zabbix 5.x)", "with_items": "{{ zabbix_5_repo_yum }}", "become": true, "when": ["zabbix_repo == \"zabbix\"", "zabbix_version is version('5.0', '>=')", "ansible_distribution_major_version != '8'"], "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-web"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (CentOS)", "module": "yum", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (CentOS)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependency_package_install", "until": "zabbix_web_dependency_package_install is succeeded", "become": true, "when": ["zabbix_version is version('5.0', '>=')", "zabbix_web_centos_release", "ansible_distribution_major_version != '8'", "ansible_distribution == \"CentOS\""], "tags": ["zabbix-web"]}, "module_options": {"pkg": ["centos-release-scl"], "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (RHEL)", "module": "yum", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (RHEL)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependency_package_install", "until": "zabbix_web_dependency_package_install is succeeded", "become": true, "when": ["zabbix_version is version('5.0', '>=')", "zabbix_web_centos_release", "ansible_distribution_major_version != '8'", "ansible_distribution == \"RedHat\""], "tags": ["zabbix-web"]}, "module_options": {"pkg": ["scl-utils", "scl-utils-build"], "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web (Zabbix 5.x)", "module": "yum", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web (Zabbix 5.x)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_package_install", "until": "zabbix_web_package_install is succeeded", "become": true, "when": ["zabbix_version is version('5.0', '>=')", "ansible_distribution_major_version != '8'", "zabbix_websrv == 'apache'"], "tags": ["zabbix-web"]}, "module_options": {"pkg": ["zabbix-apache-conf-scl-{{ zabbix_web_version }}.{{ zabbix_web_version_minor }}"], "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web-{{ zabbix_server_database }}", "module": "yum", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web-{{ zabbix_server_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_package_install", "until": "zabbix_web_package_install is succeeded", "become": true, "tags": ["zabbix-web"]}, "module_options": {"pkg": "zabbix-web-{{ zabbix_server_database }}{{ '-scl' if zabbix_version is version('5.0', '>=') and ansible_distribution_major_version != '8' else '' }}-{{ zabbix_web_version }}.{{ zabbix_web_version_minor }}", "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install PHP", "module": "template", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install PHP", "become": true, "when": ["zabbix_vhost"], "notify": ["restart redhat-php-fpm"]}, "module_options": {"src": "php-fpm.conf.j2", "dest": "{{ zabbix_php_fpm_dir }}/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"vars": {"zabbix_apache_servername": "{{ zabbix_websrv_servername }}"}, "when": ["zabbix_websrv == 'apache'"]}, "module_options": "apache_RedHat.yml", "executable": "apache_RedHat.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Nginx vhost", "module": "template", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install Nginx vhost", "when": ["zabbix_vhost", "zabbix_websrv == 'nginx'"], "become": true, "notify": ["restart nginx"], "tags": ["zabbix-web", "init", "config", "nginx"]}, "module_options": {"src": "nginx_vhost.conf.j2", "dest": "/etc/nginx/conf.d/zabbix.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml": {"py/object": "struct4.TaskFile", "name": "apache_RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "options": {}, "module_options": "apache.yml", "executable": "apache.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install apache vhost", "module": "template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "options": {"name": "RedHat | Install apache vhost", "when": "zabbix_vhost", "become": true, "notify": ["restart apache"], "tags": ["zabbix-server"]}, "module_options": {"src": "apache_vhost.conf.j2", "dest": "/etc/httpd/conf.d/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "zabbix_web", "used_in": ["{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml\", \"index\": 7}"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml": {"py/object": "struct4.TaskFile", "name": "php_Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"when": ["zabbix_websrv == 'apache'"]}, "module_options": "apache.yml", "executable": "apache.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Determine php prefix for packages installations (legacy php5)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"name": "Debian | Determine php prefix for packages installations (legacy php5)", "when": ["ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('16.04', '<') or ansible_distribution == 'Debian' and ansible_distribution_version is version_compare('9', '<')"]}, "module_options": {"_zabbix_php_package_prefix": 5}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Determine php prefix for packages installations (Current distros)", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"name": "Debian | Determine php prefix for packages installations (Current distros)", "when": ["ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('16.04', '>=') or ansible_distribution == 'Debian' and ansible_distribution_version is version_compare('9', '>=')", "zabbix_version is version_compare('5.0', '>=')", "not _zabbix_web_apache_php_addition"]}, "module_options": {"_zabbix_php_package_prefix": "{{ zabbix_php_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install php packages", "module": "apt", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"name": "Debian | Install php packages", "register": "zabbix_web_php_dependency_install", "until": "zabbix_web_php_dependency_install is succeeded", "become": true, "tags": ["zabbix-web", "init"]}, "module_options": {"state": "present", "update_cache": true, "cache_valid_time": 3600, "name": ["php{{ _zabbix_php_package_prefix }}-{{ zabbix_server_database }}", "php{{ _zabbix_php_package_prefix }}-bcmath", "php{{ _zabbix_php_package_prefix }}-mbstring", "php{{ _zabbix_php_package_prefix }}-ldap", "php{{ _zabbix_php_package_prefix }}-xml", "php{{ _zabbix_php_package_prefix }}-gd"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml": {"py/object": "struct4.TaskFile", "name": "apache_Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Debian | Install legacy PHP integration for Apache", "module": "apt", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | Install legacy PHP integration for Apache", "become": true}, "module_options": {"state": "present", "update_cache": true, "cache_valid_time": 3600, "name": ["libapache2-mod-php"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | install apache vhost", "module": "template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | install apache vhost", "when": "zabbix_vhost", "become": true, "notify": ["restart apache"], "tags": ["zabbix-web", "init", "config", "apache"]}, "module_options": {"src": "apache_vhost.conf.j2", "dest": "/etc/apache2/sites-available/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Remove provided zabbix.conf files", "module": "file", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | Remove provided zabbix.conf files", "when": "zabbix_vhost", "become": true, "with_items": ["/etc/apache2/conf-available/zabbix.conf", "/etc/apache2/conf-enabled/zabbix.conf"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | enable apache vhost", "module": "file", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | enable apache vhost", "when": "zabbix_vhost", "become": true, "notify": ["restart apache"], "tags": ["zabbix-server", "init", "config", "apache"]}, "module_options": {"src": "/etc/apache2/sites-available/zabbix.conf", "dest": "/etc/apache2/sites-enabled/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml": {"py/object": "struct4.TaskFile", "name": "nginx.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "tasks": [{"py/object": "struct4.Task", "name": "Nginx | Set websrv specific variables", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Set websrv specific variables"}, "module_options": {"zabbix_web_conf_web_user": "{{ zabbix_web_conf_web_user if zabbix_web_conf_web_user is defined else _nginx_user }}", "zabbix_web_conf_web_group": "{{ zabbix_web_conf_web_group if zabbix_web_conf_web_group is defined else _nginx_group }}", "zabbix_nginx_config_path": "{{ zabbix_nginx_config_path if zabbix_nginx_config_path is defined else _nginx_config_path }}", "zabbix_nginx_log_path": "{{ zabbix_nginx_log_path if zabbix_nginx_log_path is defined else _nginx_log_path }}", "zabbix_nginx_service": "{{ zabbix_nginx_service if zabbix_nginx_service is defined else _nginx_service }}", "zabbix_nginx_tls_crt": "{{ zabbix_nginx_tls_crt if zabbix_nginx_tls_crt is defined else _nginx_tls_crt }}", "zabbix_nginx_tls_key": "{{ zabbix_nginx_tls_key if zabbix_nginx_tls_key is defined else _nginx_tls_key }}", "zabbix_nginx_tls_dhparam": "{{ zabbix_nginx_tls_dhparam if zabbix_nginx_tls_dhparam is defined else _nginx_tls_dhparam }}", "zabbix_apache_service": "{{ zabbix_apache_service if zabbix_apache_service is defined else _apache_service }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Check Apache service if same ports", "module": "command", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Check Apache service if same ports", "failed_when": false, "register": "zabbix_apache_service_check", "changed_when": "zabbix_apache_service_check.rc == 0", "check_mode": false, "when": ["zabbix_apache_vhost_port == zabbix_nginx_vhost_port", "zabbix_apache_vhost_tls_port == zabbix_nginx_vhost_tls_port"]}, "module_options": "systemctl status \"{{ zabbix_apache_service }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Stop Apache running on same ports", "module": "service", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Stop Apache running on same ports", "tags": ["zabbix-web"], "when": ["zabbix_apache_vhost_port == zabbix_nginx_vhost_port", "zabbix_apache_vhost_tls_port == zabbix_nginx_vhost_tls_port", "zabbix_apache_service_check.rc == 0"]}, "module_options": {"name": "{{ zabbix_apache_service }}", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Debian | Install Nginx and ssl-cert packages", "module": "apt", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Debian | Install Nginx and ssl-cert packages", "when": "ansible_os_family == \"Debian\""}, "module_options": {"state": "present", "name": ["nginx-light", "ssl-cert"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | RedHat | Install Nginx packages", "module": "yum", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | RedHat | Install Nginx packages", "when": "ansible_os_family == \"RedHat\""}, "module_options": {"state": "present", "name": ["nginx"]}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Start and enable service", "module": "service", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Start and enable service"}, "module_options": {"name": "{{ zabbix_nginx_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Install OpenSSL package for DH parameters", "module": "package", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Install OpenSSL package for DH parameters"}, "module_options": {"name": "openssl", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Generate SSL DH parameters", "module": "command", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Generate SSL DH parameters", "args": {"creates": "{{ zabbix_nginx_tls_dhparam }}"}}, "module_options": "openssl dhparam -out {{ zabbix_nginx_tls_dhparam }} {{ zabbix_nginx_tls_dhparam_bits | default('2048') }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | check for certificate created by certbot", "module": "stat", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | check for certificate created by certbot", "register": "zabbix_letsencrypt_cert", "failed_when": false, "when": "zabbix_letsencrypt"}, "module_options": {"path": "/etc/letsencrypt/live/{{ zabbix_websrv_servername }}/fullchain.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | Create directory for certbot webroot if not exist", "module": "file", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Create directory for certbot webroot if not exist", "when": ["zabbix_letsencrypt"], "become": true}, "module_options": {"path": "{{ zabbix_letsencrypt_webroot_path }}", "mode": "{{ zabbix_letsencrypt_webroot_mode }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Install vhost in conf.d", "module": "template", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Install vhost in conf.d", "when": ["zabbix_vhost"], "become": true, "notify": ["restart nginx"]}, "module_options": {"src": "nginx_vhost.conf.j2", "dest": "{{ zabbix_nginx_config_path }}/zabbix.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | Check if zabbix_websrv_servername is resolvable", "module": "set_fact", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Check if zabbix_websrv_servername is resolvable", "changed_when": "zabbix_websrv_servername_ip != ansible_default_ipv4.address", "register": "zabbix_letsencrypt_resolve", "when": "zabbix_letsencrypt"}, "module_options": {"zabbix_websrv_servername_ip": "{{ lookup('dig', 'qtype=A', zabbix_websrv_servername) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | check if certbot CLI is present", "module": "shell", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | check if certbot CLI is present", "register": "zabbix_cerbot_check", "changed_when": "zabbix_cerbot_check.rc != 0", "check_mode": false, "when": "zabbix_letsencrypt"}, "module_options": "certbot --version", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | flash all handlers before certbot", "module": "meta", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | flash all handlers before certbot", "when": ["zabbix_letsencrypt", "zabbix_letsencrypt_resolve is not changed", "zabbix_cerbot_check.rc == 0"]}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | generate certs with certbot CLI", "module": "command", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | generate certs with certbot CLI", "args": {"creates": "/etc/letsencrypt/live/{{ zabbix_websrv_servername }}/fullchain.pem"}, "when": ["zabbix_letsencrypt", "zabbix_letsencrypt_resolve is not changed", "zabbix_cerbot_check.rc == 0"]}, "module_options": "certbot --non-interactive certonly --expand -a webroot --webroot-path={{ zabbix_letsencrypt_webroot_path }} --email {{ zabbix_letsencrypt_account_email }} --agree-tos --cert-name {{ zabbix_websrv_servername }} -d {{ zabbix_websrv_servername }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | Check for certificate created by certbot", "module": "stat", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Check for certificate created by certbot", "register": "zabbix_letsencrypt_cert", "failed_when": false, "when": "zabbix_letsencrypt"}, "module_options": {"path": "/etc/letsencrypt/live/{{ zabbix_websrv_servername }}/fullchain.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | Reinstall Nginx vhost", "module": "template", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Reinstall Nginx vhost", "when": ["zabbix_letsencrypt", "zabbix_letsencrypt_resolve is not changed", "zabbix_cerbot_check.rc == 0"], "become": true, "notify": ["restart nginx"]}, "module_options": {"src": "nginx_vhost.conf.j2", "dest": "/etc/nginx/conf.d/zabbix.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml": {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-web", "init", "config"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "become": true, "when": ["zabbix_repo == \"zabbix\"", "ansible_machine != \"aarch64\""], "with_items": ["deb-src", "deb"], "tags": ["zabbix-web", "init", "config"]}, "module_options": {"repo": "{{ item }} http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "become": true, "when": ["zabbix_repo == \"zabbix\"", "ansible_machine == \"aarch64\""], "with_items": ["deb-src", "deb"], "tags": ["zabbix-web", "init", "config"]}, "module_options": {"repo": "{{ item }} http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}-arm64/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install PHP apart from zabbix-frontend-php deps", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install PHP apart from zabbix-frontend-php deps", "when": "zabbix_php_install"}, "module_options": "php_Debian.yml", "executable": "php_Debian.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install zabbix-web", "module": "apt", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install zabbix-web", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_package_install", "until": "zabbix_web_package_install is succeeded", "become": true, "tags": ["zabbix-web", "init", "config"]}, "module_options": {"pkg": "zabbix-frontend-php{{ '-deprecated' if zabbix_php_frontend_deprecated else '' }}", "state": "{{ zabbix_web_package_state }}", "update_cache": true, "cache_valid_time": 0}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Link graphfont.ttf (workaround ZBX-10467)", "module": "file", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Link graphfont.ttf (workaround ZBX-10467)", "tags": ["zabbix-web", "init", "config"]}, "module_options": {"src": "/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf", "path": "/usr/share/zabbix/fonts/graphfont.ttf", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install PHP", "module": "template", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install PHP", "become": true, "when": ["zabbix_vhost"], "notify": ["restart php-fpm-version"]}, "module_options": {"src": "php-fpm.conf.j2", "dest": "{{ zabbix_php_fpm_dir }}/zabbix.conf", "owner": "{{ _apache_user }}", "group": "{{ _apache_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Including Apache Configuration", "module": "include_tasks", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Including Apache Configuration", "vars": {"zabbix_apache_servername": "{{ zabbix_websrv_servername }}"}, "when": ["zabbix_websrv == 'apache'"]}, "module_options": "apache_Debian.yml", "executable": "apache_Debian.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml": {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package", "module": "yum", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependencies_installed", "until": "zabbix_web_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-web"]}, "module_options": {"name": ["libsemanage-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package on RHEL8", "module": "yum", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependencies_installed", "until": "zabbix_web_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-web"]}, "module_options": {"name": ["python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "module": "ansible.posix.seboolean", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network"], "tags": ["zabbix-web"]}, "module_options": {"name": "zabbix_can_network", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | Allow httpd to connect to db (SELinux)", "module": "ansible.posix.seboolean", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | Allow httpd to connect to db (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_can_network"], "tags": "selinux"}, "module_options": {"name": "httpd_can_network_connect_db", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | Allow httpd to connect to zabbix (SELinux)", "module": "ansible.posix.seboolean", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | Allow httpd to connect to zabbix (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_can_network"], "tags": "selinux"}, "module_options": {"name": "httpd_can_connect_zabbix", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | Allow httpd to connect to ldap (SELinux)", "module": "ansible.posix.seboolean", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | Allow httpd to connect to ldap (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "zabbix_apache_can_connect_ldap | bool"], "tags": "selinux"}, "module_options": {"name": "httpd_can_connect_ldap", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_web", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml": {"py/object": "struct4.TaskFile", "name": "apache.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "tasks": [{"py/object": "struct4.Task", "name": "Apache | Get Apache version", "module": "shell", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Apache | Get Apache version", "changed_when": false, "register": "apachectl_version", "check_mode": false, "args": {"executable": "/bin/bash"}, "tags": ["zabbix-web"]}, "module_options": "PATH=/usr/sbin:$PATH\nset -o pipefail\napachectl -v | grep 'version' | awk -F '/' '{ print $2 }'| awk '{ print $1 }' | cut -c 1-3\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Apache | Set correct apache_version", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Apache | Set correct apache_version", "tags": ["zabbix-web"]}, "module_options": {"apache_version": "{{ apachectl_version.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Set some", "when": ["zabbix_version is version('4.4', '<=')"], "tags": ["zabbix-web"]}, "module_options": {"_zabbix_web_apache_php_addition": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Set some", "when": ["ansible_os_family == \"Debian\""], "tags": ["zabbix-web"]}, "module_options": {"_zabbix_web_apache_php_addition": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_web", "used_in": ["{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml\", \"index\": 0}", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml\", \"index\": 0}"], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml": {"py/object": "struct4.TaskFile", "name": "access.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "tasks": [{"py/object": "struct4.Task", "name": "htpasswd | check Python version to set prefix variable", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "options": {"name": "htpasswd | check Python version to set prefix variable", "when": ["zabbix_web_htpasswd is defined", "zabbix_web_htpasswd", "zabbix_web_htpasswd_users is defined"]}, "module_options": {"zabbix_python_prefix": "python{% if ansible_python_version is version_compare('3', '>=') %}3{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "htpasswd | install passlib for Python interpreter", "module": "package", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "options": {"name": "htpasswd | install passlib for Python interpreter", "when": ["zabbix_web_htpasswd is defined", "zabbix_web_htpasswd", "zabbix_web_htpasswd_users is defined"]}, "module_options": {"name": "{{ zabbix_python_prefix }}-passlib", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "htpasswd | manage HTTP authentication controls", "module": "community.general.htpasswd", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "options": {"name": "htpasswd | manage HTTP authentication controls", "loop_control": {"label": "{{ item.value.htpasswd_user }}"}, "with_dict": "{{ zabbix_web_htpasswd_users }}", "when": ["zabbix_web_htpasswd is defined", "zabbix_web_htpasswd", "zabbix_web_htpasswd_users is defined"]}, "module_options": {"path": "{{ zabbix_web_htpasswd_file }}", "name": "{{ item.value.htpasswd_user }}", "password": "{{ item.value.htpasswd_pass }}", "group": "www-data", "state": "present"}, "executable": "community.general.htpasswd", "executable_type": "Module", "fqcn": "community.general.htpasswd", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_web", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": ["always"]}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include distribution and version-specific vars", "module": "include_vars", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Include distribution and version-specific vars", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"]}], "tags": ["always"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some versions", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set some versions", "tags": ["always"]}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_php_version": "{{ zabbix_php_version if zabbix_php_version is defined else _zabbix_php_version }}", "_zabbix_php_package_prefix": ""}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default PHP-FPM variables", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set default PHP-FPM variables", "when": ["not zabbix_php_fpm"]}, "module_options": {"zabbix_php_fpm_dir": "{{ zabbix_php_fpm_dir if zabbix_php_fpm_dir is defined else _php_fpm_dir }}", "zabbix_php_fpm_session": "{{ zabbix_php_fpm_session if zabbix_php_fpm_session is defined else _php_fpm_session }}", "zabbix_php_fpm_listen": "{{ zabbix_php_fpm_listen if zabbix_php_fpm_listen is defined else _php_fpm_listen }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default PHP-FPM variables specific RH provided", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set default PHP-FPM variables specific RH provided", "when": ["zabbix_php_fpm", "ansible_os_family == \"RedHat\""]}, "module_options": {"zabbix_php_fpm_dir": "{{ zabbix_php_fpm_dir if zabbix_php_fpm_dir is defined else _php_fpm_dir }}", "zabbix_php_fpm_session": "{{ zabbix_php_fpm_session if zabbix_php_fpm_session is defined else _zabbix_php_fpm_session }}", "zabbix_php_fpm_listen": "{{ zabbix_php_fpm_listen if zabbix_php_fpm_listen is defined else _zabbix_php_fpm_listen }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set websrv specific variables (Apache)", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set websrv specific variables (Apache)", "when": ["zabbix_websrv == 'apache'"]}, "module_options": {"zabbix_web_conf_web_user": "{{ zabbix_web_conf_web_user if zabbix_web_conf_web_user is defined else _apache_user }}", "zabbix_web_conf_web_group": "{{ zabbix_web_conf_web_group if zabbix_web_conf_web_group is defined else _apache_group }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"when": ["zabbix_websrv == 'nginx'"]}, "module_options": "nginx.yml", "executable": "nginx.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Install the correct repository", "when": "ansible_os_family == \"RedHat\"", "tags": ["zabbix-web"]}, "module_options": "RedHat.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Install the correct repository", "when": "ansible_os_family == \"Debian\"", "tags": ["zabbix-web"]}, "module_options": "Debian.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create zabbix-web directory", "module": "file", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Create zabbix-web directory", "tags": ["zabbix-web", "init", "config"]}, "module_options": {"path": "/etc/zabbix/web", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-web", "module": "template", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Configure zabbix-web", "notify": ["restart apache"], "tags": ["zabbix-web", "init", "config"]}, "module_options": {"src": "zabbix.conf.php.j2", "dest": "/etc/zabbix/web/zabbix.conf.php", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": "{{ zabbix_web_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"when": ["zabbix_web_htpasswd"], "tags": ["zabbix-web", "init", "config"]}, "module_options": "access.yml", "executable": "access.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml": {"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Use Zabbix package name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Use Zabbix package name", "when": ["zabbix_repo == \"zabbix\" or zabbix_repo == \"other\""], "tags": ["zabbix-server"]}, "module_options": {"zabbix_server_package": "zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-server"]}, "module_options": {"zabbix_server_package": "zabbix{{ zabbix_short_version }}-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set some facts Zabbix <= 3.2", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts Zabbix <= 3.2", "when": ["zabbix_version is version('3.2', '<=')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}-{{ zabbix_version }}*"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix > 3.2", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix > 3.2", "when": ["zabbix_version is version('3.2', '>')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}*"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 5.4", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_server_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for RHEL8", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for RHEL8", "when": ["ansible_distribution_major_version == \"8\"", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set some facts EPEL", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts EPEL", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/zabbix-{{ zabbix_server_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' group (EPEL)", "module": "group", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' group (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_server_groupname | default('zabbix') }}", "gid": "{{ zabbix_server_groupid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' user (EPEL)", "module": "user", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' user (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_server_username | default('zabbix') }}", "comment": "Zabbix Monitoring System", "uid": "{{ zabbix_server_userid | default(omit) }}", "group": "zabbix"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure old file is absent", "module": "file", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "Make sure old file is absent", "become": true}, "module_options": {"path": "/etc/yum.repos.d/zabbix-supported.repo", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-server"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }}", "module": "package", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_package_installed", "until": "zabbix_server_package_installed is succeeded", "when": "zabbix_repo != \"other\"", "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "{{ zabbix_server_package }}-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }} (When zabbix_repo == other)", "module": "package", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }} (When zabbix_repo == other)", "register": "zabbix_server_package_installed", "until": "zabbix_server_package_installed is succeeded", "when": "zabbix_repo == \"other\"", "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "{{ zabbix_server_package }}-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts", "module": "package", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_sql_package_installed", "until": "zabbix_server_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo != \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "module": "package", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_sql_package_installed", "until": "zabbix_server_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo == \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Ansible module dependencies", "module": "yum", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation", "zabbix_server_database == 'pgsql'", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-server"]}, "module_options": {"name": "python-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Ansible module dependencies on RHEL8", "module": "yum", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible module dependencies on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation", "zabbix_server_database == 'pgsql'", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": "python3-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client packages RHEL8", "module": "yum", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client packages RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["mysql", "python3-PyMySQL"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL7", "module": "yum", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL7", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_major_version == \"7\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["mariadb", "MySQL-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL5 - 6", "module": "yum", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL5 - 6", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_major_version == \"6\" or ansible_distribution_major_version == \"5\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["mysql", "MySQL-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install PostgreSQL client package", "module": "yum", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install PostgreSQL client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'pgsql'", "zabbix_server_install_database_client"], "tags": ["zabbix-server"]}, "module_options": {"name": "postgresql", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 22, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml": {"py/object": "struct4.TaskFile", "name": "postgresql.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_server_dbhost if (zabbix_server_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["not zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database", "module": "community.postgresql.postgresql_db", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database"}, "module_options": {"name": "{{ zabbix_server_dbname }}", "port": "{{ zabbix_server_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database user", "module": "community.postgresql.postgresql_user", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database user"}, "module_options": {"db": "{{ zabbix_server_dbname }}", "name": "{{ zabbix_server_dbuser }}", "password": "md5{{ (zabbix_server_dbpassword + zabbix_server_dbuser)|hash('md5') }}", "port": "{{ zabbix_server_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "community.postgresql.postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create timescaledb extension", "module": "community.postgresql.postgresql_ext", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create timescaledb extension", "when": "zabbix_database_timescaledb"}, "module_options": {"db": "{{ zabbix_server_dbname }}", "name": "timescaledb"}, "executable": "community.postgresql.postgresql_ext", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_ext", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database", "module": "community.postgresql.postgresql_db", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database"}, "module_options": {"login_host": "{{ zabbix_server_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_pgsql_login_password | default(omit) }}", "login_unix_socket": "{{ zabbix_server_pgsql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_server_dbname }}", "port": "{{ zabbix_server_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database user", "module": "community.postgresql.postgresql_user", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database user"}, "module_options": {"login_host": "{{ zabbix_server_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_pgsql_login_password | default(omit) }}", "db": "{{ zabbix_server_dbname }}", "name": "{{ zabbix_server_dbuser }}", "password": "md5{{ (zabbix_server_dbpassword + zabbix_server_dbuser)|hash('md5') }}", "port": "{{ zabbix_server_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "community.postgresql.postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create timescaledb extension", "module": "community.postgresql.postgresql_ext", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create timescaledb extension", "when": "zabbix_database_timescaledb"}, "module_options": {"login_host": "{{ zabbix_server_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_pgsql_login_password | default(omit) }}", "login_unix_socket": "{{ zabbix_server_pgsql_login_unix_socket | default(omit) }}", "db": "{{ zabbix_server_dbname }}", "name": "timescaledb"}, "executable": "community.postgresql.postgresql_ext", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_ext", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Create schema", "module": "shell", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Create schema", "args": {"creates": "/etc/zabbix/schema.done", "executable": "/bin/bash", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload"], "tags": ["zabbix-server", "database"]}, "module_options": "set -euxo pipefail\nFILE={{ 'create.sql' if zabbix_version is version('6.0', '<') else 'server.sql' }}\ncd {{ datafiles_path }}\nif [ -f ${FILE}.gz ]\n  then zcat ${FILE}.gz > /tmp/create.sql\nelse\n  cp ${FILE} /tmp/create.sql\nfi\ncat /tmp/create.sql | psql -h '{{ zabbix_server_dbhost }}' \\\n-U '{{ zabbix_server_dbuser }}' \\\n-d '{{ zabbix_server_dbname }}' \\\n-p '{{ zabbix_server_dbport }}'\ntouch /etc/zabbix/schema.done\nrm -f /tmp/create.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Create TimescaleDB hypertables", "module": "shell", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Create TimescaleDB hypertables", "args": {"creates": "/etc/zabbix/timescaledb.done", "executable": "/bin/bash", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_timescaledb"], "tags": ["zabbix-server", "database"]}, "module_options": "set -euxo pipefail\ncd {{ datafiles_path }} &&\nif [ -f timescaledb.sql.gz ]; then zcat timescaledb.sql.gz > /etc/timescaledb.sql ; else cp -p timescaledb.sql /etc/timescaledb.sql ; fi\ncat /etc/timescaledb.sql | psql -h '{{ zabbix_server_dbhost }}' \\\n-U '{{ zabbix_server_dbuser }}' \\\n-d '{{ zabbix_server_dbname }}' \\\n-p '{{ zabbix_server_dbport }}'\ntouch /etc/zabbix/timescaledb.done\nrm -f /tmp/timescaledb.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get complete path", "module": "shell", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Get complete path", "register": "datafiles_path_full", "changed_when": false, "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)"], "tags": ["skip_ansible_lint"]}, "module_options": "ls -d {{ datafiles_path }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if we have a create dir", "module": "stat", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Check if we have a create dir", "register": "create_dir_or_not", "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)"]}, "module_options": {"path": "{{ datafiles_path_full.stdout }}/create"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact", "module": "set_fact", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Set fact", "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)", "create_dir_or_not.stat.isdir is defined and create_dir_or_not.stat.isdir", "create_dir_or_not.stat.exists"]}, "module_options": {"datafiles_path": "{{ datafiles_path }}/create"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Importing schema file", "module": "shell", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing schema file", "args": {"creates": "/etc/zabbix/schema.done", "executable": "/bin/bash", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)"], "tags": ["zabbix-server", "database"]}, "module_options": "set -euxo pipefail\ncd {{ datafiles_path }}\nif [ -f schema.sql.gz ]; then zcat schema.sql.gz > /tmp/schema.sql ; else cp -p schema.sql /tmp/schema.sql ;fi\ncat /tmp/schema.sql | psql -h '{{ zabbix_server_dbhost }}' \\\n-U '{{ zabbix_server_dbuser }}' \\\n-d '{{ zabbix_server_dbname }}' \\\n-p '{{ zabbix_server_dbport }}'\ntouch /etc/zabbix/schema.done\nrm -f /etc/schema.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Importing images file", "module": "shell", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing images file", "args": {"creates": "/etc/zabbix/images.done", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": "(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)", "tags": ["zabbix-server", "database"]}, "module_options": "cd {{ datafiles_path }} && psql -h '{{ zabbix_server_dbhost }}' -U '{{ zabbix_server_dbuser }}' -d '{{ zabbix_server_dbname }}' -p '{{ zabbix_server_dbport }}' -f images.sql && touch /etc/zabbix/images.done\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Importing data file", "module": "shell", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing data file", "args": {"creates": "/etc/zabbix/data.done", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": "(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)", "tags": ["zabbix-server", "database"]}, "module_options": "cd {{ datafiles_path }} && psql -h '{{ zabbix_server_dbhost }}' -U '{{ zabbix_server_dbuser }}' -d '{{ zabbix_server_dbname }}' -p '{{ zabbix_server_dbport }}' -f data.sql && touch /etc/zabbix/data.done\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml": {"py/object": "struct4.TaskFile", "name": "mysql.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_server_dbhost if (zabbix_server_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["not zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "when": "zabbix_server_real_dbhost | default(false)"}, "module_options": {"delegated_dbhost": "{{ zabbix_server_real_dbhost }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Create database", "module": "community.mysql.mysql_db", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database", "when": "zabbix_database_creation", "register": "zabbix_database_created", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database", "skip_ansible_lint"]}, "module_options": {"name": "{{ zabbix_server_dbname }}", "encoding": "{{ zabbix_server_dbencoding }}", "collation": "{{ zabbix_server_dbcollation }}", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}", "state": "present"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Create database user", "module": "community.mysql.mysql_user", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database user", "when": "zabbix_database_creation", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_server_dbuser }}", "password": "{{ zabbix_server_dbpassword }}", "priv": "{{ zabbix_server_dbname }}.*:ALL", "host": "{{ zabbix_server_privileged_host }}", "state": "present"}, "executable": "community.mysql.mysql_user", "executable_type": "Module", "fqcn": "community.mysql.mysql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get the file for create.sql >= 3.0", "module": "shell", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Get the file for create.sql >= 3.0", "changed_when": false, "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\""], "register": "ls_output_create", "tags": ["zabbix-server", "database"]}, "module_options": "ls -1 {{ datafiles_path }}/{{ 'create' if zabbix_version is version('6.0', '<') else 'server' }}.sq*", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Get current database version", "module": "shell", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Get current database version", "register": "mysql_db_version", "changed_when": false, "ignore_errors": true}, "module_options": "mysql -h {{ zabbix_server_dbhost }} -u{{ zabbix_server_dbuser }} \\\n-p'{{ zabbix_server_dbpassword }}' -D '{{ zabbix_server_dbname }}' \\\n-e 'SELECT mandatory FROM dbversion;'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Check if database needs to be populated", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Check if database needs to be populated"}, "module_options": {"mysql_schema_empty": "{{ mysql_db_version is failed }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Get version_comment", "module": "community.mysql.mysql_variables", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Get version_comment", "delegate_to": "{{ delegated_dbhost }}", "register": "install_mysql_version", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "version", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Get current value for innodb_default_row_format", "module": "community.mysql.mysql_variables", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Get current value for innodb_default_row_format", "delegate_to": "{{ delegated_dbhost }}", "register": "mysql_innodb_default_row_format", "when": ["install_mysql_version.msg is version('5.6', '>=')"], "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_default_row_format", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Set innodb_default_row_format to dynamic", "module": "community.mysql.mysql_variables", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Set innodb_default_row_format to dynamic", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty", "install_mysql_version.msg is version('5.6', '>=')", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "dynamic", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Disable InnoDB Strict Mode", "module": "community.mysql.mysql_variables", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Disable InnoDB Strict Mode", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty", "install_mysql_version.msg is version('5.6', '>=')", "ansible_distribution_release == \"buster\""], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_strict_mode", "value": 0, "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Fetch sql create file", "module": "fetch", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Fetch sql create file", "when": ["delegated_dbhost != inventory_hostname", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"]}, "module_options": {"src": "{{ ls_output_create.stdout }}", "dest": "/tmp/{{ role_name }}/", "flat": true}, "executable": "fetch", "executable_type": "Module", "fqcn": "ansible.builtin.fetch", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy sql create file", "module": "copy", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Copy sql create file", "delegate_to": "{{ delegated_dbhost }}", "when": ["delegated_dbhost != inventory_hostname", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"]}, "module_options": {"src": "/tmp/{{ role_name }}/", "dest": "{{ ls_output_create.stdout | dirname }}", "mode": "0640"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Create database and import file >= 3.0", "module": "community.mysql.mysql_db", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database and import file >= 3.0", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_server_dbname }}", "encoding": "{{ zabbix_server_dbencoding }}", "collation": "{{ zabbix_server_dbcollation }}", "state": "import", "target": "{{ ls_output_create.stdout }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Revert innodb_default_row_format to previous value", "module": "community.mysql.mysql_variables", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Revert innodb_default_row_format to previous value", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "{{ mysql_innodb_default_row_format.msg }}", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check if we have sql_done files >= 3.0", "module": "file", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Check if we have sql_done files >= 3.0", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"]}, "module_options": {"path": "/etc/zabbix/create.done", "state": "touch", "mode": "0644"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the correct path for the SQL files < 3.0", "module": "shell", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Get the correct path for the SQL files < 3.0", "changed_when": false, "register": "ls_output_schema", "with_items": ["schema", "images", "data"], "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool"], "tags": ["zabbix-server", "database"]}, "module_options": "ls -1 {{ datafiles_path }}/{{ mysql_create_dir }}{{ item }}.sql*", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if we have done files < 3.0", "module": "stat", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Check if we have done files < 3.0", "register": "done_files", "with_items": ["schema", "images", "data"], "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool"], "tags": ["zabbix-server", "database"]}, "module_options": {"path": "/etc/zabbix/{{ item }}.done"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create fact if sql_done files exists", "module": "set_fact", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Create fact if sql_done files exists", "with_items": "{{ done_files.results }}", "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool"], "tags": ["zabbix-server", "database"]}, "module_options": {"sql_files_executed": "{{ sql_files_executed | default({}) | combine({item.item: item.stat}) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Create database and import files < 3.0", "module": "community.mysql.mysql_db", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database and import files < 3.0", "with_items": "{{ ls_output_schema.results }}", "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool", "not sql_files_executed[item.item].exists"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"name": "{{ zabbix_server_dbname }}", "encoding": "{{ zabbix_server_dbencoding }}", "collation": "{{ zabbix_server_dbcollation }}", "state": "import", "target": "{{ item.stdout }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check if we have sql_done files < 3.0", "module": "file", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Check if we have sql_done files < 3.0", "with_items": ["schema", "images", "data"], "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool", "not sql_files_executed[item].exists"], "tags": ["zabbix-server", "database"]}, "module_options": {"path": "/etc/zabbix/{{ item }}.done", "state": "touch", "mode": "0644"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml": {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some variables", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Set some variables", "when": ["ansible_machine != \"aarch64\""]}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_server_apt_repository": ["http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}/", "{{ ansible_distribution_release }}", "main"], "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}", "zabbix_python_prefix": "python{% if ansible_python_version is version('3', '>=') %}3{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some variables", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Set some variables", "when": ["ansible_machine == \"aarch64\""]}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_server_apt_repository": ["http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}-arm64/", "{{ ansible_distribution_release }}", "main"], "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}", "zabbix_python_prefix": "python{% if ansible_python_version is version('3', '>=') %}3{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Set some facts", "when": ["zabbix_version is version('3.0', '<')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 5.4", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_server_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing gnupg", "module": "apt", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing gnupg", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "gnupg_installed", "until": "gnupg_installed is succeeded", "become": true}, "module_options": {"pkg": "gnupg", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "register": "zabbix_server_repo_files_installed", "until": "zabbix_server_repo_files_installed is succeeded", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "when": "zabbix_repo == \"zabbix\"", "become": true, "with_items": ["deb-src", "deb"], "tags": ["zabbix-server", "init"]}, "module_options": {"repo": "{{ item }} {{ zabbix_server_apt_repository | join(' ') }}", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_server_apt_priority | int"], "become": true}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_server_apt_priority | int"], "become": true}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix_server-{{ zabbix_proxy_database }}", "content": "Package: zabbix_server-{{ zabbix_proxy_database }}\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_server_apt_priority }}\n", "owner": "root", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "apt-get clean", "module": "shell", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "apt-get clean", "args": {"warn": false}, "changed_when": false, "become": true, "tags": ["skip_ansible_lint"]}, "module_options": "apt-get clean; apt-get update", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for the dpkg exclude line", "module": "command", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Check for the dpkg exclude line", "register": "dpkg_exclude_line", "failed_when": false, "changed_when": false, "check_mode": false}, "module_options": "grep -F 'path-exclude=/usr/share/doc/*' /etc/dpkg/dpkg.cfg.d/excludes", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow Zabbix dpkg installs to /usr/share/doc/zabbix*", "module": "lineinfile", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Allow Zabbix dpkg installs to /usr/share/doc/zabbix*", "become": true, "when": ["dpkg_exclude_line.rc == 0"]}, "module_options": {"path": "/etc/dpkg/dpkg.cfg.d/excludes", "line": "path-include=/usr/share/doc/zabbix*"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-server-{{ zabbix_server_database }}", "module": "apt", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-server-{{ zabbix_server_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_package_installed", "until": "zabbix_server_package_installed is succeeded", "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"pkg": "zabbix-server-{{ zabbix_server_database }}", "state": "{{ zabbix_server_package_state }}", "update_cache": true, "cache_valid_time": 0, "install_recommends": "{{ zabbix_server_install_recommends }}", "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-sql-scripts", "module": "apt", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_package_sql_installed", "until": "zabbix_server_package_sql_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')"], "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"pkg": "zabbix-sql-scripts", "state": "{{ zabbix_server_package_state }}", "update_cache": true, "cache_valid_time": 0, "install_recommends": "{{ zabbix_server_install_recommends }}", "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Ansible module dependencies", "module": "apt", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install Ansible module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation"], "tags": ["zabbix-server", "init"]}, "module_options": {"name": "{{ zabbix_python_prefix }}-psycopg2", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Mysql Client package", "module": "apt", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_release != \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["default-mysql-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian 10 | Install Mysql Client package", "module": "apt", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian 10 | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_release == \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["mariadb-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install PostgreSQL Client package", "module": "apt", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install PostgreSQL Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'pgsql'", "zabbix_server_install_database_client"], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": "postgresql-client", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml": {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get getenforce binary", "module": "stat", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "Get getenforce binary", "register": "getenforce_bin", "become": true}, "module_options": {"path": "/usr/sbin/getenforce"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Collect getenforce output", "module": "command", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "Collect getenforce output", "register": "sestatus", "when": "getenforce_bin.stat.exists", "changed_when": false, "become": true, "check_mode": false}, "module_options": "getenforce", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "when": "getenforce_bin.stat.exists and (\"Enforcing\" in sestatus.stdout or \"Permissive\" in sestatus.stdout)"}, "module_options": {"zabbix_selinux": "{{ true }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package", "module": "yum", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["libsemanage-python", "policycoreutils", "checkpolicy"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package on RHEL8", "module": "yum", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Enable httpd_can_connect_zabbix SELinux boolean", "module": "ansible.posix.seboolean", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Enable httpd_can_connect_zabbix SELinux boolean", "become": true, "when": ["selinux_allow_zabbix_can_http"], "tags": ["zabbix-server"]}, "module_options": {"name": "httpd_can_connect_zabbix", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "module": "ansible.posix.seboolean", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "become": true, "when": ["selinux_allow_zabbix_can_network"], "tags": ["zabbix-server"]}, "module_options": {"name": "zabbix_can_network", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues", "module": "yum", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["policycoreutils-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "module": "yum", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["policycoreutils", "checkpolicy", "python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_server_alerter.sock", "module": "script", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_server_alerter.sock", "args": {"creates": "/etc/selinux/targeted/active/modules/400/zabbix_server_add/cil", "become": true}}, "module_options": {"cmd": "files/install_semodule.bsx"}, "executable": "script", "executable_type": "Module", "fqcn": "ansible.builtin.script", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Include OS-specific variables"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Install the correct repository"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "{{ ansible_os_family }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing the {{ zabbix_server_database_long }} database", "module": "include_tasks", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Installing the {{ zabbix_server_database_long }} database"}, "module_options": "{{ zabbix_server_database_long }}.yml", "executable": "{{ zabbix_server_database_long }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-server", "module": "template", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Configure zabbix-server", "notify": ["zabbix-server restarted"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"src": "zabbix_server.conf.j2", "dest": "/etc/zabbix/zabbix_server.conf", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_server_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-server", "module": "file", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Create include dir zabbix-server", "tags": ["zabbix-server", "init", "config"]}, "module_options": {"path": "{{ zabbix_server_include }}", "owner": "zabbix", "group": "zabbix", "state": "directory", "mode": "{{ zabbix_server_include_mode }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add zabbix-server scripts", "module": "include", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Add zabbix-server scripts", "when": "( zabbix_server_alertscripts is defined ) or ( zabbix_server_externalscripts is defined )"}, "module_options": "scripts.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Zabbix-server started", "module": "service", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Zabbix-server started", "tags": ["zabbix-server"], "when": "zabbix_server_manage_service | bool"}, "module_options": {"name": "zabbix-server", "state": "{{ zabbix_service_state }}", "enabled": "{{ zabbix_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {}}, "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/scripts.yml": {"py/object": "struct4.TaskFile", "name": "scripts.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/scripts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configure zabbix-server alertscripts", "module": "template", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/scripts.yml", "options": {"name": "Configure zabbix-server alertscripts", "with_items": "{{ zabbix_server_alertscripts }}", "when": "zabbix_server_alertscripts is defined"}, "module_options": {"src": "{{ item.path }}", "dest": "{{ zabbix_server_alertscriptspath }}/{{ item.name }}", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-server externalscripts", "module": "template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/scripts.yml", "options": {"name": "Configure zabbix-server externalscripts", "with_items": "{{ zabbix_server_externalscripts }}", "when": "zabbix_server_externalscripts is defined"}, "module_options": {"src": "{{ item.path }}", "dest": "{{ zabbix_server_externalscriptspath }}/{{ item.name }}", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {}}}, "role_dict": {"community.zabbix.zabbix_agent": {"py/object": "struct4.Role", "name": "zabbix_agent", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent", "fqcn": "community.zabbix.zabbix_agent", "collection": "community.zabbix", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"zabbix_agent_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-agent", "zabbix_sender_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-sender", "zabbix_get_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-get"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"NA\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2018\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora <= 27", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora <= 27", "when": ["ansible_distribution == \"Fedora\"", "ansible_distribution_major_version <= \"27\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora >= 27", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora >= 27", "when": ["ansible_distribution == \"Fedora\"", "ansible_distribution_major_version >= \"27\""]}, "module_options": {"zabbix_agent_distribution_major_version": 8}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "when": ["ansible_distribution == \"XCP-ng\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-agent"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Do a yum clean", "module": "shell", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "Do a yum clean", "args": {"warn": false}, "when": "yum_repo_installed.changed", "become": true, "tags": ["skip_ansible_lint"]}, "module_options": "yum clean all", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-agent", "module": "package", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": "zabbix_repo != \"other\"", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_agent_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}", "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-agent (When zabbix_repo == other)", "module": "package", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-agent (When zabbix_repo == other)", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": "zabbix_repo == \"other\"", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_agent_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-{sender,get}", "module": "package", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-{sender,get}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": ["zabbix_repo not in ['epel', 'other']", "not zabbix_agent_install_agent_only"], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_sender_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}", "{{ zabbix_get_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}", "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-{sender,get} (When zabbix_repo == other)", "module": "package", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-{sender,get} (When zabbix_repo == other)", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "when": ["zabbix_repo == \"other\"", "not zabbix_agent_install_agent_only"], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_sender_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}", "{{ zabbix_get_package }}-{{ zabbix_agent_version }}.{{ zabbix_agent_version_minor }}"], "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Enable the service", "module": "service", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/RedHat.yml", "options": {"name": "RedHat | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "api.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "tasks": [{"py/object": "struct4.Task", "name": "API | Installing the Zabbix-api package on localhost", "module": "pip", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Installing the Zabbix-api package on localhost", "register": "zabbix_api_package_installed", "until": "zabbix_api_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "(zabbix_api_create_hostgroup | bool) or (zabbix_api_create_hosts | bool)"]}, "module_options": {"name": "zabbix-api", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "API | Create host groups", "module": "zabbix_group", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Create host groups", "when": ["zabbix_api_create_hostgroup | bool"], "register": "zabbix_api_hostgroup_created", "until": "zabbix_api_hostgroup_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_group": "{{ zabbix_host_groups }}", "state": "{{ zabbix_agent_hostgroups_state }}", "validate_certs": "{{ zabbix_api_validate_certs|default(omit) }}", "timeout": "{{ zabbix_api_timeout }}"}, "executable": "zabbix_group", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_group", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "API | Create a new host or update an existing host's info", "module": "zabbix_host", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Create a new host or update an existing host's info", "when": ["not zabbix_agent2"], "register": "zabbix_api_host_created", "until": "zabbix_api_host_created is succeeded", "delegate_to": "localhost", "become": false, "changed_when": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_name": "{{ zabbix_agent_hostname }}", "host_groups": "{{ zabbix_host_groups }}", "link_templates": "{{ zabbix_agent_link_templates }}", "status": "{{ zabbix_host_status }}", "state": "{{ zabbix_agent_host_state }}", "force": "{{ zabbix_agent_host_update }}", "proxy": "{{ zabbix_agent_proxy }}", "inventory_mode": "{{ zabbix_agent_inventory_mode }}", "interfaces": "{{ zabbix_agent_interfaces }}", "visible_name": "{{ zabbix_agent_visible_hostname | default(zabbix_agent_hostname) }}", "tls_psk": "{{ zabbix_agent_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_agent_tlspskidentity | default(omit) }}", "tls_issuer": "{{ zabbix_agent_tlsservercertissuer | default(omit) }}", "tls_subject": "{{ zabbix_agent_tls_subject | default(omit) }}", "tls_accept": "{{ zabbix_agent_tls_config[zabbix_agent_tlsaccept if zabbix_agent_tlsaccept else 'unencrypted'] }}", "tls_connect": "{{ zabbix_agent_tls_config[zabbix_agent_tlsconnect if zabbix_agent_tlsconnect else 'unencrypted'] }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}", "description": "{{ zabbix_agent_description | default(omit) }}", "inventory_zabbix": "{{ zabbix_agent_inventory_zabbix | default({}) }}", "ipmi_authtype": "{{ zabbix_agent_ipmi_authtype | default(omit) }}", "ipmi_password": "{{ zabbix_agent_ipmi_password| default(omit) }}", "ipmi_privilege": "{{ zabbix_agent_ipmi_privilege | default(omit) }}", "ipmi_username": "{{ zabbix_agent_ipmi_username | default(omit) }}"}, "executable": "zabbix_host", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_host", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "API | Create a new host using agent2 or update an existing host's info", "module": "zabbix_host", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Create a new host using agent2 or update an existing host's info", "when": ["zabbix_agent2 | bool"], "register": "zabbix_api_host_created", "until": "zabbix_api_host_created is succeeded", "delegate_to": "localhost", "become": false, "changed_when": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_name": "{{ zabbix_agent2_hostname }}", "host_groups": "{{ zabbix_host_groups }}", "link_templates": "{{ zabbix_agent_link_templates }}", "status": "{{ zabbix_host_status }}", "state": "{{ zabbix_agent_host_state }}", "force": "{{ zabbix_agent_host_update }}", "proxy": "{{ zabbix_agent_proxy }}", "inventory_mode": "{{ zabbix_agent_inventory_mode }}", "interfaces": "{{ zabbix_agent_interfaces }}", "visible_name": "{{ zabbix_agent_visible_hostname | default(zabbix_agent2_hostname) }}", "tls_psk": "{{ zabbix_agent2_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_agent2_tlspskidentity | default(omit) }}", "tls_issuer": "{{ zabbix_agent2_tlsservercertissuer | default(omit) }}", "tls_subject": "{{ zabbix_agent2_tls_subject | default(omit) }}", "tls_accept": "{{ zabbix_agent_tls_config[zabbix_agent2_tlsaccept if zabbix_agent2_tlsaccept else 'unencrypted'] }}", "tls_connect": "{{ zabbix_agent_tls_config[zabbix_agent2_tlsconnect if zabbix_agent2_tlsconnect else 'unencrypted'] }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}", "description": "{{ zabbix_agent_description | default(omit) }}", "inventory_zabbix": "{{ zabbix_agent_inventory_zabbix | default({}) }}", "ipmi_authtype": "{{ zabbix_agent_ipmi_authtype | default(omit) }}", "ipmi_password": "{{ zabbix_agent_ipmi_password| default(omit) }}", "ipmi_privilege": "{{ zabbix_agent_ipmi_privilege | default(omit) }}", "ipmi_username": "{{ zabbix_agent_ipmi_username | default(omit) }}"}, "executable": "zabbix_host", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_host", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "API | Updating host configuration with macros", "module": "zabbix_hostmacro", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "options": {"name": "API | Updating host configuration with macros", "with_items": "{{ zabbix_agent_macros | default([]) }}", "when": ["zabbix_agent_macros is defined", "item.macro_key is defined"], "register": "zabbix_api_hostmarcro_created", "until": "zabbix_api_hostmarcro_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "host_name": "{{ (zabbix_agent2 | bool) | ternary(zabbix_agent2_hostname, zabbix_agent_hostname) }}", "macro_name": "{{ item.macro_key }}", "macro_value": "{{ item.macro_value }}", "macro_type": "{{ item.macro_type|default('text') }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}"}, "executable": "zabbix_hostmacro", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_hostmacro", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows | Set default architecture", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set default architecture"}, "module_options": {"windows_arch": 32}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Override architecture if 64-bit", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Override architecture if 64-bit", "when": ["ansible_architecture == \"64-bit\""]}, "module_options": {"windows_arch": 64}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set path to zabbix.exe", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set path to zabbix.exe"}, "module_options": {"zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\win{{ windows_arch }}\\zabbix_agentd.exe"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set variables specific to Zabbix >= 4", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set variables specific to Zabbix >= 4", "when": ["zabbix_version_long is version('4.0.0', '>=')"]}, "module_options": {"zabbix_win_svc_name": "Zabbix Agent", "zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\zabbix_agentd.exe", "zabbix_win_config_name": "zabbix_agentd.conf", "zabbix2_win_svc_name": "Zabbix Agent 2", "zabbix2_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\zabbix_agent2.exe", "zabbix2_win_config_name": "zabbix_agent2.conf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if Zabbix agent is present", "module": "ansible.windows.win_stat", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if Zabbix agent is present", "with_items": ["{{ zabbix_win_exe_path }}", "{{ zabbix2_win_exe_path }}"], "register": "agent_file_info"}, "module_options": {"path": "{{ item }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Get Installed Zabbix Agent Version", "module": "community.windows.win_file_version", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Get Installed Zabbix Agent Version", "register": "zabbix_win_exe_info", "when": ["item.stat.exists | bool"], "with_items": "{{ agent_file_info.results }}"}, "module_options": {"path": "{{ item.item }}"}, "executable": "community.windows.win_file_version", "executable_type": "Module", "fqcn": "community.windows.win_file_version", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set facts current zabbix agent installation", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts current zabbix agent installation", "when": ["zabbix_win_exe_info.results[0] is defined", "zabbix_win_exe_info.results[0].item.stat.exists", "zabbix_win_exe_info.results[0].item.stat.path == zabbix_win_exe_path", "zabbix_win_exe_info.results[0].win_file_version.product_version"]}, "module_options": {"zabbix_agent_1_binary_exist": true, "zabbix_agent_1_version": "zabbix_win_exe_info.results[0].win_file_version.product_version"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set facts current zabbix agent installation (agent 2)", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts current zabbix agent installation (agent 2)", "when": ["zabbix_win_exe_info.results[1] is defined", "zabbix_win_exe_info.results[1].item.stat.exists", "zabbix_win_exe_info.results[1].item.stat.path == zabbix2_win_exe_path", "zabbix_win_exe_info.results[1].win_file_version.product_version"]}, "module_options": {"zabbix_agent_2_binary_exist": true, "zabbix_agent_2_version": "zabbix_win_exe_info.results[1].win_file_version.product_version"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check Zabbix service", "module": "ansible.windows.win_service", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check Zabbix service", "register": "zabbix_service_info", "when": "item.item.stat.exists", "with_items": "{{ zabbix_win_exe_info.results }}"}, "module_options": {"name": "{{ (item.item.stat.path == zabbix_win_exe_path ) | ternary(zabbix_win_svc_name,zabbix2_win_svc_name) }}"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Set facts about current zabbix agent service state", "module": "set_fact", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts about current zabbix agent service state", "when": ["zabbix_service_info.results[0].exists is defined", "zabbix_service_info.results[0].exists", "zabbix_service_info.results[0].display_name == zabbix_win_svc_name"]}, "module_options": {"zabbix_agent_1_service_exist": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set facts about current zabbix agent service state (agent 2)", "module": "set_fact", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set facts about current zabbix agent service state (agent 2)", "when": ["zabbix_service_info.results[1].exists is defined", "zabbix_service_info.results[1].exists", "zabbix_service_info.results[1].display_name == zabbix2_win_svc_name"]}, "module_options": {"zabbix_agent_2_service_exist": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set fact about version change requirement", "module": "set_fact", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set fact about version change requirement", "when": "(zabbix_agent_1_binary_exist | default(false) and\n zabbix_win_exe_info.results[0].win_file_version.product_version is version(zabbix_version_long, '<>'))\nor (zabbix_agent_2_binary_exist | default(false) and\n zabbix_win_exe_info.results[1].win_file_version.product_version is version(zabbix_version_long, '<>'))\nor (zabbix_agent_1_binary_exist | default(false) and zabbix_agent2) or (zabbix_agent_2_binary_exist | default(false) and not zabbix_agent2)\n"}, "module_options": {"zabbix_agent_version_change": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Stop Zabbix agent v1", "module": "ansible.windows.win_service", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Stop Zabbix agent v1", "when": ["zabbix_agent_version_change | default(false) or zabbix_agent2", "zabbix_agent_1_service_exist | default(false)"]}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "start_mode": "auto", "state": "stopped"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Stop Zabbix agent v2", "module": "ansible.windows.win_service", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Stop Zabbix agent v2", "when": ["zabbix_agent_version_change | default(false) or not zabbix_agent2", "zabbix_agent_2_service_exist | default(false)"]}, "module_options": {"name": "{{ zabbix2_win_svc_name }}", "start_mode": "auto", "state": "stopped"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Uninstall Zabbix v1", "module": "ansible.windows.win_command", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Uninstall Zabbix v1", "when": ["zabbix_agent_version_change | default(false) or zabbix_agent2", "zabbix_agent_1_service_exist | default(false)"]}, "module_options": "\"{{ zabbix_win_exe_path }}\" --config \"{{ zabbix_win_install_dir }}\\conf\\{{ zabbix_win_config_name }}\" --uninstall", "executable": "ansible.windows.win_command", "executable_type": "Module", "fqcn": "ansible.windows.win_command", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Uninstall Zabbix v2", "module": "ansible.windows.win_command", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Uninstall Zabbix v2", "when": ["zabbix_agent_version_change | default(false) or not zabbix_agent2", "zabbix_agent_2_service_exist | default(false)"]}, "module_options": "\"{{ zabbix2_win_exe_path }}\" --config \"{{ zabbix_win_install_dir }}\\conf\\{{ zabbix2_win_config_name }}\" --uninstall", "executable": "ansible.windows.win_command", "executable_type": "Module", "fqcn": "ansible.windows.win_command", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Removing Zabbix Directory", "module": "ansible.windows.win_file", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Removing Zabbix Directory", "when": "((zabbix_agent_version_change | default(false) or zabbix_agent2) and zabbix_agent_1_binary_exist | default(false)) or ((zabbix_agent_version_change | default(false) or not zabbix_agent2) and zabbix_agent_2_binary_exist | default(false))"}, "module_options": {"path": "{{ zabbix_win_install_dir }}", "state": "absent"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Create directory structure", "module": "ansible.windows.win_file", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Create directory structure", "with_items": ["{{ zabbix_win_install_dir }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Create directory structure, includes", "module": "ansible.windows.win_file", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Create directory structure, includes", "with_items": ["{{ zabbix_agent_win_include }}"], "when": ["('.conf' not in zabbix_agent_win_include)"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Set installation settings (agent 2)", "module": "set_fact", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set installation settings (agent 2)", "when": "zabbix_agent2 | bool"}, "module_options": {"zabbix_win_package": "{{ zabbix2_win_package }}", "zabbix_win_download_link": "{{ zabbix2_win_download_link }}", "zabbix_win_exe_path": "{{ zabbix2_win_exe_path }}", "zabbix_win_config_name": "{{ zabbix2_win_config_name }}", "zabbix_win_svc_name": "{{ zabbix2_win_svc_name }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if agent file is already downloaded", "module": "ansible.windows.win_stat", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if agent file is already downloaded", "register": "file_info"}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Check if agent binaries in place", "module": "ansible.windows.win_stat", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if agent binaries in place", "register": "zabbix_windows_binaries"}, "module_options": {"path": "{{ zabbix_win_exe_path }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Download Zabbix Agent Zip file", "module": "ansible.windows.win_get_url", "index": 22, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Download Zabbix Agent Zip file", "when": ["not file_info.stat.exists", "not zabbix_windows_binaries.stat.exists"], "register": "zabbix_agent_win_download_zip", "until": "zabbix_agent_win_download_zip is succeeded", "throttle": "{{ zabbix_download_throttle | default(5) | int }}"}, "module_options": {"url": "{{ zabbix_win_download_link }}", "dest": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "url_username": "{{ zabbix_download_user | default(omit) }}", "url_password": "{{ zabbix_download_pass | default(omit) }}", "force": false, "follow_redirects": "all", "proxy_url": "{{ zabbix_https_proxy | default(None) | default(omit) }}", "validate_certs": "{{ zabbix_download_validate_certs | default(False) | bool }}", "timeout": "{{ zabbix_download_timeout | default(120) | int }}"}, "executable": "ansible.windows.win_get_url", "executable_type": "Module", "fqcn": "ansible.windows.win_get_url", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Unzip file", "module": "community.windows.win_unzip", "index": 23, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Unzip file"}, "module_options": {"src": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "dest": "{{ zabbix_win_install_dir }}", "creates": "{{ zabbix_win_exe_path }}"}, "executable": "community.windows.win_unzip", "executable_type": "Module", "fqcn": "community.windows.win_unzip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Cleanup downloaded Zabbix Agent Zip file", "module": "ansible.windows.win_file", "index": 24, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Cleanup downloaded Zabbix Agent Zip file", "when": ["zabbix_agent_win_download_zip.changed"]}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "state": "absent"}, "executable": "ansible.windows.win_file", "executable_type": "Module", "fqcn": "ansible.windows.win_file", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Check if windows service exist", "module": "ansible.windows.win_service", "index": 25, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Check if windows service exist", "register": "zabbix_windows_service"}, "module_options": {"name": "{{ zabbix_win_svc_name }}"}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Register Service", "module": "ansible.windows.win_command", "index": 26, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Register Service", "when": "not zabbix_windows_service.exists"}, "module_options": "\"{{ zabbix_win_exe_path }}\" --config \"{{ zabbix_win_install_dir }}\\conf\\{{ zabbix_win_config_name }}\" --install", "executable": "ansible.windows.win_command", "executable_type": "Module", "fqcn": "ansible.windows.win_command", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery", "module": "ansible.windows.win_service", "index": 27, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows.yml", "options": {"name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery"}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "start_mode": "auto", "failure_actions": [{"type": "restart", "delay_ms": 5000}, {"type": "restart", "delay_ms": 10000}, {"type": "restart", "delay_ms": 20000}], "failure_reset_period_sec": 86400}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_agent2.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "options": {"when": "(zabbix_agent_os_family != \"Windows\") or (zabbix_agent_docker | bool)"}, "module_options": "tlspsk_auto_agent2_linux.yml", "executable": "tlspsk_auto_agent2_linux.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "options": {"when": "zabbix_agent_os_family == \"Windows\""}, "module_options": "tlspsk_auto_agent2_windows.yml", "executable": "tlspsk_auto_agent2_windows.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "options": {"name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "when": "zabbix_api_create_hosts"}, "module_options": {"zabbix_agent2_tlsaccept": "psk", "zabbix_agent2_tlsconnect": "psk"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Suse.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install zypper repo dependency", "module": "community.general.zypper", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Install zypper repo dependency", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "zabbix_agent_package_dependency", "until": "zabbix_agent_package_dependency is succeeded"}, "module_options": {"name": ["python-xml", "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['python_libxml2_package'] }}"], "state": "present"}, "executable": "community.general.zypper", "executable_type": "Module", "fqcn": "community.general.zypper", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Suse | Install basic repo file", "module": "community.general.zypper_repository", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Suse | Install basic repo file", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['url'] }}", "name": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['name'] }}", "state": "present"}, "executable": "community.general.zypper_repository", "executable_type": "Module", "fqcn": "community.general.zypper_repository", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Only install the Zabbix Agent", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Only install the Zabbix Agent", "when": ["zabbix_agent_install_agent_only"]}, "module_options": {"zabbix_agent_packages": ["{{ zabbix_agent_package }}"]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install zabbix-agent", "module": "community.general.zypper", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Suse.yml", "options": {"name": "Suse | Install zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"name": "{{ zabbix_agent_packages }}", "state": "{{ zabbix_agent_package_state }}", "disable_gpg_check": true}, "executable": "community.general.zypper", "executable_type": "Module", "fqcn": "community.general.zypper", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_windows.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Windows", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Set default path variables for Windows"}, "module_options": {"zabbix_agent_tlspskfile": "{{ zabbix_win_install_dir }}\\tls_psk_auto.secret.txt", "zabbix_agent_tlspskidentity_file": "{{ zabbix_win_install_dir }}\\tls_psk_auto.identity.txt"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Windows)", "module": "ansible.windows.win_stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Windows)", "register": "zabbix_agent_tlspskcheck"}, "module_options": {"path": "{{ zabbix_agent_tlspskfile }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "module": "ansible.windows.win_stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "register": "zabbix_agent_tlspskidentity_check"}, "module_options": {"path": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Windows)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Windows)", "register": "zabbix_agent_tlspsk_base64", "when": ["zabbix_agent_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "register": "zabbix_agent_tlspskidentity_base64", "when": "zabbix_agent_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {}, "module_options": "tlspsk_auto_common.yml", "executable": "tlspsk_auto_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file (Windows)", "module": "win_copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file (Windows)", "when": ["zabbix_agent_tlspskidentity_file is defined", "zabbix_agent_tlspskidentity is defined"], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskidentity_file }}", "content": "{{ zabbix_agent_tlspskidentity }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Windows)", "module": "win_copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Windows)", "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined", "zabbix_agent_os_family == \"Windows\""], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "Darwin.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}", "zabbix_agent2_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent2_server) }}", "zabbix_agent2_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent2_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["zabbix_agent_listeninterface", "(zabbix_agent_listeninterface not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Set network interface", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}", "zabbix_agent_ip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing Agent", "module": "include_tasks", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Installing Agent", "tags": ["always"]}, "module_options": "macOS.yml", "executable": "macOS.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart mac zabbix agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "/usr/local/etc/zabbix/{{ zabbix_agent_conf }}", "owner": "root", "group": "wheel", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include }}", "owner": "root", "group": "zabbix", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create pid file directory for zabbix-agent", "module": "file", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Create pid file directory for zabbix-agent", "become": true}, "module_options": {"path": "/var/run/zabbix", "state": "directory", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if zabbix-agent service is running", "module": "shell", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Check if zabbix-agent service is running", "register": "launchctl_pid", "check_mode": false, "changed_when": false, "failed_when": "launchctl_pid.rc == 2", "become": true, "tags": ["init", "service"]}, "module_options": "set -o pipefail\nlaunchctl list | grep com.zabbix.zabbix_agentd | awk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "command", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)", "launchctl_pid.stdout == \"-\""], "tags": ["init", "service"]}, "module_options": "launchctl start com.zabbix.zabbix_agentd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "userparameter.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows | Installing user-defined userparameters", "module": "ansible.windows.win_template", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined userparameters", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_win_include }}\\{{ item.name }}.conf"}, "executable": "ansible.windows.win_template", "executable_type": "Module", "fqcn": "ansible.windows.win_template", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Installing user-defined scripts", "module": "ansible.windows.win_copy", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined scripts", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "{{ zabbix_win_install_dir }}\\scripts\\"}, "executable": "ansible.windows.win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Installing user-defined userparameters", "module": "template", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined userparameters", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_include }}/userparameter_{{ item.name }}.conf", "owner": "zabbix", "group": "zabbix", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined scripts", "module": "copy", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined scripts", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "/etc/zabbix/scripts/", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined userparameters", "module": "template", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined userparameters", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent2_include }}/userparameter_{{ item.name }}.conf", "owner": "zabbix", "group": "zabbix", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined scripts", "module": "copy", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined scripts", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "/etc/zabbix/scripts/", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "macOS.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "tasks": [{"py/object": "struct4.Task", "name": "macOS | Check installed package version", "module": "shell", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "options": {"name": "macOS | Check installed package version", "register": "pkgutil_version", "check_mode": false, "changed_when": false, "failed_when": "pkgutil_version.rc == 2"}, "module_options": "set -o pipefail\npkgutil --pkg-info 'com.zabbix.pkg.ZabbixAgent' | grep 'version:' | cut -d ' ' -f 2\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "macOS | Download the Zabbix package", "module": "get_url", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "options": {"name": "macOS | Download the Zabbix package", "when": "pkgutil_version.stdout != zabbix_version_long"}, "module_options": {"url": "{{ zabbix_mac_download_link }}", "dest": "/tmp/{{ zabbix_mac_package }}", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "macOS | Install the Zabbix package", "module": "command", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/macOS.yml", "options": {"name": "macOS | Install the Zabbix package", "become": true, "when": "pkgutil_version.stdout != zabbix_version_long", "tags": ["zabbix-agent"]}, "module_options": "installer -pkg \"/tmp/{{ zabbix_mac_package }}\" -target /", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Darwin.yml\", \"index\": 9}"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing gnupg", "module": "apt", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing gnupg", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "gnupg_installed", "until": "gnupg_installed is succeeded", "become": true}, "module_options": {"pkg": "gnupg", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][zabbix_agent_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Check for zabbix repositories", "module": "find", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Check for zabbix repositories", "register": "repositories", "become": true, "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"paths": "/etc/apt/sources.list.d", "patterns": "repo_zabbix_com_zabbix*.list", "excludes": "repo_zabbix_com_zabbix_{{ zabbix_underscore_version }}_ubuntu.list"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Remove unecessary zabbix repositories", "module": "file", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Remove unecessary zabbix repositories", "loop": "{{ repositories.files }}", "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\"", "zabbix_agent_src_reinstall"], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"path": "{{ item.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Debian", "module": "apt_repository", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Debian", "module": "apt_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Ubuntu Arm64", "module": "apt_repository", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Ubuntu Arm64", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu-arm64/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Ubuntu Arm64", "module": "apt_repository", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Ubuntu Arm64", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu-arm64/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Ubuntu", "module": "apt_repository", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine != \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Ubuntu", "module": "apt_repository", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine != \"aarch64\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_agent_apt_priority | int"], "become": true}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_agent_apt_priority | int"], "become": true}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix-agent-{{ zabbix_underscore_version }}", "content": "Package: {{ zabbix_agent_package }}\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_agent_apt_priority | int }}\n", "owner": "root", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-agent", "module": "apt", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "check_mode": false, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "{{ zabbix_agent_package }}", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-{sender,get}", "module": "apt", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-{sender,get}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "not zabbix_agent_install_agent_only"], "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "check_mode": false, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": ["{{ zabbix_sender_package }}", "{{ zabbix_get_package }}"], "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Mint | Installing zabbix-agent", "module": "apt", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Mint | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution not in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "zabbix-agent", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Enable the service", "module": "service", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Debian.yml", "options": {"name": "Debian | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "SELinux | Debian | Install policycoreutils-python", "module": "apt", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Debian | Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "when": ["zabbix_agent_os_family == \"Debian\""]}, "module_options": {"pkg": "policycoreutils-python-utils", "state": "present", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install policycoreutils-python", "module": "package", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": ["zabbix_agent_os_family == \"RedHat\"", "(zabbix_agent_distribution_major_version == \"6\" or zabbix_agent_distribution_major_version == \"7\")"], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "policycoreutils-python", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install python3-policycoreutils on RHEL8", "module": "package", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install python3-policycoreutils on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": ["zabbix_agent_os_family == \"RedHat\"", "ansible_distribution_major_version == \"8\""], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "python3-policycoreutils", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install selinux-policy-targeted", "module": "package", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install selinux-policy-targeted", "register": "zabbix_agent_selinuxpolicytargeted_installed", "until": "zabbix_agent_selinuxpolicytargeted_installed is succeeded", "when": ["zabbix_agent_os_family == \"RedHat\""], "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "selinux-policy-targeted", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | Get getenforce binary", "module": "stat", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Get getenforce binary", "register": "getenforce_bin", "become": true}, "module_options": {"path": "/usr/sbin/getenforce"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | Collect getenforce output", "module": "command", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Collect getenforce output", "register": "sestatus", "when": "getenforce_bin.stat.exists", "changed_when": false, "become": true, "check_mode": false}, "module_options": "/usr/sbin/getenforce", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "when": ["getenforce_bin.stat.exists and (\"Enforcing\" in sestatus.stdout or \"Permissive\" in sestatus.stdout)"]}, "module_options": {"zabbix_selinux": "{{ true }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | Allow zabbix_agent to start (SELinux)", "module": "community.general.selinux_permissive", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Allow zabbix_agent to start (SELinux)", "become": true}, "module_options": {"name": "zabbix_agent_t", "permissive": true}, "executable": "community.general.selinux_permissive", "executable_type": "Module", "fqcn": "community.general.selinux_permissive", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | Allow zabbix to run sudo commands (SELinux)", "module": "ansible.posix.seboolean", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/selinux.yml", "options": {"name": "SELinux | Allow zabbix to run sudo commands (SELinux)", "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_run_sudo|bool"], "tags": "selinux"}, "module_options": {"name": "zabbix_run_sudo", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "remove.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "tasks": [{"py/object": "struct4.Task", "name": "Pull service facts", "module": "service_facts", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Pull service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove | Make sure the \"old\" zabbix-agent service stopped", "module": "service", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Remove | Make sure the \"old\" zabbix-agent service stopped", "become": true, "when": "ansible_facts.services[\"zabbix-agent.service\"] is defined or\nansible_facts.services[\"zabbix-agent\"] is defined\n"}, "module_options": {"name": "zabbix-agent", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove | Package removal", "module": "package", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Remove | Package removal", "become": true}, "module_options": {"name": "zabbix-agent", "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove | Remove the agent-include-dir", "module": "file", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/remove.yml", "options": {"name": "Remove | Remove the agent-include-dir", "become": true}, "module_options": {"path": "{{ zabbix_agent_include }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_agent2_windows.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Windows", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Set default path variables for Windows"}, "module_options": {"zabbix_agent2_tlspskfile": "{{ zabbix_win_install_dir }}\\tls_psk_auto.secret.txt", "zabbix_agent2_tlspskidentity_file": "{{ zabbix_win_install_dir }}\\tls_psk_auto.identity.txt"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Windows)", "module": "ansible.windows.win_stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Windows)", "register": "zabbix_agent2_tlspskcheck"}, "module_options": {"path": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "module": "ansible.windows.win_stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Windows)", "register": "zabbix_agent2_tlspskidentity_check"}, "module_options": {"path": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "ansible.windows.win_stat", "executable_type": "Module", "fqcn": "ansible.windows.win_stat", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Windows)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Windows)", "register": "zabbix_agent2_tlspsk_base64", "when": ["zabbix_agent2_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Windows)", "register": "zabbix_agent2_tlspskidentity_base64", "when": "zabbix_agent2_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {}, "module_options": "tlspsk_auto_agent2_common.yml", "executable": "tlspsk_auto_agent2_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | AutoPSK | Template TLS PSK identity in file (Windows)", "module": "win_copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "Windows | AutoPSK | Template TLS PSK identity in file (Windows)", "when": ["zabbix_agent2_tlspskidentity_file is defined", "zabbix_agent2_tlspskidentity is defined"], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskidentity_file }}", "content": "{{ zabbix_agent2_tlspskidentity }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Windows)", "module": "win_copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Windows)", "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspsk_secret is defined"], "notify": ["restart win zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskfile }}", "content": "{{ zabbix_agent2_tlspsk_secret }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "ansible.windows.win_copy", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml\", \"index\": 1}"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_agent2_common.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Save existing TLS PSK secret", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Save existing TLS PSK secret", "when": "zabbix_agent2_tlspskcheck.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspsk_read": "{{ zabbix_agent2_tlspsk_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK secret", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK secret", "when": ["zabbix_agent2_tlspskcheck.stat.exists", "zabbix_agent2_tlspsk_read|length >= 32"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspsk_secret": "{{ zabbix_agent2_tlspsk_read }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK secret", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK secret", "when": ["not zabbix_agent2_tlspskcheck.stat.exists", "(zabbix_agent2_tlspsk_read is not defined) or (zabbix_agent2_tlspsk_read|length < 32)"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspsk_secret": "{{ lookup('password', '/dev/null chars=hexdigits length=64') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK identity", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK identity", "when": ["zabbix_agent2_tlspskidentity_check.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspskidentity": "{{ zabbix_agent2_tlspskidentity_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK identity", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK identity", "when": "not zabbix_agent2_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent2_tlspskidentity": "{{\n  zabbix_agent_visible_hostname\n  | default(((zabbix_agent2 == True) | ternary(zabbix_agent2_hostname, zabbix_agent_hostname)))\n  + '_'\n  + lookup('password', '/dev/null chars=hexdigits length=4')\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_windows.yml\", \"index\": 5}"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "firewall.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "tasks": [{"py/object": "struct4.Task", "name": "Firewall | Configure IPTables (zabbix_agent_listenport)", "module": "iptables", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure IPTables (zabbix_agent_listenport)", "become": true, "when": ["zabbix_agent_firewall_enable | bool"]}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Firewall | Configure IPTables (zabbix_agent_jmx_listenport)", "module": "iptables", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure IPTables (zabbix_agent_jmx_listenport)", "become": true, "when": ["zabbix_agent_firewall_enable | bool", "zabbix_agent_jmx_listenport | bool"]}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Firewall | Configure firewalld (zabbix_agent_listenport)", "module": "ansible.posix.firewalld", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure firewalld (zabbix_agent_listenport)", "become": true, "when": ["zabbix_agent_firewalld_enable | bool"], "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "ansible.posix.firewalld", "executable_type": "Module", "fqcn": "ansible.posix.firewalld", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Firewall | Configure firewalld (zabbix_agent_jmx_listenport)", "module": "ansible.posix.firewalld", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/firewall.yml", "options": {"name": "Firewall | Configure firewalld (zabbix_agent_jmx_listenport)", "become": true, "when": ["zabbix_agent_firewalld_enable | bool", "zabbix_agent_jmx_listenport | bool"], "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_jmx_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "ansible.posix.firewalld", "executable_type": "Module", "fqcn": "ansible.posix.firewalld", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined", "not (zabbix_agent_dont_detect_ip)"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}", "zabbix_agent2_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent2_server) }}", "zabbix_agent2_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent2_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ansible.netcommon.ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["(zabbix_agent_listeninterface)", "(zabbix_agent_listeninterface not in ansible_interfaces)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Set network interface", "when": ["(zabbix_agent_listeninterface)", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["(zabbix_agent_listeninterface)", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not (zabbix_agent_listenip)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding zabbix group", "module": "group", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Adding zabbix group", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "state": "present", "gid": "{{ zabbix_agent_docker_user_gid | default(omit) }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding zabbix user", "module": "user", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Adding zabbix user", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "group": "zabbix", "state": "present", "create_home": false, "home": "/etc/zabbix", "uid": "{{ zabbix_agent_docker_user_uid | default(omit) }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart zabbix-agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "{{ 'zabbix_agentd.conf.j2' if not zabbix_agent2 else 'zabbix_agent2.conf.j2' }}", "dest": "/etc/zabbix/{{ zabbix_agent_conf if not zabbix_agent2 else zabbix_agent2_conf }}", "owner": "root", "group": "root", "mode": "{{ zabbix_agent_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspskfile", "not (zabbix_agent2 | bool)"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist (zabbix-agent2)", "module": "file", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Create directory for PSK file if not exist (zabbix-agent2)", "become": true, "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspskfile", "zabbix_agent2 | bool"]}, "module_options": {"path": "{{ zabbix_agent2_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspskfile", "zabbix_agent_tlspsk_secret is defined", "not (zabbix_agent2 | bool)"], "notify": ["restart zabbix-agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File (zabbix-agent2)", "module": "copy", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Place TLS PSK File (zabbix-agent2)", "become": true, "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspskfile", "zabbix_agent2_tlspsk_secret is defined", "zabbix_agent2 | bool"], "notify": ["restart zabbix-agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskfile }}", "content": "{{ zabbix_agent2_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include if not zabbix_agent2 else zabbix_agent2_include }}", "owner": "root", "group": "zabbix", "mode": "{{ zabbix_agent_include_mode if not zabbix_agent2 else zabbix_agent2_include_mode }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure the firewall(d|iptables)", "module": "include", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Configure the firewall(d|iptables)", "when": ["(zabbix_agent_firewall_enable | bool) or (zabbix_agent_firewalld_enable | bool)"]}, "module_options": "firewall.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove zabbix-agent installation when zabbix-agent2 is used.", "module": "include", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Remove zabbix-agent installation when zabbix-agent2 is used.", "when": ["zabbix_agent2 | bool", "zabbix_agent_package_remove"]}, "module_options": "remove.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "service", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_agent2_linux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables (Linux)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Set default path variables (Linux)"}, "module_options": {"zabbix_agent2_tlspskfile": "/etc/zabbix/tls_psk_auto.secret", "zabbix_agent2_tlspskidentity_file": "/etc/zabbix/tls_psk_auto.identity"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Linux)", "module": "stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Linux)", "register": "zabbix_agent2_tlspskcheck", "become": true}, "module_options": {"path": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "module": "stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "register": "zabbix_agent2_tlspskidentity_check", "become": true}, "module_options": {"path": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Linux)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Linux)", "register": "zabbix_agent2_tlspsk_base64", "become": true, "when": ["zabbix_agent2_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "register": "zabbix_agent2_tlspskidentity_base64", "become": true, "when": "zabbix_agent2_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent2_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {}, "module_options": "tlspsk_auto_agent2_common.yml", "executable": "tlspsk_auto_agent2_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_common.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file (Linux)", "module": "copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file (Linux)", "become": true, "when": ["zabbix_agent2_tlspskidentity_file is defined", "zabbix_agent2_tlspskidentity is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskidentity_file }}", "content": "{{ zabbix_agent2_tlspskidentity }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Linux)", "module": "copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Linux)", "become": true, "when": ["zabbix_agent2_tlspskfile is defined", "zabbix_agent2_tlspsk_secret is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent2_tlspskfile }}", "content": "{{ zabbix_agent2_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml\", \"index\": 0}"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_common.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Save existing TLS PSK secret", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Save existing TLS PSK secret", "when": "zabbix_agent_tlspskcheck.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspsk_read": "{{ zabbix_agent_tlspsk_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK secret", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK secret", "when": ["zabbix_agent_tlspskcheck.stat.exists", "zabbix_agent_tlspsk_read|length >= 32"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ zabbix_agent_tlspsk_read }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK secret", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK secret", "when": ["(not zabbix_agent_tlspskcheck.stat.exists) or (zabbix_agent_tlspsk_read|length < 32)"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ lookup('password', '/dev/null chars=hexdigits length=64') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK identity", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Use existing TLS PSK identity", "when": ["zabbix_agent_tlspskidentity_check.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspskidentity": "{{ zabbix_agent_tlspskidentity_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK identity", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "options": {"name": "AutoPSK | Generate new TLS PSK identity", "when": "not zabbix_agent_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"zabbix_agent_tlspskidentity": "{{\n  zabbix_agent_visible_hostname\n  | default(((zabbix_agent2 != True) | ternary(zabbix_agent_hostname, zabbix_agent_hostname)))\n  + '_'\n  + lookup('password', '/dev/null chars=hexdigits length=4')\n}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml\", \"index\": 5}"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "options": {"when": "(zabbix_agent_os_family != \"Windows\") or (zabbix_agent_docker | bool)"}, "module_options": "tlspsk_auto_linux.yml", "executable": "tlspsk_auto_linux.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "options": {"when": "zabbix_agent_os_family == \"Windows\""}, "module_options": "tlspsk_auto_windows.yml", "executable": "tlspsk_auto_windows.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_windows.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "when": "zabbix_api_create_hosts"}, "module_options": {"zabbix_agent_tlsaccept": "psk", "zabbix_agent_tlsconnect": "psk"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows_conf.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_ip_addresses' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_ip_addresses'][0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Configure zabbix-agent", "module": "ansible.windows.win_template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Configure zabbix-agent", "notify": "restart win zabbix agent"}, "module_options": {"src": "{{ zabbix_win_config_name }}.j2", "dest": "{{ zabbix_win_install_dir }}\\conf\\{{ zabbix_win_config_name }}"}, "executable": "ansible.windows.win_template", "executable_type": "Module", "fqcn": "ansible.windows.win_template", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery", "module": "ansible.windows.win_service", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Set service startup mode to auto, ensure it is started and set auto-recovery"}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "start_mode": "auto", "state": "started", "failure_actions": [{"type": "restart", "delay_ms": 5000}, {"type": "restart", "delay_ms": 10000}, {"type": "restart", "delay_ms": 20000}], "failure_reset_period_sec": 86400}, "executable": "ansible.windows.win_service", "executable_type": "Module", "fqcn": "ansible.windows.win_service", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Check firewall service", "module": "ansible.windows.win_service_info", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Check firewall service", "register": "firewall_info", "when": "zabbix_win_firewall_management"}, "module_options": {"name": "MpsSvc"}, "executable": "ansible.windows.win_service_info", "executable_type": "Module", "fqcn": "ansible.windows.win_service_info", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Windows | Firewall rule", "module": "community.windows.win_firewall_rule", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "options": {"name": "Windows | Firewall rule", "when": ["zabbix_win_firewall_management", "firewall_info.services[0].state == 'started' or firewall_info.services[0].start_mode == 'auto'"]}, "module_options": {"name": "{{ zabbix_win_svc_name }}", "localport": "{{ zabbix_agent_listenport }}", "action": "allow", "direction": "in", "protocol": "tcp", "state": "present", "enabled": true}, "executable": "community.windows.win_firewall_rule", "executable_type": "Module", "fqcn": "community.windows.win_firewall_rule", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "Docker.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create volume mount string", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "options": {"name": "Create volume mount string", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"volume_mount": "{{ zabbix_agent_tlspskfile }}:/var/lib/zabbix/enc/tlspskfile", "tls_key": {"ZBX_TLSPSKFILE": "tlspskfile"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add zabbix_agent_tlspskfile to volume mount", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "options": {"name": "Add zabbix_agent_tlspskfile to volume mount", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"zabbix_agent_docker_volumes": "{{ zabbix_agent_docker_volumes + [ volume_mount ] }}", "zabbix_agent_docker_env": "{{ zabbix_agent_docker_env | combine(tls_key) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Zabbix Docker container is running", "module": "community.docker.docker_container", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Docker.yml", "options": {"name": "Ensure Zabbix Docker container is running", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true}, "module_options": {"name": "{{ zabbix_agent_docker_name }}", "image": "{{ zabbix_agent_docker_image }}:{{ zabbix_agent_docker_image_tag }}", "state": "{{ zabbix_agent_docker_state }}", "restart_policy": "{{ zabbix_agent_docker_restart_policy }}", "network_mode": "{{ zabbix_agent_docker_network_mode }}", "published_ports": "{{ zabbix_agent_docker_ports }}", "privileged": "{{ zabbix_agent_docker_privileged }}", "security_opts": "{{ zabbix_agent_docker_security_opts }}", "volumes": "{{ zabbix_agent_docker_volumes }}", "env": "{{ zabbix_agent_docker_env }}"}, "executable": "community.docker.docker_container", "executable_type": "Module", "fqcn": "community.docker.docker_container", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto_linux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables (Linux)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Set default path variables (Linux)"}, "module_options": {"zabbix_agent_tlspskfile": "/etc/zabbix/tls_psk_auto.secret", "zabbix_agent_tlspskidentity_file": "/etc/zabbix/tls_psk_auto.identity"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file (Linux)", "module": "stat", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file (Linux)", "register": "zabbix_agent_tlspskcheck", "become": true}, "module_options": {"path": "{{ zabbix_agent_tlspskfile }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "module": "stat", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity (Linux)", "register": "zabbix_agent_tlspskidentity_check", "become": true}, "module_options": {"path": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file (Linux)", "module": "slurp", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | read existing TLS PSK file (Linux)", "register": "zabbix_agent_tlspsk_base64", "become": true, "when": ["zabbix_agent_tlspskcheck.stat.exists"], "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "module": "slurp", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file (Linux)", "register": "zabbix_agent_tlspskidentity_base64", "become": true, "when": "zabbix_agent_tlspskidentity_check.stat.exists", "no_log": "{{ ansible_verbosity < 3 }}"}, "module_options": {"src": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {}, "module_options": "tlspsk_auto_common.yml", "executable": "tlspsk_auto_common.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_common.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file (Linux)", "module": "copy", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file (Linux)", "become": true, "when": ["zabbix_agent_tlspskidentity_file is defined", "zabbix_agent_tlspskidentity is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskidentity_file }}", "content": "{{ zabbix_agent_tlspskidentity }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK secret in file (Linux)", "module": "copy", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_linux.yml", "options": {"name": "AutoPSK | Template TLS PSK secret in file (Linux)", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart zabbix-agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml\", \"index\": 0}"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set variables specific for Zabbix Agent 2", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Set variables specific for Zabbix Agent 2", "when": ["zabbix_agent2 is defined", "zabbix_agent2"], "tags": ["always"]}, "module_options": {"zabbix_agent_service": "zabbix-agent2", "zabbix_agent_package": "zabbix-agent2"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reset zabbix_agent_version for Ubuntu 22.04 to 6.0", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Reset zabbix_agent_version for Ubuntu 22.04 to 6.0", "when": ["ansible_distribution_release == \"jammy\"", "( zabbix_agent_version is version ('6.0','lt') or zabbix_version is version ('6.0','lt') )"]}, "module_options": {"zabbix_version": 6.0, "zabbix_agent_version": 6.0}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for linuxmint - distribution release", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - distribution release", "when": ["ansible_os_family == \"Linuxmint\"", "ansible_distribution_release == \"sonya\" or ansible_distribution_release == \"serena\""], "tags": ["always"]}, "module_options": {"zabbix_agent_distribution_release": "xenial"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for linuxmint - family", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - family", "when": ["ansible_os_family == \"Linuxmint\""], "tags": ["always"]}, "module_options": {"zabbix_agent_os_family": "Debian"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for XCP-ng - family", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Fix facts for XCP-ng - family", "when": ["ansible_os_family == \"XCP-ng\""]}, "module_options": {"zabbix_agent_os_family": "RedHat"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": ["always"]}, "module_options": "{{ zabbix_agent_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["not (zabbix_agent_docker | bool)"], "tags": ["always"]}, "module_options": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install local python-netaddr package", "module": "pip", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Install local python-netaddr package", "register": "zabbix_python_netaddr_package_installed", "until": "zabbix_python_netaddr_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "ansible_all_ipv4_addresses is defined or (zabbix_agent_ip is not defined and total_private_ip_addresses is defined)"]}, "module_options": {"name": "netaddr", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Encrypt with TLS PSK auto management", "module": "include_tasks", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Encrypt with TLS PSK auto management", "when": ["not zabbix_agent2", "zabbix_agent_tlspsk_auto | bool", "(zabbix_agent_tlspskfile is undefined) or (zabbix_agent_tlspskfile | length == '0')", "(zabbix_agent_tlspsk_secret is undefined) or (zabbix_agent_tlspsk_secret | length == '0')"]}, "module_options": "tlspsk_auto.yml", "executable": "tlspsk_auto.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Encrypt with TLS PSK auto management", "module": "include_tasks", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Encrypt with TLS PSK auto management", "when": ["zabbix_agent2 | bool", "zabbix_agent2_tlspsk_auto | bool", "(zabbix_agent2_tlspskfile is undefined) or (zabbix_agent2_tlspskfile | length == '0')", "(zabbix_agent2_tlspsk_secret is undefined) or (zabbix_agent2_tlspsk_secret | length == '0')"]}, "module_options": "tlspsk_auto_agent2.yml", "executable": "tlspsk_auto_agent2.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/tlspsk_auto_agent2.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Agent", "module": "include_tasks", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Configure Agent", "when": ["zabbix_agent_os_family == \"Windows\""], "tags": ["always"]}, "module_options": "Windows_conf.yml", "executable": "Windows_conf.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Windows_conf.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Agent", "module": "include_tasks", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Configure Agent", "when": ["(zabbix_agent_os_family != \"Windows\" and zabbix_agent_os_family != \"Darwin\") or (zabbix_agent_docker | bool)"], "tags": ["always"]}, "module_options": "Linux.yml", "executable": "Linux.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/Linux.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run the API calls to Zabbix Server", "module": "include_tasks", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Run the API calls to Zabbix Server", "when": ["(zabbix_api_create_hostgroup | bool) or (zabbix_api_create_hosts | bool)"], "tags": ["api"]}, "module_options": "api.yml", "executable": "api.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/api.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Including userparameters", "module": "include_tasks", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/main.yml", "options": {"name": "Including userparameters", "when": "zabbix_agent_userparameters|length > 0", "tags": ["zabbix-agent", "userparameter"]}, "module_options": "userparameter.yml", "executable": "userparameter.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_agent/tasks/userparameter.yml", "annotations": {}}], "role": "zabbix_agent", "used_in": ["testdata4/scm_repo/site.yml"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": ["testdata4/scm_repo/site.yml"]}, "community.zabbix.zabbix_javagateway": {"py/object": "struct4.Role", "name": "zabbix_javagateway", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway", "fqcn": "community.zabbix.zabbix_javagateway", "collection": "community.zabbix", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-java-gateway", "module": "package", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-java-gateway", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_java_gateway_install", "until": "zabbix_java_gateway_install is succeeded", "become": true}, "module_options": {"pkg": "zabbix-java-gateway", "state": "{{ zabbix_javagateway_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "zabbix_javagateway", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some variables", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Set some variables"}, "module_options": {"zabbix_short_version": "{{ zabbix_javagateway_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "become": true}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Debian", "module": "apt_repository", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Debian", "become": true, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/debian/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Debian", "module": "apt_repository", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Debian", "become": true, "when": ["ansible_distribution == \"Debian\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/debian/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu-arm64/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine != \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "ansible_machine == \"aarch64\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu-arm64/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository Ubuntu", "module": "apt_repository", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing repository Ubuntu", "become": true, "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_repo == \"zabbix\""]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_javagateway_version }}/ubuntu/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-java-gateway", "module": "apt", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-java-gateway", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_java_gateway_install", "until": "zabbix_java_gateway_install is succeeded", "become": true}, "module_options": {"pkg": "zabbix-java-gateway", "state": "{{ zabbix_javagateway_package_state }}", "update_cache": true, "force": true, "cache_valid_time": 3600}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure Zabbix Java Gateway is not yet running", "module": "systemd", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/Debian.yml", "options": {"name": "Make sure Zabbix Java Gateway is not yet running", "when": ["zabbix_java_gateway_install.changed"]}, "module_options": {"name": "zabbix-java-gateway", "state": "stopped", "enabled": true, "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "zabbix_javagateway", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"RedHat\""]}, "module_options": "RedHat.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"Debian\""]}, "module_options": "Debian.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place systemd unit file", "module": "copy", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Place systemd unit file", "register": "systemd_state", "when": ["zabbix_version is version('5.4', '<')"]}, "module_options": {"src": "systemd.service", "dest": "/etc/systemd/system/zabbix-java-gateway.service", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd", "module": "shell", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Reload systemd", "when": ["zabbix_version is version('5.4', '<')", "systemd_state.changed"], "tags": ["skip_ansible_lint"]}, "module_options": "systemctl daemon-reload", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-proxy", "module": "template", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Configure zabbix-proxy", "notify": ["zabbix-java-gateway restarted"]}, "module_options": {"src": "zabbix_java_gateway.conf.j2", "dest": "/etc/zabbix/zabbix_java_gateway.conf", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_java_gateway_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure Zabbix Java Gateway is running", "module": "systemd", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_javagateway/tasks/main.yml", "options": {"name": "Make sure Zabbix Java Gateway is running"}, "module_options": {"name": "zabbix-java-gateway", "state": "started", "enabled": true, "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "zabbix_javagateway", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "community.zabbix.zabbix_proxy": {"py/object": "struct4.Role", "name": "zabbix_proxy", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy", "fqcn": "community.zabbix.zabbix_proxy", "collection": "community.zabbix", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-proxy", "init"]}, "module_options": {"zabbix_proxy_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-proxy"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Define package with version", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Define package with version", "when": ["zabbix_proxy_rhel_version is defined", "zabbix_repo != \"epel\""]}, "module_options": {"zabbix_proxy_package": "zabbix{{ zabbix_short_version }}-proxy-{{ zabbix_proxy_database }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Define package without version", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Define package without version", "when": ["zabbix_proxy_rhel_version is not defined", "zabbix_repo != \"epel\""]}, "module_options": {"zabbix_proxy_package": "zabbix-proxy-{{ zabbix_proxy_database }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set some facts Zabbix < 3.0", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts Zabbix < 3.0", "when": ["zabbix_version is version('3.0', '<')"], "tags": ["zabbix-proxy"]}, "module_options": {"apache_log": "httpd", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}-{{ zabbix_version }}*/create"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 3.0", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 3.0", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-proxy"]}, "module_options": {"apache_log": "httpd", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}-{{ zabbix_version }}*"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 5.4", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_proxy_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 3.0 and RedHat 8", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 3.0 and RedHat 8", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')", "ansible_distribution_major_version == '8'"], "tags": ["zabbix-proxy"]}, "module_options": {"apache_log": "httpd", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set some facts EPEL", "module": "set_fact", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts EPEL", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/zabbix-{{ zabbix_proxy_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' group (EPEL)", "module": "group", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' group (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_proxy_groupname | default('zabbix') }}", "gid": "{{ zabbix_proxy_groupid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' user (EPEL)", "module": "user", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' user (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_proxy_username | default('zabbix') }}", "comment": "Zabbix Monitoring System", "uid": "{{ zabbix_proxy_userid | default(omit) }}", "group": "zabbix"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure old file is absent", "module": "file", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "Make sure old file is absent", "become": true}, "module_options": {"path": "/etc/yum.repos.d/zabbix-supported.repo", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": ["zabbix_repo == \"zabbix\""], "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-agent"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "module": "package", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "when": "zabbix_repo != \"other\"", "register": "is_zabbix_proxy_package_installed", "until": "is_zabbix_proxy_package_installed is succeeded"}, "module_options": {"pkg": "{{ zabbix_proxy_package }}-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }} (When zabbix_repo == other)", "module": "package", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-proxy-{{ zabbix_proxy_database }} (When zabbix_repo == other)", "become": true, "when": "zabbix_repo == \"other\"", "register": "is_zabbix_proxy_package_installed", "until": "is_zabbix_proxy_package_installed is succeeded"}, "module_options": {"pkg": "{{ zabbix_proxy_package }}-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts", "module": "package", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_sql_package_installed", "until": "zabbix_proxy_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo != \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "module": "package", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "register": "zabbix_proxy_sql_package_installed", "until": "zabbix_proxy_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo == \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_proxy_version }}.{{ zabbix_proxy_version_minor }}", "state": "{{ zabbix_proxy_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Ansible PostgreSQL module dependencies", "module": "yum", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible PostgreSQL module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'pgsql'", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-proxy", "init"]}, "module_options": {"name": "python-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Ansible module dependencies on RHEL8", "module": "yum", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible module dependencies on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation", "zabbix_proxy_database == 'pgsql'", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": "python3-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL7", "module": "yum", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL7", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'mysql'", "ansible_distribution_major_version == '7'"], "tags": ["zabbix-proxy", "init"]}, "module_options": {"name": ["mariadb", "MySQL-python"], "state": "installed"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client packages RHEL8", "module": "yum", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client packages RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'mysql'", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-proxy", "init"]}, "module_options": {"name": ["mysql", "python3-PyMySQL"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL5 - 6", "module": "yum", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL5 - 6", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'mysql'", "ansible_distribution_major_version == \"6\" or ansible_distribution_major_version == \"5\"", "zabbix_proxy_install_database_client"], "tags": ["zabbix-proxy", "init", "database"]}, "module_options": {"name": ["mysql", "MySQL-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install PostgreSQL client package", "module": "yum", "index": 22, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install PostgreSQL client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'pgsql'", "zabbix_proxy_install_database_client"], "tags": ["zabbix-proxy", "init", "database"]}, "module_options": {"name": "postgresql", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install sqlite3", "module": "yum", "index": 23, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "RedHat | Install sqlite3", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'sqlite3'"], "tags": ["zabbix-proxy"]}, "module_options": {"name": ["sqlite"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 24, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/RedHat.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "postgresql.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_proxy_dbhost if (zabbix_proxy_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["not zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database", "module": "community.postgresql.postgresql_db", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database"}, "module_options": {"name": "{{ zabbix_proxy_dbname }}", "port": "{{ zabbix_proxy_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database user", "module": "postgresql_user", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database user"}, "module_options": {"db": "{{ zabbix_proxy_dbname }}", "name": "{{ zabbix_proxy_dbuser }}", "password": "md5{{ (zabbix_proxy_dbpassword + zabbix_proxy_dbuser)|hash('md5') }}", "port": "{{ zabbix_proxy_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database", "module": "community.postgresql.postgresql_db", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database"}, "module_options": {"login_host": "{{ zabbix_proxy_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_pgsql_login_password | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_pgsql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_proxy_dbname }}", "port": "{{ zabbix_proxy_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database user", "module": "postgresql_user", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database user"}, "module_options": {"login_host": "{{ zabbix_proxy_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_pgsql_login_password | default(omit) }}", "db": "{{ zabbix_proxy_dbname }}", "name": "{{ zabbix_proxy_dbuser }}", "password": "md5{{ (zabbix_proxy_dbpassword + zabbix_proxy_dbuser)|hash('md5') }}", "port": "{{ zabbix_proxy_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Importing schema file", "module": "shell", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing schema file", "args": {"creates": "/etc/zabbix/schema.done", "executable": "/bin/bash"}, "environment": {"PGPASSWORD": "{{ zabbix_proxy_dbpassword }}"}, "when": ["zabbix_database_creation"]}, "module_options": "set -euxo pipefail\nFILE={{ 'schema.sql' if zabbix_version is version('6.0', '<') else 'proxy.sql' }}\ncd {{ datafiles_path }}\nif [ -f ${FILE}.gz ]\n  then zcat ${FILE}.gz > /tmp/schema.sql\nelse\n  cp ${FILE} /tmp/schema.sql\nfi\ncat /tmp/schema.sql | psql -h '{{ zabbix_proxy_dbhost }}' -U '{{ zabbix_proxy_dbuser }}' \\\n-d '{{ zabbix_proxy_dbname }}'\ntouch /etc/zabbix/schema.done\nrm -f /tmp/schema.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "mysql.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_proxy_dbhost if (zabbix_proxy_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["not zabbix_proxy_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "when": "zabbix_proxy_real_dbhost | default(false)"}, "module_options": {"delegated_dbhost": "{{ zabbix_proxy_real_dbhost }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Create database", "module": "community.mysql.mysql_db", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Create database", "when": "zabbix_database_creation", "register": "zabbix_database_created", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database", "skip_ansible_lint"]}, "module_options": {"name": "{{ zabbix_proxy_dbname }}", "encoding": "{{ zabbix_proxy_dbencoding }}", "collation": "{{ zabbix_proxy_dbcollation }}", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}", "state": "present"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Create database user", "module": "community.mysql.mysql_user", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Create database user", "when": "zabbix_database_creation", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_proxy_dbuser }}", "password": "{{ zabbix_proxy_dbpassword }}", "priv": "{{ zabbix_proxy_dbname }}.*:ALL", "host": "{{ zabbix_proxy_privileged_host }}", "state": "present"}, "executable": "community.mysql.mysql_user", "executable_type": "Module", "fqcn": "community.mysql.mysql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get the file for schema.sql", "module": "shell", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Get the file for schema.sql", "changed_when": false, "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\""], "register": "ls_output_create", "tags": ["zabbix-proxy", "database"]}, "module_options": "ls -1 {{ datafiles_path }}/{{ 'schema' if zabbix_version is version('6.0', '<') else 'proxy' }}.sq*", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if we have done files", "module": "stat", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Check if we have done files", "register": "done_file", "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\""]}, "module_options": {"path": "/etc/zabbix/schema.done"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Get version_comment", "module": "community.mysql.mysql_variables", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Get version_comment", "delegate_to": "{{ delegated_dbhost }}", "register": "install_mysql_version", "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "version", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Get current value for innodb_default_row_format", "module": "community.mysql.mysql_variables", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Get current value for innodb_default_row_format", "delegate_to": "{{ delegated_dbhost }}", "register": "mysql_innodb_default_row_format", "when": ["install_mysql_version.msg is version('5.6', '>=')"], "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "innodb_default_row_format", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Set innodb_default_row_format to dynamic", "module": "community.mysql.mysql_variables", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Set innodb_default_row_format to dynamic", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "not done_file.stat.exists", "install_mysql_version.msg is version('5.6', '>=')", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "dynamic", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Create database and import file", "module": "community.mysql.mysql_db", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Create database and import file", "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\"", "not done_file.stat.exists"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_proxy_dbname }}", "encoding": "{{ zabbix_proxy_dbencoding }}", "collation": "{{ zabbix_proxy_dbcollation }}", "state": "import", "target": "{{ ls_output_create.stdout }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Revert innodb_default_row_format to previous value", "module": "community.mysql.mysql_variables", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "MySQL | Revert innodb_default_row_format to previous value", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "not done_file.stat.exists", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-proxy", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "{{ mysql_innodb_default_row_format.msg }}", "login_host": "{{ zabbix_proxy_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_proxy_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_proxy_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_proxy_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_proxy_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create done file", "module": "file", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/mysql.yml", "options": {"name": "Create done file", "when": ["zabbix_database_sqlload", "zabbix_repo != \"epel\"", "not done_file.stat.exists"]}, "module_options": {"path": "/etc/zabbix/schema.done", "state": "touch", "mode": "0644"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "sqlite3.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "tasks": [{"py/object": "struct4.Task", "name": "Sqlite3 | Default Database Path", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Sqlite3 | Default Database Path", "when": ["zabbix_proxy_dbname == \"zabbix_proxy\""]}, "module_options": {"zabbix_proxy_dbname": "/var/lib/zabbix/zabbix_proxy.db"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sqlite3 | Create database", "module": "file", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Sqlite3 | Create database", "become": true, "when": ["zabbix_database_creation"]}, "module_options": {"name": "{{ zabbix_proxy_dbname | dirname }}", "mode": 484, "owner": "zabbix", "group": "zabbix", "seuser": "system_u", "serole": "object_r", "setype": "zabbix_var_lib_t", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Sqlite3 | Importing schema file", "module": "shell", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Sqlite3 | Importing schema file", "become": true, "become_user": "zabbix", "args": {"creates": "{{ zabbix_proxy_dbname }}", "executable": "/bin/bash"}, "environment": {"PGPASSWORD": "{{ zabbix_proxy_dbpassword }}"}, "when": ["zabbix_database_creation"]}, "module_options": "set -o pipefail\nFILE={{ 'schema.sql' if zabbix_version is version('6.0', '<') else 'proxy.sql' }}\ncd {{ datafiles_path }}\nif [ -f ${FILE}.gz ]\n  then zcat ${FILE}.gz > /tmp/schema.sql\nelse\n  cp ${FILE} /tmp/schema.sql\nfi\ncat /tmp/schema.sql | sqlite3 {{ zabbix_proxy_dbname }}\nrm -f /tmp/schema.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix zabbix db file permission (SELinux)", "module": "file", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/sqlite3.yml", "options": {"name": "Fix zabbix db file permission (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "zabbix_database_creation"], "tags": "selinux"}, "module_options": {"path": "{{ zabbix_proxy_dbname }}", "state": "file", "seuser": "system_u", "serole": "object_r", "setype": "zabbix_var_lib_t"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_python_prefix": "python{% if ansible_python_version is version('3', '>=') %}3{% endif %}", "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Set some facts", "when": ["zabbix_version is version_compare('3.0', '<')"], "tags": ["zabbix-proxy", "init", "config"]}, "module_options": {"apache_log": "apache2", "datafiles_path": "/usr/share/zabbix-proxy-{{ zabbix_proxy_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-proxy", "init", "config"]}, "module_options": {"apache_log": "apache2", "datafiles_path": "/usr/share/doc/zabbix-proxy-{{ zabbix_proxy_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 5.4", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_proxy_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing gnupg", "module": "apt", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing gnupg", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "gnupg_installed", "until": "gnupg_installed is succeeded", "become": true}, "module_options": {"pkg": "gnupg", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-proxy", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "when": "zabbix_repo == \"zabbix\"", "become": true, "with_items": ["deb-src", "deb"], "tags": ["zabbix-proxy", "init"]}, "module_options": {"repo": "{{ item }} http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Select Zabbix proxy version", "module": "set_fact", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Select Zabbix proxy version", "when": ["ansible_distribution == \"Debian\"", "zabbix_proxy_debian_version is defined"]}, "module_options": {"zabbix_proxy_deb_version": "{{ zabbix_proxy_debian_version }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ubuntu | Select Zabbix proxy version", "module": "set_fact", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Ubuntu | Select Zabbix proxy version", "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_proxy_ubuntu_version is defined"]}, "module_options": {"zabbix_proxy_deb_version": "{{ zabbix_proxy_ubuntu_version }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Define package with version", "module": "set_fact", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Define package with version", "when": "zabbix_proxy_deb_version is defined"}, "module_options": {"deb_pkg": "zabbix-proxy-{{ zabbix_proxy_database }}={{ zabbix_proxy_deb_version }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Define package without version", "module": "set_fact", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Define package without version", "when": "zabbix_proxy_deb_version is not defined"}, "module_options": {"deb_pkg": "zabbix-proxy-{{ zabbix_proxy_database }}", "cacheable": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_proxy_apt_priority | int"], "become": true}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_proxy_apt_priority | int"], "become": true}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix-proxy-{{ zabbix_proxy_database }}", "content": "Package: zabbix-proxy-{{ zabbix_proxy_database }}\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_proxy_apt_priority }}\n", "owner": "root", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "module": "apt", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-proxy-{{ zabbix_proxy_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "is_zabbix_proxy_package_installed", "until": "is_zabbix_proxy_package_installed is succeeded", "become": true}, "module_options": {"pkg": "{{ deb_pkg }}", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "{{ zabbix_proxy_package_state }}", "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-sql-scripts", "module": "apt", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_package_sql_installed", "until": "zabbix_proxy_package_sql_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')"], "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"pkg": "zabbix-sql-scripts", "state": "{{ zabbix_proxy_package_state }}", "update_cache": true, "cache_valid_time": 0, "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Ansible module dependencies", "module": "apt", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install Ansible module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation"], "tags": ["zabbix-server", "init"]}, "module_options": {"name": "{{ zabbix_python_prefix }}-psycopg2", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Mysql Client package", "module": "apt", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'mysql'", "zabbix_proxy_install_database_client", "ansible_distribution_release != \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["mysql-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian 10 | Install Mysql Client package", "module": "apt", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian 10 | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'mysql'", "zabbix_proxy_install_database_client", "ansible_distribution_release == \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["mariadb-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install PostgreSQL Client package", "module": "apt", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install PostgreSQL Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "become": true, "when": ["zabbix_database_creation or zabbix_database_sqlload", "zabbix_proxy_database == 'pgsql'", "zabbix_proxy_install_database_client"], "tags": ["zabbix-proxy", "init", "database"]}, "module_options": {"name": "postgresql-client", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install sqlite3", "module": "apt", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/Debian.yml", "options": {"name": "Debian | Install sqlite3", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "are_zabbix_proxy_dependency_packages_installed", "until": "are_zabbix_proxy_dependency_packages_installed is succeeded", "become": true, "when": ["zabbix_proxy_database == 'sqlite3'"], "tags": ["zabbix-proxy"]}, "module_options": {"name": "sqlite3", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues", "module": "yum", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-proxy"]}, "module_options": {"name": ["policycoreutils-python", "libsemanage-python", "checkpolicy"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "module": "yum", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_proxy_dependencies_installed", "until": "zabbix_proxy_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-proxy"]}, "module_options": {"name": ["policycoreutils", "checkpolicy", "python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_proxy_alerter.sock", "module": "script", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_proxy_alerter.sock", "args": {"creates": "/etc/selinux/targeted/active/modules/400/zabbix_proxy_add/cil"}, "become": true, "when": ["ansible_os_family == \"RedHat\""], "tags": ["zabbix-proxy"]}, "module_options": {"cmd": "files/install_semodule.bsx"}, "executable": "script", "executable_type": "Module", "fqcn": "ansible.builtin.script", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Replace Sangoma with RedHat task", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Replace Sangoma with RedHat task", "when": ["ansible_os_family == 'Sangoma'"]}, "module_options": {"ansible_os_family": "RedHat"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default ip address for zabbix_proxy_ip", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Set default ip address for zabbix_proxy_ip", "when": ["zabbix_proxy_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_proxy_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set OS dependent variables", "module": "include_vars", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Set OS dependent variables", "with_first_found": ["../vars/{{ ansible_distribution }}.yml", "../vars/main.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"RedHat\""]}, "module_options": "RedHat.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["ansible_os_family == \"Debian\""]}, "module_options": "Debian.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing the database", "module": "include", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Installing the database"}, "module_options": "{{ zabbix_proxy_database_long }}.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-proxy", "module": "file", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Create include dir zabbix-proxy", "become": true}, "module_options": {"path": "{{ zabbix_proxy_include }}", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_proxy_include_mode }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create module dir zabbix-proxy", "module": "file", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Create module dir zabbix-proxy", "become": true}, "module_options": {"path": "{{ zabbix_proxy_loadmodulepath }}", "owner": "zabbix", "group": "zabbix", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_proxy_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_proxy_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_proxy_tlspskfile is defined", "zabbix_proxy_tlspsk_secret is defined"], "notify": ["restart zabbix-proxy"]}, "module_options": {"dest": "{{ zabbix_proxy_tlspskfile }}", "content": "{{ zabbix_proxy_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow zabbix-proxy to open connections (SELinux)", "module": "ansible.posix.seboolean", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Allow zabbix-proxy to open connections (SELinux)", "become": true, "when": "ansible_selinux.status == \"enabled\"", "tags": "selinux"}, "module_options": {"name": "zabbix_can_network", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Allow zabbix-proxy to connect to zabbix_proxy_preprocessing.sock (SELinux)", "module": "ansible.posix.seboolean", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Allow zabbix-proxy to connect to zabbix_proxy_preprocessing.sock (SELinux)", "become": true, "when": "ansible_selinux.status == \"enabled\"", "tags": "selinux"}, "module_options": {"name": "daemons_enable_cluster_mode", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Configure zabbix-proxy", "module": "template", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Configure zabbix-proxy", "notify": "restart zabbix-proxy", "become": true}, "module_options": {"src": "zabbix_proxy.conf.j2", "dest": "/etc/zabbix/zabbix_proxy.conf", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_proxy_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing the Zabbix-api package on localhost", "module": "pip", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Installing the Zabbix-api package on localhost", "register": "zabbix_api_package_installed", "until": "zabbix_api_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_proxy_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "zabbix_api_create_proxy | bool"], "tags": ["api"]}, "module_options": {"name": "zabbix-api", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure proxy definition is up-to-date (added/updated/removed)", "module": "zabbix_proxy", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "Ensure proxy definition is up-to-date (added/updated/removed)", "when": ["zabbix_api_create_proxy | bool"], "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_api_server_url }}", "http_login_user": "{{ zabbix_api_http_user | default(zabbix_http_user | default(omit)) }}", "http_login_password": "{{ zabbix_api_http_password | default(zabbix_http_password | default(omit)) }}", "login_user": "{{ zabbix_api_login_user }}", "login_password": "{{ zabbix_api_login_pass }}", "state": "{{ zabbix_proxy_state }}", "status": "{{ zabbix_proxy_status }}", "proxy_name": "{{ zabbix_proxy_name }}", "description": "{{ zabbix_proxy_description | default(omit) }}", "interface": "{{ zabbix_proxy_interface }}", "tls_psk": "{{ zabbix_proxy_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_proxy_tlspskidentity | default(omit) }}", "tls_subject": "{{ zabbix_proxy_tls_subject | default(omit) }}", "tls_accept": "{{ zabbix_proxy_tls_config[zabbix_proxy_tlsaccept if zabbix_proxy_tlsaccept else 'no_encryption'] }}", "tls_connect": "{{ zabbix_proxy_tls_config[zabbix_proxy_tlsconnect if zabbix_proxy_tlsconnect else 'no_encryption'] }}", "validate_certs": "{{ zabbix_api_validate_certs | default(omit) }}", "timeout": "{{ zabbix_api_timeout }}"}, "executable": "zabbix_proxy", "executable_type": "Module", "fqcn": "community.zabbix.zabbix_proxy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "zabbix-proxy started", "module": "service", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_proxy/tasks/main.yml", "options": {"name": "zabbix-proxy started", "become": true, "when": "zabbix_proxy_manage_service | bool"}, "module_options": {"name": "zabbix-proxy", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_proxy", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "community.zabbix.zabbix_web": {"py/object": "struct4.Role", "name": "zabbix_web", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web", "fqcn": "community.zabbix.zabbix_web", "collection": "community.zabbix", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-web"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file (Zabbix 5.x)", "module": "yum_repository", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file (Zabbix 5.x)", "with_items": "{{ zabbix_5_repo_yum }}", "become": true, "when": ["zabbix_repo == \"zabbix\"", "zabbix_version is version('5.0', '>=')", "ansible_distribution_major_version != '8'"], "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-web"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (CentOS)", "module": "yum", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (CentOS)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependency_package_install", "until": "zabbix_web_dependency_package_install is succeeded", "become": true, "when": ["zabbix_version is version('5.0', '>=')", "zabbix_web_centos_release", "ansible_distribution_major_version != '8'", "ansible_distribution == \"CentOS\""], "tags": ["zabbix-web"]}, "module_options": {"pkg": ["centos-release-scl"], "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (RHEL)", "module": "yum", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web dependency (Zabbix 5.x) (RHEL)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependency_package_install", "until": "zabbix_web_dependency_package_install is succeeded", "become": true, "when": ["zabbix_version is version('5.0', '>=')", "zabbix_web_centos_release", "ansible_distribution_major_version != '8'", "ansible_distribution == \"RedHat\""], "tags": ["zabbix-web"]}, "module_options": {"pkg": ["scl-utils", "scl-utils-build"], "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web (Zabbix 5.x)", "module": "yum", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web (Zabbix 5.x)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_package_install", "until": "zabbix_web_package_install is succeeded", "become": true, "when": ["zabbix_version is version('5.0', '>=')", "ansible_distribution_major_version != '8'", "zabbix_websrv == 'apache'"], "tags": ["zabbix-web"]}, "module_options": {"pkg": ["zabbix-apache-conf-scl-{{ zabbix_web_version }}.{{ zabbix_web_version_minor }}"], "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install zabbix-web-{{ zabbix_server_database }}", "module": "yum", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install zabbix-web-{{ zabbix_server_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_package_install", "until": "zabbix_web_package_install is succeeded", "become": true, "tags": ["zabbix-web"]}, "module_options": {"pkg": "zabbix-web-{{ zabbix_server_database }}{{ '-scl' if zabbix_version is version('5.0', '>=') and ansible_distribution_major_version != '8' else '' }}-{{ zabbix_web_version }}.{{ zabbix_web_version_minor }}", "state": "{{ zabbix_web_package_state }}", "update_cache": true, "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install PHP", "module": "template", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install PHP", "become": true, "when": ["zabbix_vhost"], "notify": ["restart redhat-php-fpm"]}, "module_options": {"src": "php-fpm.conf.j2", "dest": "{{ zabbix_php_fpm_dir }}/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"vars": {"zabbix_apache_servername": "{{ zabbix_websrv_servername }}"}, "when": ["zabbix_websrv == 'apache'"]}, "module_options": "apache_RedHat.yml", "executable": "apache_RedHat.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Nginx vhost", "module": "template", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "RedHat | Install Nginx vhost", "when": ["zabbix_vhost", "zabbix_websrv == 'nginx'"], "become": true, "notify": ["restart nginx"], "tags": ["zabbix-web", "init", "config", "nginx"]}, "module_options": {"src": "nginx_vhost.conf.j2", "dest": "/etc/nginx/conf.d/zabbix.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "apache_RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "options": {}, "module_options": "apache.yml", "executable": "apache.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install apache vhost", "module": "template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml", "options": {"name": "RedHat | Install apache vhost", "when": "zabbix_vhost", "become": true, "notify": ["restart apache"], "tags": ["zabbix-server"]}, "module_options": {"src": "apache_vhost.conf.j2", "dest": "/etc/httpd/conf.d/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "zabbix_web", "used_in": ["{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/RedHat.yml\", \"index\": 7}"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "php_Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"when": ["zabbix_websrv == 'apache'"]}, "module_options": "apache.yml", "executable": "apache.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Determine php prefix for packages installations (legacy php5)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"name": "Debian | Determine php prefix for packages installations (legacy php5)", "when": ["ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('16.04', '<') or ansible_distribution == 'Debian' and ansible_distribution_version is version_compare('9', '<')"]}, "module_options": {"_zabbix_php_package_prefix": 5}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Determine php prefix for packages installations (Current distros)", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"name": "Debian | Determine php prefix for packages installations (Current distros)", "when": ["ansible_distribution == 'Ubuntu' and ansible_distribution_version is version_compare('16.04', '>=') or ansible_distribution == 'Debian' and ansible_distribution_version is version_compare('9', '>=')", "zabbix_version is version_compare('5.0', '>=')", "not _zabbix_web_apache_php_addition"]}, "module_options": {"_zabbix_php_package_prefix": "{{ zabbix_php_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install php packages", "module": "apt", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "options": {"name": "Debian | Install php packages", "register": "zabbix_web_php_dependency_install", "until": "zabbix_web_php_dependency_install is succeeded", "become": true, "tags": ["zabbix-web", "init"]}, "module_options": {"state": "present", "update_cache": true, "cache_valid_time": 3600, "name": ["php{{ _zabbix_php_package_prefix }}-{{ zabbix_server_database }}", "php{{ _zabbix_php_package_prefix }}-bcmath", "php{{ _zabbix_php_package_prefix }}-mbstring", "php{{ _zabbix_php_package_prefix }}-ldap", "php{{ _zabbix_php_package_prefix }}-xml", "php{{ _zabbix_php_package_prefix }}-gd"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "apache_Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Debian | Install legacy PHP integration for Apache", "module": "apt", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | Install legacy PHP integration for Apache", "become": true}, "module_options": {"state": "present", "update_cache": true, "cache_valid_time": 3600, "name": ["libapache2-mod-php"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | install apache vhost", "module": "template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | install apache vhost", "when": "zabbix_vhost", "become": true, "notify": ["restart apache"], "tags": ["zabbix-web", "init", "config", "apache"]}, "module_options": {"src": "apache_vhost.conf.j2", "dest": "/etc/apache2/sites-available/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Remove provided zabbix.conf files", "module": "file", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | Remove provided zabbix.conf files", "when": "zabbix_vhost", "become": true, "with_items": ["/etc/apache2/conf-available/zabbix.conf", "/etc/apache2/conf-enabled/zabbix.conf"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | enable apache vhost", "module": "file", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "options": {"name": "Debian | enable apache vhost", "when": "zabbix_vhost", "become": true, "notify": ["restart apache"], "tags": ["zabbix-server", "init", "config", "apache"]}, "module_options": {"src": "/etc/apache2/sites-available/zabbix.conf", "dest": "/etc/apache2/sites-enabled/zabbix.conf", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "nginx.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "tasks": [{"py/object": "struct4.Task", "name": "Nginx | Set websrv specific variables", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Set websrv specific variables"}, "module_options": {"zabbix_web_conf_web_user": "{{ zabbix_web_conf_web_user if zabbix_web_conf_web_user is defined else _nginx_user }}", "zabbix_web_conf_web_group": "{{ zabbix_web_conf_web_group if zabbix_web_conf_web_group is defined else _nginx_group }}", "zabbix_nginx_config_path": "{{ zabbix_nginx_config_path if zabbix_nginx_config_path is defined else _nginx_config_path }}", "zabbix_nginx_log_path": "{{ zabbix_nginx_log_path if zabbix_nginx_log_path is defined else _nginx_log_path }}", "zabbix_nginx_service": "{{ zabbix_nginx_service if zabbix_nginx_service is defined else _nginx_service }}", "zabbix_nginx_tls_crt": "{{ zabbix_nginx_tls_crt if zabbix_nginx_tls_crt is defined else _nginx_tls_crt }}", "zabbix_nginx_tls_key": "{{ zabbix_nginx_tls_key if zabbix_nginx_tls_key is defined else _nginx_tls_key }}", "zabbix_nginx_tls_dhparam": "{{ zabbix_nginx_tls_dhparam if zabbix_nginx_tls_dhparam is defined else _nginx_tls_dhparam }}", "zabbix_apache_service": "{{ zabbix_apache_service if zabbix_apache_service is defined else _apache_service }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Check Apache service if same ports", "module": "command", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Check Apache service if same ports", "failed_when": false, "register": "zabbix_apache_service_check", "changed_when": "zabbix_apache_service_check.rc == 0", "check_mode": false, "when": ["zabbix_apache_vhost_port == zabbix_nginx_vhost_port", "zabbix_apache_vhost_tls_port == zabbix_nginx_vhost_tls_port"]}, "module_options": "systemctl status \"{{ zabbix_apache_service }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Stop Apache running on same ports", "module": "service", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Stop Apache running on same ports", "tags": ["zabbix-web"], "when": ["zabbix_apache_vhost_port == zabbix_nginx_vhost_port", "zabbix_apache_vhost_tls_port == zabbix_nginx_vhost_tls_port", "zabbix_apache_service_check.rc == 0"]}, "module_options": {"name": "{{ zabbix_apache_service }}", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Debian | Install Nginx and ssl-cert packages", "module": "apt", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Debian | Install Nginx and ssl-cert packages", "when": "ansible_os_family == \"Debian\""}, "module_options": {"state": "present", "name": ["nginx-light", "ssl-cert"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | RedHat | Install Nginx packages", "module": "yum", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | RedHat | Install Nginx packages", "when": "ansible_os_family == \"RedHat\""}, "module_options": {"state": "present", "name": ["nginx"]}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Start and enable service", "module": "service", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Start and enable service"}, "module_options": {"name": "{{ zabbix_nginx_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Install OpenSSL package for DH parameters", "module": "package", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Install OpenSSL package for DH parameters"}, "module_options": {"name": "openssl", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Generate SSL DH parameters", "module": "command", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Generate SSL DH parameters", "args": {"creates": "{{ zabbix_nginx_tls_dhparam }}"}}, "module_options": "openssl dhparam -out {{ zabbix_nginx_tls_dhparam }} {{ zabbix_nginx_tls_dhparam_bits | default('2048') }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | check for certificate created by certbot", "module": "stat", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | check for certificate created by certbot", "register": "zabbix_letsencrypt_cert", "failed_when": false, "when": "zabbix_letsencrypt"}, "module_options": {"path": "/etc/letsencrypt/live/{{ zabbix_websrv_servername }}/fullchain.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | Create directory for certbot webroot if not exist", "module": "file", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Create directory for certbot webroot if not exist", "when": ["zabbix_letsencrypt"], "become": true}, "module_options": {"path": "{{ zabbix_letsencrypt_webroot_path }}", "mode": "{{ zabbix_letsencrypt_webroot_mode }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Nginx | Install vhost in conf.d", "module": "template", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Nginx | Install vhost in conf.d", "when": ["zabbix_vhost"], "become": true, "notify": ["restart nginx"]}, "module_options": {"src": "nginx_vhost.conf.j2", "dest": "{{ zabbix_nginx_config_path }}/zabbix.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | Check if zabbix_websrv_servername is resolvable", "module": "set_fact", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Check if zabbix_websrv_servername is resolvable", "changed_when": "zabbix_websrv_servername_ip != ansible_default_ipv4.address", "register": "zabbix_letsencrypt_resolve", "when": "zabbix_letsencrypt"}, "module_options": {"zabbix_websrv_servername_ip": "{{ lookup('dig', 'qtype=A', zabbix_websrv_servername) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | check if certbot CLI is present", "module": "shell", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | check if certbot CLI is present", "register": "zabbix_cerbot_check", "changed_when": "zabbix_cerbot_check.rc != 0", "check_mode": false, "when": "zabbix_letsencrypt"}, "module_options": "certbot --version", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | flash all handlers before certbot", "module": "meta", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | flash all handlers before certbot", "when": ["zabbix_letsencrypt", "zabbix_letsencrypt_resolve is not changed", "zabbix_cerbot_check.rc == 0"]}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | generate certs with certbot CLI", "module": "command", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | generate certs with certbot CLI", "args": {"creates": "/etc/letsencrypt/live/{{ zabbix_websrv_servername }}/fullchain.pem"}, "when": ["zabbix_letsencrypt", "zabbix_letsencrypt_resolve is not changed", "zabbix_cerbot_check.rc == 0"]}, "module_options": "certbot --non-interactive certonly --expand -a webroot --webroot-path={{ zabbix_letsencrypt_webroot_path }} --email {{ zabbix_letsencrypt_account_email }} --agree-tos --cert-name {{ zabbix_websrv_servername }} -d {{ zabbix_websrv_servername }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | Check for certificate created by certbot", "module": "stat", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Check for certificate created by certbot", "register": "zabbix_letsencrypt_cert", "failed_when": false, "when": "zabbix_letsencrypt"}, "module_options": {"path": "/etc/letsencrypt/live/{{ zabbix_websrv_servername }}/fullchain.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let's Encrypt | Reinstall Nginx vhost", "module": "template", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "options": {"name": "Let's Encrypt | Reinstall Nginx vhost", "when": ["zabbix_letsencrypt", "zabbix_letsencrypt_resolve is not changed", "zabbix_cerbot_check.rc == 0"], "become": true, "notify": ["restart nginx"]}, "module_options": {"src": "nginx_vhost.conf.j2", "dest": "/etc/nginx/conf.d/zabbix.conf", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-web", "init", "config"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "become": true, "when": ["zabbix_repo == \"zabbix\"", "ansible_machine != \"aarch64\""], "with_items": ["deb-src", "deb"], "tags": ["zabbix-web", "init", "config"]}, "module_options": {"repo": "{{ item }} http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "become": true, "when": ["zabbix_repo == \"zabbix\"", "ansible_machine == \"aarch64\""], "with_items": ["deb-src", "deb"], "tags": ["zabbix-web", "init", "config"]}, "module_options": {"repo": "{{ item }} http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}-arm64/ {{ ansible_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install PHP apart from zabbix-frontend-php deps", "module": "include_tasks", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install PHP apart from zabbix-frontend-php deps", "when": "zabbix_php_install"}, "module_options": "php_Debian.yml", "executable": "php_Debian.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install zabbix-web", "module": "apt", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install zabbix-web", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_package_install", "until": "zabbix_web_package_install is succeeded", "become": true, "tags": ["zabbix-web", "init", "config"]}, "module_options": {"pkg": "zabbix-frontend-php{{ '-deprecated' if zabbix_php_frontend_deprecated else '' }}", "state": "{{ zabbix_web_package_state }}", "update_cache": true, "cache_valid_time": 0}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Link graphfont.ttf (workaround ZBX-10467)", "module": "file", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Link graphfont.ttf (workaround ZBX-10467)", "tags": ["zabbix-web", "init", "config"]}, "module_options": {"src": "/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf", "path": "/usr/share/zabbix/fonts/graphfont.ttf", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install PHP", "module": "template", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Debian | Install PHP", "become": true, "when": ["zabbix_vhost"], "notify": ["restart php-fpm-version"]}, "module_options": {"src": "php-fpm.conf.j2", "dest": "{{ zabbix_php_fpm_dir }}/zabbix.conf", "owner": "{{ _apache_user }}", "group": "{{ _apache_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Including Apache Configuration", "module": "include_tasks", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Including Apache Configuration", "vars": {"zabbix_apache_servername": "{{ zabbix_websrv_servername }}"}, "when": ["zabbix_websrv == 'apache'"]}, "module_options": "apache_Debian.yml", "executable": "apache_Debian.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_Debian.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/Debian.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package", "module": "yum", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependencies_installed", "until": "zabbix_web_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-web"]}, "module_options": {"name": ["libsemanage-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package on RHEL8", "module": "yum", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_web_dependencies_installed", "until": "zabbix_web_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-web"]}, "module_options": {"name": ["python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "module": "ansible.posix.seboolean", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network"], "tags": ["zabbix-web"]}, "module_options": {"name": "zabbix_can_network", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | Allow httpd to connect to db (SELinux)", "module": "ansible.posix.seboolean", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | Allow httpd to connect to db (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_can_network"], "tags": "selinux"}, "module_options": {"name": "httpd_can_network_connect_db", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | Allow httpd to connect to zabbix (SELinux)", "module": "ansible.posix.seboolean", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | Allow httpd to connect to zabbix (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_can_network"], "tags": "selinux"}, "module_options": {"name": "httpd_can_connect_zabbix", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | Allow httpd to connect to ldap (SELinux)", "module": "ansible.posix.seboolean", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/selinux.yml", "options": {"name": "SELinux | Allow httpd to connect to ldap (SELinux)", "become": true, "when": ["ansible_selinux.status == \"enabled\"", "zabbix_apache_can_connect_ldap | bool"], "tags": "selinux"}, "module_options": {"name": "httpd_can_connect_ldap", "persistent": true, "state": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_web", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "apache.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "tasks": [{"py/object": "struct4.Task", "name": "Apache | Get Apache version", "module": "shell", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Apache | Get Apache version", "changed_when": false, "register": "apachectl_version", "check_mode": false, "args": {"executable": "/bin/bash"}, "tags": ["zabbix-web"]}, "module_options": "PATH=/usr/sbin:$PATH\nset -o pipefail\napachectl -v | grep 'version' | awk -F '/' '{ print $2 }'| awk '{ print $1 }' | cut -c 1-3\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Apache | Set correct apache_version", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Apache | Set correct apache_version", "tags": ["zabbix-web"]}, "module_options": {"apache_version": "{{ apachectl_version.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Set some", "when": ["zabbix_version is version('4.4', '<=')"], "tags": ["zabbix-web"]}, "module_options": {"_zabbix_web_apache_php_addition": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache.yml", "options": {"name": "Set some", "when": ["ansible_os_family == \"Debian\""], "tags": ["zabbix-web"]}, "module_options": {"_zabbix_web_apache_php_addition": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "zabbix_web", "used_in": ["{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/apache_RedHat.yml\", \"index\": 0}", "{\"path\": \"testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/php_Debian.yml\", \"index\": 0}"], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "access.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "tasks": [{"py/object": "struct4.Task", "name": "htpasswd | check Python version to set prefix variable", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "options": {"name": "htpasswd | check Python version to set prefix variable", "when": ["zabbix_web_htpasswd is defined", "zabbix_web_htpasswd", "zabbix_web_htpasswd_users is defined"]}, "module_options": {"zabbix_python_prefix": "python{% if ansible_python_version is version_compare('3', '>=') %}3{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "htpasswd | install passlib for Python interpreter", "module": "package", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "options": {"name": "htpasswd | install passlib for Python interpreter", "when": ["zabbix_web_htpasswd is defined", "zabbix_web_htpasswd", "zabbix_web_htpasswd_users is defined"]}, "module_options": {"name": "{{ zabbix_python_prefix }}-passlib", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "htpasswd | manage HTTP authentication controls", "module": "community.general.htpasswd", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "options": {"name": "htpasswd | manage HTTP authentication controls", "loop_control": {"label": "{{ item.value.htpasswd_user }}"}, "with_dict": "{{ zabbix_web_htpasswd_users }}", "when": ["zabbix_web_htpasswd is defined", "zabbix_web_htpasswd", "zabbix_web_htpasswd_users is defined"]}, "module_options": {"path": "{{ zabbix_web_htpasswd_file }}", "name": "{{ item.value.htpasswd_user }}", "password": "{{ item.value.htpasswd_pass }}", "group": "www-data", "state": "present"}, "executable": "community.general.htpasswd", "executable_type": "Module", "fqcn": "community.general.htpasswd", "annotations": {"use-non-builtin-module": true}}], "role": "zabbix_web", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": ["always"]}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include distribution and version-specific vars", "module": "include_vars", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Include distribution and version-specific vars", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"]}], "tags": ["always"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some versions", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set some versions", "tags": ["always"]}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_php_version": "{{ zabbix_php_version if zabbix_php_version is defined else _zabbix_php_version }}", "_zabbix_php_package_prefix": ""}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default PHP-FPM variables", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set default PHP-FPM variables", "when": ["not zabbix_php_fpm"]}, "module_options": {"zabbix_php_fpm_dir": "{{ zabbix_php_fpm_dir if zabbix_php_fpm_dir is defined else _php_fpm_dir }}", "zabbix_php_fpm_session": "{{ zabbix_php_fpm_session if zabbix_php_fpm_session is defined else _php_fpm_session }}", "zabbix_php_fpm_listen": "{{ zabbix_php_fpm_listen if zabbix_php_fpm_listen is defined else _php_fpm_listen }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default PHP-FPM variables specific RH provided", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set default PHP-FPM variables specific RH provided", "when": ["zabbix_php_fpm", "ansible_os_family == \"RedHat\""]}, "module_options": {"zabbix_php_fpm_dir": "{{ zabbix_php_fpm_dir if zabbix_php_fpm_dir is defined else _php_fpm_dir }}", "zabbix_php_fpm_session": "{{ zabbix_php_fpm_session if zabbix_php_fpm_session is defined else _zabbix_php_fpm_session }}", "zabbix_php_fpm_listen": "{{ zabbix_php_fpm_listen if zabbix_php_fpm_listen is defined else _zabbix_php_fpm_listen }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set websrv specific variables (Apache)", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Set websrv specific variables (Apache)", "when": ["zabbix_websrv == 'apache'"]}, "module_options": {"zabbix_web_conf_web_user": "{{ zabbix_web_conf_web_user if zabbix_web_conf_web_user is defined else _apache_user }}", "zabbix_web_conf_web_group": "{{ zabbix_web_conf_web_group if zabbix_web_conf_web_group is defined else _apache_group }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"when": ["zabbix_websrv == 'nginx'"]}, "module_options": "nginx.yml", "executable": "nginx.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/nginx.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Install the correct repository", "when": "ansible_os_family == \"RedHat\"", "tags": ["zabbix-web"]}, "module_options": "RedHat.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Install the correct repository", "when": "ansible_os_family == \"Debian\"", "tags": ["zabbix-web"]}, "module_options": "Debian.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create zabbix-web directory", "module": "file", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Create zabbix-web directory", "tags": ["zabbix-web", "init", "config"]}, "module_options": {"path": "/etc/zabbix/web", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-web", "module": "template", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"name": "Configure zabbix-web", "notify": ["restart apache"], "tags": ["zabbix-web", "init", "config"]}, "module_options": {"src": "zabbix.conf.php.j2", "dest": "/etc/zabbix/web/zabbix.conf.php", "owner": "{{ zabbix_web_conf_web_user }}", "group": "{{ zabbix_web_conf_web_group }}", "mode": "{{ zabbix_web_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/main.yml", "options": {"when": ["zabbix_web_htpasswd"], "tags": ["zabbix-web", "init", "config"]}, "module_options": "access.yml", "executable": "access.yml", "executable_type": "TaskFile", "fqcn": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_web/tasks/access.yml", "annotations": {}}], "role": "zabbix_web", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "community.zabbix.zabbix_server": {"py/object": "struct4.Role", "name": "zabbix_server", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server", "fqcn": "community.zabbix.zabbix_server", "collection": "community.zabbix", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Use Zabbix package name", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Use Zabbix package name", "when": ["zabbix_repo == \"zabbix\" or zabbix_repo == \"other\""], "tags": ["zabbix-server"]}, "module_options": {"zabbix_server_package": "zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-server"]}, "module_options": {"zabbix_server_package": "zabbix{{ zabbix_short_version }}-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set some facts Zabbix <= 3.2", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts Zabbix <= 3.2", "when": ["zabbix_version is version('3.2', '<=')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}-{{ zabbix_version }}*"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix > 3.2", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix > 3.2", "when": ["zabbix_version is version('3.2', '>')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}*"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for Zabbix >= 5.4", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_server_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set facts for RHEL8", "module": "set_fact", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set facts for RHEL8", "when": ["ansible_distribution_major_version == \"8\"", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set some facts EPEL", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Set some facts EPEL", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-server"]}, "module_options": {"datafiles_path": "/usr/share/zabbix-{{ zabbix_server_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' group (EPEL)", "module": "group", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' group (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_server_groupname | default('zabbix') }}", "gid": "{{ zabbix_server_groupid | default(omit) }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Create 'zabbix' user (EPEL)", "module": "user", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Create 'zabbix' user (EPEL)", "become": true, "when": ["zabbix_repo == \"epel\""]}, "module_options": {"name": "{{ zabbix_server_username | default('zabbix') }}", "comment": "Zabbix Monitoring System", "uid": "{{ zabbix_server_userid | default(omit) }}", "group": "zabbix"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure old file is absent", "module": "file", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "Make sure old file is absent", "become": true}, "module_options": {"path": "/etc/yum.repos.d/zabbix-supported.repo", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "notify": ["clean repo files from proxy creds"], "tags": ["zabbix-server"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "mode": "{{ item.mode | default('0644') }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }}", "module": "package", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_package_installed", "until": "zabbix_server_package_installed is succeeded", "when": "zabbix_repo != \"other\"", "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "{{ zabbix_server_package }}-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }} (When zabbix_repo == other)", "module": "package", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-server-{{ zabbix_server_database }} (When zabbix_repo == other)", "register": "zabbix_server_package_installed", "until": "zabbix_server_package_installed is succeeded", "when": "zabbix_repo == \"other\"", "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "{{ zabbix_server_package }}-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts", "module": "package", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_sql_package_installed", "until": "zabbix_server_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo != \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "module": "package", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-sql-scripts (When zabbix_repo == other)", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_sql_package_installed", "until": "zabbix_server_sql_package_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')", "zabbix_repo == \"other\""], "become": true, "tags": ["zabbix-server"]}, "module_options": {"pkg": "zabbix-sql-scripts-{{ zabbix_server_version }}.{{ zabbix_server_version_minor }}", "state": "{{ zabbix_server_package_state }}", "disablerepo": "{{ '*' if (zabbix_repo_yum_enabled | length>0) else omit }}", "enablerepo": "{{ zabbix_repo_yum_enabled if zabbix_repo_yum_enabled is iterable and (zabbix_repo_yum_enabled | length>0) else omit }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Ansible module dependencies", "module": "yum", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation", "zabbix_server_database == 'pgsql'", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-server"]}, "module_options": {"name": "python-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Ansible module dependencies on RHEL8", "module": "yum", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Ansible module dependencies on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation", "zabbix_server_database == 'pgsql'", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": "python3-psycopg2", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client packages RHEL8", "module": "yum", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client packages RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["mysql", "python3-PyMySQL"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL7", "module": "yum", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL7", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_major_version == \"7\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["mariadb", "MySQL-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install Mysql Client package RHEL5 - 6", "module": "yum", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install Mysql Client package RHEL5 - 6", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_major_version == \"6\" or ansible_distribution_major_version == \"5\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["mysql", "MySQL-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install PostgreSQL client package", "module": "yum", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "RedHat | Install PostgreSQL client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'pgsql'", "zabbix_server_install_database_client"], "tags": ["zabbix-server"]}, "module_options": {"name": "postgresql", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure SELinux when enabled", "module": "include", "index": 22, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/RedHat.yml", "options": {"name": "Configure SELinux when enabled", "when": ["zabbix_selinux | bool"]}, "module_options": "selinux.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "postgresql.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_server_dbhost if (zabbix_server_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Set the correct delegated_dbhost (to support postgres db deployment on a remote dbhost)", "when": ["not zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database", "module": "community.postgresql.postgresql_db", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database"}, "module_options": {"name": "{{ zabbix_server_dbname }}", "port": "{{ zabbix_server_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create database user", "module": "community.postgresql.postgresql_user", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create database user"}, "module_options": {"db": "{{ zabbix_server_dbname }}", "name": "{{ zabbix_server_dbuser }}", "password": "md5{{ (zabbix_server_dbpassword + zabbix_server_dbuser)|hash('md5') }}", "port": "{{ zabbix_server_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "community.postgresql.postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Delegated | Create timescaledb extension", "module": "community.postgresql.postgresql_ext", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Delegated | Create timescaledb extension", "when": "zabbix_database_timescaledb"}, "module_options": {"db": "{{ zabbix_server_dbname }}", "name": "timescaledb"}, "executable": "community.postgresql.postgresql_ext", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_ext", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database", "module": "community.postgresql.postgresql_db", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database"}, "module_options": {"login_host": "{{ zabbix_server_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_pgsql_login_password | default(omit) }}", "login_unix_socket": "{{ zabbix_server_pgsql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_server_dbname }}", "port": "{{ zabbix_server_dbport }}", "state": "present"}, "executable": "community.postgresql.postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create database user", "module": "community.postgresql.postgresql_user", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create database user"}, "module_options": {"login_host": "{{ zabbix_server_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_pgsql_login_password | default(omit) }}", "db": "{{ zabbix_server_dbname }}", "name": "{{ zabbix_server_dbuser }}", "password": "md5{{ (zabbix_server_dbpassword + zabbix_server_dbuser)|hash('md5') }}", "port": "{{ zabbix_server_dbport }}", "priv": "ALL", "state": "present", "encrypted": true}, "executable": "community.postgresql.postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Remote | Create timescaledb extension", "module": "community.postgresql.postgresql_ext", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Remote | Create timescaledb extension", "when": "zabbix_database_timescaledb"}, "module_options": {"login_host": "{{ zabbix_server_pgsql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_pgsql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_pgsql_login_password | default(omit) }}", "login_unix_socket": "{{ zabbix_server_pgsql_login_unix_socket | default(omit) }}", "db": "{{ zabbix_server_dbname }}", "name": "timescaledb"}, "executable": "community.postgresql.postgresql_ext", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_ext", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Create schema", "module": "shell", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Create schema", "args": {"creates": "/etc/zabbix/schema.done", "executable": "/bin/bash", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload"], "tags": ["zabbix-server", "database"]}, "module_options": "set -euxo pipefail\nFILE={{ 'create.sql' if zabbix_version is version('6.0', '<') else 'server.sql' }}\ncd {{ datafiles_path }}\nif [ -f ${FILE}.gz ]\n  then zcat ${FILE}.gz > /tmp/create.sql\nelse\n  cp ${FILE} /tmp/create.sql\nfi\ncat /tmp/create.sql | psql -h '{{ zabbix_server_dbhost }}' \\\n-U '{{ zabbix_server_dbuser }}' \\\n-d '{{ zabbix_server_dbname }}' \\\n-p '{{ zabbix_server_dbport }}'\ntouch /etc/zabbix/schema.done\nrm -f /tmp/create.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Create TimescaleDB hypertables", "module": "shell", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Create TimescaleDB hypertables", "args": {"creates": "/etc/zabbix/timescaledb.done", "executable": "/bin/bash", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_timescaledb"], "tags": ["zabbix-server", "database"]}, "module_options": "set -euxo pipefail\ncd {{ datafiles_path }} &&\nif [ -f timescaledb.sql.gz ]; then zcat timescaledb.sql.gz > /etc/timescaledb.sql ; else cp -p timescaledb.sql /etc/timescaledb.sql ; fi\ncat /etc/timescaledb.sql | psql -h '{{ zabbix_server_dbhost }}' \\\n-U '{{ zabbix_server_dbuser }}' \\\n-d '{{ zabbix_server_dbname }}' \\\n-p '{{ zabbix_server_dbport }}'\ntouch /etc/zabbix/timescaledb.done\nrm -f /tmp/timescaledb.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get complete path", "module": "shell", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Get complete path", "register": "datafiles_path_full", "changed_when": false, "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)"], "tags": ["skip_ansible_lint"]}, "module_options": "ls -d {{ datafiles_path }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if we have a create dir", "module": "stat", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Check if we have a create dir", "register": "create_dir_or_not", "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)"]}, "module_options": {"path": "{{ datafiles_path_full.stdout }}/create"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact", "module": "set_fact", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "Set fact", "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)", "create_dir_or_not.stat.isdir is defined and create_dir_or_not.stat.isdir", "create_dir_or_not.stat.exists"]}, "module_options": {"datafiles_path": "{{ datafiles_path }}/create"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Importing schema file", "module": "shell", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing schema file", "args": {"creates": "/etc/zabbix/schema.done", "executable": "/bin/bash", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": ["(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)"], "tags": ["zabbix-server", "database"]}, "module_options": "set -euxo pipefail\ncd {{ datafiles_path }}\nif [ -f schema.sql.gz ]; then zcat schema.sql.gz > /tmp/schema.sql ; else cp -p schema.sql /tmp/schema.sql ;fi\ncat /tmp/schema.sql | psql -h '{{ zabbix_server_dbhost }}' \\\n-U '{{ zabbix_server_dbuser }}' \\\n-d '{{ zabbix_server_dbname }}' \\\n-p '{{ zabbix_server_dbport }}'\ntouch /etc/zabbix/schema.done\nrm -f /etc/schema.sql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Importing images file", "module": "shell", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing images file", "args": {"creates": "/etc/zabbix/images.done", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": "(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)", "tags": ["zabbix-server", "database"]}, "module_options": "cd {{ datafiles_path }} && psql -h '{{ zabbix_server_dbhost }}' -U '{{ zabbix_server_dbuser }}' -d '{{ zabbix_server_dbname }}' -p '{{ zabbix_server_dbport }}' -f images.sql && touch /etc/zabbix/images.done\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "PostgreSQL | Importing data file", "module": "shell", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/postgresql.yml", "options": {"name": "PostgreSQL | Importing data file", "args": {"creates": "/etc/zabbix/data.done", "warn": false}, "environment": {"PGPASSWORD": "{{ zabbix_server_dbpassword }}"}, "when": "(zabbix_version is version('3.0', '<') and zabbix_database_sqlload) or (zabbix_repo == \"epel\" and zabbix_database_sqlload)", "tags": ["zabbix-server", "database"]}, "module_options": "cd {{ datafiles_path }} && psql -h '{{ zabbix_server_dbhost }}' -U '{{ zabbix_server_dbuser }}' -d '{{ zabbix_server_dbname }}' -p '{{ zabbix_server_dbport }}' -f data.sql && touch /etc/zabbix/data.done\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "mysql.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ zabbix_server_dbhost if (zabbix_server_dbhost != 'localhost') else inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)", "when": ["not zabbix_server_dbhost_run_install"]}, "module_options": {"delegated_dbhost": "{{ inventory_hostname }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer", "when": "zabbix_server_real_dbhost | default(false)"}, "module_options": {"delegated_dbhost": "{{ zabbix_server_real_dbhost }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Create database", "module": "community.mysql.mysql_db", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database", "when": "zabbix_database_creation", "register": "zabbix_database_created", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database", "skip_ansible_lint"]}, "module_options": {"name": "{{ zabbix_server_dbname }}", "encoding": "{{ zabbix_server_dbencoding }}", "collation": "{{ zabbix_server_dbcollation }}", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}", "state": "present"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Create database user", "module": "community.mysql.mysql_user", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database user", "when": "zabbix_database_creation", "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_server_dbuser }}", "password": "{{ zabbix_server_dbpassword }}", "priv": "{{ zabbix_server_dbname }}.*:ALL", "host": "{{ zabbix_server_privileged_host }}", "state": "present"}, "executable": "community.mysql.mysql_user", "executable_type": "Module", "fqcn": "community.mysql.mysql_user", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get the file for create.sql >= 3.0", "module": "shell", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Get the file for create.sql >= 3.0", "changed_when": false, "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\""], "register": "ls_output_create", "tags": ["zabbix-server", "database"]}, "module_options": "ls -1 {{ datafiles_path }}/{{ 'create' if zabbix_version is version('6.0', '<') else 'server' }}.sq*", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Get current database version", "module": "shell", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Get current database version", "register": "mysql_db_version", "changed_when": false, "ignore_errors": true}, "module_options": "mysql -h {{ zabbix_server_dbhost }} -u{{ zabbix_server_dbuser }} \\\n-p'{{ zabbix_server_dbpassword }}' -D '{{ zabbix_server_dbname }}' \\\n-e 'SELECT mandatory FROM dbversion;'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Check if database needs to be populated", "module": "set_fact", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Check if database needs to be populated"}, "module_options": {"mysql_schema_empty": "{{ mysql_db_version is failed }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Get version_comment", "module": "community.mysql.mysql_variables", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Get version_comment", "delegate_to": "{{ delegated_dbhost }}", "register": "install_mysql_version", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "version", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Get current value for innodb_default_row_format", "module": "community.mysql.mysql_variables", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Get current value for innodb_default_row_format", "delegate_to": "{{ delegated_dbhost }}", "register": "mysql_innodb_default_row_format", "when": ["install_mysql_version.msg is version('5.6', '>=')"], "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_default_row_format", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Set innodb_default_row_format to dynamic", "module": "community.mysql.mysql_variables", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Set innodb_default_row_format to dynamic", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty", "install_mysql_version.msg is version('5.6', '>=')", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "dynamic", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Disable InnoDB Strict Mode", "module": "community.mysql.mysql_variables", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Disable InnoDB Strict Mode", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty", "install_mysql_version.msg is version('5.6', '>=')", "ansible_distribution_release == \"buster\""], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_strict_mode", "value": 0, "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Fetch sql create file", "module": "fetch", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Fetch sql create file", "when": ["delegated_dbhost != inventory_hostname", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"]}, "module_options": {"src": "{{ ls_output_create.stdout }}", "dest": "/tmp/{{ role_name }}/", "flat": true}, "executable": "fetch", "executable_type": "Module", "fqcn": "ansible.builtin.fetch", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy sql create file", "module": "copy", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Copy sql create file", "delegate_to": "{{ delegated_dbhost }}", "when": ["delegated_dbhost != inventory_hostname", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"]}, "module_options": {"src": "/tmp/{{ role_name }}/", "dest": "{{ ls_output_create.stdout | dirname }}", "mode": "0640"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Create database and import file >= 3.0", "module": "community.mysql.mysql_db", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database and import file >= 3.0", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}", "name": "{{ zabbix_server_dbname }}", "encoding": "{{ zabbix_server_dbencoding }}", "collation": "{{ zabbix_server_dbcollation }}", "state": "import", "target": "{{ ls_output_create.stdout }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "MySQL | Revert innodb_default_row_format to previous value", "module": "community.mysql.mysql_variables", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Revert innodb_default_row_format to previous value", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty", "mysql_innodb_default_row_format.msg != 'dynamic'"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"variable": "innodb_default_row_format", "value": "{{ mysql_innodb_default_row_format.msg }}", "login_host": "{{ zabbix_server_mysql_login_host | default(omit) }}", "login_user": "{{ zabbix_server_mysql_login_user | default(omit) }}", "login_password": "{{ zabbix_server_mysql_login_password | default(omit) }}", "login_port": "{{ zabbix_server_mysql_login_port | default(omit) }}", "login_unix_socket": "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"}, "executable": "community.mysql.mysql_variables", "executable_type": "Module", "fqcn": "community.mysql.mysql_variables", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check if we have sql_done files >= 3.0", "module": "file", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Check if we have sql_done files >= 3.0", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_database_sqlload | bool", "zabbix_repo != \"epel\"", "mysql_schema_empty"]}, "module_options": {"path": "/etc/zabbix/create.done", "state": "touch", "mode": "0644"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the correct path for the SQL files < 3.0", "module": "shell", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Get the correct path for the SQL files < 3.0", "changed_when": false, "register": "ls_output_schema", "with_items": ["schema", "images", "data"], "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool"], "tags": ["zabbix-server", "database"]}, "module_options": "ls -1 {{ datafiles_path }}/{{ mysql_create_dir }}{{ item }}.sql*", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if we have done files < 3.0", "module": "stat", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Check if we have done files < 3.0", "register": "done_files", "with_items": ["schema", "images", "data"], "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool"], "tags": ["zabbix-server", "database"]}, "module_options": {"path": "/etc/zabbix/{{ item }}.done"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create fact if sql_done files exists", "module": "set_fact", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Create fact if sql_done files exists", "with_items": "{{ done_files.results }}", "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool"], "tags": ["zabbix-server", "database"]}, "module_options": {"sql_files_executed": "{{ sql_files_executed | default({}) | combine({item.item: item.stat}) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "MySQL | Create database and import files < 3.0", "module": "community.mysql.mysql_db", "index": 20, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "MySQL | Create database and import files < 3.0", "with_items": "{{ ls_output_schema.results }}", "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool", "not sql_files_executed[item.item].exists"], "delegate_to": "{{ delegated_dbhost }}", "tags": ["zabbix-server", "database"]}, "module_options": {"name": "{{ zabbix_server_dbname }}", "encoding": "{{ zabbix_server_dbencoding }}", "collation": "{{ zabbix_server_dbcollation }}", "state": "import", "target": "{{ item.stdout }}"}, "executable": "community.mysql.mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check if we have sql_done files < 3.0", "module": "file", "index": 21, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/mysql.yml", "options": {"name": "Check if we have sql_done files < 3.0", "with_items": ["schema", "images", "data"], "when": ["zabbix_version is version('3.0', '<')", "zabbix_database_sqlload | bool", "not sql_files_executed[item].exists"], "tags": ["zabbix-server", "database"]}, "module_options": {"path": "/etc/zabbix/{{ item }}.done", "state": "touch", "mode": "0644"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some variables", "module": "set_fact", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Set some variables", "when": ["ansible_machine != \"aarch64\""]}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_server_apt_repository": ["http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}/", "{{ ansible_distribution_release }}", "main"], "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}", "zabbix_python_prefix": "python{% if ansible_python_version is version('3', '>=') %}3{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set some variables", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Set some variables", "when": ["ansible_machine == \"aarch64\""]}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_server_apt_repository": ["http://repo.zabbix.com/zabbix/{{ zabbix_version }}/{{ ansible_distribution.lower() }}-arm64/", "{{ ansible_distribution_release }}", "main"], "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}", "zabbix_python_prefix": "python{% if ansible_python_version is version('3', '>=') %}3{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts", "module": "set_fact", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Set some facts", "when": ["zabbix_version is version('3.0', '<')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "module": "set_fact", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 3.0 && < 5.4", "when": ["zabbix_version is version('3.0', '>=')", "zabbix_version is version('5.4', '<')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-server-{{ zabbix_server_database }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Set some facts for Zabbix >= 5.4", "module": "set_fact", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Set some facts for Zabbix >= 5.4", "when": ["zabbix_version is version('5.4', '>=')"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"datafiles_path": "/usr/share/doc/zabbix-sql-scripts/{{ zabbix_server_database_long }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing gnupg", "module": "apt", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing gnupg", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "gnupg_installed", "until": "gnupg_installed is succeeded", "become": true}, "module_options": {"pkg": "gnupg", "update_cache": true, "cache_valid_time": 3600, "force": true, "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "register": "zabbix_server_repo_files_installed", "until": "zabbix_server_repo_files_installed is succeeded", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][ansible_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing repository {{ ansible_distribution }}", "module": "apt_repository", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing repository {{ ansible_distribution }}", "when": "zabbix_repo == \"zabbix\"", "become": true, "with_items": ["deb-src", "deb"], "tags": ["zabbix-server", "init"]}, "module_options": {"repo": "{{ item }} {{ zabbix_server_apt_repository | join(' ') }}", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_server_apt_priority | int"], "become": true}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory", "mode": "0755"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 10, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_server_apt_priority | int"], "become": true}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix_server-{{ zabbix_proxy_database }}", "content": "Package: zabbix_server-{{ zabbix_proxy_database }}\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_server_apt_priority }}\n", "owner": "root", "mode": "0644"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "apt-get clean", "module": "shell", "index": 11, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "apt-get clean", "args": {"warn": false}, "changed_when": false, "become": true, "tags": ["skip_ansible_lint"]}, "module_options": "apt-get clean; apt-get update", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for the dpkg exclude line", "module": "command", "index": 12, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Check for the dpkg exclude line", "register": "dpkg_exclude_line", "failed_when": false, "changed_when": false, "check_mode": false}, "module_options": "grep -F 'path-exclude=/usr/share/doc/*' /etc/dpkg/dpkg.cfg.d/excludes", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow Zabbix dpkg installs to /usr/share/doc/zabbix*", "module": "lineinfile", "index": 13, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Allow Zabbix dpkg installs to /usr/share/doc/zabbix*", "become": true, "when": ["dpkg_exclude_line.rc == 0"]}, "module_options": {"path": "/etc/dpkg/dpkg.cfg.d/excludes", "line": "path-include=/usr/share/doc/zabbix*"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-server-{{ zabbix_server_database }}", "module": "apt", "index": 14, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-server-{{ zabbix_server_database }}", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_package_installed", "until": "zabbix_server_package_installed is succeeded", "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"pkg": "zabbix-server-{{ zabbix_server_database }}", "state": "{{ zabbix_server_package_state }}", "update_cache": true, "cache_valid_time": 0, "install_recommends": "{{ zabbix_server_install_recommends }}", "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-sql-scripts", "module": "apt", "index": 15, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-sql-scripts", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_package_sql_installed", "until": "zabbix_server_package_sql_installed is succeeded", "when": ["zabbix_version is version('5.4', '>=')"], "become": true, "tags": ["zabbix-server", "init"]}, "module_options": {"pkg": "zabbix-sql-scripts", "state": "{{ zabbix_server_package_state }}", "update_cache": true, "cache_valid_time": 0, "install_recommends": "{{ zabbix_server_install_recommends }}", "default_release": "{{ ansible_distribution_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Ansible module dependencies", "module": "apt", "index": 16, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install Ansible module dependencies", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_database_creation"], "tags": ["zabbix-server", "init"]}, "module_options": {"name": "{{ zabbix_python_prefix }}-psycopg2", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install Mysql Client package", "module": "apt", "index": 17, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_release != \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["default-mysql-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian 10 | Install Mysql Client package", "module": "apt", "index": 18, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian 10 | Install Mysql Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'mysql'", "zabbix_server_install_database_client", "ansible_distribution_release == \"buster\""], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": ["mariadb-client", "{{ zabbix_python_prefix }}-mysqldb"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install PostgreSQL Client package", "module": "apt", "index": 19, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/Debian.yml", "options": {"name": "Debian | Install PostgreSQL Client package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["zabbix_server_database == 'pgsql'", "zabbix_server_install_database_client"], "tags": ["zabbix-server", "init", "database"]}, "module_options": {"name": "postgresql-client", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get getenforce binary", "module": "stat", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "Get getenforce binary", "register": "getenforce_bin", "become": true}, "module_options": {"path": "/usr/sbin/getenforce"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Collect getenforce output", "module": "command", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "Collect getenforce output", "register": "sestatus", "when": "getenforce_bin.stat.exists", "changed_when": false, "become": true, "check_mode": false}, "module_options": "getenforce", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "module": "set_fact", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "when": "getenforce_bin.stat.exists and (\"Enforcing\" in sestatus.stdout or \"Permissive\" in sestatus.stdout)"}, "module_options": {"zabbix_selinux": "{{ true }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package", "module": "yum", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["libsemanage-python", "policycoreutils", "checkpolicy"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package on RHEL8", "module": "yum", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "selinux_allow_zabbix_can_network", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Enable httpd_can_connect_zabbix SELinux boolean", "module": "ansible.posix.seboolean", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Enable httpd_can_connect_zabbix SELinux boolean", "become": true, "when": ["selinux_allow_zabbix_can_http"], "tags": ["zabbix-server"]}, "module_options": {"name": "httpd_can_connect_zabbix", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "module": "ansible.posix.seboolean", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Enable zabbix_can_network SELinux boolean", "become": true, "when": ["selinux_allow_zabbix_can_network"], "tags": ["zabbix-server"]}, "module_options": {"name": "zabbix_can_network", "state": true, "persistent": true}, "executable": "ansible.posix.seboolean", "executable_type": "Module", "fqcn": "ansible.posix.seboolean", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues", "module": "yum", "index": 7, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"7\" or ansible_distribution_major_version == \"6\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["policycoreutils-python"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "module": "yum", "index": 8, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Install related SELinux package to fix issues on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_server_dependencies_installed", "until": "zabbix_server_dependencies_installed is succeeded", "become": true, "when": ["ansible_os_family == \"RedHat\"", "ansible_distribution_major_version == \"8\""], "tags": ["zabbix-server"]}, "module_options": {"name": ["policycoreutils", "checkpolicy", "python3-libsemanage"], "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_server_alerter.sock", "module": "script", "index": 9, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/selinux.yml", "options": {"name": "SELinux | RedHat | Add SEmodule to fix SELinux issue: zabbix_server_alerter.sock", "args": {"creates": "/etc/selinux/targeted/active/modules/400/zabbix_server_add/cil", "become": true}}, "module_options": {"cmd": "files/install_semodule.bsx"}, "executable": "script", "executable_type": "Module", "fqcn": "ansible.builtin.script", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Include OS-specific variables"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Install the correct repository"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "{{ ansible_os_family }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing the {{ zabbix_server_database_long }} database", "module": "include_tasks", "index": 2, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Installing the {{ zabbix_server_database_long }} database"}, "module_options": "{{ zabbix_server_database_long }}.yml", "executable": "{{ zabbix_server_database_long }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-server", "module": "template", "index": 3, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Configure zabbix-server", "notify": ["zabbix-server restarted"], "tags": ["zabbix-server", "init", "config"]}, "module_options": {"src": "zabbix_server.conf.j2", "dest": "/etc/zabbix/zabbix_server.conf", "owner": "zabbix", "group": "zabbix", "mode": "{{ zabbix_server_conf_mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-server", "module": "file", "index": 4, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Create include dir zabbix-server", "tags": ["zabbix-server", "init", "config"]}, "module_options": {"path": "{{ zabbix_server_include }}", "owner": "zabbix", "group": "zabbix", "state": "directory", "mode": "{{ zabbix_server_include_mode }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add zabbix-server scripts", "module": "include", "index": 5, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Add zabbix-server scripts", "when": "( zabbix_server_alertscripts is defined ) or ( zabbix_server_externalscripts is defined )"}, "module_options": "scripts.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Zabbix-server started", "module": "service", "index": 6, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/main.yml", "options": {"name": "Zabbix-server started", "tags": ["zabbix-server"], "when": "zabbix_server_manage_service | bool"}, "module_options": {"name": "zabbix-server", "state": "{{ zabbix_service_state }}", "enabled": "{{ zabbix_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "scripts.yml", "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/scripts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configure zabbix-server alertscripts", "module": "template", "index": 0, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/scripts.yml", "options": {"name": "Configure zabbix-server alertscripts", "with_items": "{{ zabbix_server_alertscripts }}", "when": "zabbix_server_alertscripts is defined"}, "module_options": {"src": "{{ item.path }}", "dest": "{{ zabbix_server_alertscriptspath }}/{{ item.name }}", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-server externalscripts", "module": "template", "index": 1, "defined_in": "testdata4/installed_collections_path/ansible_collections/community/zabbix/roles/zabbix_server/tasks/scripts.yml", "options": {"name": "Configure zabbix-server externalscripts", "with_items": "{{ zabbix_server_externalscripts }}", "when": "zabbix_server_externalscripts is defined"}, "module_options": {"src": "{{ item.path }}", "dest": "{{ zabbix_server_externalscriptspath }}/{{ item.name }}", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "zabbix_server", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}}, "annotations": {}}