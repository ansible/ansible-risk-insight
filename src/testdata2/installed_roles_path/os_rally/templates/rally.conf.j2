[DEFAULT]
# Disable stderr logging
use_stderr = False

#
# From oslo.log
#

# If set to true, the logging level will be set to DEBUG instead of
# the default INFO level. (boolean value)
#debug = false

# The name of a logging configuration file. This file is appended to
# any existing logging configuration files. For details about logging
# configuration files, see the Python logging module documentation.
# Note that when logging configuration files are used then all logging
# configuration is set in the configuration file and other logging
# configuration options are ignored (for example,
# logging_context_format_string). (string value)
# Deprecated group/name - [DEFAULT]/log_config
#log_config_append = <None>

# Defines the format string for %%(asctime)s in log records. Default:
# %(default)s . This option is ignored if log_config_append is set.
# (string value)
#log_date_format = %Y-%m-%d %H:%M:%S

# (Optional) Name of log file to send logging output to. If no default
# is set, logging will go to stderr as defined by use_stderr. This
# option is ignored if log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logfile
#log_file = <None>

# (Optional) The base directory used for relative log_file  paths.
# This option is ignored if log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logdir
#log_dir = <None>

# Uses logging handler designed to watch file system. When log file is
# moved or removed this handler will open a new log file with
# specified path instantaneously. It makes sense only if log_file
# option is specified and Linux platform is used. This option is
# ignored if log_config_append is set. (boolean value)
#watch_log_file = false

# Use syslog for logging. Existing syslog format is DEPRECATED and
# will be changed later to honor RFC5424. This option is ignored if
# log_config_append is set. (boolean value)
#use_syslog = false

# Syslog facility to receive log lines. This option is ignored if
# log_config_append is set. (string value)
#syslog_log_facility = LOG_USER

# Log output to standard error. This option is ignored if
# log_config_append is set. (boolean value)
#use_stderr = true

# Format string to use for log messages with context. (string value)
#logging_context_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user_identity)s] %(instance)s%(message)s

# Format string to use for log messages when context is undefined.
# (string value)
#logging_default_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [-] %(instance)s%(message)s

# Additional data to append to log message when logging level for the
# message is DEBUG. (string value)
#logging_debug_format_suffix = %(funcName)s %(pathname)s:%(lineno)d

# Prefix each line of exception output with this format. (string
# value)
#logging_exception_prefix = %(asctime)s.%(msecs)03d %(process)d ERROR %(name)s %(instance)s

# Defines the format string for %(user_identity)s that is used in
# logging_context_format_string. (string value)
#logging_user_identity_format = %(user)s %(tenant)s %(domain)s %(user_domain)s %(project_domain)s

# List of package logging levels in logger=LEVEL pairs. This option is
# ignored if log_config_append is set. (list value)
#default_log_levels = amqp=WARN,amqplib=WARN,boto=WARN,qpid=WARN,sqlalchemy=WARN,suds=INFO,oslo.messaging=INFO,iso8601=WARN,requests.packages.urllib3.connectionpool=WARN,urllib3.connectionpool=WARN,websocket=WARN,requests.packages.urllib3.util.retry=WARN,urllib3.util.retry=WARN,keystonemiddleware=WARN,routes.middleware=WARN,stevedore=WARN,taskflow=WARN,keystoneauth=WARN,oslo.cache=INFO,dogpile.core.dogpile=INFO

# Enables or disables publication of error events. (boolean value)
#publish_errors = false

# The format for an instance that is passed with the log message.
# (string value)
#instance_format = "[instance: %(uuid)s] "

# The format for an instance UUID that is passed with the log message.
# (string value)
#instance_uuid_format = "[instance: %(uuid)s] "

# Enables or disables fatal status of deprecations. (boolean value)
#fatal_deprecations = false

#
# From rally
#

# Print debugging output only for Rally. Off-site components stay
# quiet. (boolean value)
#rally_debug = false

# HTTP timeout for any of OpenStack service in seconds (floating point
# value)
#openstack_client_http_timeout = 180.0


[benchmark]

#
# From rally
#

# Time to sleep after creating a resource before polling for it status
# (floating point value)
#cinder_volume_create_prepoll_delay = 2.0

# Time to wait for cinder volume to be created. (floating point value)
#cinder_volume_create_timeout = 600.0

# Interval between checks when waiting for volume creation. (floating
# point value)
#cinder_volume_create_poll_interval = 2.0

# Time to wait for cinder volume to be deleted. (floating point value)
#cinder_volume_delete_timeout = 600.0

# Interval between checks when waiting for volume deletion. (floating
# point value)
#cinder_volume_delete_poll_interval = 2.0

# Time to sleep after boot before polling for status (floating point
# value)
#ec2_server_boot_prepoll_delay = 1.0

# Server boot timeout (floating point value)
#ec2_server_boot_timeout = 300.0

# Server boot poll interval (floating point value)
#ec2_server_boot_poll_interval = 1.0

# Time to sleep after creating a resource before polling for it status
# (floating point value)
#glance_image_create_prepoll_delay = 2.0

# Time to wait for glance image to be created. (floating point value)
#glance_image_create_timeout = 120.0

# Interval between checks when waiting for image creation. (floating
# point value)
#glance_image_create_poll_interval = 1.0

# Time to wait for glance image to be deleted. (floating point value)
#glance_image_delete_timeout = 120.0

# Interval between checks when waiting for image deletion. (floating
# point value)
#glance_image_delete_poll_interval = 1.0

# Time(in sec) to sleep after creating a resource before polling for
# it status. (floating point value)
#heat_stack_create_prepoll_delay = 2.0

# Time(in sec) to wait for heat stack to be created. (floating point
# value)
#heat_stack_create_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack
# creation. (floating point value)
#heat_stack_create_poll_interval = 1.0

# Time(in sec) to wait for heat stack to be deleted. (floating point
# value)
#heat_stack_delete_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack
# deletion. (floating point value)
#heat_stack_delete_poll_interval = 1.0

# Time(in sec) to wait for stack to be checked. (floating point value)
#heat_stack_check_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack
# checking. (floating point value)
#heat_stack_check_poll_interval = 1.0

# Time(in sec) to sleep after updating a resource before polling for
# it status. (floating point value)
#heat_stack_update_prepoll_delay = 2.0

# Time(in sec) to wait for stack to be updated. (floating point value)
#heat_stack_update_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack update.
# (floating point value)
#heat_stack_update_poll_interval = 1.0

# Time(in sec) to wait for stack to be suspended. (floating point
# value)
#heat_stack_suspend_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack suspend.
# (floating point value)
#heat_stack_suspend_poll_interval = 1.0

# Time(in sec) to wait for stack to be resumed. (floating point value)
#heat_stack_resume_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack resume.
# (floating point value)
#heat_stack_resume_poll_interval = 1.0

# Time(in sec) to wait for stack snapshot to be created. (floating
# point value)
#heat_stack_snapshot_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack snapshot
# to be created. (floating point value)
#heat_stack_snapshot_poll_interval = 1.0

# Time(in sec) to wait for stack to be restored from snapshot.
# (floating point value)
#heat_stack_restore_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack to be
# restored. (floating point value)
#heat_stack_restore_poll_interval = 1.0

# Time (in sec) to wait for stack to scale up or down. (floating point
# value)
#heat_stack_scale_timeout = 3600.0

# Time interval (in sec) between checks when waiting for a stack to
# scale up or down. (floating point value)
#heat_stack_scale_poll_interval = 1.0

# Interval(in sec) between checks when waiting for node creation.
# (floating point value)
#ironic_node_create_poll_interval = 1.0

# Delay between creating Manila share and polling for its status.
# (floating point value)
#manila_share_create_prepoll_delay = 2.0

# Timeout for Manila share creation. (floating point value)
#manila_share_create_timeout = 300.0

# Interval between checks when waiting for Manila share creation.
# (floating point value)
#manila_share_create_poll_interval = 3.0

# Timeout for Manila share deletion. (floating point value)
#manila_share_delete_timeout = 180.0

# Interval between checks when waiting for Manila share deletion.
# (floating point value)
#manila_share_delete_poll_interval = 2.0

# A timeout in seconds for an environment deploy (integer value)
# Deprecated group/name - [DEFAULT]/deploy_environment_timeout
#murano_deploy_environment_timeout = 1200

# Deploy environment check interval in seconds (integer value)
# Deprecated group/name - [DEFAULT]/deploy_environment_check_interval
#murano_deploy_environment_check_interval = 5

# Time to sleep after start before polling for status (floating point
# value)
#nova_server_start_prepoll_delay = 0.0

# Server start timeout (floating point value)
#nova_server_start_timeout = 300.0

# Server start poll interval (floating point value)
#nova_server_start_poll_interval = 1.0

# Time to sleep after stop before polling for status (floating point
# value)
#nova_server_stop_prepoll_delay = 0.0

# Server stop timeout (floating point value)
#nova_server_stop_timeout = 300.0

# Server stop poll interval (floating point value)
#nova_server_stop_poll_interval = 2.0

# Time to sleep after boot before polling for status (floating point
# value)
#nova_server_boot_prepoll_delay = 1.0

# Server boot timeout (floating point value)
#nova_server_boot_timeout = 300.0

# Server boot poll interval (floating point value)
#nova_server_boot_poll_interval = 1.0

# Time to sleep after delete before polling for status (floating point
# value)
#nova_server_delete_prepoll_delay = 2.0

# Server delete timeout (floating point value)
#nova_server_delete_timeout = 300.0

# Server delete poll interval (floating point value)
#nova_server_delete_poll_interval = 2.0

# Time to sleep after reboot before polling for status (floating point
# value)
#nova_server_reboot_prepoll_delay = 2.0

# Server reboot timeout (floating point value)
#nova_server_reboot_timeout = 300.0

# Server reboot poll interval (floating point value)
#nova_server_reboot_poll_interval = 2.0

# Time to sleep after rebuild before polling for status (floating
# point value)
#nova_server_rebuild_prepoll_delay = 1.0

# Server rebuild timeout (floating point value)
#nova_server_rebuild_timeout = 300.0

# Server rebuild poll interval (floating point value)
#nova_server_rebuild_poll_interval = 1.0

# Time to sleep after rescue before polling for status (floating point
# value)
#nova_server_rescue_prepoll_delay = 2.0

# Server rescue timeout (floating point value)
#nova_server_rescue_timeout = 300.0

# Server rescue poll interval (floating point value)
#nova_server_rescue_poll_interval = 2.0

# Time to sleep after unrescue before polling for status (floating
# point value)
#nova_server_unrescue_prepoll_delay = 2.0

# Server unrescue timeout (floating point value)
#nova_server_unrescue_timeout = 300.0

# Server unrescue poll interval (floating point value)
#nova_server_unrescue_poll_interval = 2.0

# Time to sleep after suspend before polling for status (floating
# point value)
#nova_server_suspend_prepoll_delay = 2.0

# Server suspend timeout (floating point value)
#nova_server_suspend_timeout = 300.0

# Server suspend poll interval (floating point value)
#nova_server_suspend_poll_interval = 2.0

# Time to sleep after resume before polling for status (floating point
# value)
#nova_server_resume_prepoll_delay = 2.0

# Server resume timeout (floating point value)
#nova_server_resume_timeout = 300.0

# Server resume poll interval (floating point value)
#nova_server_resume_poll_interval = 2.0

# Time to sleep after pause before polling for status (floating point
# value)
#nova_server_pause_prepoll_delay = 2.0

# Server pause timeout (floating point value)
#nova_server_pause_timeout = 300.0

# Server pause poll interval (floating point value)
#nova_server_pause_poll_interval = 2.0

# Time to sleep after unpause before polling for status (floating
# point value)
#nova_server_unpause_prepoll_delay = 2.0

# Server unpause timeout (floating point value)
#nova_server_unpause_timeout = 300.0

# Server unpause poll interval (floating point value)
#nova_server_unpause_poll_interval = 2.0

# Time to sleep after shelve before polling for status (floating point
# value)
#nova_server_shelve_prepoll_delay = 2.0

# Server shelve timeout (floating point value)
#nova_server_shelve_timeout = 300.0

# Server shelve poll interval (floating point value)
#nova_server_shelve_poll_interval = 2.0

# Time to sleep after unshelve before polling for status (floating
# point value)
#nova_server_unshelve_prepoll_delay = 2.0

# Server unshelve timeout (floating point value)
#nova_server_unshelve_timeout = 300.0

# Server unshelve poll interval (floating point value)
#nova_server_unshelve_poll_interval = 2.0

# Time to sleep after image_create before polling for status (floating
# point value)
#nova_server_image_create_prepoll_delay = 0.0

# Server image_create timeout (floating point value)
#nova_server_image_create_timeout = 300.0

# Server image_create poll interval (floating point value)
#nova_server_image_create_poll_interval = 2.0

# Time to sleep after image_delete before polling for status (floating
# point value)
#nova_server_image_delete_prepoll_delay = 0.0

# Server image_delete timeout (floating point value)
#nova_server_image_delete_timeout = 300.0

# Server image_delete poll interval (floating point value)
#nova_server_image_delete_poll_interval = 2.0

# Time to sleep after resize before polling for status (floating point
# value)
#nova_server_resize_prepoll_delay = 2.0

# Server resize timeout (floating point value)
#nova_server_resize_timeout = 400.0

# Server resize poll interval (floating point value)
#nova_server_resize_poll_interval = 5.0

# Time to sleep after resize_confirm before polling for status
# (floating point value)
#nova_server_resize_confirm_prepoll_delay = 0.0

# Server resize_confirm timeout (floating point value)
#nova_server_resize_confirm_timeout = 200.0

# Server resize_confirm poll interval (floating point value)
#nova_server_resize_confirm_poll_interval = 2.0

# Time to sleep after resize_revert before polling for status
# (floating point value)
#nova_server_resize_revert_prepoll_delay = 0.0

# Server resize_revert timeout (floating point value)
#nova_server_resize_revert_timeout = 200.0

# Server resize_revert poll interval (floating point value)
#nova_server_resize_revert_poll_interval = 2.0

# Time to sleep after live_migrate before polling for status (floating
# point value)
#nova_server_live_migrate_prepoll_delay = 1.0

# Server live_migrate timeout (floating point value)
#nova_server_live_migrate_timeout = 400.0

# Server live_migrate poll interval (floating point value)
#nova_server_live_migrate_poll_interval = 2.0

# Time to sleep after migrate before polling for status (floating
# point value)
#nova_server_migrate_prepoll_delay = 1.0

# Server migrate timeout (floating point value)
#nova_server_migrate_timeout = 400.0

# Server migrate poll interval (floating point value)
#nova_server_migrate_poll_interval = 2.0

# Nova volume detach timeout (floating point value)
#nova_detach_volume_timeout = 200.0

# Nova volume detach poll interval (floating point value)
#nova_detach_volume_poll_interval = 2.0

# A timeout in seconds for a cluster create operation (integer value)
# Deprecated group/name - [DEFAULT]/cluster_create_timeout
#sahara_cluster_create_timeout = 1800

# A timeout in seconds for a cluster delete operation (integer value)
# Deprecated group/name - [DEFAULT]/cluster_delete_timeout
#sahara_cluster_delete_timeout = 900

# Cluster status polling interval in seconds (integer value)
# Deprecated group/name - [DEFAULT]/cluster_check_interval
#sahara_cluster_check_interval = 5

# A timeout in seconds for a Job Execution to complete (integer value)
# Deprecated group/name - [DEFAULT]/job_execution_timeout
#sahara_job_execution_timeout = 600

# Job Execution status polling interval in seconds (integer value)
# Deprecated group/name - [DEFAULT]/job_check_interval
#sahara_job_check_interval = 5

# Amount of workers one proxy should serve to. (integer value)
#sahara_workers_per_proxy = 20

# Interval between checks when waiting for a VM to become pingable
# (floating point value)
#vm_ping_poll_interval = 1.0

# Time to wait for a VM to become pingable (floating point value)
#vm_ping_timeout = 120.0


[cleanup]

#
# From rally
#

# A timeout in seconds for deleting resources (integer value)
#resource_deletion_timeout = 600

# Number of cleanup threads to run (integer value)
#cleanup_threads = 20


[database]

#
# From oslo.db
#

# The file name to use with SQLite. (string value)
# Deprecated group/name - [DEFAULT]/sqlite_db
#sqlite_db = oslo.sqlite

# If True, SQLite uses synchronous mode. (boolean value)
# Deprecated group/name - [DEFAULT]/sqlite_synchronous
#sqlite_synchronous = true

# The back end to use for the database. (string value)
# Deprecated group/name - [DEFAULT]/db_backend
#backend = sqlalchemy

# The SQLAlchemy connection string to use to connect to the database.
# (string value)
# Deprecated group/name - [DEFAULT]/sql_connection
# Deprecated group/name - [DATABASE]/sql_connection
# Deprecated group/name - [sql]/connection
connection = {{ rally_database_connection_string }}

# The SQLAlchemy connection string to use to connect to the slave
# database. (string value)
#slave_connection = <None>

# The SQL mode to be used for MySQL sessions. This option, including
# the default, overrides any server-set SQL mode. To use whatever SQL
# mode is set by the server configuration, set this to no value.
# Example: mysql_sql_mode= (string value)
#mysql_sql_mode = TRADITIONAL

# Timeout before idle SQL connections are reaped. (integer value)
# Deprecated group/name - [DEFAULT]/sql_idle_timeout
# Deprecated group/name - [DATABASE]/sql_idle_timeout
# Deprecated group/name - [sql]/idle_timeout
#idle_timeout = 3600

# Minimum number of SQL connections to keep open in a pool. (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_min_pool_size
# Deprecated group/name - [DATABASE]/sql_min_pool_size
#min_pool_size = 1

# Maximum number of SQL connections to keep open in a pool. (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_max_pool_size
# Deprecated group/name - [DATABASE]/sql_max_pool_size
#max_pool_size = <None>

# Maximum number of database connection retries during startup. Set to
# -1 to specify an infinite retry count. (integer value)
# Deprecated group/name - [DEFAULT]/sql_max_retries
# Deprecated group/name - [DATABASE]/sql_max_retries
#max_retries = 10

# Interval between retries of opening a SQL connection. (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_retry_interval
# Deprecated group/name - [DATABASE]/reconnect_interval
#retry_interval = 10

# If set, use this value for max_overflow with SQLAlchemy. (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_max_overflow
# Deprecated group/name - [DATABASE]/sqlalchemy_max_overflow
#max_overflow = 50

# Verbosity of SQL debugging information: 0=None, 100=Everything.
# (integer value)
# Deprecated group/name - [DEFAULT]/sql_connection_debug
#connection_debug = 0

# Add Python stack traces to SQL as comment strings. (boolean value)
# Deprecated group/name - [DEFAULT]/sql_connection_trace
#connection_trace = false

# If set, use this value for pool_timeout with SQLAlchemy. (integer
# value)
# Deprecated group/name - [DATABASE]/sqlalchemy_pool_timeout
#pool_timeout = <None>

# Enable the experimental use of database reconnect on connection
# lost. (boolean value)
#use_db_reconnect = false

# Seconds between retries of a database transaction. (integer value)
#db_retry_interval = 1

# If True, increases the interval between retries of a database
# operation up to db_max_retry_interval. (boolean value)
#db_inc_retry_interval = true

# If db_inc_retry_interval is set, the maximum seconds between retries
# of a database operation. (integer value)
#db_max_retry_interval = 10

# Maximum retries in case of connection error or deadlock error before
# error is raised. Set to -1 to specify an infinite retry count.
# (integer value)
#db_max_retries = 20


[image]

#
# From rally
#

# CirrOS image URL (string value)
#cirros_img_url = http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img

# Image disk format to use when creating the image (string value)
#disk_format = qcow2

# Image container format to use when creating the image (string value)
#container_format = bare

# Regular expression for name of an image to discover it in the cloud
# and use it for the tests. Note that when Rally is searching for the
# image, case insensitive matching is performed. Specify nothing
# ('name_regex =') if you want to disable discovering. In this case
# Rally will create needed resources by itself if the values for the
# corresponding config options are not specified in the Tempest config
# file (string value)
#name_regex = ^.*(cirros|testvm).*$


[role]

#
# From rally
#

# Role required for users to be able to create Swift containers
# (string value)
#swift_operator_role = Member

# User role that has reseller admin (string value)
#swift_reseller_admin_role = ResellerAdmin

# Role required for users to be able to manage Heat stacks (string
# value)
#heat_stack_owner_role = heat_stack_owner

# Role for Heat template-defined users (string value)
#heat_stack_user_role = heat_stack_user


[users_context]

#
# From rally
#

# How many concurrent threads use for serving users context (integer
# value)
#resource_management_workers = 30

# ID of domain in which projects will be created. (string value)
#project_domain = default

# ID of domain in which users will be created. (string value)
#user_domain = default