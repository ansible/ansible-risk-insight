# {{ ansible_managed }}

[DEFAULT]
# Disable stderr logging
use_stderr = False
debug = {{ debug }}
fatal_deprecations = {{ senlin_fatal_deprecations }}

use_journal = True

server_keystone_endpoint_type = public

## RPC Backend
transport_url = {{ senlin_oslomsg_rpc_transport }}://{% for host in senlin_oslomsg_rpc_servers.split(',') %}{{ senlin_oslomsg_rpc_userid }}:{{ senlin_oslomsg_rpc_password }}@{{ host }}:{{ senlin_oslomsg_rpc_port }}{% if not loop.last %},{% else %}/{{ senlin_oslomsg_rpc_vhost }}{% if senlin_oslomsg_rpc_use_ssl | bool %}?ssl=1&ssl_version={{ senlin_oslomsg_rpc_ssl_version }}&ssl_ca_file={{ senlin_oslomsg_rpc_ssl_ca_file }}{% else %}?ssl=0{% endif %}{% endif %}{% endfor %}

# Default region name used to get services endpoints.
region_name_for_services = {{ senlin_service_region }}

## Tunable option
max_clusters_per_project = {{ senlin_max_clusters_per_project }}
max_nodes_per_cluster = {{ senlin_max_nodes_per_cluster }}
periodic_interval = {{ senlin_periodic_interval }}
periodic_interval_max = {{ senlin_periodic_interval_max }}
periodic_fuzzy_delay = {{ senlin_periodic_fuzzy_delay }}
health_check_interval_min = {{ senlin_health_check_interval_min }}
check_interval_max = {{ senlin_check_interval_max }}
max_response_size = {{ senlin_max_response_size }}
default_action_timeout = {{ senlin_default_action_timeout }}
default_nova_timeout = {{ senlin_default_nova_timeout }}
max_actions_per_batch = {{ senlin_max_actions_per_batch }}
batch_interval = {{ senlin_batch_interval }}
lock_retry_times = {{ senlin_lock_retry_times }}
lock_retry_interval = {{ senlin_lock_retry_interval }}
database_retry_limit = {{ senlin_database_retry_limit }}
database_max_retry_interval = {{ senlin_database_max_retry_interval }}
engine_life_check_timeout = {{ senlin_engine_life_check_timeout }}
service_down_time = {{ senlin_service_down_time }}

[database]
connection = mysql+pymysql://{{ senlin_galera_user }}:{{ senlin_galera_password }}@{{ senlin_galera_address }}/{{ senlin_galera_database }}?charset=utf8{% if senlin_galera_use_ssl | bool %}&ssl_verify_cert=true{% if senlin_galera_ssl_ca_cert | length > 0 %}&ssl_ca={{ senlin_galera_ssl_ca_cert }}{% endif %}{% endif +%}
max_overflow = {{ senlin_db_max_overflow }}
max_pool_size = {{ senlin_db_max_pool_size }}
pool_timeout = {{ senlin_db_pool_timeout }}
connection_recycle_time = {{ senlin_db_connection_recycle_time }}

[senlin_api]
bind_port = {{ senlin_service_port }}
workers = {{ senlin_api_workers | default(senlin_api_threads) }}

[oslo_messaging_rabbit]
ssl = {{ senlin_oslomsg_rpc_use_ssl }}

{% if senlin_service_publicuri_proto != senlin_service_internaluri_proto %}
[oslo_middleware]
enable_proxy_headers_parsing = True
{% endif %}

# Ceilometer options
[oslo_messaging_notifications]
driver = {{ (senlin_ceilometer_enabled | bool) | ternary('messagingv2', 'noop') }}
transport_url = {{ senlin_oslomsg_notify_transport }}://{% for host in senlin_oslomsg_notify_servers.split(',') %}{{ senlin_oslomsg_notify_userid }}:{{ senlin_oslomsg_notify_password }}@{{ host }}:{{ senlin_oslomsg_notify_port }}{% if not loop.last %},{% else %}/{{ senlin_oslomsg_notify_vhost }}{% if senlin_oslomsg_notify_use_ssl | bool %}?ssl=1&ssl_version={{ senlin_oslomsg_notify_ssl_version }}&ssl_ca_file={{ senlin_oslomsg_notify_ssl_ca_file }}{% else %}?ssl=0{% endif %}{% endif %}{% endfor %}


[profiler]
enabled = {{ senlin_profiler_enabled }}
trace_sqlalchemy = {{ senlin_profiler_trace_sqlalchemy }}


[keystone_authtoken]
insecure = {{ keystone_service_internaluri_insecure | bool }}
auth_type = {{ senlin_keystone_auth_plugin }}
auth_url = {{ keystone_service_adminurl }}
www_authenticate_uri = {{ keystone_service_internaluri }}
project_domain_id = {{ senlin_service_project_domain_id }}
user_domain_id = {{ senlin_service_user_domain_id }}
project_name = {{ senlin_service_project_name }}
username = {{ senlin_service_user_name }}
password = {{ senlin_service_password }}
region_name = {{ keystone_service_region }}

service_token_roles_required = {{ senlin_service_token_roles_required | bool }}
service_token_roles = {{ senlin_service_token_roles | join(',') }}
service_type = {{ senlin_service_type }}

memcached_servers = {{ senlin_memcached_servers }}

token_cache_time = 300

# if your memcached server is shared, use these settings to avoid cache poisoning
memcache_security_strategy = ENCRYPT
memcache_secret_key = {{ memcached_encryption_key }}

[authentication]
auth_url = {{ keystone_service_adminurl }}
service_username = {{ senlin_service_user_name }}
service_password = {{ senlin_service_password }}
service_project_name = {{ senlin_service_project_name }}

[engine]
workers = {{ senlin_engine_workers | default(senlin_api_threads) }}

[conductor]
workers = {{ senlin_conductor_workers | default(senlin_api_threads) }}

[health_manager]
workers = {{ senlin_health_manager_workers | default(senlin_api_threads) }}

[trustee]
insecure = {{ keystone_service_internaluri_insecure | bool }}
auth_type = {{ senlin_keystone_trustee_auth_plugin }}
auth_url = {{ keystone_service_adminurl }}
user_domain_id = {{ senlin_service_trustee_user_domain_id }}
username = {{ senlin_service_trustee_user_name }}
password = {{ senlin_service_trustee_password }}
