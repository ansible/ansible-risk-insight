---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Fail if service was deployed using a different installation method
  fail:
    msg: "Switching installation methods for OpenStack services is not supported"
  when:
    - ansible_local is defined
    - ansible_local.openstack_ansible is defined
    - ansible_local.openstack_ansible.heat is defined
    - ansible_local.openstack_ansible.heat.install_method is defined
    - ansible_local.openstack_ansible.heat.install_method != heat_install_method

- name: Gather variables for each operating system
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_version'] | lower }}.yml"
        - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
        - "{{ ansible_facts['distribution'] | lower }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}-{{ ansible_facts['distribution_version'].split('.')[0] }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}.yml"
      paths:
        - "{{ role_path }}/vars"
  tags:
    - always

- name: Fail if our required secrets are not present
  fail:
    msg: "Please set the {{ item }} variable prior to applying this role."
  when: (item is undefined) or (item is none)
  with_items: "{{ heat_required_secrets }}"
  tags:
    - always

- name: Gather variables for installation method
  include_vars: "{{ heat_install_method }}_install.yml"
  tags:
    - always

- include_role:
    name: openstack.osa.db_setup
    apply:
      tags:
        - common-db
        - heat-config
  when:
    - "_heat_is_first_play_host"
  vars:
    _oslodb_setup_host: "{{ heat_db_setup_host }}"
    _oslodb_ansible_python_interpreter: "{{ heat_db_setup_python_interpreter }}"
    _oslodb_setup_endpoint: "{{ heat_galera_address }}"
    _oslodb_setup_port: "{{ heat_galera_port }}"
    _oslodb_databases:
      - name: "{{ heat_galera_database }}"
        users:
          - username: "{{ heat_galera_user }}"
            password: "{{ heat_container_mysql_password }}"
  tags:
    - always

- include_role:
    name: openstack.osa.mq_setup
    apply:
      tags:
        - common-mq
        - heat-config
  when:
    - "_heat_is_first_play_host"
  vars:
    _oslomsg_rpc_setup_host: "{{ heat_oslomsg_rpc_setup_host }}"
    _oslomsg_rpc_userid: "{{ heat_oslomsg_rpc_userid }}"
    _oslomsg_rpc_password: "{{ heat_oslomsg_rpc_password }}"
    _oslomsg_rpc_vhost: "{{ heat_oslomsg_rpc_vhost }}"
    _oslomsg_rpc_transport: "{{ heat_oslomsg_rpc_transport }}"
    _oslomsg_notify_setup_host: "{{ heat_oslomsg_notify_setup_host }}"
    _oslomsg_notify_userid: "{{ heat_oslomsg_notify_userid }}"
    _oslomsg_notify_password: "{{ heat_oslomsg_notify_password }}"
    _oslomsg_notify_vhost: "{{ heat_oslomsg_notify_vhost }}"
    _oslomsg_notify_transport: "{{ heat_oslomsg_notify_transport }}"
  tags:
    - always

- import_tasks: heat_pre_install.yml
  tags:
    - heat-install

- import_tasks: heat_install.yml
  tags:
    - heat-install

- import_tasks: heat_post_install.yml
  tags:
    - heat-config

- name: Run the systemd service role
  import_role:
    name: systemd_service
  vars:
    systemd_user_name: "{{ heat_system_user_name }}"
    systemd_group_name: "{{ heat_system_group_name }}"
    systemd_tempd_prefix: openstack
    systemd_slice_name: heat
    systemd_lock_path: /var/lock/heat
    systemd_CPUAccounting: true
    systemd_BlockIOAccounting: true
    systemd_MemoryAccounting: true
    systemd_TasksAccounting: true
    systemd_services: "{{ filtered_heat_services }}"
  tags:
    - heat-config
    - systemd-service

- import_tasks: heat_db_sync.yml
  when:
    - "_heat_is_first_play_host"
  tags:
    - heat-config

- name: Import uwsgi role
  import_role:
    name: uwsgi
  vars:
    uwsgi_services: "{{ heat_uwsgi_services }}"
    uwsgi_install_method: "{{ heat_install_method }}"
  tags:
    - heat-config
    - uwsgi

- import_tasks: heat_service_setup.yml
  when:
    - "_heat_is_first_play_host"
  tags:
    - heat-config

- name: Flush handlers
  meta: flush_handlers
