# {{ ansible_managed }}

[DEFAULT]
debug = {{ murano_debug }}
use_journal = true
transport_url = {{ murano_oslomsg_rpc_transport }}://{% for host in murano_oslomsg_rpc_servers.split(',') %}{{ murano_oslomsg_rpc_userid }}:{{ murano_oslomsg_rpc_password }}@{{ host }}:{{ murano_oslomsg_rpc_port }}{% if not loop.last %},{% else %}/{{ murano_oslomsg_rpc_vhost }}{% if murano_oslomsg_rpc_use_ssl | bool %}?ssl=1&ssl_version={{ murano_oslomsg_rpc_ssl_version }}&ssl_ca_file={{ murano_oslomsg_rpc_ssl_ca_file }}{% else %}?ssl=0{% endif %}{% endif %}{% endfor %}

home_region = {{ murano_service_region }}

[database]
connection = mysql+pymysql://{{ murano_galera_user }}:{{ murano_galera_password }}@{{ murano_galera_address }}/{{ murano_galera_database }}?charset=utf8{% if murano_galera_use_ssl | bool %}&ssl_verify_cert=true{% if murano_galera_ssl_ca_cert | length > 0 %}&ssl_ca={{ murano_galera_ssl_ca_cert }}{% endif %}{% endif +%}
max_overflow = {{ murano_db_max_overflow }}
max_pool_size = {{ murano_db_max_pool_size }}
pool_timeout = {{ murano_db_pool_timeout }}
connection_recycle_time = {{ murano_db_connection_recycle_time }}

[keystone_authtoken]
admin_password = {{ murano_service_password }}
admin_tenant_name = {{ murano_service_project_name }}
admin_user = {{ murano_service_user_name }}
auth_type = password
auth_url = {{ keystone_service_adminurl }}
identity_uri = {{ keystone_service_adminuri }}
insecure = {{ keystone_service_publicuri_insecure | bool }}
interface = internal

service_token_roles_required = {{ murano_service_token_roles_required | bool }}
service_token_roles = {{ murano_service_token_roles | join(',') }}
service_type = {{ murano_service_type }}

memcached_servers = {{ murano_memcached_servers }}
# if your memcached server is shared, use these settings to avoid cache poisoning
memcache_security_strategy = ENCRYPT
memcache_secret_key = {{ memcached_encryption_key }}

password = {{ murano_service_password }}
project_domain_id = {{ murano_service_project_domain_id }}
project_name = {{ murano_service_project_name }}
region_name = {{ murano_service_region }}
service_token_roles_required = True
token_cache_time = 300
user_domain_id = {{ murano_service_user_domain_id }}
username = {{ murano_service_user_name }}
www_authenticate_uri = {{ keystone_service_publicuri }}

[murano]
endpoint_type = internal

[murano_auth]
www_authenticate_uri = {{ keystone_service_adminuri }}
auth_section = keystone_authtoken

[rabbitmq]
host = {{ murano_oslomsg_notify_servers }}
login = {{ murano_oslomsg_notify_userid }}
password = {{ murano_oslomsg_notify_password }}
virtual_host = {{ murano_oslomsg_notify_vhost }}

[oslo_messaging_notifications]
driver = {{ (murano_ceilometer_enabled | bool) | ternary('messagingv2', 'noop') }}
transport_url = {{ murano_oslomsg_notify_transport }}://{% for host in murano_oslomsg_notify_servers.split(',') %}{{ murano_oslomsg_notify_userid }}:{{ murano_oslomsg_notify_password }}@{{ host }}:{{ murano_oslomsg_notify_port }}{% if not loop.last %},{% else %}/{{ murano_oslomsg_notify_vhost }}{% if murano_oslomsg_notify_use_ssl | bool %}?ssl=1&ssl_version={{ murano_oslomsg_notify_ssl_version }}&ssl_ca_file={{ murano_oslomsg_notify_ssl_ca_file }}{% else %}?ssl=0{% endif %}{% endif %}{% endfor %}

[networking]
# In case openstack neutron has no default DNS configured
default_dns = 8.8.8.8
driver = neutron
external_network = {{ murano_public_net_name }}

[neutron]
endpoint_type = internalURL

[heat]
endpoint_type = internalURL

[keystone]
auth_url = {{ keystone_service_internalurl }}
