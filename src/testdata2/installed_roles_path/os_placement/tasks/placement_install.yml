---
# Copyright 2019, VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Record the installation method
  ini_file:
    dest: "/etc/ansible/facts.d/openstack_ansible.fact"
    section: "placement"
    option: "install_method"
    value: "{{ placement_install_method }}"

- name: Refresh local facts to ensure the placement section is present
  setup:
    filter: ansible_local
    gather_subset: "!all"

- name: Install distro packages
  package:
    name: "{{ placement_package_list }}"
    state: "{{ placement_package_state }}"
    update_cache: "{{ (ansible_facts['pkg_mgr'] == 'apt') | ternary('yes', omit) }}"
    cache_valid_time: "{{ (ansible_facts['pkg_mgr'] == 'apt') | ternary(cache_timeout, omit) }}"
  register: install_packages
  until: install_packages is success
  retries: 5
  delay: 2

- name: Install the python venv
  import_role:
    name: "python_venv_build"
  vars:
    venv_python_executable: "{{ placement_venv_python_executable }}"
    venv_build_constraints: "{{ placement_git_constraints }}"
    venv_build_distro_package_list: "{{ placement_devel_distro_packages }}"
    venv_install_destination_path: "{{ placement_bin | dirname }}"
    venv_install_distro_package_list: "{{ placement_distro_packages }}"
    venv_pip_install_args: "{{ placement_pip_install_args }}"
    venv_pip_packages: "{{ placement_pip_packages }}"
    venv_facts_when_changed:
      - section: "placement"
        option: "need_service_restart"
        value: True
      - section: "placement"
        option: "venv_tag"
        value: "{{ placement_venv_tag }}"
  when: placement_install_method == 'source'

- name: Record the need for a service restart
  ini_file:
    dest: "/etc/ansible/facts.d/openstack_ansible.fact"
    section: "placement"
    option: "need_service_restart"
    value: true
  when: (install_packages is changed) or
        ('need_service_restart' not in ansible_local['openstack_ansible']['placement'])

- name: Run the systemd service role
  include_role:
    name: systemd_service
  vars:
    systemd_user_name: "{{ placement_system_user_name }}"
    systemd_group_name: "{{ placement_system_group_name }}"
    systemd_tempd_prefix: openstack
    systemd_slice_name: placement
    systemd_lock_path: /var/lock/placement
    systemd_CPUAccounting: true
    systemd_BlockIOAccounting: true
    systemd_MemoryAccounting: true
    systemd_TasksAccounting: true
    systemd_services:
      - service_name: "{{ service_var.service_name }}"
        enabled: yes
        state: started
        execstarts: "{{ service_var.execstarts }}"
        execreloads: "{{ service_var.execreloads | default([]) }}"
        config_overrides: "{{ service_var.init_config_overrides }}"
  with_items: "{{ filtered_placement_services }}"
  loop_control:
    loop_var: service_var
  tags:
    - placement-config
    - systemd-service
