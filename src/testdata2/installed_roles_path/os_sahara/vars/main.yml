---
# Copyright 2019, VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_sahara_is_first_play_host: "{{ (sahara_services['sahara-api']['group'] in group_names and inventory_hostname == (groups[sahara_services['sahara-api']['group']] | intersect(ansible_play_hosts)) | first) | bool }}"

filtered_sahara_services: |-
  {% set services = [] %}
  {% for key, value in sahara_services.items() %}
  {%   if value['group'] in group_names and not ('wsgi_app' in value and value['wsgi_app']) %}
  {%     set _ = value.update(
          {
            'service_key': key,
            'enabled': 'yes',
            'state': 'started',
            'config_overrides': value.init_config_overrides
          }
        )
  %}
  {%     set _ = value.pop('init_config_overrides') %}
  {# Note (noonedeadpunk): The following condition is added for backwards compatability #}
  {# As up to train release sahara role didn't have 'execstarts' in sahara_services keys #}
  {%     if ('execstarts' not in value) %}
  {%       set _ = value.update({'execstarts': value.program_override | default(sahara_bin ~ '/' ~ value.service_name)}) %}
  {%     endif %}
  {%     set _ = services.append(value) %}
  {%   endif %}
  {% endfor %}
  {{ services }}

uwsgi_sahara_services: |-
  {% set services = {} %}
  {% for key, value in sahara_services.items() %}
  {%   if (value['group'] in group_names) and
         (('condition' not in value) or ('condition' in value and value['condition']))
         and ('wsgi_app' in value and value['wsgi_app']) %}
  {%     set _ = value.update(
            {
             'wsgi_path':  sahara_bin ~ '/' ~ value.wsgi_name,
             'wsgi_venv': sahara_bin | dirname,
             'uwsgi_uid': sahara_system_user_name,
             'uwsgi_guid': sahara_system_group_name,
             'uwsgi_processes': sahara_wsgi_processes,
             'uwsgi_threads': sahara_wsgi_threads
           }
         ) %}
  {%     set _ = services.update({key: value}) %}
  {%   endif %}
  {% endfor %}
  {{ services }}
