---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Gather variables for each operating system
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_version'] | lower }}.yml"
        - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
        - "{{ ansible_facts['distribution'] | lower }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}-{{ ansible_facts['distribution_version'].split('.')[0] }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}.yml"
      paths:
        - "{{ role_path }}/vars"
  tags:
    - always

- name: Fail if service was deployed using a different installation method
  fail:
    msg: "Switching installation methods for OpenStack services is not supported"
  when:
    - ansible_local is defined
    - ansible_local.openstack_ansible is defined
    - ansible_local.openstack_ansible.cinder is defined
    - ansible_local.openstack_ansible.cinder.install_method is defined
    - ansible_local.openstack_ansible.cinder.install_method != cinder_install_method

- name: Gather variables for installation method
  include_vars: "{{ cinder_install_method }}_install.yml"
  tags:
    - always

- include_role:
    name: openstack.osa.db_setup
    apply:
      tags:
        - common-db
        - cinder-config
  when:
    - _cinder_is_first_play_host
  vars:
    _oslodb_setup_host: "{{ cinder_db_setup_host }}"
    _oslodb_ansible_python_interpreter: "{{ cinder_db_setup_python_interpreter }}"
    _oslodb_setup_endpoint: "{{ cinder_galera_address }}"
    _oslodb_setup_port: "{{ cinder_galera_port }}"
    _oslodb_databases:
      - name: "{{ cinder_galera_database }}"
        users:
          - username: "{{ cinder_galera_user }}"
            password: "{{ cinder_container_mysql_password }}"
  tags:
    - always

- include_role:
    name: openstack.osa.mq_setup
    apply:
      tags:
        - common-mq
        - cinder-config
  when:
    - _cinder_is_first_play_host
  vars:
    _oslomsg_rpc_setup_host: "{{ cinder_oslomsg_rpc_setup_host }}"
    _oslomsg_rpc_userid: "{{ cinder_oslomsg_rpc_userid }}"
    _oslomsg_rpc_password: "{{ cinder_oslomsg_rpc_password }}"
    _oslomsg_rpc_vhost: "{{ cinder_oslomsg_rpc_vhost }}"
    _oslomsg_rpc_transport: "{{ cinder_oslomsg_rpc_transport }}"
    _oslomsg_notify_setup_host: "{{ cinder_oslomsg_notify_setup_host }}"
    _oslomsg_notify_userid: "{{ cinder_oslomsg_notify_userid }}"
    _oslomsg_notify_password: "{{ cinder_oslomsg_notify_password }}"
    _oslomsg_notify_vhost: "{{ cinder_oslomsg_notify_vhost }}"
    _oslomsg_notify_transport: "{{ cinder_oslomsg_notify_transport }}"
  tags:
    - always

- import_tasks: cinder_lvm_config.yml
  when:
    - "cinder_services['cinder-volume']['group'] in group_names"
    - "cinder_backend_lvm_inuse | bool"
  tags:
    - cinder-config

- import_tasks: cinder_pre_install.yml
  tags:
    - cinder-install

- import_tasks: cinder_install.yml
  tags:
    - cinder-install

- name: refresh local facts
  setup:
    filter: ansible_local
    gather_subset: "!all"
  tags:
    - cinder-config

- include_tasks: cinder_cleanup_old_facts.yml
  args:
    apply:
      tags:
        - cinder-config
  when:
    - "'openstack_ansible' in ansible_local"
    - "'cinder' in ansible_local['openstack_ansible']"
    - "'need_db_sync' in ansible_local['openstack_ansible']['cinder']"
  tags:
    - always

- import_tasks: cinder_post_install.yml
  tags:
    - cinder-config

- name: Run the systemd service role
  import_role:
    name: systemd_service
  vars:
    systemd_service_enabled: "{{ ((cinder_services['cinder-volume']['group'] in group_names) and (cinder_ceilometer_enabled | bool)) | ternary(true, false) }}"
    systemd_service_restart_changed: false
    systemd_user_name: "{{ cinder_system_user_name }}"
    systemd_group_name: "{{ cinder_system_group_name }}"
    systemd_services:
      - service_name: "cinder-volume-usage-audit"
        execstarts:
          - '/bin/bash -c "{{ cinder_bin }}/cinder-volume-usage-audit --start_time \"$$(date\s+%%Y-%%m-%%d\\\s%%H:00:00\s-d\s-1{{ cinder_volume_usage_audit }})\" --end_time \"$$(date\s+%%Y-%%m-%%d\\\s%%H:00:00)\" {{ (cinder_volume_usage_audit_send_actions_enabled | bool) | ternary( "--send_actions", "--nosend_actions" ) }}"'
        timer:
          state: "{{ ((cinder_services['cinder-volume']['group'] in group_names) and (cinder_ceilometer_enabled | bool)) | ternary('started', 'stopped') }}"
          options:
            OnBootSec: 30min
            OnCalendar: "{{ (cinder_volume_usage_audit == 'day') | ternary('daily', cinder_volume_usage_audit+'ly') }}"
            Persistent: true
  tags:
    - cinder-config

- import_tasks: cinder_db_sync.yml
  when:
    - _cinder_is_first_api_play_host
  tags:
    - cinder-config

- name: Import uwsgi role
  import_role:
    name: uwsgi
  vars:
    uwsgi_services: "{{ uwsgi_cinder_services }}"
    uwsgi_install_method: "{{ cinder_install_method }}"
  tags:
    - cinder-config
    - uwsgi

- include_role:
    name: openstack.osa.service_setup
    apply:
      tags:
        - common-service
        - cinder-config
  vars:
    _service_adminuri_insecure: "{{ keystone_service_adminuri_insecure }}"
    _service_in_ldap: "{{ cinder_service_in_ldap }}"
    _service_setup_host: "{{ cinder_service_setup_host }}"
    _service_setup_host_python_interpreter: "{{ cinder_service_setup_host_python_interpreter }}"
    _service_project_name: "{{ cinder_service_project_name }}"
    _service_endpoints: "{{ cinder_service_endpoints }}"
    _service_catalog: "{{ cinder_service_catalog }}"
    _service_region: "{{ cinder_service_region }}"
    _service_users:
      - name: "{{ cinder_service_user_name }}"
        password: "{{ cinder_service_password }}"
        role: "{{ cinder_service_role_names }}"
  when:
    - "_cinder_is_first_play_host"
  tags:
    - always

- name: Import ceph_client role
  import_role:
    name: ceph_client
  vars:
    openstack_service_system_user: "{{ cinder_system_user_name }}"
    openstack_service_venv_bin: "{{ (cinder_install_method == 'source') | ternary(cinder_bin, '') }}"
  when:
    - "cinder_services['cinder-volume']['group'] in group_names"
    - "cinder_backend_rbd_inuse | bool"
  tags:
    - ceph

# NOTE(jrosser) Tools required by cinder-volumes may have dependancies on librados and librbd
# so are installed after the ceph_client role is run to ensure that the ceph repos setup
# is in place.
- name: Install cinder volumes distro tool packages
  package:
    name: "{{ cinder_volume_distro_packages_tools }}"
    state: "{{ cinder_package_state }}"
    update_cache: "{{ (ansible_facts['pkg_mgr'] == 'apt') | ternary('yes', omit) }}"
    cache_valid_time: "{{ (ansible_facts['pkg_mgr'] == 'apt') | ternary(cache_timeout, omit) }}"
  register: install_packages
  until: install_packages  is success
  retries: 5
  delay: 2
  when:
   - "cinder_services['cinder-volume']['group'] in group_names"

- name: Flush handlers
  meta: flush_handlers

- import_tasks: cinder_backends.yml
  when:
    - "groups[cinder_services['cinder-volume']['group']] | length > 0"
    - "_cinder_is_last_play_host"
  tags:
    - cinder-config
