---
- name: Print debug info
  tags:
    - service
    - debug
  debug:
    msg: "Spawning service node '{{ container_name }}' with COMP_ID={{ COMP_ID }}"
    verbosity: 2

- name: Spawn Service/control node
  remote_user: root
  become: yes
  become_method: sudo
  tags:
    - spawn
    - service
    - containers
    - docker
  docker_container:
    name: "{{ control_node_container_name }}"
    hostname: "{{ control_node_container_name }}"
    image: "{{ control_node_image }}"
    state: started
    privileged: yes
    capabilities: ALL
    volumes:
      - /dev:/dev
      - /lib/modules:/lib/modules
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    published_ports:
      - 50080:80
      - 58181:8181
      - 56080:6080
      - 58000:8000
    stop_signal: SIGRTMIN+3
    security_opts:
      - "apparmor:docker-unconfined"
    env:
      TZ: "America/Los_Angeles"
      JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"
      JAVA_MAX_MEM: "16g"
      ODL_NETWORK: "{{ use_odl_network }}"
      SERVICE_HOST: "{{ service_host_mgmt_ip }}"
      container: "docker"
      http_proxy: "{{ lab_http_proxy }}"
      https_proxy: "{{ lab_https_proxy }}"
      no_proxy: "{{ lab_no_proxy }}"
      TERM: screen
  register: control_node_spawn_result

- name: Connect container to network with ansible (idempotent)
  tags:
    - network
    - service
    - experimental
  include_role:
    name: network
    vars:
      COMP_ID: 2

# vim: set et sw=2 ts=2 :
