---

consul_version: 1.2.2

consul_datacenter: dc1
consul_ip: "{{ ansible_default_ipv4.address }}"
consul_nodename: "{{ ansible_nodename }}"
consul_server: false
consul_ui: false
consul_backup: false

# Allows automatically generating the consul configuration of an AWS EC2 instance
# based on its private and public IP addresses. Note that this only works on AWS and
# a service (re)start is required to apply the configuration changes.
consul_auto_generate_config: false

consul_bin_dir: "/usr/local/bin"
consul_config_dir: "/etc/consul"
consul_data_dir: "/var/lib/consul"
consul_openstack_data_device: "/dev/sdb1"

consul_log_level: INFO
consul_enable_syslog: true

consul_encrypt: ""

consul_acl_enabled: true
consul_acl_datacenter: "{{ consul_datacenter }}"
consul_acl_master_token: null
consul_acl_default_policy: allow
consul_acl_down_policy: extend-cache
# TODO: Deprecated in Consul 1.4.0: https://www.consul.io/docs/agent/options.html#acl_token_legacy
consul_acl_token: null

# Example:
#
# consul_servers: [nodeA.domain.com, nodeB.domain.com, nodeC.domain.com]
consul_servers: []
consul_rejoin_after_leave: true
consul_enable_script_checks: false

consul_performance_raft_multiplier: 5

# Example:
#
# consul_service_config:
#   service:
#   name: "haproxy"
#   tags: ["haproxy", "stage"]
#   port: 18888
#   enable_tag_override: true
#   checks:
#     - args: ["/usr/local/bin/haproxy_check.sh"]
#      	interval: "10s"
#     - args: ["echo", "HAProxy, are you okay?"]
#       interval: "1m"
consul_service_config: ""

consul_url: "https://releases.hashicorp.com/consul/{{ consul_version }}/consul_{{ consul_version }}_linux_amd64.zip"

consul_http_public_port: 18500
consul_http_password: null
