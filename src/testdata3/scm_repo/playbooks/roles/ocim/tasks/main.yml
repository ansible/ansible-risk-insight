---

- name: Set login shell for user {{ www_user }}
  user:
    name: "{{ www_user }}"
    shell: /bin/bash

- name: Create {{ www_data_home_dir }}
  file:
    path: "{{ www_data_home_dir }}"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
    mode: 0750
    state: directory

- name: Copy shell configuration for user {{ www_user }}
  template:
    src: bashrc
    dest: "{{ www_data_home_dir }}/.bashrc"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"

- name: Clone the opencraft repository
  git:
    repo: https://github.com/open-craft/opencraft.git
    dest: "{{ opencraft_root_dir }}"
    update: no
  become_user: "{{ www_user }}"

- name: Install the configuration/environment file
  template:
    src: env.j2
    dest: "{{ opencraft_root_dir }}/.env"
    mode: 0600
    backup: yes
  become_user: "{{ www_user }}"
  tags: ocim-env-file

- import_tasks: common.yml

- name: Install the venv wrapper script
  template:
    src: venv_exec.j2
    dest: "{{ pyenv_root }}/shims/exec"
    mode: 0755
  become_user: "{{ www_user }}"

- name: "Create directory {{ www_data_home_dir }}/.ssh"
  file:
    path: "{{ www_data_home_dir }}/.ssh"
    state: directory
  become_user: "{{ www_user }}"

- name: Install the SSH private key used for deploying instances.
  copy:
    content: "{{ OPENCRAFT_OPENSTACK_SSH_KEY }}"
    dest: "{{ www_data_home_dir }}/.ssh/id_rsa"
    mode: 0600
  become_user: "{{ www_user }}"

- name: Copy screen session configuration
  template:
    src: "ocim-screenrc"
    dest: "{{ opencraft_screenrc_path }}"
    owner: "{{ session_user }}"
    group: "{{ session_user_group }}"

- name: Copy systemd service file
  template:
    src: "ocim-screen.service"
    dest: "/etc/systemd/system/ocim-screen.service"

- name: Enable and start systemd service to start on boot automatically
  systemd:
    daemon-reload: yes
    name: ocim-screen.service
    enabled: yes
    state: started

- import_tasks: configure-swift-backups.yml
  when: OPENCRAFT_BACKUP_SWIFT_ENABLED
