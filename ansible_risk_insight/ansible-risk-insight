#!/bin/bash

mode=$1

if [[ $mode != "run" ]]; then
    echo 'only \"run\" mode is supported' >&2
    exit 1
fi

POSITIONAL_ARGS=()

while [[ $# -gt 0 ]]; do
  case $1 in
    -c|--collection)
      COLLECTION="$2"
      shift # past argument
      shift # past value
      ;;
    -r|--role)
      ROLE="$2"
      shift # past argument
      shift # past value
      ;;
    -p|--project)
      PROJECT="$2"
      shift # past argument
      shift # past value
      ;;
    --collection-dir)
      COLLECTION_DIR="$2"
      shift # past argument
      ;;
    --role-dir)
      ROLE_DIR="$2"
      shift # past argument
      ;;
    --requirements)
      REQUIREMENTS="$2"
      shift # past argument
      ;;
    -*|--*)
      echo "Unknown option $1"
      exit 1
      ;;
    *)
      POSITIONAL_ARGS+=("$1") # save positional arg
      shift # past argument
      ;;
  esac
done

set -- "${POSITIONAL_ARGS[@]}" # restore positional parameters

target=""
target_type=""
if [[ ${COLLECTION} != "" ]];then
    target=${COLLECTION}
    target_type="collection"
fi
if [[ ${ROLE} != "" ]];then
    target=${ROLE}
    target_type="role"
fi
if [[ ${PROJECT} != "" ]];then
    target=${PROJECT}
    target_type="project"
fi

if [[ $target_type == "role" ]]; then
    if [[ ${COLLECTION_DIR} == "" ]]; then
        if [[ $ARI_COMMON_COLLECTIONS == "" ]];then
            echo "please specify the argument \"--collection-dir\" or set the env variable \"\$ARI_COMMON_COLLECTIONS\""  >&2
            exit 1
        else
            COLLECTION_DIR=$ARI_COMMON_COLLECTIONS
        fi
    fi

    if [[ ${ROLE_DIR} == "" ]]; then
        if [[ $ARI_COMMON_ROLES == "" ]];then
            echo "please specify the argument \"--collection-dir\" or set the env variable \"\$ARI_COMMON_COLLECTIONS\""  >&2
            exit 1
        else
            ROLE_DIR=$ARI_COMMON_ROLES
        fi
    fi
fi


if [[ $target_type == "role" ]];then
    echo "TARGET  = ${target}"
    echo "TARGET_TYPE = ${target_type}"
    echo "ROLE_DIR = ${ROLE_DIR}"
    echo "COLLECTION_DIR = ${COLLECTION_DIR}"

    python crawl.py -r $target -o $ROLE_DIR --collection-dir $COLLECTION_DIR
    python gen_report.py -i $ROLE_DIR/root/definitions/role/$target/tasks_rv.json -o $ROLE_DIR/root/definitions/role/$target/report.json
    python show_report.py -i $ROLE_DIR/root/definitions/role/$target/report.json
fi

# TODO: add collection support

if [[ $target_type == "project" ]];then
    echo "TARGET  = ${target}"
    echo "TARGET_TYPE = ${target_type}"
    echo "REQUIREMENTS = ${REQUIREMENTS}"

    temp_dir=$(mktemp -d)
    mkdir $temp_dir/src
    mkdir $temp_dir/definitions
    mkdir $temp_dir/trees
    mkdir $temp_dir/ext
    mkdir $temp_dir/dependencies
    git clone $target $temp_dir/src
    if [[ $REQUIREMENTS != "" ]];then
        ansible-galaxy collection install -r $REQUIREMENTS -p $temp_dir/dependencies
    fi
    python loader.py --root -t $temp_dir/src -o $temp_dir/load.json
    python parser.py --root -l $temp_dir/load.json -o $temp_dir/definitions/trial1
    python loader.py --ext -t $temp_dir/dependencies -o $temp_dir/ext -i $temp_dir/index-ext.json
    python parser.py --ext -i $temp_dir/index-ext.json -o $temp_dir/definitions/ext
    python tree.py -r $temp_dir/definitions/trial1 -e $temp_dir/definitions/ext -t $temp_dir/trees/tree.json -n $temp_dir/trees/node_objects.json
    python variable_resolver.py -t $temp_dir/trees/tree.json -n $temp_dir/trees/node_objects.json -o $temp_dir/trees
    python gen_report.py -i $temp_dir/trees/tasks_rv.json -o $temp_dir/trees/report.json
    python show_report.py -i $temp_dir/trees/report.json
fi