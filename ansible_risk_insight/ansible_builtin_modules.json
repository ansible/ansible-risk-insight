{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.include", "name": "include", "fqcn": "ansible.builtin.include", "local_key": "module module:lib/ansible/modules/_include.py", "collection": "ansible.builtin", "role": "", "documentation": "author: Ansible Core Team (@ansible)\ncollection: ansible.builtin\ndeprecated:\n  alternative: include_tasks, import_tasks, import_playbook\n  removed_from_collection: ansible.builtin\n  removed_in: '2.16'\n  why: it has too many conflicting behaviours depending on keyword combinations and\n    it was unclear how it should behave in each case. new actions were developed that\n    were specific about each case and related behaviours.\ndescription:\n- Includes a file with a list of tasks to be executed in the current playbook.\n- Lists of tasks can only be included where tasks normally run (in play).\n- Before Ansible 2.0, all includes were 'static' and were executed when the play was\n  compiled.\n- Static includes are not subject to most directives. For example, loops or conditionals\n  are applied instead to each inherited task.\n- Since Ansible 2.0, task includes are dynamic and behave more like real tasks. This\n  means they can be looped, skipped and use variables from any source. Ansible tries\n  to auto detect this, but you can use the C(static) directive (which was added in\n  Ansible 2.1) to bypass autodetection.\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/_include.py\nhas_action: false\nmodule: include\nnotes:\n- This is a core feature of Ansible, rather than a module, and cannot be overridden\n  like a module.\n- Include has some unintuitive behaviours depending on if it is running in a static\n  or dynamic in play or in playbook context, in an effort to clarify behaviours we\n  are moving to a new set modules (M(ansible.builtin.include_tasks), M(ansible.builtin.include_role),\n  M(ansible.builtin.import_playbook), M(ansible.builtin.import_tasks)) that have well\n  established and clear behaviours.\n- This module no longer supporst including plays. Use M(ansible.builtin.import_playbook)\n  instead.\noptions:\n  free-form:\n    description:\n    - This module allows you to specify the name of the file directly without any\n      other options.\nseealso:\n- module: ansible.builtin.import_playbook\n- module: ansible.builtin.import_role\n- module: ansible.builtin.import_tasks\n- module: ansible.builtin.include_role\n- module: ansible.builtin.include_tasks\n- description: More information related to including and importing playbooks, roles\n    and tasks.\n  ref: playbooks_reuse_includes\nshort_description: Include a task list\nversion_added: '0.6'\nversion_added_collection: ansible.builtin\n", "examples": "\n\n- hosts: all\n  tasks:\n    - ansible.builtin.debug:\n        msg: task1\n\n    - name: Include task list in play\n      ansible.builtin.include: stuff.yaml\n\n    - ansible.builtin.debug:\n        msg: task10\n\n- hosts: all\n  tasks:\n    - ansible.builtin.debug:\n        msg: task1\n\n    - name: Include task list in play only if the condition is true\n      ansible.builtin.include: \"{{ hostvar }}.yaml\"\n      static: no\n      when: hostvar is defined\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "free-form", "type": "", "elements": "", "default": null, "required": false, "description": ["This module allows you to specify the name of the file directly without any other options."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/_include.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.add_host", "name": "add_host", "fqcn": "ansible.builtin.add_host", "local_key": "module module:lib/ansible/modules/add_host.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: full\n  bypass_task_loop:\n    description: These tasks ignore the C(loop) and C(with_) keywords\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    details: While this makes no changes to target systems the 'in memory' inventory\n      will still be altered\n    support: partial\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  core:\n    description: This is a 'core engine' feature and is not implemented like most\n      task actions, so it is not overridable in any way via the plugin system.\n    details: While parts of this action are implemented in core, other parts are still\n      available as normal plugins and can be partially overridden\n    support: partial\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  ignore_conditional:\n    description: The action is not subject to conditional execution so it will ignore\n      the C(when:) keyword\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\n  tags:\n    description: Allows for the 'tags' keyword to control the selection of this action\n      for execution\n    support: full\n  until:\n    description: Denotes if this action objeys until/retry/poll keywords\n    support: full\nauthor:\n- Ansible Core Team\n- Seth Vidal (@skvidal)\ncollection: ansible.builtin\ndescription:\n- Use variables to create new hosts and groups in inventory for use in later plays\n  of the same playbook.\n- Takes variables so you can define the new hosts more fully.\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/add_host.py\nhas_action: true\nmodule: add_host\nnotes:\n- The alias C(host) of the parameter C(name) is only available on Ansible 2.4 and\n  newer.\n- Since Ansible 2.4, the C(inventory_dir) variable is now set to C(None) instead of\n  the 'global inventory source', because you can now have multiple sources.  An example\n  was added that shows how to partially restore the previous behaviour.\n- Though this module does not change the remote host, we do provide 'changed' status\n  as it can be useful for those trying to track inventory changes.\n- The hosts added will not bypass the C(--limit) from the command line, so both of\n  those need to be in agreement to make them available as play targets. They are still\n  available from hostvars and for delegation as a normal part of the inventory.\noptions:\n  groups:\n    aliases:\n    - group\n    - groupname\n    description:\n    - The groups to add the hostname to.\n    elements: str\n    type: list\n  name:\n    aliases:\n    - host\n    - hostname\n    description:\n    - The hostname/ip of the host to add to the inventory, can include a colon and\n      a port number.\n    required: true\n    type: str\nseealso:\n- module: ansible.builtin.group_by\nshort_description: Add a host (and alternatively a group) to the ansible-playbook\n  in-memory inventory\nversion_added: '0.9'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Add host to group 'just_created' with variable foo=42\n  ansible.builtin.add_host:\n    name: '{{ ip_from_ec2 }}'\n    groups: just_created\n    foo: 42\n\n- name: Add host to multiple groups\n  ansible.builtin.add_host:\n    hostname: '{{ new_ip }}'\n    groups:\n    - group1\n    - group2\n\n- name: Add a host with a non-standard port local to your machines\n  ansible.builtin.add_host:\n    name: '{{ new_ip }}:{{ new_port }}'\n\n- name: Add a host alias that we reach through a tunnel (Ansible 1.9 and older)\n  ansible.builtin.add_host:\n    hostname: '{{ new_ip }}'\n    ansible_ssh_host: '{{ inventory_hostname }}'\n    ansible_ssh_port: '{{ new_port }}'\n\n- name: Add a host alias that we reach through a tunnel (Ansible 2.0 and newer)\n  ansible.builtin.add_host:\n    hostname: '{{ new_ip }}'\n    ansible_host: '{{ inventory_hostname }}'\n    ansible_port: '{{ new_port }}'\n\n- name: Ensure inventory vars are set to the same value as the inventory_hostname has (close to pre Ansible 2.4 behaviour)\n  ansible.builtin.add_host:\n    hostname: charlie\n    inventory_dir: '{{ inventory_dir }}'\n\n- name: Add all hosts running this playbook to the done group\n  ansible.builtin.add_host:\n    name: '{{ item }}'\n    groups: done\n  loop: \"{{ ansible_play_hosts }}\"\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "groups", "type": "list", "elements": "str", "default": null, "required": false, "description": ["The groups to add the hostname to."], "choices": null, "aliases": ["group", "groupname"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": true, "description": ["The hostname/ip of the host to add to the inventory, can include a colon and a port number."], "choices": null, "aliases": ["host", "hostname"]}], "defined_in": "lib/ansible/modules/add_host.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.apt", "name": "apt", "fqcn": "ansible.builtin.apt", "local_key": "module module:lib/ansible/modules/apt.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: debian\n    support: N/A\nauthor: Matthew Williams (@mgwilliams)\ncollection: ansible.builtin\ndescription:\n- Manages I(apt) packages (such as for Debian/Ubuntu).\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/apt.py\nhas_action: false\nmodule: apt\nnotes:\n- Three of the upgrade modes (C(full), C(safe) and its alias C(true)) required C(aptitude)\n  up to 2.3, since 2.4 C(apt-get) is used as a fall-back.\n- In most cases, packages installed with apt will start newly installed services by\n  default. Most distributions have mechanisms to avoid this. For example when installing\n  Postgresql-9.5 in Debian 9, creating an excutable shell script (/usr/sbin/policy-rc.d)\n  that throws a return code of 101 will stop Postgresql 9.5 starting up after install.\n  Remove the file or remove its execute permission afterwards.\n- The apt-get commandline supports implicit regex matches here but we do not because\n  it can let typos through easier (If you typo C(foo) as C(fo) apt-get would install\n  packages that have \"fo\" in their name with a warning and a prompt for the user.\n  Since we don't have warnings and prompts before installing we disallow this.Use\n  an explicit fnmatch pattern if you want wildcarding)\n- When used with a C(loop:) each package will be processed individually, it is much\n  more efficient to pass the list directly to the I(name) option.\n- When C(default_release) is used, an implicit priority of 990 is used. This is the\n  same behavior as C(apt-get -t).\n- When an exact version is specified, an implicit priority of 1001 is used.\noptions:\n  allow_change_held_packages:\n    default: 'no'\n    description:\n    - Allows changing the version of a package which is on the apt hold list\n    type: bool\n    version_added: '2.13'\n    version_added_collection: ansible.builtin\n  allow_downgrade:\n    aliases:\n    - allow-downgrade\n    - allow_downgrades\n    - allow-downgrades\n    default: 'no'\n    description:\n    - Corresponds to the C(--allow-downgrades) option for I(apt).\n    - This option enables the named package and version to replace an already installed\n      higher version of that package.\n    - Note that setting I(allow_downgrade=true) can make this module behave in a non-idempotent\n      way.\n    - (The task could end up with a set of packages that does not match the complete\n      list of specified packages to install).\n    type: bool\n    version_added: '2.12'\n    version_added_collection: ansible.builtin\n  allow_unauthenticated:\n    aliases:\n    - allow-unauthenticated\n    default: 'no'\n    description:\n    - Ignore if packages cannot be authenticated. This is useful for bootstrapping\n      environments that manage their own apt-key setup.\n    - 'C(allow_unauthenticated) is only supported with state: I(install)/I(present)'\n    type: bool\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  autoclean:\n    default: 'no'\n    description:\n    - If C(true), cleans the local repository of retrieved package files that can\n      no longer be downloaded.\n    type: bool\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  autoremove:\n    default: 'no'\n    description:\n    - If C(true), remove unused dependency packages for all module states except I(build-dep).\n      It can also be used as the only option.\n    - Previous to version 2.4, autoclean was also an alias for autoremove, now it\n      is its own separate command. See documentation for further information.\n    type: bool\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  cache_valid_time:\n    default: 0\n    description:\n    - Update the apt cache if it is older than the I(cache_valid_time). This option\n      is set in seconds.\n    - As of Ansible 2.4, if explicitly set, this sets I(update_cache=yes).\n    type: int\n  clean:\n    default: 'no'\n    description:\n    - Run the equivalent of C(apt-get clean) to clear out the local repository of\n      retrieved package files. It removes everything but the lock file from /var/cache/apt/archives/\n      and /var/cache/apt/archives/partial/.\n    - Can be run as part of the package installation (clean runs before install) or\n      as a separate step.\n    type: bool\n    version_added: '2.13'\n    version_added_collection: ansible.builtin\n  deb:\n    description:\n    - Path to a .deb package on the remote machine.\n    - If :// in the path, ansible will attempt to download deb before installing.\n      (Version added 2.1)\n    - Requires the C(xz-utils) package to extract the control file of the deb package\n      to install.\n    required: false\n    type: path\n    version_added: '1.6'\n    version_added_collection: ansible.builtin\n  default_release:\n    aliases:\n    - default-release\n    description:\n    - Corresponds to the C(-t) option for I(apt) and sets pin priorities\n    type: str\n  dpkg_options:\n    default: force-confdef,force-confold\n    description:\n    - Add dpkg options to apt command. Defaults to '-o \"Dpkg::Options::=--force-confdef\"\n      -o \"Dpkg::Options::=--force-confold\"'\n    - Options should be supplied as comma separated list\n    type: str\n  fail_on_autoremove:\n    default: 'no'\n    description:\n    - Corresponds to the C(--no-remove) option for C(apt).\n    - If C(true), it is ensured that no packages will be removed or the task will\n      fail.\n    - C(fail_on_autoremove) is only supported with state except C(absent)\n    type: bool\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  force:\n    default: 'no'\n    description:\n    - 'Corresponds to the C(--force-yes) to I(apt-get) and implies C(allow_unauthenticated:\n      yes) and C(allow_downgrade: yes)'\n    - This option will disable checking both the packages' signatures and the certificates\n      of the web servers they are downloaded from.\n    - This option *is not* the equivalent of passing the C(-f) flag to I(apt-get)\n      on the command line\n    - '**This is a destructive operation with the potential to destroy your system,\n      and it should almost never be used.** Please also see C(man apt-get) for more\n      information.'\n    type: bool\n  force_apt_get:\n    default: 'no'\n    description:\n    - Force usage of apt-get instead of aptitude\n    type: bool\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  install_recommends:\n    aliases:\n    - install-recommends\n    description:\n    - Corresponds to the C(--no-install-recommends) option for I(apt). C(true) installs\n      recommended packages.  C(false) does not install recommended packages. By default,\n      Ansible will use the same defaults as the operating system. Suggested packages\n      are never installed.\n    type: bool\n  lock_timeout:\n    default: 60\n    description:\n    - How many seconds will this action wait to acquire a lock on the apt db.\n    - Sometimes there is a transitory lock and this will retry at least until timeout\n      is hit.\n    type: int\n    version_added: '2.12'\n    version_added_collection: ansible.builtin\n  name:\n    aliases:\n    - package\n    - pkg\n    description:\n    - A list of package names, like C(foo), or package specifier with version, like\n      C(foo=1.0) or C(foo>=1.0). Name wildcards (fnmatch) like C(apt*) and version\n      wildcards like C(foo=1.0*) are also supported.\n    elements: str\n    type: list\n  only_upgrade:\n    default: 'no'\n    description:\n    - Only upgrade a package if it is already installed.\n    type: bool\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  policy_rc_d:\n    default: null\n    description:\n    - Force the exit code of /usr/sbin/policy-rc.d.\n    - For example, if I(policy_rc_d=101) the installed package will not trigger a\n      service start.\n    - If /usr/sbin/policy-rc.d already exists, it is backed up and restored after\n      the package installation.\n    - If C(null), the /usr/sbin/policy-rc.d isn't created/changed.\n    type: int\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  purge:\n    default: 'no'\n    description:\n    - Will force purging of configuration files if the module state is set to I(absent).\n    type: bool\n  state:\n    choices:\n    - absent\n    - build-dep\n    - latest\n    - present\n    - fixed\n    default: present\n    description:\n    - Indicates the desired package state. C(latest) ensures that the latest version\n      is installed. C(build-dep) ensures the package build dependencies are installed.\n      C(fixed) attempt to correct a system with broken dependencies in place.\n    type: str\n  update_cache:\n    aliases:\n    - update-cache\n    description:\n    - Run the equivalent of C(apt-get update) before the operation. Can be run as\n      part of the package installation or as a separate step.\n    - Default is not to update the cache.\n    type: bool\n  update_cache_retries:\n    default: 5\n    description:\n    - Amount of retries if the cache update fails. Also see I(update_cache_retry_max_delay).\n    type: int\n    version_added: '2.10'\n    version_added_collection: ansible.builtin\n  update_cache_retry_max_delay:\n    default: 12\n    description:\n    - Use an exponential backoff delay for each retry (see I(update_cache_retries))\n      up to this max delay in seconds.\n    type: int\n    version_added: '2.10'\n    version_added_collection: ansible.builtin\n  upgrade:\n    choices:\n    - dist\n    - full\n    - 'no'\n    - safe\n    - 'yes'\n    default: 'no'\n    description:\n    - If yes or safe, performs an aptitude safe-upgrade.\n    - If full, performs an aptitude full-upgrade.\n    - If dist, performs an apt-get dist-upgrade.\n    - 'Note: This does not upgrade a specific package, use state=latest for that.'\n    - 'Note: Since 2.4, apt-get is used as a fall-back if aptitude is not present.'\n    type: str\n    version_added: '1.1'\n    version_added_collection: ansible.builtin\nrequirements:\n- python-apt (python 2)\n- python3-apt (python 3)\n- aptitude (before 2.4)\nshort_description: Manages apt-packages\nversion_added: 0.0.2\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Install apache httpd  (state=present is optional)\n  ansible.builtin.apt:\n    name: apache2\n    state: present\n\n- name: Update repositories cache and install \"foo\" package\n  ansible.builtin.apt:\n    name: foo\n    update_cache: yes\n\n- name: Remove \"foo\" package\n  ansible.builtin.apt:\n    name: foo\n    state: absent\n\n- name: Install the package \"foo\"\n  ansible.builtin.apt:\n    name: foo\n\n- name: Install a list of packages\n  ansible.builtin.apt:\n    pkg:\n    - foo\n    - foo-tools\n\n- name: Install the version '1.00' of package \"foo\"\n  ansible.builtin.apt:\n    name: foo=1.00\n\n- name: Update the repository cache and update package \"nginx\" to latest version using default release squeeze-backport\n  ansible.builtin.apt:\n    name: nginx\n    state: latest\n    default_release: squeeze-backports\n    update_cache: yes\n\n- name: Install the version '1.18.0' of package \"nginx\" and allow potential downgrades\n  ansible.builtin.apt:\n    name: nginx=1.18.0\n    state: present\n    allow_downgrade: yes\n\n- name: Install zfsutils-linux with ensuring conflicted packages (e.g. zfs-fuse) will not be removed.\n  ansible.builtin.apt:\n    name: zfsutils-linux\n    state: latest\n    fail_on_autoremove: yes\n\n- name: Install latest version of \"openjdk-6-jdk\" ignoring \"install-recommends\"\n  ansible.builtin.apt:\n    name: openjdk-6-jdk\n    state: latest\n    install_recommends: no\n\n- name: Update all packages to their latest version\n  ansible.builtin.apt:\n    name: \"*\"\n    state: latest\n\n- name: Upgrade the OS (apt-get dist-upgrade)\n  ansible.builtin.apt:\n    upgrade: dist\n\n- name: Run the equivalent of \"apt-get update\" as a separate step\n  ansible.builtin.apt:\n    update_cache: yes\n\n- name: Only run \"update_cache=yes\" if the last one is more than 3600 seconds ago\n  ansible.builtin.apt:\n    update_cache: yes\n    cache_valid_time: 3600\n\n- name: Pass options to dpkg on run\n  ansible.builtin.apt:\n    upgrade: dist\n    update_cache: yes\n    dpkg_options: 'force-confold,force-confdef'\n\n- name: Install a .deb package\n  ansible.builtin.apt:\n    deb: /tmp/mypackage.deb\n\n- name: Install the build dependencies for package \"foo\"\n  ansible.builtin.apt:\n    pkg: foo\n    state: build-dep\n\n- name: Install a .deb package from the internet\n  ansible.builtin.apt:\n    deb: https://example.com/python-ppq_0.1-1_all.deb\n\n- name: Remove useless packages from the cache\n  ansible.builtin.apt:\n    autoclean: yes\n\n- name: Remove dependencies that are no longer required\n  ansible.builtin.apt:\n    autoremove: yes\n\n- name: Run the equivalent of \"apt-get clean\" as a separate step\n  apt:\n    clean: yes\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "allow_change_held_packages", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Allows changing the version of a package which is on the apt hold list"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "allow_downgrade", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Corresponds to the C(--allow-downgrades) option for I(apt).", "This option enables the named package and version to replace an already installed higher version of that package.", "Note that setting I(allow_downgrade=true) can make this module behave in a non-idempotent way.", "(The task could end up with a set of packages that does not match the complete list of specified packages to install)."], "choices": null, "aliases": ["allow-downgrade", "allow_downgrades", "allow-downgrades"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "allow_unauthenticated", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Ignore if packages cannot be authenticated. This is useful for bootstrapping environments that manage their own apt-key setup.", "C(allow_unauthenticated) is only supported with state: I(install)/I(present)"], "choices": null, "aliases": ["allow-unauthenticated"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "autoclean", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If C(true), cleans the local repository of retrieved package files that can no longer be downloaded."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "autoremove", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If C(true), remove unused dependency packages for all module states except I(build-dep). It can also be used as the only option.", "Previous to version 2.4, autoclean was also an alias for autoremove, now it is its own separate command. See documentation for further information."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "cache_valid_time", "type": "int", "elements": "", "default": 0, "required": false, "description": ["Update the apt cache if it is older than the I(cache_valid_time). This option is set in seconds.", "As of Ansible 2.4, if explicitly set, this sets I(update_cache=yes)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "clean", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Run the equivalent of C(apt-get clean) to clear out the local repository of retrieved package files. It removes everything but the lock file from /var/cache/apt/archives/ and /var/cache/apt/archives/partial/.", "Can be run as part of the package installation (clean runs before install) or as a separate step."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "deb", "type": "str", "elements": "", "default": null, "required": false, "description": ["Path to a .deb package on the remote machine.", "If :// in the path, ansible will attempt to download deb before installing. (Version added 2.1)", "Requires the C(xz-utils) package to extract the control file of the deb package to install."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "default_release", "type": "str", "elements": "", "default": null, "required": false, "description": ["Corresponds to the C(-t) option for I(apt) and sets pin priorities"], "choices": null, "aliases": ["default-release"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "dpkg_options", "type": "str", "elements": "", "default": "force-confdef,force-confold", "required": false, "description": ["Add dpkg options to apt command. Defaults to '-o \"Dpkg::Options::=--force-confdef\" -o \"Dpkg::Options::=--force-confold\"'", "Options should be supplied as comma separated list"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "fail_on_autoremove", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Corresponds to the C(--no-remove) option for C(apt).", "If C(true), it is ensured that no packages will be removed or the task will fail.", "C(fail_on_autoremove) is only supported with state except C(absent)"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "force", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Corresponds to the C(--force-yes) to I(apt-get) and implies C(allow_unauthenticated: yes) and C(allow_downgrade: yes)", "This option will disable checking both the packages' signatures and the certificates of the web servers they are downloaded from.", "This option *is not* the equivalent of passing the C(-f) flag to I(apt-get) on the command line", "**This is a destructive operation with the potential to destroy your system, and it should almost never be used.** Please also see C(man apt-get) for more information."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "force_apt_get", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Force usage of apt-get instead of aptitude"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "install_recommends", "type": "bool", "elements": "", "default": null, "required": false, "description": ["Corresponds to the C(--no-install-recommends) option for I(apt). C(true) installs recommended packages.  C(false) does not install recommended packages. By default, Ansible will use the same defaults as the operating system. Suggested packages are never installed."], "choices": null, "aliases": ["install-recommends"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "lock_timeout", "type": "int", "elements": "", "default": 60, "required": false, "description": ["How many seconds will this action wait to acquire a lock on the apt db.", "Sometimes there is a transitory lock and this will retry at least until timeout is hit."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "list", "elements": "str", "default": null, "required": false, "description": ["A list of package names, like C(foo), or package specifier with version, like C(foo=1.0) or C(foo>=1.0). Name wildcards (fnmatch) like C(apt*) and version wildcards like C(foo=1.0*) are also supported."], "choices": null, "aliases": ["package", "pkg"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "only_upgrade", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Only upgrade a package if it is already installed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "policy_rc_d", "type": "int", "elements": "", "default": null, "required": false, "description": ["Force the exit code of /usr/sbin/policy-rc.d.", "For example, if I(policy_rc_d=101) the installed package will not trigger a service start.", "If /usr/sbin/policy-rc.d already exists, it is backed up and restored after the package installation.", "If C(null), the /usr/sbin/policy-rc.d isn't created/changed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "purge", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Will force purging of configuration files if the module state is set to I(absent)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "present", "required": false, "description": ["Indicates the desired package state. C(latest) ensures that the latest version is installed. C(build-dep) ensures the package build dependencies are installed. C(fixed) attempt to correct a system with broken dependencies in place."], "choices": ["absent", "build-dep", "latest", "present", "fixed"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "update_cache", "type": "bool", "elements": "", "default": null, "required": false, "description": ["Run the equivalent of C(apt-get update) before the operation. Can be run as part of the package installation or as a separate step.", "Default is not to update the cache."], "choices": null, "aliases": ["update-cache"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "update_cache_retries", "type": "int", "elements": "", "default": 5, "required": false, "description": ["Amount of retries if the cache update fails. Also see I(update_cache_retry_max_delay)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "update_cache_retry_max_delay", "type": "int", "elements": "", "default": 12, "required": false, "description": ["Use an exponential backoff delay for each retry (see I(update_cache_retries)) up to this max delay in seconds."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "upgrade", "type": "str", "elements": "", "default": "no", "required": false, "description": ["If yes or safe, performs an aptitude safe-upgrade.", "If full, performs an aptitude full-upgrade.", "If dist, performs an apt-get dist-upgrade.", "Note: This does not upgrade a specific package, use state=latest for that.", "Note: Since 2.4, apt-get is used as a fall-back if aptitude is not present."], "choices": ["dist", "full", "no", "safe", "yes"], "aliases": null}], "defined_in": "lib/ansible/modules/apt.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.apt_key", "name": "apt_key", "fqcn": "ansible.builtin.apt_key", "local_key": "module module:lib/ansible/modules/apt_key.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: debian\n    support: N/A\nauthor:\n- Jayson Vantuyl (@jvantuyl)\ncollection: ansible.builtin\ndescription:\n- Add or remove an I(apt) key, optionally downloading it.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/apt_key.py\nhas_action: false\nmodule: apt_key\nnotes:\n- The apt-key command has been deprecated and suggests to 'manage keyring files in\n  trusted.gpg.d instead'. See the Debian wiki for details. This module is kept for\n  backwards compatibility for systems that still use apt-key as the main way to manage\n  apt repository keys.\n- As a sanity check, downloaded key id must match the one specified.\n- 'Use full fingerprint (40 characters) key ids to avoid key collisions. To generate\n  a full-fingerprint imported key: C(apt-key adv --list-public-keys --with-fingerprint\n  --with-colons).'\n- If you specify both the key id and the URL with C(state=present), the task can verify\n  or add the key as needed.\n- Adding a new key requires an apt cache update (e.g. using the M(ansible.builtin.apt)\n  module's update_cache option).\noptions:\n  data:\n    description:\n    - The keyfile contents to add to the keyring.\n    type: str\n  file:\n    description:\n    - The path to a keyfile on the remote server to add to the keyring.\n    type: path\n  id:\n    description:\n    - The identifier of the key.\n    - Including this allows check mode to correctly report the changed state.\n    - If specifying a subkey's id be aware that apt-key does not understand how to\n      remove keys via a subkey id.  Specify the primary key's id instead.\n    - This parameter is required when C(state) is set to C(absent).\n    type: str\n  keyring:\n    description:\n    - The full path to specific keyring file in C(/etc/apt/trusted.gpg.d/).\n    type: path\n    version_added: '1.3'\n    version_added_collection: ansible.builtin\n  keyserver:\n    description:\n    - The keyserver to retrieve key from.\n    type: str\n    version_added: '1.6'\n    version_added_collection: ansible.builtin\n  state:\n    choices:\n    - absent\n    - present\n    default: present\n    description:\n    - Ensures that the key is present (added) or absent (revoked).\n    type: str\n  url:\n    description:\n    - The URL to retrieve key from.\n    type: str\n  validate_certs:\n    default: 'yes'\n    description:\n    - If C(false), SSL certificates for the target url will not be validated. This\n      should only be used on personally controlled sites using self-signed certificates.\n    type: bool\nrequirements:\n- gpg\nshort_description: Add or remove an apt key\nversion_added: '1.0'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: One way to avoid apt_key once it is removed from your distro\n  block:\n    - name: somerepo |no apt key\n      ansible.builtin.get_url:\n        url: https://download.example.com/linux/ubuntu/gpg\n        dest: /etc/apt/trusted.gpg.d/somerepo.asc\n\n    - name: somerepo | apt source\n      ansible.builtin.apt_repository:\n        repo: \"deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/myrepo.asc] https://download.example.com/linux/ubuntu {{ ansible_distribution_release }} stable\"\n        state: present\n\n- name: Add an apt key by id from a keyserver\n  ansible.builtin.apt_key:\n    keyserver: keyserver.ubuntu.com\n    id: 36A1D7869245C8950F966E92D8576A8BA88D21E9\n\n- name: Add an Apt signing key, uses whichever key is at the URL\n  ansible.builtin.apt_key:\n    url: https://ftp-master.debian.org/keys/archive-key-6.0.asc\n    state: present\n\n- name: Add an Apt signing key, will not download if present\n  ansible.builtin.apt_key:\n    id: 9FED2BCBDCD29CDF762678CBAED4B06F473041FA\n    url: https://ftp-master.debian.org/keys/archive-key-6.0.asc\n    state: present\n\n- name: Remove a Apt specific signing key, leading 0x is valid\n  ansible.builtin.apt_key:\n    id: 0x9FED2BCBDCD29CDF762678CBAED4B06F473041FA\n    state: absent\n\n# Use armored file since utf-8 string is expected. Must be of \"PGP PUBLIC KEY BLOCK\" type.\n- name: Add a key from a file on the Ansible server\n  ansible.builtin.apt_key:\n    data: \"{{ lookup('ansible.builtin.file', 'apt.asc') }}\"\n    state: present\n\n- name: Add an Apt signing key to a specific keyring file\n  ansible.builtin.apt_key:\n    id: 9FED2BCBDCD29CDF762678CBAED4B06F473041FA\n    url: https://ftp-master.debian.org/keys/archive-key-6.0.asc\n    keyring: /etc/apt/trusted.gpg.d/debian.gpg\n\n- name: Add Apt signing key on remote server to keyring\n  ansible.builtin.apt_key:\n    id: 9FED2BCBDCD29CDF762678CBAED4B06F473041FA\n    file: /tmp/apt.gpg\n    state: present\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "data", "type": "str", "elements": "", "default": null, "required": false, "description": ["The keyfile contents to add to the keyring."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "file", "type": "str", "elements": "", "default": null, "required": false, "description": ["The path to a keyfile on the remote server to add to the keyring."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "id", "type": "str", "elements": "", "default": null, "required": false, "description": ["The identifier of the key.", "Including this allows check mode to correctly report the changed state.", "If specifying a subkey's id be aware that apt-key does not understand how to remove keys via a subkey id.  Specify the primary key's id instead.", "This parameter is required when C(state) is set to C(absent)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "keyring", "type": "str", "elements": "", "default": null, "required": false, "description": ["The full path to specific keyring file in C(/etc/apt/trusted.gpg.d/)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "keyserver", "type": "str", "elements": "", "default": null, "required": false, "description": ["The keyserver to retrieve key from."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "present", "required": false, "description": ["Ensures that the key is present (added) or absent (revoked)."], "choices": ["absent", "present"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "url", "type": "str", "elements": "", "default": null, "required": false, "description": ["The URL to retrieve key from."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate_certs", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["If C(false), SSL certificates for the target url will not be validated. This should only be used on personally controlled sites using self-signed certificates."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/apt_key.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.apt_repository", "name": "apt_repository", "fqcn": "ansible.builtin.apt_repository", "local_key": "module module:lib/ansible/modules/apt_repository.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: debian\n    support: N/A\nauthor:\n- Alexander Saltanov (@sashka)\ncollection: ansible.builtin\ndescription:\n- Add or remove an APT repositories in Ubuntu and Debian.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/apt_repository.py\nhas_action: false\nmodule: apt_repository\nnotes:\n- This module supports Debian Squeeze (version 6) as well as its successors and derivatives.\noptions:\n  codename:\n    description:\n    - Override the distribution codename to use for PPA repositories. Should usually\n      only be set when working with a PPA on a non-Ubuntu target (for example, Debian\n      or Mint).\n    type: str\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  filename:\n    description:\n    - Sets the name of the source list file in sources.list.d. Defaults to a file\n      name based on the repository source url. The .list extension will be automatically\n      added.\n    type: str\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  install_python_apt:\n    default: true\n    description:\n    - Whether to automatically try to install the Python apt library or not, if it\n      is not already installed. Without this library, the module does not work.\n    - Runs C(apt-get install python-apt) for Python 2, and C(apt-get install python3-apt)\n      for Python 3.\n    - Only works with the system Python 2 or Python 3. If you are using a Python on\n      the remote that is not the system Python, set I(install_python_apt=false) and\n      ensure that the Python apt library for your Python version is installed some\n      other way.\n    type: bool\n  mode:\n    description:\n    - The octal mode for newly created files in sources.list.d.\n    - Default is what system uses (probably 0644).\n    type: raw\n    version_added: '1.6'\n    version_added_collection: ansible.builtin\n  repo:\n    description:\n    - A source string for the repository.\n    required: true\n    type: str\n  state:\n    choices:\n    - absent\n    - present\n    default: present\n    description:\n    - A source string state.\n    type: str\n  update_cache:\n    aliases:\n    - update-cache\n    default: 'yes'\n    description:\n    - Run the equivalent of C(apt-get update) when a change occurs.  Cache updates\n      are run after making changes.\n    type: bool\n  update_cache_retries:\n    default: 5\n    description:\n    - Amount of retries if the cache update fails. Also see I(update_cache_retry_max_delay).\n    type: int\n    version_added: '2.10'\n    version_added_collection: ansible.builtin\n  update_cache_retry_max_delay:\n    default: 12\n    description:\n    - Use an exponential backoff delay for each retry (see I(update_cache_retries))\n      up to this max delay in seconds.\n    type: int\n    version_added: '2.10'\n    version_added_collection: ansible.builtin\n  validate_certs:\n    default: 'yes'\n    description:\n    - If C(false), SSL certificates for the target repo will not be validated. This\n      should only be used on personally controlled sites using self-signed certificates.\n    type: bool\n    version_added: '1.8'\n    version_added_collection: ansible.builtin\nrequirements:\n- python-apt (python 2)\n- python3-apt (python 3)\n- apt-key or gpg\nshort_description: Add and remove APT repositories\nversion_added: '0.7'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Add specified repository into sources list\n  ansible.builtin.apt_repository:\n    repo: deb http://archive.canonical.com/ubuntu hardy partner\n    state: present\n\n- name: Add specified repository into sources list using specified filename\n  ansible.builtin.apt_repository:\n    repo: deb http://dl.google.com/linux/chrome/deb/ stable main\n    state: present\n    filename: google-chrome\n\n- name: Add source repository into sources list\n  ansible.builtin.apt_repository:\n    repo: deb-src http://archive.canonical.com/ubuntu hardy partner\n    state: present\n\n- name: Remove specified repository from sources list\n  ansible.builtin.apt_repository:\n    repo: deb http://archive.canonical.com/ubuntu hardy partner\n    state: absent\n\n- name: Add nginx stable repository from PPA and install its signing key on Ubuntu target\n  ansible.builtin.apt_repository:\n    repo: ppa:nginx/stable\n\n- name: Add nginx stable repository from PPA and install its signing key on Debian target\n  ansible.builtin.apt_repository:\n    repo: 'ppa:nginx/stable'\n    codename: trusty\n\n- name: One way to avoid apt_key once it is removed from your distro\n  block:\n    - name: somerepo |no apt key\n      ansible.builtin.get_url:\n        url: https://download.example.com/linux/ubuntu/gpg\n        dest: /etc/apt/trusted.gpg.d/somerepo.asc\n\n    - name: somerepo | apt source\n      ansible.builtin.apt_repository:\n        repo: \"deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/myrepo.asc] https://download.example.com/linux/ubuntu {{ ansible_distribution_release }} stable\"\n        state: present\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "codename", "type": "str", "elements": "", "default": null, "required": false, "description": ["Override the distribution codename to use for PPA repositories. Should usually only be set when working with a PPA on a non-Ubuntu target (for example, Debian or Mint)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "filename", "type": "str", "elements": "", "default": null, "required": false, "description": ["Sets the name of the source list file in sources.list.d. Defaults to a file name based on the repository source url. The .list extension will be automatically added."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "install_python_apt", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Whether to automatically try to install the Python apt library or not, if it is not already installed. Without this library, the module does not work.", "Runs C(apt-get install python-apt) for Python 2, and C(apt-get install python3-apt) for Python 3.", "Only works with the system Python 2 or Python 3. If you are using a Python on the remote that is not the system Python, set I(install_python_apt=false) and ensure that the Python apt library for your Python version is installed some other way."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mode", "type": "any", "elements": "", "default": null, "required": false, "description": ["The octal mode for newly created files in sources.list.d.", "Default is what system uses (probably 0644)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "repo", "type": "str", "elements": "", "default": null, "required": true, "description": ["A source string for the repository."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "present", "required": false, "description": ["A source string state."], "choices": ["absent", "present"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "update_cache", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["Run the equivalent of C(apt-get update) when a change occurs.  Cache updates are run after making changes."], "choices": null, "aliases": ["update-cache"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "update_cache_retries", "type": "int", "elements": "", "default": 5, "required": false, "description": ["Amount of retries if the cache update fails. Also see I(update_cache_retry_max_delay)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "update_cache_retry_max_delay", "type": "int", "elements": "", "default": 12, "required": false, "description": ["Use an exponential backoff delay for each retry (see I(update_cache_retries)) up to this max delay in seconds."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate_certs", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["If C(false), SSL certificates for the target repo will not be validated. This should only be used on personally controlled sites using self-signed certificates."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/apt_repository.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.assemble", "name": "assemble", "fqcn": "ansible.builtin.assemble", "local_key": "module module:lib/ansible/modules/assemble.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\n  safe_file_operations:\n    description: Uses Ansible's strict file operation functions to ensure proper permissions\n      and avoid data corruption\n    support: full\n  vault:\n    description: Can automatically decrypt Ansible vaulted files\n    support: full\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\nauthor:\n- Stephen Fromm (@sfromm)\ncollection: ansible.builtin\ndescription:\n- Assembles a configuration file from fragments.\n- Often a particular program will take a single configuration file and does not support\n  a C(conf.d) style structure where it is easy to build up the configuration from\n  multiple sources. C(assemble) will take a directory of files that can be local or\n  have already been transferred to the system, and concatenate them together to produce\n  a destination file.\n- Files are assembled in string sorting order.\n- Puppet calls this idea I(fragments).\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/assemble.py\nhas_action: true\nmodule: assemble\noptions:\n  attributes:\n    aliases:\n    - attr\n    description:\n    - The attributes the resulting filesystem object should have.\n    - To get supported flags look at the man page for I(chattr) on the target system.\n    - This string should contain the attributes in the same order as the one displayed\n      by I(lsattr).\n    - The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need\n      to be included in the string.\n    type: str\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  backup:\n    default: false\n    description:\n    - Create a backup file (if C(true)), including the timestamp information so you\n      can get the original file back if you somehow clobbered it incorrectly.\n    type: bool\n  decrypt:\n    default: true\n    description:\n    - This option controls the autodecryption of source files using vault.\n    type: bool\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  delimiter:\n    description:\n    - A delimiter to separate the file contents.\n    type: str\n    version_added: '1.4'\n    version_added_collection: ansible.builtin\n  dest:\n    description:\n    - A file to create using the concatenation of all of the source files.\n    required: true\n    type: path\n  group:\n    description:\n    - Name of the group that should own the filesystem object, as would be fed to\n      I(chown).\n    - When left unspecified, it uses the current group of the current user unless\n      you are root, in which case it can preserve the previous ownership.\n    type: str\n  ignore_hidden:\n    default: false\n    description:\n    - A boolean that controls if files that start with a '.' will be included or not.\n    type: bool\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  mode:\n    description:\n    - The permissions the resulting filesystem object should have.\n    - For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers.\n      You must either add a leading zero so that Ansible's YAML parser knows it is\n      an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777'))\n      so Ansible receives a string and can do its own conversion from string into\n      number.\n    - Giving Ansible a number without following one of these rules will end up with\n      a decimal number which will have unexpected results.\n    - As of Ansible 1.8, the mode may be specified as a symbolic mode (for example,\n      C(u+rwx) or C(u=rw,g=r,o=r)).\n    - If C(mode) is not specified and the destination filesystem object B(does not)\n      exist, the default C(umask) on the system will be used when setting the mode\n      for the newly created filesystem object.\n    - If C(mode) is not specified and the destination filesystem object B(does) exist,\n      the mode of the existing filesystem object will be used.\n    - Specifying C(mode) is the best way to ensure filesystem objects are created\n      with the correct permissions. See CVE-2020-1736 for further details.\n    type: raw\n  owner:\n    description:\n    - Name of the user that should own the filesystem object, as would be fed to I(chown).\n    - When left unspecified, it uses the current user unless you are root, in which\n      case it can preserve the previous ownership.\n    - Specifying a numeric username will be assumed to be a user ID and not a username.\n      Avoid numeric usernames to avoid this confusion.\n    type: str\n  regexp:\n    description:\n    - Assemble files only if C(regex) matches the filename.\n    - If not set, all files are assembled.\n    - Every C(\\) (backslash) must be escaped as C(\\\\) to comply to YAML syntax.\n    - Uses L(Python regular expressions,https://docs.python.org/3/library/re.html).\n    type: str\n  remote_src:\n    default: true\n    description:\n    - If C(false), it will search for src at originating/master machine.\n    - If C(true), it will go to the remote/target machine for the src.\n    type: bool\n    version_added: '1.4'\n    version_added_collection: ansible.builtin\n  selevel:\n    description:\n    - The level part of the SELinux filesystem object context.\n    - This is the MLS/MCS attribute, sometimes known as the C(range).\n    - When set to C(_default), it will use the C(level) portion of the policy if available.\n    type: str\n  serole:\n    description:\n    - The role part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(role) portion of the policy if available.\n    type: str\n  setype:\n    description:\n    - The type part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(type) portion of the policy if available.\n    type: str\n  seuser:\n    description:\n    - The user part of the SELinux filesystem object context.\n    - By default it uses the C(system) policy, where applicable.\n    - When set to C(_default), it will use the C(user) portion of the policy if available.\n    type: str\n  src:\n    description:\n    - An already existing directory full of source files.\n    required: true\n    type: path\n  unsafe_writes:\n    default: false\n    description:\n    - Influence when to use atomic operation to prevent data corruption or inconsistent\n      reads from the target filesystem object.\n    - By default this module uses atomic operations to prevent data corruption or\n      inconsistent reads from the target filesystem objects, but sometimes systems\n      are configured or just broken in ways that prevent this. One example is docker\n      mounted filesystem objects, which cannot be updated atomically from inside the\n      container and can only be written in an unsafe manner.\n    - This option allows Ansible to fall back to unsafe methods of updating filesystem\n      objects when atomic operations fail (however, it doesn't force Ansible to perform\n      unsafe writes).\n    - IMPORTANT! Unsafe writes are subject to race conditions and can lead to data\n      corruption.\n    type: bool\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  validate:\n    description:\n    - The validation command to run before copying into place.\n    - The path to the file to validate is passed in via '%s' which must be present\n      as in the sshd example below.\n    - The command is passed securely so shell features like expansion and pipes won't\n      work.\n    type: str\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\nseealso:\n- module: ansible.builtin.copy\n- module: ansible.builtin.template\n- module: ansible.windows.win_copy\nshort_description: Assemble configuration files from fragments\nversion_added: '0.5'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Assemble from fragments from a directory\n  ansible.builtin.assemble:\n    src: /etc/someapp/fragments\n    dest: /etc/someapp/someapp.conf\n\n- name: Insert the provided delimiter between fragments\n  ansible.builtin.assemble:\n    src: /etc/someapp/fragments\n    dest: /etc/someapp/someapp.conf\n    delimiter: '### START FRAGMENT ###'\n\n- name: Assemble a new \"sshd_config\" file into place, after passing validation with sshd\n  ansible.builtin.assemble:\n    src: /etc/ssh/conf.d/\n    dest: /etc/ssh/sshd_config\n    validate: /usr/sbin/sshd -t -f %s\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "attributes", "type": "str", "elements": "", "default": null, "required": false, "description": ["The attributes the resulting filesystem object should have.", "To get supported flags look at the man page for I(chattr) on the target system.", "This string should contain the attributes in the same order as the one displayed by I(lsattr).", "The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need to be included in the string."], "choices": null, "aliases": ["attr"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "backup", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Create a backup file (if C(true)), including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "decrypt", "type": "bool", "elements": "", "default": true, "required": false, "description": ["This option controls the autodecryption of source files using vault."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "delimiter", "type": "str", "elements": "", "default": null, "required": false, "description": ["A delimiter to separate the file contents."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "dest", "type": "str", "elements": "", "default": null, "required": true, "description": ["A file to create using the concatenation of all of the source files."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "group", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the group that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current group of the current user unless you are root, in which case it can preserve the previous ownership."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ignore_hidden", "type": "bool", "elements": "", "default": false, "required": false, "description": ["A boolean that controls if files that start with a '.' will be included or not."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mode", "type": "any", "elements": "", "default": null, "required": false, "description": ["The permissions the resulting filesystem object should have.", "For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777')) so Ansible receives a string and can do its own conversion from string into number.", "Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.", "As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r)).", "If C(mode) is not specified and the destination filesystem object B(does not) exist, the default C(umask) on the system will be used when setting the mode for the newly created filesystem object.", "If C(mode) is not specified and the destination filesystem object B(does) exist, the mode of the existing filesystem object will be used.", "Specifying C(mode) is the best way to ensure filesystem objects are created with the correct permissions. See CVE-2020-1736 for further details."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "owner", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the user that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current user unless you are root, in which case it can preserve the previous ownership.", "Specifying a numeric username will be assumed to be a user ID and not a username. Avoid numeric usernames to avoid this confusion."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "regexp", "type": "str", "elements": "", "default": null, "required": false, "description": ["Assemble files only if C(regex) matches the filename.", "If not set, all files are assembled.", "Every C(\\) (backslash) must be escaped as C(\\\\) to comply to YAML syntax.", "Uses L(Python regular expressions,https://docs.python.org/3/library/re.html)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "remote_src", "type": "bool", "elements": "", "default": true, "required": false, "description": ["If C(false), it will search for src at originating/master machine.", "If C(true), it will go to the remote/target machine for the src."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "selevel", "type": "str", "elements": "", "default": null, "required": false, "description": ["The level part of the SELinux filesystem object context.", "This is the MLS/MCS attribute, sometimes known as the C(range).", "When set to C(_default), it will use the C(level) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "serole", "type": "str", "elements": "", "default": null, "required": false, "description": ["The role part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(role) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "setype", "type": "str", "elements": "", "default": null, "required": false, "description": ["The type part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(type) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "seuser", "type": "str", "elements": "", "default": null, "required": false, "description": ["The user part of the SELinux filesystem object context.", "By default it uses the C(system) policy, where applicable.", "When set to C(_default), it will use the C(user) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "src", "type": "str", "elements": "", "default": null, "required": true, "description": ["An already existing directory full of source files."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unsafe_writes", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object.", "By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target filesystem objects, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted filesystem objects, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.", "This option allows Ansible to fall back to unsafe methods of updating filesystem objects when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).", "IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate", "type": "str", "elements": "", "default": null, "required": false, "description": ["The validation command to run before copying into place.", "The path to the file to validate is passed in via '%s' which must be present as in the sshd example below.", "The command is passed securely so shell features like expansion and pipes won't work."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/assemble.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.assert", "name": "assert", "fqcn": "ansible.builtin.assert", "local_key": "module module:lib/ansible/modules/assert.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    details: Aside from C(register) and/or in combination with C(delegate_facts),\n      it has little effect.\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\nauthor:\n- Ansible Core Team\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- This module asserts that given expressions are true with an optional custom message.\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/assert.py\nhas_action: true\nmodule: assert\noptions:\n  fail_msg:\n    aliases:\n    - msg\n    description:\n    - The customized message used for a failing assertion.\n    - This argument was called 'msg' before Ansible 2.7, now it is renamed to 'fail_msg'\n      with alias 'msg'.\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  quiet:\n    default: false\n    description:\n    - Set this to C(true) to avoid verbose output.\n    type: bool\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  success_msg:\n    description:\n    - The customized message used for a successful assertion.\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  that:\n    description:\n    - A list of string expressions of the same form that can be passed to the 'when'\n      statement.\n    elements: str\n    required: true\n    type: list\nseealso:\n- module: ansible.builtin.debug\n- module: ansible.builtin.fail\n- module: ansible.builtin.meta\nshort_description: Asserts given expressions are true\nversion_added: '1.5'\nversion_added_collection: ansible.builtin\n", "examples": "\n- ansible.builtin.assert: { that: \"ansible_os_family != 'RedHat'\" }\n\n- ansible.builtin.assert:\n    that:\n      - \"'foo' in some_command_result.stdout\"\n      - number_of_the_counting == 3\n\n- name: After version 2.7 both 'msg' and 'fail_msg' can customize failing assertion message\n  ansible.builtin.assert:\n    that:\n      - my_param <= 100\n      - my_param >= 0\n    fail_msg: \"'my_param' must be between 0 and 100\"\n    success_msg: \"'my_param' is between 0 and 100\"\n\n- name: Please use 'msg' when ansible version is smaller than 2.7\n  ansible.builtin.assert:\n    that:\n      - my_param <= 100\n      - my_param >= 0\n    msg: \"'my_param' must be between 0 and 100\"\n\n- name: Use quiet to avoid verbose output\n  ansible.builtin.assert:\n    that:\n      - my_param <= 100\n      - my_param >= 0\n    quiet: true\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "fail_msg", "type": "str", "elements": "", "default": null, "required": false, "description": ["The customized message used for a failing assertion.", "This argument was called 'msg' before Ansible 2.7, now it is renamed to 'fail_msg' with alias 'msg'."], "choices": null, "aliases": ["msg"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "quiet", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Set this to C(true) to avoid verbose output."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "success_msg", "type": "str", "elements": "", "default": null, "required": false, "description": ["The customized message used for a successful assertion."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "that", "type": "list", "elements": "str", "default": null, "required": true, "description": ["A list of string expressions of the same form that can be passed to the 'when' statement."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/assert.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.async_status", "name": "async_status", "fqcn": "ansible.builtin.async_status", "local_key": "module module:lib/ansible/modules/async_status.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix, windows\n    support: full\nauthor:\n- Ansible Core Team\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- This module gets the status of an asynchronous task.\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/async_status.py\nhas_action: true\nmodule: async_status\noptions:\n  jid:\n    description:\n    - Job or task identifier\n    required: true\n    type: str\n  mode:\n    choices:\n    - cleanup\n    - status\n    default: status\n    description:\n    - If C(status), obtain the status.\n    - If C(cleanup), clean up the async job cache (by default in C(~/.ansible_async/))\n      for the specified job I(jid).\n    type: str\nseealso:\n- description: Detailed information on how to use asynchronous actions and polling.\n  ref: playbooks_async\nshort_description: Obtain status of asynchronous task\nversion_added: '0.5'\nversion_added_collection: ansible.builtin\n", "examples": "\n---\n- name: Asynchronous yum task\n  ansible.builtin.yum:\n    name: docker-io\n    state: present\n  async: 1000\n  poll: 0\n  register: yum_sleeper\n\n- name: Wait for asynchronous job to end\n  ansible.builtin.async_status:\n    jid: '{{ yum_sleeper.ansible_job_id }}'\n  register: job_result\n  until: job_result.finished\n  retries: 100\n  delay: 10\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "jid", "type": "str", "elements": "", "default": null, "required": true, "description": ["Job or task identifier"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mode", "type": "str", "elements": "", "default": "status", "required": false, "description": ["If C(status), obtain the status.", "If C(cleanup), clean up the async job cache (by default in C(~/.ansible_async/)) for the specified job I(jid)."], "choices": ["cleanup", "status"], "aliases": null}], "defined_in": "lib/ansible/modules/async_status.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.blockinfile", "name": "blockinfile", "fqcn": "ansible.builtin.blockinfile", "local_key": "module module:lib/ansible/modules/blockinfile.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: full\n  safe_file_operations:\n    description: Uses Ansible's strict file operation functions to ensure proper permissions\n      and avoid data corruption\n    support: full\n  vault:\n    description: Can automatically decrypt Ansible vaulted files\n    support: none\nauthor:\n- Yaegashi Takeshi (@yaegashi)\ncollection: ansible.builtin\ndescription:\n- This module will insert/update/remove a block of multi-line text surrounded by customizable\n  marker lines.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/blockinfile.py\nhas_action: false\nmodule: blockinfile\nnotes:\n- When using 'with_*' loops be aware that if you do not set a unique mark the block\n  will be overwritten on each iteration.\n- As of Ansible 2.3, the I(dest) option has been changed to I(path) as default, but\n  I(dest) still works as well.\n- Option I(follow) has been removed in Ansible 2.5, because this module modifies the\n  contents of the file so I(follow=no) doesn't make sense.\n- When more then one block should be handled in one file you must change the I(marker)\n  per task.\noptions:\n  attributes:\n    aliases:\n    - attr\n    description:\n    - The attributes the resulting filesystem object should have.\n    - To get supported flags look at the man page for I(chattr) on the target system.\n    - This string should contain the attributes in the same order as the one displayed\n      by I(lsattr).\n    - The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need\n      to be included in the string.\n    type: str\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  backup:\n    default: false\n    description:\n    - Create a backup file including the timestamp information so you can get the\n      original file back if you somehow clobbered it incorrectly.\n    type: bool\n  block:\n    aliases:\n    - content\n    default: ''\n    description:\n    - The text to insert inside the marker lines.\n    - If it is missing or an empty string, the block will be removed as if C(state)\n      were specified to C(absent).\n    type: str\n  create:\n    default: false\n    description:\n    - Create a new file if it does not exist.\n    type: bool\n  group:\n    description:\n    - Name of the group that should own the filesystem object, as would be fed to\n      I(chown).\n    - When left unspecified, it uses the current group of the current user unless\n      you are root, in which case it can preserve the previous ownership.\n    type: str\n  insertafter:\n    choices:\n    - EOF\n    - '*regex*'\n    default: EOF\n    description:\n    - If specified and no begin/ending C(marker) lines are found, the block will be\n      inserted after the last match of specified regular expression.\n    - A special value is available; C(EOF) for inserting the block at the end of the\n      file.\n    - If specified regular expression has no matches, C(EOF) will be used instead.\n    - The presence of the multiline flag (?m) in the regular expression controls whether\n      the match is done line by line or with multiple lines. This behaviour was added\n      in ansible-core 2.14.\n    type: str\n  insertbefore:\n    choices:\n    - BOF\n    - '*regex*'\n    description:\n    - If specified and no begin/ending C(marker) lines are found, the block will be\n      inserted before the last match of specified regular expression.\n    - A special value is available; C(BOF) for inserting the block at the beginning\n      of the file.\n    - If specified regular expression has no matches, the block will be inserted at\n      the end of the file.\n    - The presence of the multiline flag (?m) in the regular expression controls whether\n      the match is done line by line or with multiple lines. This behaviour was added\n      in ansible-core 2.14.\n    type: str\n  marker:\n    default: '# {mark} ANSIBLE MANAGED BLOCK'\n    description:\n    - The marker line template.\n    - C({mark}) will be replaced with the values in C(marker_begin) (default=\"BEGIN\")\n      and C(marker_end) (default=\"END\").\n    - Using a custom marker without the C({mark}) variable may result in the block\n      being repeatedly inserted on subsequent playbook runs.\n    - Multi-line markers are not supported and will result in the block being repeatedly\n      inserted on subsequent playbook runs.\n    - A newline is automatically appended by the module to C(marker_begin) and C(marker_end).\n    type: str\n  marker_begin:\n    default: BEGIN\n    description:\n    - This will be inserted at C({mark}) in the opening ansible block marker.\n    type: str\n    version_added: '2.5'\n    version_added_collection: ansible.builtin\n  marker_end:\n    default: END\n    description:\n    - This will be inserted at C({mark}) in the closing ansible block marker.\n    required: false\n    type: str\n    version_added: '2.5'\n    version_added_collection: ansible.builtin\n  mode:\n    description:\n    - The permissions the resulting filesystem object should have.\n    - For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers.\n      You must either add a leading zero so that Ansible's YAML parser knows it is\n      an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777'))\n      so Ansible receives a string and can do its own conversion from string into\n      number.\n    - Giving Ansible a number without following one of these rules will end up with\n      a decimal number which will have unexpected results.\n    - As of Ansible 1.8, the mode may be specified as a symbolic mode (for example,\n      C(u+rwx) or C(u=rw,g=r,o=r)).\n    - If C(mode) is not specified and the destination filesystem object B(does not)\n      exist, the default C(umask) on the system will be used when setting the mode\n      for the newly created filesystem object.\n    - If C(mode) is not specified and the destination filesystem object B(does) exist,\n      the mode of the existing filesystem object will be used.\n    - Specifying C(mode) is the best way to ensure filesystem objects are created\n      with the correct permissions. See CVE-2020-1736 for further details.\n    type: raw\n  owner:\n    description:\n    - Name of the user that should own the filesystem object, as would be fed to I(chown).\n    - When left unspecified, it uses the current user unless you are root, in which\n      case it can preserve the previous ownership.\n    - Specifying a numeric username will be assumed to be a user ID and not a username.\n      Avoid numeric usernames to avoid this confusion.\n    type: str\n  path:\n    aliases:\n    - dest\n    - destfile\n    - name\n    description:\n    - The file to modify.\n    - Before Ansible 2.3 this option was only usable as I(dest), I(destfile) and I(name).\n    required: true\n    type: path\n  selevel:\n    description:\n    - The level part of the SELinux filesystem object context.\n    - This is the MLS/MCS attribute, sometimes known as the C(range).\n    - When set to C(_default), it will use the C(level) portion of the policy if available.\n    type: str\n  serole:\n    description:\n    - The role part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(role) portion of the policy if available.\n    type: str\n  setype:\n    description:\n    - The type part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(type) portion of the policy if available.\n    type: str\n  seuser:\n    description:\n    - The user part of the SELinux filesystem object context.\n    - By default it uses the C(system) policy, where applicable.\n    - When set to C(_default), it will use the C(user) portion of the policy if available.\n    type: str\n  state:\n    choices:\n    - absent\n    - present\n    default: present\n    description:\n    - Whether the block should be there or not.\n    type: str\n  unsafe_writes:\n    default: false\n    description:\n    - Influence when to use atomic operation to prevent data corruption or inconsistent\n      reads from the target filesystem object.\n    - By default this module uses atomic operations to prevent data corruption or\n      inconsistent reads from the target filesystem objects, but sometimes systems\n      are configured or just broken in ways that prevent this. One example is docker\n      mounted filesystem objects, which cannot be updated atomically from inside the\n      container and can only be written in an unsafe manner.\n    - This option allows Ansible to fall back to unsafe methods of updating filesystem\n      objects when atomic operations fail (however, it doesn't force Ansible to perform\n      unsafe writes).\n    - IMPORTANT! Unsafe writes are subject to race conditions and can lead to data\n      corruption.\n    type: bool\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  validate:\n    description:\n    - The validation command to run before copying the updated file into the final\n      destination.\n    - A temporary file path is used to validate, passed in through '%s' which must\n      be present as in the examples below.\n    - Also, the command is passed securely so shell features such as expansion and\n      pipes will not work.\n    - For an example on how to handle more complex validation than what this option\n      provides, see R(handling complex validation,complex_configuration_validation).\n    type: str\nshort_description: Insert/update/remove a text block surrounded by marker lines\nversion_added: '2.0'\nversion_added_collection: ansible.builtin\n", "examples": "\n# Before Ansible 2.3, option 'dest' or 'name' was used instead of 'path'\n- name: Insert/Update \"Match User\" configuration block in /etc/ssh/sshd_config\n  ansible.builtin.blockinfile:\n    path: /etc/ssh/sshd_config\n    block: |\n      Match User ansible-agent\n      PasswordAuthentication no\n\n- name: Insert/Update eth0 configuration stanza in /etc/network/interfaces\n        (it might be better to copy files into /etc/network/interfaces.d/)\n  ansible.builtin.blockinfile:\n    path: /etc/network/interfaces\n    block: |\n      iface eth0 inet static\n          address 192.0.2.23\n          netmask 255.255.255.0\n\n- name: Insert/Update configuration using a local file and validate it\n  ansible.builtin.blockinfile:\n    block: \"{{ lookup('ansible.builtin.file', './local/sshd_config') }}\"\n    path: /etc/ssh/sshd_config\n    backup: yes\n    validate: /usr/sbin/sshd -T -f %s\n\n- name: Insert/Update HTML surrounded by custom markers after <body> line\n  ansible.builtin.blockinfile:\n    path: /var/www/html/index.html\n    marker: \"<!-- {mark} ANSIBLE MANAGED BLOCK -->\"\n    insertafter: \"<body>\"\n    block: |\n      <h1>Welcome to {{ ansible_hostname }}</h1>\n      <p>Last updated on {{ ansible_date_time.iso8601 }}</p>\n\n- name: Remove HTML as well as surrounding markers\n  ansible.builtin.blockinfile:\n    path: /var/www/html/index.html\n    marker: \"<!-- {mark} ANSIBLE MANAGED BLOCK -->\"\n    block: \"\"\n\n- name: Add mappings to /etc/hosts\n  ansible.builtin.blockinfile:\n    path: /etc/hosts\n    block: |\n      {{ item.ip }} {{ item.name }}\n    marker: \"# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}\"\n  loop:\n    - { name: host1, ip: 10.10.1.10 }\n    - { name: host2, ip: 10.10.1.11 }\n    - { name: host3, ip: 10.10.1.12 }\n\n- name: Search with a multiline search flags regex and if found insert after\n  blockinfile:\n    path: listener.ora\n    block: \"{{ listener_line | indent(width=8, first=True) }}\"\n    insertafter: '(?m)SID_LIST_LISTENER_DG =\\n.*\\(SID_LIST ='\n    marker: \"    <!-- {mark} ANSIBLE MANAGED BLOCK -->\"\n\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "attributes", "type": "str", "elements": "", "default": null, "required": false, "description": ["The attributes the resulting filesystem object should have.", "To get supported flags look at the man page for I(chattr) on the target system.", "This string should contain the attributes in the same order as the one displayed by I(lsattr).", "The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need to be included in the string."], "choices": null, "aliases": ["attr"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "backup", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "block", "type": "str", "elements": "", "default": "", "required": false, "description": ["The text to insert inside the marker lines.", "If it is missing or an empty string, the block will be removed as if C(state) were specified to C(absent)."], "choices": null, "aliases": ["content"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "create", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Create a new file if it does not exist."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "group", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the group that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current group of the current user unless you are root, in which case it can preserve the previous ownership."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "insertafter", "type": "str", "elements": "", "default": "EOF", "required": false, "description": ["If specified and no begin/ending C(marker) lines are found, the block will be inserted after the last match of specified regular expression.", "A special value is available; C(EOF) for inserting the block at the end of the file.", "If specified regular expression has no matches, C(EOF) will be used instead.", "The presence of the multiline flag (?m) in the regular expression controls whether the match is done line by line or with multiple lines. This behaviour was added in ansible-core 2.14."], "choices": ["EOF", "*regex*"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "insertbefore", "type": "str", "elements": "", "default": null, "required": false, "description": ["If specified and no begin/ending C(marker) lines are found, the block will be inserted before the last match of specified regular expression.", "A special value is available; C(BOF) for inserting the block at the beginning of the file.", "If specified regular expression has no matches, the block will be inserted at the end of the file.", "The presence of the multiline flag (?m) in the regular expression controls whether the match is done line by line or with multiple lines. This behaviour was added in ansible-core 2.14."], "choices": ["BOF", "*regex*"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "marker", "type": "str", "elements": "", "default": "# {mark} ANSIBLE MANAGED BLOCK", "required": false, "description": ["The marker line template.", "C({mark}) will be replaced with the values in C(marker_begin) (default=\"BEGIN\") and C(marker_end) (default=\"END\").", "Using a custom marker without the C({mark}) variable may result in the block being repeatedly inserted on subsequent playbook runs.", "Multi-line markers are not supported and will result in the block being repeatedly inserted on subsequent playbook runs.", "A newline is automatically appended by the module to C(marker_begin) and C(marker_end)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "marker_begin", "type": "str", "elements": "", "default": "BEGIN", "required": false, "description": ["This will be inserted at C({mark}) in the opening ansible block marker."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "marker_end", "type": "str", "elements": "", "default": "END", "required": false, "description": ["This will be inserted at C({mark}) in the closing ansible block marker."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mode", "type": "any", "elements": "", "default": null, "required": false, "description": ["The permissions the resulting filesystem object should have.", "For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777')) so Ansible receives a string and can do its own conversion from string into number.", "Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.", "As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r)).", "If C(mode) is not specified and the destination filesystem object B(does not) exist, the default C(umask) on the system will be used when setting the mode for the newly created filesystem object.", "If C(mode) is not specified and the destination filesystem object B(does) exist, the mode of the existing filesystem object will be used.", "Specifying C(mode) is the best way to ensure filesystem objects are created with the correct permissions. See CVE-2020-1736 for further details."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "owner", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the user that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current user unless you are root, in which case it can preserve the previous ownership.", "Specifying a numeric username will be assumed to be a user ID and not a username. Avoid numeric usernames to avoid this confusion."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "path", "type": "str", "elements": "", "default": null, "required": true, "description": ["The file to modify.", "Before Ansible 2.3 this option was only usable as I(dest), I(destfile) and I(name)."], "choices": null, "aliases": ["dest", "destfile", "name"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "selevel", "type": "str", "elements": "", "default": null, "required": false, "description": ["The level part of the SELinux filesystem object context.", "This is the MLS/MCS attribute, sometimes known as the C(range).", "When set to C(_default), it will use the C(level) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "serole", "type": "str", "elements": "", "default": null, "required": false, "description": ["The role part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(role) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "setype", "type": "str", "elements": "", "default": null, "required": false, "description": ["The type part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(type) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "seuser", "type": "str", "elements": "", "default": null, "required": false, "description": ["The user part of the SELinux filesystem object context.", "By default it uses the C(system) policy, where applicable.", "When set to C(_default), it will use the C(user) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "present", "required": false, "description": ["Whether the block should be there or not."], "choices": ["absent", "present"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unsafe_writes", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object.", "By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target filesystem objects, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted filesystem objects, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.", "This option allows Ansible to fall back to unsafe methods of updating filesystem objects when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).", "IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate", "type": "str", "elements": "", "default": null, "required": false, "description": ["The validation command to run before copying the updated file into the final destination.", "A temporary file path is used to validate, passed in through '%s' which must be present as in the examples below.", "Also, the command is passed securely so shell features such as expansion and pipes will not work.", "For an example on how to handle more complex validation than what this option provides, see R(handling complex validation,complex_configuration_validation)."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/blockinfile.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.command", "name": "command", "fqcn": "ansible.builtin.command", "local_key": "module module:lib/ansible/modules/command.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    details: while the command itself is arbitrary and cannot be subject to the check\n      mode semantics it adds C(creates)/C(removes) options as a workaround\n    support: partial\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: full\n  raw:\n    description: Indicates if an action takes a 'raw' or 'free form' string as an\n      option and has it's own special parsing of it\n    support: full\nauthor:\n- Ansible Core Team\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- The C(command) module takes the command name followed by a list of space-delimited\n  arguments.\n- The given command will be executed on all selected nodes.\n- The command(s) will not be processed through the shell, so variables like C($HOSTNAME)\n  and operations like C(\"*\"), C(\"<\"), C(\">\"), C(\"|\"), C(\";\") and C(\"&\") will not work.\n  Use the M(ansible.builtin.shell) module if you need these features.\n- To create C(command) tasks that are easier to read than the ones using space-delimited\n  arguments, pass parameters using the C(args) L(task keyword,https://docs.ansible.com/ansible/latest/reference_appendices/playbooks_keywords.html#task)\n  or use C(cmd) parameter.\n- Either a free form command or C(cmd) parameter is required, see the examples.\n- For Windows targets, use the M(ansible.windows.win_command) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/command.py\nhas_action: true\nmodule: command\nnotes:\n- If you want to run a command through the shell (say you are using C(<), C(>), C(|),\n  and so on), you actually want the M(ansible.builtin.shell) module instead. Parsing\n  shell metacharacters can lead to unexpected commands being executed if quoting is\n  not done correctly so it is more secure to use the C(command) module when possible.\n- C(creates), C(removes), and C(chdir) can be specified after the command. For instance,\n  if you only want to run a command if a certain file does not exist, use this.\n- Check mode is supported when passing C(creates) or C(removes). If running in check\n  mode and either of these are specified, the module will check for the existence\n  of the file and report the correct changed status. If these are not supplied, the\n  task will be skipped.\n- The C(executable) parameter is removed since version 2.4. If you have a need for\n  this parameter, use the M(ansible.builtin.shell) module instead.\n- For Windows targets, use the M(ansible.windows.win_command) module instead.\n- For rebooting systems, use the M(ansible.builtin.reboot) or M(ansible.windows.win_reboot)\n  module.\noptions:\n  argv:\n    description:\n    - Passes the command as a list rather than a string.\n    - Use C(argv) to avoid quoting values that would otherwise be interpreted incorrectly\n      (for example \"user name\").\n    - Only the string (free form) or the list (argv) form can be provided, not both.  One\n      or the other must be provided.\n    elements: str\n    type: list\n    version_added: '2.6'\n    version_added_collection: ansible.builtin\n  chdir:\n    description:\n    - Change into this directory before running the command.\n    type: path\n    version_added: '0.6'\n    version_added_collection: ansible.builtin\n  cmd:\n    description:\n    - The command to run.\n    type: str\n  creates:\n    description:\n    - A filename or (since 2.0) glob pattern. If a matching file already exists, this\n      step B(will not) be run.\n    - This is checked before I(removes) is checked.\n    type: path\n  free_form:\n    description:\n    - The command module takes a free form string as a command to run.\n    - There is no actual parameter named 'free form'.\n  removes:\n    description:\n    - A filename or (since 2.0) glob pattern. If a matching file exists, this step\n      B(will) be run.\n    - This is checked after I(creates) is checked.\n    type: path\n    version_added: '0.8'\n    version_added_collection: ansible.builtin\n  stdin:\n    description:\n    - Set the stdin of the command directly to the specified value.\n    type: str\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  stdin_add_newline:\n    default: true\n    description:\n    - If set to C(true), append a newline to stdin data.\n    type: bool\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  strip_empty_ends:\n    default: true\n    description:\n    - Strip empty lines from the end of stdout/stderr in result.\n    type: bool\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\nseealso:\n- module: ansible.builtin.raw\n- module: ansible.builtin.script\n- module: ansible.builtin.shell\n- module: ansible.windows.win_command\nshort_description: Execute commands on targets\nversion_added: historical\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Return motd to registered var\n  ansible.builtin.command: cat /etc/motd\n  register: mymotd\n\n# free-form (string) arguments, all arguments on one line\n- name: Run command if /path/to/database does not exist (without 'args')\n  ansible.builtin.command: /usr/bin/make_database.sh db_user db_name creates=/path/to/database\n\n# free-form (string) arguments, some arguments on separate lines with the 'args' keyword\n# 'args' is a task keyword, passed at the same level as the module\n- name: Run command if /path/to/database does not exist (with 'args' keyword)\n  ansible.builtin.command: /usr/bin/make_database.sh db_user db_name\n  args:\n    creates: /path/to/database\n\n# 'cmd' is module parameter\n- name: Run command if /path/to/database does not exist (with 'cmd' parameter)\n  ansible.builtin.command:\n    cmd: /usr/bin/make_database.sh db_user db_name\n    creates: /path/to/database\n\n- name: Change the working directory to somedir/ and run the command as db_owner if /path/to/database does not exist\n  ansible.builtin.command: /usr/bin/make_database.sh db_user db_name\n  become: yes\n  become_user: db_owner\n  args:\n    chdir: somedir/\n    creates: /path/to/database\n\n# argv (list) arguments, each argument on a separate line, 'args' keyword not necessary\n# 'argv' is a parameter, indented one level from the module\n- name: Use 'argv' to send a command as a list - leave 'command' empty\n  ansible.builtin.command:\n    argv:\n      - /usr/bin/make_database.sh\n      - Username with whitespace\n      - dbname with whitespace\n    creates: /path/to/database\n\n- name: Safely use templated variable to run command. Always use the quote filter to avoid injection issues\n  ansible.builtin.command: cat {{ myfile|quote }}\n  register: myoutput\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "argv", "type": "list", "elements": "str", "default": null, "required": false, "description": ["Passes the command as a list rather than a string.", "Use C(argv) to avoid quoting values that would otherwise be interpreted incorrectly (for example \"user name\").", "Only the string (free form) or the list (argv) form can be provided, not both.  One or the other must be provided."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "chdir", "type": "str", "elements": "", "default": null, "required": false, "description": ["Change into this directory before running the command."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "cmd", "type": "str", "elements": "", "default": null, "required": false, "description": ["The command to run."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "creates", "type": "str", "elements": "", "default": null, "required": false, "description": ["A filename or (since 2.0) glob pattern. If a matching file already exists, this step B(will not) be run.", "This is checked before I(removes) is checked."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "free_form", "type": "", "elements": "", "default": null, "required": false, "description": ["The command module takes a free form string as a command to run.", "There is no actual parameter named 'free form'."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "removes", "type": "str", "elements": "", "default": null, "required": false, "description": ["A filename or (since 2.0) glob pattern. If a matching file exists, this step B(will) be run.", "This is checked after I(creates) is checked."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "stdin", "type": "str", "elements": "", "default": null, "required": false, "description": ["Set the stdin of the command directly to the specified value."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "stdin_add_newline", "type": "bool", "elements": "", "default": true, "required": false, "description": ["If set to C(true), append a newline to stdin data."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "strip_empty_ends", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Strip empty lines from the end of stdout/stderr in result."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/command.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.copy", "name": "copy", "fqcn": "ansible.builtin.copy", "local_key": "module module:lib/ansible/modules/copy.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\n  safe_file_operations:\n    description: Uses Ansible's strict file operation functions to ensure proper permissions\n      and avoid data corruption\n    support: full\n  vault:\n    description: Can automatically decrypt Ansible vaulted files\n    support: full\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\nauthor:\n- Ansible Core Team\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- The C(copy) module copies a file from the local or remote machine to a location\n  on the remote machine.\n- Use the M(ansible.builtin.fetch) module to copy files from remote locations to the\n  local box.\n- If you need variable interpolation in copied files, use the M(ansible.builtin.template)\n  module. Using a variable in the C(content) field will result in unpredictable output.\n- For Windows targets, use the M(ansible.windows.win_copy) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/copy.py\nhas_action: true\nmodule: copy\nnotes:\n- The M(ansible.builtin.copy) module recursively copy facility does not scale to lots\n  (>hundreds) of files.\noptions:\n  attributes:\n    aliases:\n    - attr\n    description:\n    - The attributes the resulting filesystem object should have.\n    - To get supported flags look at the man page for I(chattr) on the target system.\n    - This string should contain the attributes in the same order as the one displayed\n      by I(lsattr).\n    - The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need\n      to be included in the string.\n    type: str\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  backup:\n    default: false\n    description:\n    - Create a backup file including the timestamp information so you can get the\n      original file back if you somehow clobbered it incorrectly.\n    type: bool\n    version_added: '0.7'\n    version_added_collection: ansible.builtin\n  checksum:\n    description:\n    - SHA1 checksum of the file being transferred.\n    - Used to validate that the copy of the file was successful.\n    - If this is not provided, ansible will use the local calculated checksum of the\n      src file.\n    type: str\n    version_added: '2.5'\n    version_added_collection: ansible.builtin\n  content:\n    description:\n    - When used instead of C(src), sets the contents of a file directly to the specified\n      value.\n    - Works only when C(dest) is a file. Creates the file if it does not exist.\n    - For advanced formatting or if C(content) contains a variable, use the M(ansible.builtin.template)\n      module.\n    type: str\n    version_added: '1.1'\n    version_added_collection: ansible.builtin\n  decrypt:\n    default: true\n    description:\n    - This option controls the autodecryption of source files using vault.\n    type: bool\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  dest:\n    description:\n    - Remote absolute path where the file should be copied to.\n    - If C(src) is a directory, this must be a directory too.\n    - If C(dest) is a non-existent path and if either C(dest) ends with \"/\" or C(src)\n      is a directory, C(dest) is created.\n    - If I(dest) is a relative path, the starting directory is determined by the remote\n      host.\n    - If C(src) and C(dest) are files, the parent directory of C(dest) is not created\n      and the task fails if it does not already exist.\n    required: true\n    type: path\n  directory_mode:\n    description:\n    - When doing a recursive copy set the mode for the directories.\n    - If this is not set we will use the system defaults.\n    - The mode is only set on directories which are newly created, and will not affect\n      those that already existed.\n    type: raw\n    version_added: '1.5'\n    version_added_collection: ansible.builtin\n  follow:\n    default: false\n    description:\n    - This flag indicates that filesystem links in the destination, if they exist,\n      should be followed.\n    type: bool\n    version_added: '1.8'\n    version_added_collection: ansible.builtin\n  force:\n    default: true\n    description:\n    - Influence whether the remote file must always be replaced.\n    - If C(true), the remote file will be replaced when contents are different than\n      the source.\n    - If C(false), the file will only be transferred if the destination does not exist.\n    type: bool\n    version_added: '1.1'\n    version_added_collection: ansible.builtin\n  group:\n    description:\n    - Name of the group that should own the filesystem object, as would be fed to\n      I(chown).\n    - When left unspecified, it uses the current group of the current user unless\n      you are root, in which case it can preserve the previous ownership.\n    type: str\n  local_follow:\n    default: true\n    description:\n    - This flag indicates that filesystem links in the source tree, if they exist,\n      should be followed.\n    type: bool\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  mode:\n    description:\n    - The permissions of the destination file or directory.\n    - For those used to C(/usr/bin/chmod) remember that modes are actually octal numbers.\n      You must either add a leading zero so that Ansible's YAML parser knows it is\n      an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777'))\n      so Ansible receives a string and can do its own conversion from string into\n      number. Giving Ansible a number without following one of these rules will end\n      up with a decimal number which will have unexpected results.\n    - As of Ansible 1.8, the mode may be specified as a symbolic mode (for example,\n      C(u+rwx) or C(u=rw,g=r,o=r)).\n    - As of Ansible 2.3, the mode may also be the special string C(preserve).\n    - C(preserve) means that the file will be given the same permissions as the source\n      file.\n    - When doing a recursive copy, see also C(directory_mode).\n    - If C(mode) is not specified and the destination file B(does not) exist, the\n      default C(umask) on the system will be used when setting the mode for the newly\n      created file.\n    - If C(mode) is not specified and the destination file B(does) exist, the mode\n      of the existing file will be used.\n    - Specifying C(mode) is the best way to ensure files are created with the correct\n      permissions. See CVE-2020-1736 for further details.\n    type: raw\n  owner:\n    description:\n    - Name of the user that should own the filesystem object, as would be fed to I(chown).\n    - When left unspecified, it uses the current user unless you are root, in which\n      case it can preserve the previous ownership.\n    - Specifying a numeric username will be assumed to be a user ID and not a username.\n      Avoid numeric usernames to avoid this confusion.\n    type: str\n  remote_src:\n    default: false\n    description:\n    - Influence whether C(src) needs to be transferred or already is present remotely.\n    - If C(false), it will search for C(src) on the controller node.\n    - If C(true) it will search for C(src) on the managed (remote) node.\n    - C(remote_src) supports recursive copying as of version 2.8.\n    - C(remote_src) only works with C(mode=preserve) as of version 2.6.\n    - Autodecryption of files does not work when C(remote_src=yes).\n    type: bool\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  selevel:\n    description:\n    - The level part of the SELinux filesystem object context.\n    - This is the MLS/MCS attribute, sometimes known as the C(range).\n    - When set to C(_default), it will use the C(level) portion of the policy if available.\n    type: str\n  serole:\n    description:\n    - The role part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(role) portion of the policy if available.\n    type: str\n  setype:\n    description:\n    - The type part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(type) portion of the policy if available.\n    type: str\n  seuser:\n    description:\n    - The user part of the SELinux filesystem object context.\n    - By default it uses the C(system) policy, where applicable.\n    - When set to C(_default), it will use the C(user) portion of the policy if available.\n    type: str\n  src:\n    description:\n    - Local path to a file to copy to the remote server.\n    - This can be absolute or relative.\n    - If path is a directory, it is copied recursively. In this case, if path ends\n      with \"/\", only inside contents of that directory are copied to destination.\n      Otherwise, if it does not end with \"/\", the directory itself with all contents\n      is copied. This behavior is similar to the C(rsync) command line tool.\n    type: path\n  unsafe_writes:\n    default: false\n    description:\n    - Influence when to use atomic operation to prevent data corruption or inconsistent\n      reads from the target filesystem object.\n    - By default this module uses atomic operations to prevent data corruption or\n      inconsistent reads from the target filesystem objects, but sometimes systems\n      are configured or just broken in ways that prevent this. One example is docker\n      mounted filesystem objects, which cannot be updated atomically from inside the\n      container and can only be written in an unsafe manner.\n    - This option allows Ansible to fall back to unsafe methods of updating filesystem\n      objects when atomic operations fail (however, it doesn't force Ansible to perform\n      unsafe writes).\n    - IMPORTANT! Unsafe writes are subject to race conditions and can lead to data\n      corruption.\n    type: bool\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  validate:\n    description:\n    - The validation command to run before copying the updated file into the final\n      destination.\n    - A temporary file path is used to validate, passed in through '%s' which must\n      be present as in the examples below.\n    - Also, the command is passed securely so shell features such as expansion and\n      pipes will not work.\n    - For an example on how to handle more complex validation than what this option\n      provides, see R(handling complex validation,complex_configuration_validation).\n    type: str\nseealso:\n- module: ansible.builtin.assemble\n- module: ansible.builtin.fetch\n- module: ansible.builtin.file\n- module: ansible.builtin.template\n- module: ansible.posix.synchronize\n- module: ansible.windows.win_copy\nshort_description: Copy files to remote locations\nversion_added: historical\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Copy file with owner and permissions\n  ansible.builtin.copy:\n    src: /srv/myfiles/foo.conf\n    dest: /etc/foo.conf\n    owner: foo\n    group: foo\n    mode: '0644'\n\n- name: Copy file with owner and permission, using symbolic representation\n  ansible.builtin.copy:\n    src: /srv/myfiles/foo.conf\n    dest: /etc/foo.conf\n    owner: foo\n    group: foo\n    mode: u=rw,g=r,o=r\n\n- name: Another symbolic mode example, adding some permissions and removing others\n  ansible.builtin.copy:\n    src: /srv/myfiles/foo.conf\n    dest: /etc/foo.conf\n    owner: foo\n    group: foo\n    mode: u+rw,g-wx,o-rwx\n\n- name: Copy a new \"ntp.conf\" file into place, backing up the original if it differs from the copied version\n  ansible.builtin.copy:\n    src: /mine/ntp.conf\n    dest: /etc/ntp.conf\n    owner: root\n    group: root\n    mode: '0644'\n    backup: yes\n\n- name: Copy a new \"sudoers\" file into place, after passing validation with visudo\n  ansible.builtin.copy:\n    src: /mine/sudoers\n    dest: /etc/sudoers\n    validate: /usr/sbin/visudo -csf %s\n\n- name: Copy a \"sudoers\" file on the remote machine for editing\n  ansible.builtin.copy:\n    src: /etc/sudoers\n    dest: /etc/sudoers.edit\n    remote_src: yes\n    validate: /usr/sbin/visudo -csf %s\n\n- name: Copy using inline content\n  ansible.builtin.copy:\n    content: '# This file was moved to /etc/other.conf'\n    dest: /etc/mine.conf\n\n- name: If follow=yes, /path/to/file will be overwritten by contents of foo.conf\n  ansible.builtin.copy:\n    src: /etc/foo.conf\n    dest: /path/to/link  # link to /path/to/file\n    follow: yes\n\n- name: If follow=no, /path/to/link will become a file and be overwritten by contents of foo.conf\n  ansible.builtin.copy:\n    src: /etc/foo.conf\n    dest: /path/to/link  # link to /path/to/file\n    follow: no\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "attributes", "type": "str", "elements": "", "default": null, "required": false, "description": ["The attributes the resulting filesystem object should have.", "To get supported flags look at the man page for I(chattr) on the target system.", "This string should contain the attributes in the same order as the one displayed by I(lsattr).", "The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need to be included in the string."], "choices": null, "aliases": ["attr"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "backup", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "checksum", "type": "str", "elements": "", "default": null, "required": false, "description": ["SHA1 checksum of the file being transferred.", "Used to validate that the copy of the file was successful.", "If this is not provided, ansible will use the local calculated checksum of the src file."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "content", "type": "str", "elements": "", "default": null, "required": false, "description": ["When used instead of C(src), sets the contents of a file directly to the specified value.", "Works only when C(dest) is a file. Creates the file if it does not exist.", "For advanced formatting or if C(content) contains a variable, use the M(ansible.builtin.template) module."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "decrypt", "type": "bool", "elements": "", "default": true, "required": false, "description": ["This option controls the autodecryption of source files using vault."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "dest", "type": "str", "elements": "", "default": null, "required": true, "description": ["Remote absolute path where the file should be copied to.", "If C(src) is a directory, this must be a directory too.", "If C(dest) is a non-existent path and if either C(dest) ends with \"/\" or C(src) is a directory, C(dest) is created.", "If I(dest) is a relative path, the starting directory is determined by the remote host.", "If C(src) and C(dest) are files, the parent directory of C(dest) is not created and the task fails if it does not already exist."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "directory_mode", "type": "any", "elements": "", "default": null, "required": false, "description": ["When doing a recursive copy set the mode for the directories.", "If this is not set we will use the system defaults.", "The mode is only set on directories which are newly created, and will not affect those that already existed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "follow", "type": "bool", "elements": "", "default": false, "required": false, "description": ["This flag indicates that filesystem links in the destination, if they exist, should be followed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "force", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Influence whether the remote file must always be replaced.", "If C(true), the remote file will be replaced when contents are different than the source.", "If C(false), the file will only be transferred if the destination does not exist."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "group", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the group that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current group of the current user unless you are root, in which case it can preserve the previous ownership."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "local_follow", "type": "bool", "elements": "", "default": true, "required": false, "description": ["This flag indicates that filesystem links in the source tree, if they exist, should be followed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mode", "type": "any", "elements": "", "default": null, "required": false, "description": ["The permissions of the destination file or directory.", "For those used to C(/usr/bin/chmod) remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777')) so Ansible receives a string and can do its own conversion from string into number. Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.", "As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r)).", "As of Ansible 2.3, the mode may also be the special string C(preserve).", "C(preserve) means that the file will be given the same permissions as the source file.", "When doing a recursive copy, see also C(directory_mode).", "If C(mode) is not specified and the destination file B(does not) exist, the default C(umask) on the system will be used when setting the mode for the newly created file.", "If C(mode) is not specified and the destination file B(does) exist, the mode of the existing file will be used.", "Specifying C(mode) is the best way to ensure files are created with the correct permissions. See CVE-2020-1736 for further details."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "owner", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the user that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current user unless you are root, in which case it can preserve the previous ownership.", "Specifying a numeric username will be assumed to be a user ID and not a username. Avoid numeric usernames to avoid this confusion."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "remote_src", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Influence whether C(src) needs to be transferred or already is present remotely.", "If C(false), it will search for C(src) on the controller node.", "If C(true) it will search for C(src) on the managed (remote) node.", "C(remote_src) supports recursive copying as of version 2.8.", "C(remote_src) only works with C(mode=preserve) as of version 2.6.", "Autodecryption of files does not work when C(remote_src=yes)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "selevel", "type": "str", "elements": "", "default": null, "required": false, "description": ["The level part of the SELinux filesystem object context.", "This is the MLS/MCS attribute, sometimes known as the C(range).", "When set to C(_default), it will use the C(level) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "serole", "type": "str", "elements": "", "default": null, "required": false, "description": ["The role part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(role) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "setype", "type": "str", "elements": "", "default": null, "required": false, "description": ["The type part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(type) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "seuser", "type": "str", "elements": "", "default": null, "required": false, "description": ["The user part of the SELinux filesystem object context.", "By default it uses the C(system) policy, where applicable.", "When set to C(_default), it will use the C(user) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "src", "type": "str", "elements": "", "default": null, "required": false, "description": ["Local path to a file to copy to the remote server.", "This can be absolute or relative.", "If path is a directory, it is copied recursively. In this case, if path ends with \"/\", only inside contents of that directory are copied to destination. Otherwise, if it does not end with \"/\", the directory itself with all contents is copied. This behavior is similar to the C(rsync) command line tool."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unsafe_writes", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object.", "By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target filesystem objects, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted filesystem objects, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.", "This option allows Ansible to fall back to unsafe methods of updating filesystem objects when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).", "IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate", "type": "str", "elements": "", "default": null, "required": false, "description": ["The validation command to run before copying the updated file into the final destination.", "A temporary file path is used to validate, passed in through '%s' which must be present as in the examples below.", "Also, the command is passed securely so shell features such as expansion and pipes will not work.", "For an example on how to handle more complex validation than what this option provides, see R(handling complex validation,complex_configuration_validation)."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/copy.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.cron", "name": "cron", "fqcn": "ansible.builtin.cron", "local_key": "module module:lib/ansible/modules/cron.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: full\nauthor:\n- Dane Summers (@dsummersl)\n- Mike Grozak (@rhaido)\n- Patrick Callahan (@dirtyharrycallahan)\n- Evan Kaufman (@EvanK)\n- Luca Berruti (@lberruti)\ncollection: ansible.builtin\ndescription:\n- Use this module to manage crontab and environment variables entries. This module\n  allows you to create environment variables and named crontab entries, update, or\n  delete them.\n- 'When crontab jobs are managed: the module includes one line with the description\n  of the crontab entry C(\"#Ansible: <name>\") corresponding to the \"name\" passed to\n  the module, which is used by future ansible/module calls to find/check the state.\n  The \"name\" parameter should be unique, and changing the \"name\" value will result\n  in a new cron task being created (or a different one being removed).'\n- When environment variables are managed, no comment line is added, but, when the\n  module needs to find/check the state, it uses the \"name\" parameter to find the environment\n  variable definition line.\n- When using symbols such as %, they must be properly escaped.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/cron.py\nhas_action: false\nmodule: cron\noptions:\n  backup:\n    default: false\n    description:\n    - If set, create a backup of the crontab before it is modified. The location of\n      the backup is returned in the C(backup_file) variable by this module.\n    type: bool\n  cron_file:\n    description:\n    - If specified, uses this file instead of an individual user's crontab. The assumption\n      is that this file is exclusively managed by the module, do not use if the file\n      contains multiple entries, NEVER use for /etc/crontab.\n    - If this is a relative path, it is interpreted with respect to I(/etc/cron.d).\n    - Many linux distros expect (and some require) the filename portion to consist\n      solely of upper- and lower-case letters, digits, underscores, and hyphens.\n    - Using this parameter requires you to specify the I(user) as well, unless I(state)\n      is not I(present).\n    - Either this parameter or I(name) is required\n    type: path\n  day:\n    aliases:\n    - dom\n    default: '*'\n    description:\n    - Day of the month the job should run (C(1-31), C(*), C(*/2), and so on).\n    type: str\n  disabled:\n    default: false\n    description:\n    - If the job should be disabled (commented out) in the crontab.\n    - Only has effect if I(state=present).\n    type: bool\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  env:\n    default: false\n    description:\n    - If set, manages a crontab's environment variable.\n    - New variables are added on top of crontab.\n    - I(name) and I(value) parameters are the name and the value of environment variable.\n    type: bool\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  hour:\n    default: '*'\n    description:\n    - Hour when the job should run (C(0-23), C(*), C(*/2), and so on).\n    type: str\n  insertafter:\n    description:\n    - Used with I(state=present) and I(env).\n    - If specified, the environment variable will be inserted after the declaration\n      of specified environment variable.\n    type: str\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  insertbefore:\n    description:\n    - Used with I(state=present) and I(env).\n    - If specified, the environment variable will be inserted before the declaration\n      of specified environment variable.\n    type: str\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  job:\n    aliases:\n    - value\n    description:\n    - The command to execute or, if env is set, the value of environment variable.\n    - The command should not contain line breaks.\n    - Required if I(state=present).\n    type: str\n  minute:\n    default: '*'\n    description:\n    - Minute when the job should run (C(0-59), C(*), C(*/2), and so on).\n    type: str\n  month:\n    default: '*'\n    description:\n    - Month of the year the job should run (C(1-12), C(*), C(*/2), and so on).\n    type: str\n  name:\n    description:\n    - Description of a crontab entry or, if env is set, the name of environment variable.\n    - This parameter is always required as of ansible-core 2.12.\n    required: true\n    type: str\n  special_time:\n    choices:\n    - annually\n    - daily\n    - hourly\n    - monthly\n    - reboot\n    - weekly\n    - yearly\n    description:\n    - Special time specification nickname.\n    type: str\n    version_added: '1.3'\n    version_added_collection: ansible.builtin\n  state:\n    choices:\n    - absent\n    - present\n    default: present\n    description:\n    - Whether to ensure the job or environment variable is present or absent.\n    type: str\n  user:\n    description:\n    - The specific user whose crontab should be modified.\n    - When unset, this parameter defaults to the current user.\n    type: str\n  weekday:\n    aliases:\n    - dow\n    default: '*'\n    description:\n    - Day of the week that the job should run (C(0-6) for Sunday-Saturday, C(*), and\n      so on).\n    type: str\nrequirements:\n- cron (any 'vixie cron' conformant variant, like cronie)\nshort_description: Manage cron.d and crontab entries\nversion_added: '0.9'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Ensure a job that runs at 2 and 5 exists. Creates an entry like \"0 5,2 * * ls -alh > /dev/null\"\n  ansible.builtin.cron:\n    name: \"check dirs\"\n    minute: \"0\"\n    hour: \"5,2\"\n    job: \"ls -alh > /dev/null\"\n\n- name: 'Ensure an old job is no longer present. Removes any job that is prefixed by \"#Ansible: an old job\" from the crontab'\n  ansible.builtin.cron:\n    name: \"an old job\"\n    state: absent\n\n- name: Creates an entry like \"@reboot /some/job.sh\"\n  ansible.builtin.cron:\n    name: \"a job for reboot\"\n    special_time: reboot\n    job: \"/some/job.sh\"\n\n- name: Creates an entry like \"PATH=/opt/bin\" on top of crontab\n  ansible.builtin.cron:\n    name: PATH\n    env: yes\n    job: /opt/bin\n\n- name: Creates an entry like \"APP_HOME=/srv/app\" and insert it after PATH declaration\n  ansible.builtin.cron:\n    name: APP_HOME\n    env: yes\n    job: /srv/app\n    insertafter: PATH\n\n- name: Creates a cron file under /etc/cron.d\n  ansible.builtin.cron:\n    name: yum autoupdate\n    weekday: \"2\"\n    minute: \"0\"\n    hour: \"12\"\n    user: root\n    job: \"YUMINTERACTIVE=0 /usr/sbin/yum-autoupdate\"\n    cron_file: ansible_yum-autoupdate\n\n- name: Removes a cron file from under /etc/cron.d\n  ansible.builtin.cron:\n    name: \"yum autoupdate\"\n    cron_file: ansible_yum-autoupdate\n    state: absent\n\n- name: Removes \"APP_HOME\" environment variable from crontab\n  ansible.builtin.cron:\n    name: APP_HOME\n    env: yes\n    state: absent\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "backup", "type": "bool", "elements": "", "default": false, "required": false, "description": ["If set, create a backup of the crontab before it is modified. The location of the backup is returned in the C(backup_file) variable by this module."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "cron_file", "type": "str", "elements": "", "default": null, "required": false, "description": ["If specified, uses this file instead of an individual user's crontab. The assumption is that this file is exclusively managed by the module, do not use if the file contains multiple entries, NEVER use for /etc/crontab.", "If this is a relative path, it is interpreted with respect to I(/etc/cron.d).", "Many linux distros expect (and some require) the filename portion to consist solely of upper- and lower-case letters, digits, underscores, and hyphens.", "Using this parameter requires you to specify the I(user) as well, unless I(state) is not I(present).", "Either this parameter or I(name) is required"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "day", "type": "str", "elements": "", "default": "*", "required": false, "description": ["Day of the month the job should run (C(1-31), C(*), C(*/2), and so on)."], "choices": null, "aliases": ["dom"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "disabled", "type": "bool", "elements": "", "default": false, "required": false, "description": ["If the job should be disabled (commented out) in the crontab.", "Only has effect if I(state=present)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "env", "type": "bool", "elements": "", "default": false, "required": false, "description": ["If set, manages a crontab's environment variable.", "New variables are added on top of crontab.", "I(name) and I(value) parameters are the name and the value of environment variable."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "hour", "type": "str", "elements": "", "default": "*", "required": false, "description": ["Hour when the job should run (C(0-23), C(*), C(*/2), and so on)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "insertafter", "type": "str", "elements": "", "default": null, "required": false, "description": ["Used with I(state=present) and I(env).", "If specified, the environment variable will be inserted after the declaration of specified environment variable."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "insertbefore", "type": "str", "elements": "", "default": null, "required": false, "description": ["Used with I(state=present) and I(env).", "If specified, the environment variable will be inserted before the declaration of specified environment variable."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "job", "type": "str", "elements": "", "default": null, "required": false, "description": ["The command to execute or, if env is set, the value of environment variable.", "The command should not contain line breaks.", "Required if I(state=present)."], "choices": null, "aliases": ["value"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "minute", "type": "str", "elements": "", "default": "*", "required": false, "description": ["Minute when the job should run (C(0-59), C(*), C(*/2), and so on)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "month", "type": "str", "elements": "", "default": "*", "required": false, "description": ["Month of the year the job should run (C(1-12), C(*), C(*/2), and so on)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": true, "description": ["Description of a crontab entry or, if env is set, the name of environment variable.", "This parameter is always required as of ansible-core 2.12."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "special_time", "type": "str", "elements": "", "default": null, "required": false, "description": ["Special time specification nickname."], "choices": ["annually", "daily", "hourly", "monthly", "reboot", "weekly", "yearly"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "present", "required": false, "description": ["Whether to ensure the job or environment variable is present or absent."], "choices": ["absent", "present"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "user", "type": "str", "elements": "", "default": null, "required": false, "description": ["The specific user whose crontab should be modified.", "When unset, this parameter defaults to the current user."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "weekday", "type": "str", "elements": "", "default": "*", "required": false, "description": ["Day of the week that the job should run (C(0-6) for Sunday-Saturday, C(*), and so on)."], "choices": null, "aliases": ["dow"]}], "defined_in": "lib/ansible/modules/cron.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.debconf", "name": "debconf", "fqcn": "ansible.builtin.debconf", "local_key": "module module:lib/ansible/modules/debconf.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: debian\n    support: full\nauthor:\n- Brian Coca (@bcoca)\ncollection: ansible.builtin\ndescription:\n- Configure a .deb package using debconf-set-selections.\n- Or just query existing selections.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/debconf.py\nhas_action: false\nmodule: debconf\nnotes:\n- This module requires the command line debconf tools.\n- A number of questions have to be answered (depending on the package). Use 'debconf-show\n  <package>' on any Debian or derivative with the package installed to see questions/settings\n  available.\n- Some distros will always record tasks involving the setting of passwords as changed.\n  This is due to debconf-get-selections masking passwords.\n- It is highly recommended to add I(no_log=True) to task while handling sensitive\n  information using this module.\n- The debconf module does not reconfigure packages, it just updates the debconf database.\n  An additional step is needed (typically with I(notify) if debconf makes a change)\n  to reconfigure the package and apply the changes. debconf is extensively used for\n  pre-seeding configuration prior to installation rather than modifying configurations.\n  So, while dpkg-reconfigure does use debconf data, it is not always authoritative\n  and you may need to check how your package is handled.\n- Also note dpkg-reconfigure is a 3-phase process. It invokes the control scripts\n  from the C(/var/lib/dpkg/info) directory with the C(<package>.prerm  reconfigure\n  <version>), C(<package>.config reconfigure <version>) and C(<package>.postinst control\n  <version>) arguments.\n- The main issue is that the C(<package>.config reconfigure) step for many packages\n  will first reset the debconf database (overriding changes made by this module) by\n  checking the on-disk configuration. If this is the case for your package then dpkg-reconfigure\n  will effectively ignore changes  made by debconf.\n- However as dpkg-reconfigure only executes the C(<package>.config) step if the file\n  exists, it is possible to rename it to C(/var/lib/dpkg/info/<package>.config.ignore)\n  before executing C(dpkg-reconfigure -f noninteractive <package>) and then restore\n  it. This seems to be compliant with Debian policy for the .config file.\noptions:\n  name:\n    aliases:\n    - pkg\n    description:\n    - Name of package to configure.\n    required: true\n    type: str\n  question:\n    aliases:\n    - selection\n    - setting\n    description:\n    - A debconf configuration setting.\n    type: str\n  unseen:\n    default: false\n    description:\n    - Do not set 'seen' flag when pre-seeding.\n    type: bool\n  value:\n    aliases:\n    - answer\n    description:\n    - Value to set the configuration to.\n    type: str\n  vtype:\n    choices:\n    - boolean\n    - error\n    - multiselect\n    - note\n    - password\n    - seen\n    - select\n    - string\n    - text\n    - title\n    description:\n    - The type of the value supplied.\n    - It is highly recommended to add I(no_log=True) to task while specifying I(vtype=password).\n    - C(seen) was added in Ansible 2.2.\n    type: str\nrequirements:\n- debconf\n- debconf-utils\nshort_description: Configure a .deb package\nversion_added: '1.6'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Set default locale to fr_FR.UTF-8\n  ansible.builtin.debconf:\n    name: locales\n    question: locales/default_environment_locale\n    value: fr_FR.UTF-8\n    vtype: select\n\n- name: Set to generate locales\n  ansible.builtin.debconf:\n    name: locales\n    question: locales/locales_to_be_generated\n    value: en_US.UTF-8 UTF-8, fr_FR.UTF-8 UTF-8\n    vtype: multiselect\n\n- name: Accept oracle license\n  ansible.builtin.debconf:\n    name: oracle-java7-installer\n    question: shared/accepted-oracle-license-v1-1\n    value: 'true'\n    vtype: select\n\n- name: Specifying package you can register/return the list of questions and current values\n  ansible.builtin.debconf:\n    name: tzdata\n\n- name: Pre-configure tripwire site passphrase\n  ansible.builtin.debconf:\n    name: tripwire\n    question: tripwire/site-passphrase\n    value: \"{{ site_passphrase }}\"\n    vtype: password\n  no_log: True\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": true, "description": ["Name of package to configure."], "choices": null, "aliases": ["pkg"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "question", "type": "str", "elements": "", "default": null, "required": false, "description": ["A debconf configuration setting."], "choices": null, "aliases": ["selection", "setting"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unseen", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Do not set 'seen' flag when pre-seeding."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "value", "type": "str", "elements": "", "default": null, "required": false, "description": ["Value to set the configuration to."], "choices": null, "aliases": ["answer"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "vtype", "type": "str", "elements": "", "default": null, "required": false, "description": ["The type of the value supplied.", "It is highly recommended to add I(no_log=True) to task while specifying I(vtype=password).", "C(seen) was added in Ansible 2.2."], "choices": ["boolean", "error", "multiselect", "note", "password", "seen", "select", "string", "text", "title"], "aliases": null}], "defined_in": "lib/ansible/modules/debconf.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.debug", "name": "debug", "fqcn": "ansible.builtin.debug", "local_key": "module module:lib/ansible/modules/debug.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    details: Aside from C(register) and/or in combination with C(delegate_facts),\n      it has little effect.\n    support: partial\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: full\nauthor:\n- Dag Wieers (@dagwieers)\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- This module prints statements during execution and can be useful for debugging variables\n  or expressions without necessarily halting the playbook.\n- Useful for debugging together with the 'when:' directive.\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/debug.py\nhas_action: true\nmodule: debug\noptions:\n  msg:\n    default: Hello world!\n    description:\n    - The customized message that is printed. If omitted, prints a generic message.\n    type: str\n  var:\n    description:\n    - A variable name to debug.\n    - Mutually exclusive with the C(msg) option.\n    - Be aware that this option already runs in Jinja2 context and has an implicit\n      C({{ }}) wrapping, so you should not be using Jinja2 delimiters unless you are\n      looking for double interpolation.\n    type: str\n  verbosity:\n    default: 0\n    description:\n    - A number that controls when the debug is run, if you set to 3 it will only run\n      debug when -vvv or above.\n    type: int\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\nseealso:\n- module: ansible.builtin.assert\n- module: ansible.builtin.fail\nshort_description: Print statements during execution\nversion_added: '0.8'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Print the gateway for each host when defined\n  ansible.builtin.debug:\n    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}\n  when: ansible_default_ipv4.gateway is defined\n\n- name: Get uptime information\n  ansible.builtin.shell: /usr/bin/uptime\n  register: result\n\n- name: Print return information from the previous task\n  ansible.builtin.debug:\n    var: result\n    verbosity: 2\n\n- name: Display all variables/facts known for a host\n  ansible.builtin.debug:\n    var: hostvars[inventory_hostname]\n    verbosity: 4\n\n- name: Prints two lines of messages, but only if there is an environment value set\n  ansible.builtin.debug:\n    msg:\n    - \"Provisioning based on YOUR_KEY which is: {{ lookup('ansible.builtin.env', 'YOUR_KEY') }}\"\n    - \"These servers were built using the password of '{{ password_used }}'. Please retain this for later use.\"\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "msg", "type": "str", "elements": "", "default": "Hello world!", "required": false, "description": ["The customized message that is printed. If omitted, prints a generic message."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "var", "type": "str", "elements": "", "default": null, "required": false, "description": ["A variable name to debug.", "Mutually exclusive with the C(msg) option.", "Be aware that this option already runs in Jinja2 context and has an implicit C({{ }}) wrapping, so you should not be using Jinja2 delimiters unless you are looking for double interpolation."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "verbosity", "type": "int", "elements": "", "default": 0, "required": false, "description": ["A number that controls when the debug is run, if you set to 3 it will only run debug when -vvv or above."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/debug.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.dnf", "name": "dnf", "fqcn": "ansible.builtin.dnf", "local_key": "module module:lib/ansible/modules/dnf.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    details: In the case of dnf, it has 2 action plugins that use it under the hood,\n      M(ansible.builtin.yum) and M(ansible.builtin.package).\n    support: partial\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: rhel\n    support: N/A\nauthor:\n- Igor Gnatenko (@ignatenkobrain) <i.gnatenko.brain@gmail.com>\n- Cristian van Ee (@DJMuggs) <cristian at cvee.org>\n- Berend De Schouwer (@berenddeschouwer)\n- Adam Miller (@maxamillion) <admiller@redhat.com>\ncollection: ansible.builtin\ndescription:\n- Installs, upgrade, removes, and lists packages and groups with the I(dnf) package\n  manager.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/dnf.py\nhas_action: false\nmodule: dnf\nnotes:\n- When used with a C(loop:) each package will be processed individually, it is much\n  more efficient to pass the list directly to the I(name) option.\n- Group removal doesn't work if the group was installed with Ansible because upstream\n  dnf's API doesn't properly mark groups as installed, therefore upon removal the\n  module is unable to detect that the group is installed (https://bugzilla.redhat.com/show_bug.cgi?id=1620324)\noptions:\n  allow_downgrade:\n    default: 'no'\n    description:\n    - Specify if the named package and version is allowed to downgrade a maybe already\n      installed higher version of that package. Note that setting allow_downgrade=True\n      can make this module behave in a non-idempotent way. The task could end up with\n      a set of packages that does not match the complete list of specified packages\n      to install (because dependencies between the downgraded package and others can\n      cause changes to the packages which were in the earlier transaction).\n    type: bool\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  allowerasing:\n    default: 'no'\n    description:\n    - If C(true) it allows  erasing  of  installed  packages to resolve dependencies.\n    required: false\n    type: bool\n    version_added: '2.10'\n    version_added_collection: ansible.builtin\n  autoremove:\n    default: 'no'\n    description:\n    - If C(true), removes all \"leaf\" packages from the system that were originally\n      installed as dependencies of user-installed packages but which are no longer\n      required by any such package. Should be used alone or when state is I(absent)\n    type: bool\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  bugfix:\n    default: 'no'\n    description:\n    - If set to C(true), and C(state=latest) then only installs updates that have\n      been marked bugfix related.\n    - Note that, similar to C(dnf upgrade-minimal), this filter applies to dependencies\n      as well.\n    type: bool\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  cacheonly:\n    default: 'no'\n    description:\n    - Tells dnf to run entirely from system cache; does not download or update metadata.\n    type: bool\n    version_added: '2.12'\n    version_added_collection: ansible.builtin\n  conf_file:\n    description:\n    - The remote dnf configuration file to use for the transaction.\n    type: str\n  disable_excludes:\n    description:\n    - Disable the excludes defined in DNF config files.\n    - If set to C(all), disables all excludes.\n    - If set to C(main), disable excludes defined in [main] in dnf.conf.\n    - If set to C(repoid), disable excludes defined for given repo id.\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  disable_gpg_check:\n    default: 'no'\n    description:\n    - Whether to disable the GPG checking of signatures of packages being installed.\n      Has an effect only if state is I(present) or I(latest).\n    - This setting affects packages installed from a repository as well as \"local\"\n      packages installed from the filesystem or a URL.\n    type: bool\n  disable_plugin:\n    description:\n    - I(Plugin) name to disable for the install/update operation. The disabled plugins\n      will not persist beyond the transaction.\n    elements: str\n    type: list\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  disablerepo:\n    description:\n    - I(Repoid) of repositories to disable for the install/update operation. These\n      repos will not persist beyond the transaction. When specifying multiple repos,\n      separate them with a \",\".\n    elements: str\n    type: list\n  download_dir:\n    description:\n    - Specifies an alternate directory to store packages.\n    - Has an effect only if I(download_only) is specified.\n    type: str\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  download_only:\n    default: 'no'\n    description:\n    - Only download the packages, do not install them.\n    type: bool\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  enable_plugin:\n    description:\n    - I(Plugin) name to enable for the install/update operation. The enabled plugin\n      will not persist beyond the transaction.\n    elements: str\n    type: list\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  enablerepo:\n    description:\n    - I(Repoid) of repositories to enable for the install/update operation. These\n      repos will not persist beyond the transaction. When specifying multiple repos,\n      separate them with a \",\".\n    elements: str\n    type: list\n  exclude:\n    description:\n    - Package name(s) to exclude when state=present, or latest. This can be a list\n      or a comma separated string.\n    elements: str\n    type: list\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  install_repoquery:\n    default: 'yes'\n    description:\n    - This is effectively a no-op in DNF as it is not needed with DNF, but is an accepted\n      parameter for feature parity/compatibility with the I(yum) module.\n    type: bool\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  install_weak_deps:\n    default: 'yes'\n    description:\n    - Will also install all packages linked by a weak dependency relation.\n    type: bool\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  installroot:\n    default: /\n    description:\n    - Specifies an alternative installroot, relative to which all packages will be\n      installed.\n    type: str\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  list:\n    description:\n    - Various (non-idempotent) commands for usage with C(/usr/bin/ansible) and I(not)\n      playbooks. Use M(ansible.builtin.package_facts) instead of the C(list) argument\n      as a best practice.\n    type: str\n  lock_timeout:\n    default: 30\n    description:\n    - Amount of time to wait for the dnf lockfile to be freed.\n    required: false\n    type: int\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  name:\n    aliases:\n    - pkg\n    description:\n    - 'A package name or package specifier with version, like C(name-1.0). When using\n      state=latest, this can be ''*'' which means run: dnf -y update. You can also\n      pass a url or a local path to a rpm file. To operate on several packages this\n      can accept a comma separated string of packages or a list of packages.'\n    - Comparison operators for package version are valid here C(>), C(<), C(>=), C(<=).\n      Example - C(name >= 1.0). Spaces around the operator are required.\n    - You can also pass an absolute path for a binary which is provided by the package\n      to install. See examples for more information.\n    elements: str\n    required: true\n    type: list\n  nobest:\n    default: 'no'\n    description:\n    - Set best option to False, so that transactions are not limited to best candidates\n      only.\n    required: false\n    type: bool\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  releasever:\n    description:\n    - Specifies an alternative release from which all packages will be installed.\n    type: str\n    version_added: '2.6'\n    version_added_collection: ansible.builtin\n  security:\n    default: 'no'\n    description:\n    - If set to C(true), and C(state=latest) then only installs updates that have\n      been marked security related.\n    - Note that, similar to C(dnf upgrade-minimal), this filter applies to dependencies\n      as well.\n    type: bool\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  skip_broken:\n    default: 'no'\n    description:\n    - Skip all unavailable packages or packages with broken dependencies without raising\n      an error. Equivalent to passing the --skip-broken option.\n    type: bool\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  sslverify:\n    default: 'yes'\n    description:\n    - Disables SSL validation of the repository server for this transaction.\n    - This should be set to C(false) if one of the configured repositories is using\n      an untrusted or self-signed certificate.\n    type: bool\n    version_added: '2.13'\n    version_added_collection: ansible.builtin\n  state:\n    choices:\n    - absent\n    - present\n    - installed\n    - removed\n    - latest\n    description:\n    - Whether to install (C(present), C(latest)), or remove (C(absent)) a package.\n    - Default is C(None), however in effect the default action is C(present) unless\n      the C(autoremove) option is enabled for this module, then C(absent) is inferred.\n    type: str\n  update_cache:\n    aliases:\n    - expire-cache\n    default: 'no'\n    description:\n    - Force dnf to check if cache is out of date and redownload if needed. Has an\n      effect only if state is I(present) or I(latest).\n    type: bool\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  update_only:\n    default: 'no'\n    description:\n    - When using latest, only update installed packages. Do not install packages.\n    - Has an effect only if state is I(latest)\n    type: bool\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  validate_certs:\n    default: 'yes'\n    description:\n    - This only applies if using a https url as the source of the rpm. e.g. for localinstall.\n      If set to C(false), the SSL certificates will not be validated.\n    - This should only set to C(false) used on personally controlled sites using self-signed\n      certificates as it avoids verifying the source site.\n    type: bool\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\nrequirements:\n- python >= 2.6\n- python-dnf\n- for the autoremove option you need dnf >= 2.0.1\"\nshort_description: Manages packages with the I(dnf) package manager\nversion_added: 1.9\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Install the latest version of Apache\n  ansible.builtin.dnf:\n    name: httpd\n    state: latest\n\n- name: Install Apache >= 2.4\n  ansible.builtin.dnf:\n    name: httpd >= 2.4\n    state: present\n\n- name: Install the latest version of Apache and MariaDB\n  ansible.builtin.dnf:\n    name:\n      - httpd\n      - mariadb-server\n    state: latest\n\n- name: Remove the Apache package\n  ansible.builtin.dnf:\n    name: httpd\n    state: absent\n\n- name: Install the latest version of Apache from the testing repo\n  ansible.builtin.dnf:\n    name: httpd\n    enablerepo: testing\n    state: present\n\n- name: Upgrade all packages\n  ansible.builtin.dnf:\n    name: \"*\"\n    state: latest\n\n- name: Update the webserver, depending on which is installed on the system. Do not install the other one\n  ansible.builtin.dnf:\n    name:\n      - httpd\n      - nginx\n    state: latest\n    update_only: yes\n\n- name: Install the nginx rpm from a remote repo\n  ansible.builtin.dnf:\n    name: 'http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm'\n    state: present\n\n- name: Install nginx rpm from a local file\n  ansible.builtin.dnf:\n    name: /usr/local/src/nginx-release-centos-6-0.el6.ngx.noarch.rpm\n    state: present\n\n- name: Install Package based upon the file it provides\n  ansible.builtin.dnf:\n    name: /usr/bin/cowsay\n    state: present\n\n- name: Install the 'Development tools' package group\n  ansible.builtin.dnf:\n    name: '@Development tools'\n    state: present\n\n- name: Autoremove unneeded packages installed as dependencies\n  ansible.builtin.dnf:\n    autoremove: yes\n\n- name: Uninstall httpd but keep its dependencies\n  ansible.builtin.dnf:\n    name: httpd\n    state: absent\n    autoremove: no\n\n- name: Install a modularity appstream with defined stream and profile\n  ansible.builtin.dnf:\n    name: '@postgresql:9.6/client'\n    state: present\n\n- name: Install a modularity appstream with defined stream\n  ansible.builtin.dnf:\n    name: '@postgresql:9.6'\n    state: present\n\n- name: Install a modularity appstream with defined profile\n  ansible.builtin.dnf:\n    name: '@postgresql/client'\n    state: present\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "allow_downgrade", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Specify if the named package and version is allowed to downgrade a maybe already installed higher version of that package. Note that setting allow_downgrade=True can make this module behave in a non-idempotent way. The task could end up with a set of packages that does not match the complete list of specified packages to install (because dependencies between the downgraded package and others can cause changes to the packages which were in the earlier transaction)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "allowerasing", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If C(true) it allows  erasing  of  installed  packages to resolve dependencies."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "autoremove", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If C(true), removes all \"leaf\" packages from the system that were originally installed as dependencies of user-installed packages but which are no longer required by any such package. Should be used alone or when state is I(absent)"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "bugfix", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If set to C(true), and C(state=latest) then only installs updates that have been marked bugfix related.", "Note that, similar to C(dnf upgrade-minimal), this filter applies to dependencies as well."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "cacheonly", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Tells dnf to run entirely from system cache; does not download or update metadata."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "conf_file", "type": "str", "elements": "", "default": null, "required": false, "description": ["The remote dnf configuration file to use for the transaction."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "disable_excludes", "type": "str", "elements": "", "default": null, "required": false, "description": ["Disable the excludes defined in DNF config files.", "If set to C(all), disables all excludes.", "If set to C(main), disable excludes defined in [main] in dnf.conf.", "If set to C(repoid), disable excludes defined for given repo id."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "disable_gpg_check", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Whether to disable the GPG checking of signatures of packages being installed. Has an effect only if state is I(present) or I(latest).", "This setting affects packages installed from a repository as well as \"local\" packages installed from the filesystem or a URL."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "disable_plugin", "type": "list", "elements": "str", "default": null, "required": false, "description": ["I(Plugin) name to disable for the install/update operation. The disabled plugins will not persist beyond the transaction."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "disablerepo", "type": "list", "elements": "str", "default": null, "required": false, "description": ["I(Repoid) of repositories to disable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos, separate them with a \",\"."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "download_dir", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies an alternate directory to store packages.", "Has an effect only if I(download_only) is specified."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "download_only", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Only download the packages, do not install them."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "enable_plugin", "type": "list", "elements": "str", "default": null, "required": false, "description": ["I(Plugin) name to enable for the install/update operation. The enabled plugin will not persist beyond the transaction."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "enablerepo", "type": "list", "elements": "str", "default": null, "required": false, "description": ["I(Repoid) of repositories to enable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos, separate them with a \",\"."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "exclude", "type": "list", "elements": "str", "default": null, "required": false, "description": ["Package name(s) to exclude when state=present, or latest. This can be a list or a comma separated string."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "install_repoquery", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["This is effectively a no-op in DNF as it is not needed with DNF, but is an accepted parameter for feature parity/compatibility with the I(yum) module."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "install_weak_deps", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["Will also install all packages linked by a weak dependency relation."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "installroot", "type": "str", "elements": "", "default": "/", "required": false, "description": ["Specifies an alternative installroot, relative to which all packages will be installed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "list", "type": "str", "elements": "", "default": null, "required": false, "description": ["Various (non-idempotent) commands for usage with C(/usr/bin/ansible) and I(not) playbooks. Use M(ansible.builtin.package_facts) instead of the C(list) argument as a best practice."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "lock_timeout", "type": "int", "elements": "", "default": 30, "required": false, "description": ["Amount of time to wait for the dnf lockfile to be freed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "list", "elements": "str", "default": null, "required": true, "description": ["A package name or package specifier with version, like C(name-1.0). When using state=latest, this can be '*' which means run: dnf -y update. You can also pass a url or a local path to a rpm file. To operate on several packages this can accept a comma separated string of packages or a list of packages.", "Comparison operators for package version are valid here C(>), C(<), C(>=), C(<=). Example - C(name >= 1.0). Spaces around the operator are required.", "You can also pass an absolute path for a binary which is provided by the package to install. See examples for more information."], "choices": null, "aliases": ["pkg"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "nobest", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Set best option to False, so that transactions are not limited to best candidates only."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "releasever", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies an alternative release from which all packages will be installed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "security", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If set to C(true), and C(state=latest) then only installs updates that have been marked security related.", "Note that, similar to C(dnf upgrade-minimal), this filter applies to dependencies as well."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "skip_broken", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Skip all unavailable packages or packages with broken dependencies without raising an error. Equivalent to passing the --skip-broken option."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "sslverify", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["Disables SSL validation of the repository server for this transaction.", "This should be set to C(false) if one of the configured repositories is using an untrusted or self-signed certificate."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": null, "required": false, "description": ["Whether to install (C(present), C(latest)), or remove (C(absent)) a package.", "Default is C(None), however in effect the default action is C(present) unless the C(autoremove) option is enabled for this module, then C(absent) is inferred."], "choices": ["absent", "present", "installed", "removed", "latest"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "update_cache", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Force dnf to check if cache is out of date and redownload if needed. Has an effect only if state is I(present) or I(latest)."], "choices": null, "aliases": ["expire-cache"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "update_only", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["When using latest, only update installed packages. Do not install packages.", "Has an effect only if state is I(latest)"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate_certs", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["This only applies if using a https url as the source of the rpm. e.g. for localinstall. If set to C(false), the SSL certificates will not be validated.", "This should only set to C(false) used on personally controlled sites using self-signed certificates as it avoids verifying the source site."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/dnf.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.dpkg_selections", "name": "dpkg_selections", "fqcn": "ansible.builtin.dpkg_selections", "local_key": "module module:lib/ansible/modules/dpkg_selections.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: debian\n    support: full\nauthor:\n- Brian Brazil (@brian-brazil)  <brian.brazil@boxever.com>\ncollection: ansible.builtin\ndescription:\n- Change dpkg package selection state via --get-selections and --set-selections.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/dpkg_selections.py\nhas_action: false\nmodule: dpkg_selections\nnotes:\n- This module won't cause any packages to be installed/removed/purged, use the C(apt)\n  module for that.\noptions:\n  name:\n    description:\n    - Name of the package.\n    required: true\n    type: str\n  selection:\n    choices:\n    - install\n    - hold\n    - deinstall\n    - purge\n    description:\n    - The selection state to set the package to.\n    required: true\n    type: str\nshort_description: Dpkg package selection selections\nversion_added: '2.0'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Prevent python from being upgraded\n  ansible.builtin.dpkg_selections:\n    name: python\n    selection: hold\n\n- name: Allow python to be upgraded\n  ansible.builtin.dpkg_selections:\n    name: python\n    selection: install\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": true, "description": ["Name of the package."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "selection", "type": "str", "elements": "", "default": null, "required": true, "description": ["The selection state to set the package to."], "choices": ["install", "hold", "deinstall", "purge"], "aliases": null}], "defined_in": "lib/ansible/modules/dpkg_selections.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.expect", "name": "expect", "fqcn": "ansible.builtin.expect", "local_key": "module module:lib/ansible/modules/expect.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: full\nauthor: Matt Martz (@sivel)\ncollection: ansible.builtin\ndescription:\n- The C(expect) module executes a command and responds to prompts.\n- The given command will be executed on all selected nodes. It will not be processed\n  through the shell, so variables like C($HOME) and operations like C(\"<\"), C(\">\"),\n  C(\"|\"), and C(\"&\") will not work.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/expect.py\nhas_action: false\nmodule: expect\nnotes:\n- If you want to run a command through the shell (say you are using C(<), C(>), C(|),\n  and so on), you must specify a shell in the command such as C(/bin/bash -c \"/path/to/something\n  | grep else\").\n- The question, or key, under I(responses) is a python regex match. Case insensitive\n  searches are indicated with a prefix of C(?i).\n- The C(pexpect) library used by this module operates with a search window of 2000\n  bytes, and does not use a multiline regex match. To perform a start of line bound\n  match, use a pattern like ``(?m)^pattern``\n- By default, if a question is encountered multiple times, its string response will\n  be repeated. If you need different responses for successive question matches, instead\n  of a string response, use a list of strings as the response. The list functionality\n  is new in 2.1.\n- The M(ansible.builtin.expect) module is designed for simple scenarios. For more\n  complex needs, consider the use of expect code with the M(ansible.builtin.shell)\n  or M(ansible.builtin.script) modules. (An example is part of the M(ansible.builtin.shell)\n  module documentation).\noptions:\n  chdir:\n    description:\n    - Change into this directory before running the command.\n    type: path\n  command:\n    description:\n    - The command module takes command to run.\n    required: true\n    type: str\n  creates:\n    description:\n    - A filename, when it already exists, this step will B(not) be run.\n    type: path\n  echo:\n    default: false\n    description:\n    - Whether or not to echo out your response strings.\n    type: bool\n  removes:\n    description:\n    - A filename, when it does not exist, this step will B(not) be run.\n    type: path\n  responses:\n    description:\n    - Mapping of expected string/regex and string to respond with. If the response\n      is a list, successive matches return successive responses. List functionality\n      is new in 2.1.\n    required: true\n    type: dict\n  timeout:\n    default: 30\n    description:\n    - Amount of time in seconds to wait for the expected strings. Use C(null) to disable\n      timeout.\n    type: int\nrequirements:\n- python >= 2.6\n- pexpect >= 3.3\nseealso:\n- module: ansible.builtin.script\n- module: ansible.builtin.shell\nshort_description: Executes a command and responds to prompts\nversion_added: '2.0'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Case insensitive password string match\n  ansible.builtin.expect:\n    command: passwd username\n    responses:\n      (?i)password: \"MySekretPa$$word\"\n  # you don't want to show passwords in your logs\n  no_log: true\n\n- name: Generic question with multiple different responses\n  ansible.builtin.expect:\n    command: /path/to/custom/command\n    responses:\n      Question:\n        - response1\n        - response2\n        - response3\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "chdir", "type": "str", "elements": "", "default": null, "required": false, "description": ["Change into this directory before running the command."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "command", "type": "str", "elements": "", "default": null, "required": true, "description": ["The command module takes command to run."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "creates", "type": "str", "elements": "", "default": null, "required": false, "description": ["A filename, when it already exists, this step will B(not) be run."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "echo", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Whether or not to echo out your response strings."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "removes", "type": "str", "elements": "", "default": null, "required": false, "description": ["A filename, when it does not exist, this step will B(not) be run."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "responses", "type": "dict", "elements": "", "default": null, "required": true, "description": ["Mapping of expected string/regex and string to respond with. If the response is a list, successive matches return successive responses. List functionality is new in 2.1."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "timeout", "type": "int", "elements": "", "default": 30, "required": false, "description": ["Amount of time in seconds to wait for the expected strings. Use C(null) to disable timeout."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/expect.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.fail", "name": "fail", "fqcn": "ansible.builtin.fail", "local_key": "module module:lib/ansible/modules/fail.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    details: Aside from C(register) and/or in combination with C(delegate_facts),\n      it has little effect.\n    support: partial\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\nauthor:\n- Dag Wieers (@dagwieers)\ncollection: ansible.builtin\ndescription:\n- This module fails the progress with a custom message.\n- It can be useful for bailing out when a certain condition is met using C(when).\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/fail.py\nhas_action: true\nmodule: fail\noptions:\n  msg:\n    default: Failed as requested from task\n    description:\n    - The customized message used for failing execution.\n    - If omitted, fail will simply bail out with a generic message.\n    type: str\nseealso:\n- module: ansible.builtin.assert\n- module: ansible.builtin.debug\n- module: ansible.builtin.meta\nshort_description: Fail with custom message\nversion_added: '0.8'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Example using fail and when together\n  ansible.builtin.fail:\n    msg: The system may not be provisioned according to the CMDB status.\n  when: cmdb_status != \"to-be-staged\"\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "msg", "type": "str", "elements": "", "default": "Failed as requested from task", "required": false, "description": ["The customized message used for failing execution.", "If omitted, fail will simply bail out with a generic message."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/fail.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.fetch", "name": "fetch", "fqcn": "ansible.builtin.fetch", "local_key": "module module:lib/ansible/modules/fetch.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix, windows\n    support: N/A\n  safe_file_operations:\n    description: Uses Ansible's strict file operation functions to ensure proper permissions\n      and avoid data corruption\n    support: none\n  vault:\n    description: Can automatically decrypt Ansible vaulted files\n    support: none\nauthor:\n- Ansible Core Team\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- This module works like M(ansible.builtin.copy), but in reverse.\n- It is used for fetching files from remote machines and storing them locally in a\n  file tree, organized by hostname.\n- Files that already exist at I(dest) will be overwritten if they are different than\n  the I(src).\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/fetch.py\nhas_action: true\nmodule: fetch\nnotes:\n- When running fetch with C(become), the M(ansible.builtin.slurp) module will also\n  be used to fetch the contents of the file for determining the remote checksum. This\n  effectively doubles the transfer size, and depending on the file size can consume\n  all available memory on the remote or local hosts causing a C(MemoryError). Due\n  to this it is advisable to run this module without C(become) whenever possible.\n- Prior to Ansible 2.5 this module would not fail if reading the remote file was impossible\n  unless C(fail_on_missing) was set.\n- In Ansible 2.5 or later, playbook authors are encouraged to use C(fail_when) or\n  C(ignore_errors) to get this ability. They may also explicitly set C(fail_on_missing)\n  to C(false) to get the non-failing behaviour.\noptions:\n  dest:\n    description:\n    - A directory to save the file into.\n    - For example, if the I(dest) directory is C(/backup) a I(src) file named C(/etc/profile)\n      on host C(host.example.com), would be saved into C(/backup/host.example.com/etc/profile).\n      The host name is based on the inventory name.\n    required: true\n  fail_on_missing:\n    default: true\n    description:\n    - When set to C(true), the task will fail if the remote file cannot be read for\n      any reason.\n    - Prior to Ansible 2.5, setting this would only fail if the source file was missing.\n    - The default was changed to C(true) in Ansible 2.5.\n    type: bool\n    version_added: '1.1'\n    version_added_collection: ansible.builtin\n  flat:\n    default: false\n    description:\n    - Allows you to override the default behavior of appending hostname/path/to/file\n      to the destination.\n    - If C(dest) ends with '/', it will use the basename of the source file, similar\n      to the copy module.\n    - This can be useful if working with a single host, or if retrieving files that\n      are uniquely named per host.\n    - If using multiple hosts with the same filename, the file will be overwritten\n      for each host.\n    type: bool\n    version_added: '1.2'\n    version_added_collection: ansible.builtin\n  src:\n    description:\n    - The file on the remote system to fetch.\n    - This I(must) be a file, not a directory.\n    - Recursive fetching may be supported in a later release.\n    required: true\n  validate_checksum:\n    default: true\n    description:\n    - Verify that the source and destination checksums match after the files are fetched.\n    type: bool\n    version_added: '1.4'\n    version_added_collection: ansible.builtin\nseealso:\n- module: ansible.builtin.copy\n- module: ansible.builtin.slurp\nshort_description: Fetch files from remote nodes\nversion_added: '0.2'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Store file into /tmp/fetched/host.example.com/tmp/somefile\n  ansible.builtin.fetch:\n    src: /tmp/somefile\n    dest: /tmp/fetched\n\n- name: Specifying a path directly\n  ansible.builtin.fetch:\n    src: /tmp/somefile\n    dest: /tmp/prefix-{{ inventory_hostname }}\n    flat: yes\n\n- name: Specifying a destination path\n  ansible.builtin.fetch:\n    src: /tmp/uniquefile\n    dest: /tmp/special/\n    flat: yes\n\n- name: Storing in a path relative to the playbook\n  ansible.builtin.fetch:\n    src: /tmp/uniquefile\n    dest: special/prefix-{{ inventory_hostname }}\n    flat: yes\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "dest", "type": "", "elements": "", "default": null, "required": true, "description": ["A directory to save the file into.", "For example, if the I(dest) directory is C(/backup) a I(src) file named C(/etc/profile) on host C(host.example.com), would be saved into C(/backup/host.example.com/etc/profile). The host name is based on the inventory name."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "fail_on_missing", "type": "bool", "elements": "", "default": true, "required": false, "description": ["When set to C(true), the task will fail if the remote file cannot be read for any reason.", "Prior to Ansible 2.5, setting this would only fail if the source file was missing.", "The default was changed to C(true) in Ansible 2.5."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "flat", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Allows you to override the default behavior of appending hostname/path/to/file to the destination.", "If C(dest) ends with '/', it will use the basename of the source file, similar to the copy module.", "This can be useful if working with a single host, or if retrieving files that are uniquely named per host.", "If using multiple hosts with the same filename, the file will be overwritten for each host."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "src", "type": "", "elements": "", "default": null, "required": true, "description": ["The file on the remote system to fetch.", "This I(must) be a file, not a directory.", "Recursive fetching may be supported in a later release."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate_checksum", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Verify that the source and destination checksums match after the files are fetched."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/fetch.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.file", "name": "file", "fqcn": "ansible.builtin.file", "local_key": "module module:lib/ansible/modules/file.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    details: permissions and ownership will be shown but file contents on absent/touch\n      will not.\n    support: partial\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Ansible Core Team\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- Set attributes of files, directories, or symlinks and their targets.\n- Alternatively, remove files, symlinks or directories.\n- Many other modules support the same options as the C(file) module - including M(ansible.builtin.copy),\n  M(ansible.builtin.template), and M(ansible.builtin.assemble).\n- For Windows targets, use the M(ansible.windows.win_file) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/file.py\nhas_action: false\nmodule: file\noptions:\n  access_time:\n    description:\n    - This parameter indicates the time the file's access time should be set to.\n    - Should be C(preserve) when no modification is required, C(YYYYMMDDHHMM.SS) when\n      using default time format, or C(now).\n    - Default is C(None) meaning that C(preserve) is the default for C(state=[file,directory,link,hard])\n      and C(now) is default for C(state=touch).\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  access_time_format:\n    default: '%Y%m%d%H%M.%S'\n    description:\n    - When used with C(access_time), indicates the time format that must be used.\n    - Based on default Python format (see time.strftime doc).\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  attributes:\n    aliases:\n    - attr\n    description:\n    - The attributes the resulting filesystem object should have.\n    - To get supported flags look at the man page for I(chattr) on the target system.\n    - This string should contain the attributes in the same order as the one displayed\n      by I(lsattr).\n    - The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need\n      to be included in the string.\n    type: str\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  follow:\n    default: true\n    description:\n    - This flag indicates that filesystem links, if they exist, should be followed.\n    - I(follow=yes) and I(state=link) can modify I(src) when combined with parameters\n      such as I(mode).\n    - Previous to Ansible 2.5, this was C(false) by default.\n    type: bool\n    version_added: '1.8'\n    version_added_collection: ansible.builtin\n  force:\n    default: false\n    description:\n    - 'Force the creation of the symlinks in two cases: the source file does not exist\n      (but will appear later); the destination exists and is a file (so, we need to\n      unlink the C(path) file and create symlink to the C(src) file in place of it).\n\n      '\n    type: bool\n  group:\n    description:\n    - Name of the group that should own the filesystem object, as would be fed to\n      I(chown).\n    - When left unspecified, it uses the current group of the current user unless\n      you are root, in which case it can preserve the previous ownership.\n    type: str\n  mode:\n    description:\n    - The permissions the resulting filesystem object should have.\n    - For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers.\n      You must either add a leading zero so that Ansible's YAML parser knows it is\n      an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777'))\n      so Ansible receives a string and can do its own conversion from string into\n      number.\n    - Giving Ansible a number without following one of these rules will end up with\n      a decimal number which will have unexpected results.\n    - As of Ansible 1.8, the mode may be specified as a symbolic mode (for example,\n      C(u+rwx) or C(u=rw,g=r,o=r)).\n    - If C(mode) is not specified and the destination filesystem object B(does not)\n      exist, the default C(umask) on the system will be used when setting the mode\n      for the newly created filesystem object.\n    - If C(mode) is not specified and the destination filesystem object B(does) exist,\n      the mode of the existing filesystem object will be used.\n    - Specifying C(mode) is the best way to ensure filesystem objects are created\n      with the correct permissions. See CVE-2020-1736 for further details.\n    type: raw\n  modification_time:\n    description:\n    - This parameter indicates the time the file's modification time should be set\n      to.\n    - Should be C(preserve) when no modification is required, C(YYYYMMDDHHMM.SS) when\n      using default time format, or C(now).\n    - Default is None meaning that C(preserve) is the default for C(state=[file,directory,link,hard])\n      and C(now) is default for C(state=touch).\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  modification_time_format:\n    default: '%Y%m%d%H%M.%S'\n    description:\n    - When used with C(modification_time), indicates the time format that must be\n      used.\n    - Based on default Python format (see time.strftime doc).\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  owner:\n    description:\n    - Name of the user that should own the filesystem object, as would be fed to I(chown).\n    - When left unspecified, it uses the current user unless you are root, in which\n      case it can preserve the previous ownership.\n    - Specifying a numeric username will be assumed to be a user ID and not a username.\n      Avoid numeric usernames to avoid this confusion.\n    type: str\n  path:\n    aliases:\n    - dest\n    - name\n    description:\n    - Path to the file being managed.\n    required: true\n    type: path\n  recurse:\n    default: false\n    description:\n    - Recursively set the specified file attributes on directory contents.\n    - This applies only when C(state) is set to C(directory).\n    type: bool\n    version_added: '1.1'\n    version_added_collection: ansible.builtin\n  selevel:\n    description:\n    - The level part of the SELinux filesystem object context.\n    - This is the MLS/MCS attribute, sometimes known as the C(range).\n    - When set to C(_default), it will use the C(level) portion of the policy if available.\n    type: str\n  serole:\n    description:\n    - The role part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(role) portion of the policy if available.\n    type: str\n  setype:\n    description:\n    - The type part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(type) portion of the policy if available.\n    type: str\n  seuser:\n    description:\n    - The user part of the SELinux filesystem object context.\n    - By default it uses the C(system) policy, where applicable.\n    - When set to C(_default), it will use the C(user) portion of the policy if available.\n    type: str\n  src:\n    description:\n    - Path of the file to link to.\n    - This applies only to C(state=link) and C(state=hard).\n    - For C(state=link), this will also accept a non-existing path.\n    - Relative paths are relative to the file being created (C(path)) which is how\n      the Unix command C(ln -s SRC DEST) treats relative paths.\n    type: path\n  state:\n    choices:\n    - absent\n    - directory\n    - file\n    - hard\n    - link\n    - touch\n    description:\n    - If C(absent), directories will be recursively deleted, and files or symlinks\n      will be unlinked. In the case of a directory, if C(diff) is declared, you will\n      see the files and folders deleted listed under C(path_contents). Note that C(absent)\n      will not cause C(file) to fail if the C(path) does not exist as the state did\n      not change.\n    - If C(directory), all intermediate subdirectories will be created if they do\n      not exist. Since Ansible 1.7 they will be created with the supplied permissions.\n    - If C(file), with no other options, returns the current state of C(path).\n    - If C(file), even with other options (such as C(mode)), the file will be modified\n      if it exists but will NOT be created if it does not exist. Set to C(touch) or\n      use the M(ansible.builtin.copy) or M(ansible.builtin.template) module if you\n      want to create the file if it does not exist.\n    - If C(hard), the hard link will be created or changed.\n    - If C(link), the symbolic link will be created or changed.\n    - If C(touch) (new in 1.4), an empty file will be created if the file does not\n      exist, while an existing file or directory will receive updated file access\n      and modification times (similar to the way C(touch) works from the command line).\n    - Default is the current state of the file if it exists, C(directory) if C(recurse=yes),\n      or C(file) otherwise.\n    type: str\n  unsafe_writes:\n    default: false\n    description:\n    - Influence when to use atomic operation to prevent data corruption or inconsistent\n      reads from the target filesystem object.\n    - By default this module uses atomic operations to prevent data corruption or\n      inconsistent reads from the target filesystem objects, but sometimes systems\n      are configured or just broken in ways that prevent this. One example is docker\n      mounted filesystem objects, which cannot be updated atomically from inside the\n      container and can only be written in an unsafe manner.\n    - This option allows Ansible to fall back to unsafe methods of updating filesystem\n      objects when atomic operations fail (however, it doesn't force Ansible to perform\n      unsafe writes).\n    - IMPORTANT! Unsafe writes are subject to race conditions and can lead to data\n      corruption.\n    type: bool\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\nseealso:\n- module: ansible.builtin.assemble\n- module: ansible.builtin.copy\n- module: ansible.builtin.stat\n- module: ansible.builtin.template\n- module: ansible.windows.win_file\nshort_description: Manage files and file properties\nversion_added: historical\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Change file ownership, group and permissions\n  ansible.builtin.file:\n    path: /etc/foo.conf\n    owner: foo\n    group: foo\n    mode: '0644'\n\n- name: Give insecure permissions to an existing file\n  ansible.builtin.file:\n    path: /work\n    owner: root\n    group: root\n    mode: '1777'\n\n- name: Create a symbolic link\n  ansible.builtin.file:\n    src: /file/to/link/to\n    dest: /path/to/symlink\n    owner: foo\n    group: foo\n    state: link\n\n- name: Create two hard links\n  ansible.builtin.file:\n    src: '/tmp/{{ item.src }}'\n    dest: '{{ item.dest }}'\n    state: hard\n  loop:\n    - { src: x, dest: y }\n    - { src: z, dest: k }\n\n- name: Touch a file, using symbolic modes to set the permissions (equivalent to 0644)\n  ansible.builtin.file:\n    path: /etc/foo.conf\n    state: touch\n    mode: u=rw,g=r,o=r\n\n- name: Touch the same file, but add/remove some permissions\n  ansible.builtin.file:\n    path: /etc/foo.conf\n    state: touch\n    mode: u+rw,g-wx,o-rwx\n\n- name: Touch again the same file, but do not change times this makes the task idempotent\n  ansible.builtin.file:\n    path: /etc/foo.conf\n    state: touch\n    mode: u+rw,g-wx,o-rwx\n    modification_time: preserve\n    access_time: preserve\n\n- name: Create a directory if it does not exist\n  ansible.builtin.file:\n    path: /etc/some_directory\n    state: directory\n    mode: '0755'\n\n- name: Update modification and access time of given file\n  ansible.builtin.file:\n    path: /etc/some_file\n    state: file\n    modification_time: now\n    access_time: now\n\n- name: Set access time based on seconds from epoch value\n  ansible.builtin.file:\n    path: /etc/another_file\n    state: file\n    access_time: '{{ \"%Y%m%d%H%M.%S\" | strftime(stat_var.stat.atime) }}'\n\n- name: Recursively change ownership of a directory\n  ansible.builtin.file:\n    path: /etc/foo\n    state: directory\n    recurse: yes\n    owner: foo\n    group: foo\n\n- name: Remove file (delete file)\n  ansible.builtin.file:\n    path: /etc/foo.txt\n    state: absent\n\n- name: Recursively remove directory\n  ansible.builtin.file:\n    path: /etc/foo\n    state: absent\n\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "access_time", "type": "str", "elements": "", "default": null, "required": false, "description": ["This parameter indicates the time the file's access time should be set to.", "Should be C(preserve) when no modification is required, C(YYYYMMDDHHMM.SS) when using default time format, or C(now).", "Default is C(None) meaning that C(preserve) is the default for C(state=[file,directory,link,hard]) and C(now) is default for C(state=touch)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "access_time_format", "type": "str", "elements": "", "default": "%Y%m%d%H%M.%S", "required": false, "description": ["When used with C(access_time), indicates the time format that must be used.", "Based on default Python format (see time.strftime doc)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "attributes", "type": "str", "elements": "", "default": null, "required": false, "description": ["The attributes the resulting filesystem object should have.", "To get supported flags look at the man page for I(chattr) on the target system.", "This string should contain the attributes in the same order as the one displayed by I(lsattr).", "The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need to be included in the string."], "choices": null, "aliases": ["attr"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "follow", "type": "bool", "elements": "", "default": true, "required": false, "description": ["This flag indicates that filesystem links, if they exist, should be followed.", "I(follow=yes) and I(state=link) can modify I(src) when combined with parameters such as I(mode).", "Previous to Ansible 2.5, this was C(false) by default."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "force", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Force the creation of the symlinks in two cases: the source file does not exist (but will appear later); the destination exists and is a file (so, we need to unlink the C(path) file and create symlink to the C(src) file in place of it).\n"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "group", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the group that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current group of the current user unless you are root, in which case it can preserve the previous ownership."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mode", "type": "any", "elements": "", "default": null, "required": false, "description": ["The permissions the resulting filesystem object should have.", "For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777')) so Ansible receives a string and can do its own conversion from string into number.", "Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.", "As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r)).", "If C(mode) is not specified and the destination filesystem object B(does not) exist, the default C(umask) on the system will be used when setting the mode for the newly created filesystem object.", "If C(mode) is not specified and the destination filesystem object B(does) exist, the mode of the existing filesystem object will be used.", "Specifying C(mode) is the best way to ensure filesystem objects are created with the correct permissions. See CVE-2020-1736 for further details."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "modification_time", "type": "str", "elements": "", "default": null, "required": false, "description": ["This parameter indicates the time the file's modification time should be set to.", "Should be C(preserve) when no modification is required, C(YYYYMMDDHHMM.SS) when using default time format, or C(now).", "Default is None meaning that C(preserve) is the default for C(state=[file,directory,link,hard]) and C(now) is default for C(state=touch)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "modification_time_format", "type": "str", "elements": "", "default": "%Y%m%d%H%M.%S", "required": false, "description": ["When used with C(modification_time), indicates the time format that must be used.", "Based on default Python format (see time.strftime doc)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "owner", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the user that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current user unless you are root, in which case it can preserve the previous ownership.", "Specifying a numeric username will be assumed to be a user ID and not a username. Avoid numeric usernames to avoid this confusion."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "path", "type": "str", "elements": "", "default": null, "required": true, "description": ["Path to the file being managed."], "choices": null, "aliases": ["dest", "name"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "recurse", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Recursively set the specified file attributes on directory contents.", "This applies only when C(state) is set to C(directory)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "selevel", "type": "str", "elements": "", "default": null, "required": false, "description": ["The level part of the SELinux filesystem object context.", "This is the MLS/MCS attribute, sometimes known as the C(range).", "When set to C(_default), it will use the C(level) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "serole", "type": "str", "elements": "", "default": null, "required": false, "description": ["The role part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(role) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "setype", "type": "str", "elements": "", "default": null, "required": false, "description": ["The type part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(type) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "seuser", "type": "str", "elements": "", "default": null, "required": false, "description": ["The user part of the SELinux filesystem object context.", "By default it uses the C(system) policy, where applicable.", "When set to C(_default), it will use the C(user) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "src", "type": "str", "elements": "", "default": null, "required": false, "description": ["Path of the file to link to.", "This applies only to C(state=link) and C(state=hard).", "For C(state=link), this will also accept a non-existing path.", "Relative paths are relative to the file being created (C(path)) which is how the Unix command C(ln -s SRC DEST) treats relative paths."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": null, "required": false, "description": ["If C(absent), directories will be recursively deleted, and files or symlinks will be unlinked. In the case of a directory, if C(diff) is declared, you will see the files and folders deleted listed under C(path_contents). Note that C(absent) will not cause C(file) to fail if the C(path) does not exist as the state did not change.", "If C(directory), all intermediate subdirectories will be created if they do not exist. Since Ansible 1.7 they will be created with the supplied permissions.", "If C(file), with no other options, returns the current state of C(path).", "If C(file), even with other options (such as C(mode)), the file will be modified if it exists but will NOT be created if it does not exist. Set to C(touch) or use the M(ansible.builtin.copy) or M(ansible.builtin.template) module if you want to create the file if it does not exist.", "If C(hard), the hard link will be created or changed.", "If C(link), the symbolic link will be created or changed.", "If C(touch) (new in 1.4), an empty file will be created if the file does not exist, while an existing file or directory will receive updated file access and modification times (similar to the way C(touch) works from the command line).", "Default is the current state of the file if it exists, C(directory) if C(recurse=yes), or C(file) otherwise."], "choices": ["absent", "directory", "file", "hard", "link", "touch"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unsafe_writes", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object.", "By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target filesystem objects, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted filesystem objects, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.", "This option allows Ansible to fall back to unsafe methods of updating filesystem objects when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).", "IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/file.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.find", "name": "find", "fqcn": "ansible.builtin.find", "local_key": "module module:lib/ansible/modules/find.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    details: since this action does not modify the target it just executes normally\n      during check mode\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor: Brian Coca (@bcoca)\ncollection: ansible.builtin\ndescription:\n- Return a list of files based on specific criteria. Multiple criteria are AND'd together.\n- For Windows targets, use the M(ansible.windows.win_find) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/find.py\nhas_action: false\nmodule: find\noptions:\n  age:\n    description:\n    - Select files whose age is equal to or greater than the specified time.\n    - Use a negative age to find files equal to or less than the specified time.\n    - You can choose seconds, minutes, hours, days, or weeks by specifying the first\n      letter of any of those words (e.g., \"1w\").\n    type: str\n  age_stamp:\n    choices:\n    - atime\n    - ctime\n    - mtime\n    default: mtime\n    description:\n    - Choose the file property against which we compare age.\n    type: str\n  contains:\n    description:\n    - A regular expression or pattern which should be matched against the file content.\n    - Works only when I(file_type) is C(file).\n    type: str\n  depth:\n    description:\n    - Set the maximum number of levels to descend into.\n    - Setting recurse to C(false) will override this value, which is effectively depth\n      1.\n    - Default is unlimited depth.\n    type: int\n    version_added: '2.6'\n    version_added_collection: ansible.builtin\n  excludes:\n    aliases:\n    - exclude\n    description:\n    - One or more (shell or regex) patterns, which type is controlled by I(use_regex)\n      option.\n    - Items whose basenames match an I(excludes) pattern are culled from I(patterns)\n      matches. Multiple patterns can be specified using a list.\n    elements: str\n    type: list\n    version_added: '2.5'\n    version_added_collection: ansible.builtin\n  file_type:\n    choices:\n    - any\n    - directory\n    - file\n    - link\n    default: file\n    description:\n    - Type of file to select.\n    - The 'link' and 'any' choices were added in Ansible 2.3.\n    type: str\n  follow:\n    default: false\n    description:\n    - Set this to C(true) to follow symlinks in path for systems with python 2.6+.\n    type: bool\n  get_checksum:\n    default: false\n    description:\n    - Set this to C(true) to retrieve a file's SHA1 checksum.\n    type: bool\n  hidden:\n    default: false\n    description:\n    - Set this to C(true) to include hidden files, otherwise they will be ignored.\n    type: bool\n  paths:\n    aliases:\n    - name\n    - path\n    description:\n    - List of paths of directories to search. All paths must be fully qualified.\n    elements: str\n    required: true\n    type: list\n  patterns:\n    aliases:\n    - pattern\n    default: []\n    description:\n    - One or more (shell or regex) patterns, which type is controlled by C(use_regex)\n      option.\n    - The patterns restrict the list of files to be returned to those whose basenames\n      match at least one of the patterns specified. Multiple patterns can be specified\n      using a list.\n    - The pattern is matched against the file base name, excluding the directory.\n    - When using regexen, the pattern MUST match the ENTIRE file name, not just parts\n      of it. So if you are looking to match all files ending in .default, you'd need\n      to use C(.*\\.default) as a regexp and not just C(\\.default).\n    - This parameter expects a list, which can be either comma separated or YAML.\n      If any of the patterns contain a comma, make sure to put them in a list to avoid\n      splitting the patterns in undesirable ways.\n    - Defaults to C(*) when I(use_regex=False), or C(.*) when I(use_regex=True).\n    elements: str\n    type: list\n  read_whole_file:\n    default: false\n    description:\n    - When doing a C(contains) search, determines whether the whole file should be\n      read into memory or if the regex should be applied to the file line-by-line.\n    - Setting this to C(true) can have performance and memory implications for large\n      files.\n    - This uses C(re.search()) instead of C(re.match()).\n    type: bool\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  recurse:\n    default: false\n    description:\n    - If target is a directory, recursively descend into the directory looking for\n      files.\n    type: bool\n  size:\n    description:\n    - Select files whose size is equal to or greater than the specified size.\n    - Use a negative size to find files equal to or less than the specified size.\n    - Unqualified values are in bytes but b, k, m, g, and t can be appended to specify\n      bytes, kilobytes, megabytes, gigabytes, and terabytes, respectively.\n    - Size is not evaluated for directories.\n    type: str\n  use_regex:\n    default: false\n    description:\n    - If C(false), the patterns are file globs (shell).\n    - If C(true), they are python regexes.\n    type: bool\nseealso:\n- module: ansible.windows.win_find\nshort_description: Return a list of files based on specific criteria\nversion_added: '2.0'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Recursively find /tmp files older than 2 days\n  ansible.builtin.find:\n    paths: /tmp\n    age: 2d\n    recurse: yes\n\n- name: Recursively find /tmp files older than 4 weeks and equal or greater than 1 megabyte\n  ansible.builtin.find:\n    paths: /tmp\n    age: 4w\n    size: 1m\n    recurse: yes\n\n- name: Recursively find /var/tmp files with last access time greater than 3600 seconds\n  ansible.builtin.find:\n    paths: /var/tmp\n    age: 3600\n    age_stamp: atime\n    recurse: yes\n\n- name: Find /var/log files equal or greater than 10 megabytes ending with .old or .log.gz\n  ansible.builtin.find:\n    paths: /var/log\n    patterns: '*.old,*.log.gz'\n    size: 10m\n\n# Note that YAML double quotes require escaping backslashes but yaml single quotes do not.\n- name: Find /var/log files equal or greater than 10 megabytes ending with .old or .log.gz via regex\n  ansible.builtin.find:\n    paths: /var/log\n    patterns: \"^.*?\\\\.(?:old|log\\\\.gz)$\"\n    size: 10m\n    use_regex: yes\n\n- name: Find /var/log all directories, exclude nginx and mysql\n  ansible.builtin.find:\n    paths: /var/log\n    recurse: no\n    file_type: directory\n    excludes: 'nginx,mysql'\n\n# When using patterns that contain a comma, make sure they are formatted as lists to avoid splitting the pattern\n- name: Use a single pattern that contains a comma formatted as a list\n  ansible.builtin.find:\n    paths: /var/log\n    file_type: file\n    use_regex: yes\n    patterns: ['^_[0-9]{2,4}_.*.log$']\n\n- name: Use multiple patterns that contain a comma formatted as a YAML list\n  ansible.builtin.find:\n    paths: /var/log\n    file_type: file\n    use_regex: yes\n    patterns:\n      - '^_[0-9]{2,4}_.*.log$'\n      - '^[a-z]{1,5}_.*log$'\n\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "age", "type": "str", "elements": "", "default": null, "required": false, "description": ["Select files whose age is equal to or greater than the specified time.", "Use a negative age to find files equal to or less than the specified time.", "You can choose seconds, minutes, hours, days, or weeks by specifying the first letter of any of those words (e.g., \"1w\")."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "age_stamp", "type": "str", "elements": "", "default": "mtime", "required": false, "description": ["Choose the file property against which we compare age."], "choices": ["atime", "ctime", "mtime"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "contains", "type": "str", "elements": "", "default": null, "required": false, "description": ["A regular expression or pattern which should be matched against the file content.", "Works only when I(file_type) is C(file)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "depth", "type": "int", "elements": "", "default": null, "required": false, "description": ["Set the maximum number of levels to descend into.", "Setting recurse to C(false) will override this value, which is effectively depth 1.", "Default is unlimited depth."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "excludes", "type": "list", "elements": "str", "default": null, "required": false, "description": ["One or more (shell or regex) patterns, which type is controlled by I(use_regex) option.", "Items whose basenames match an I(excludes) pattern are culled from I(patterns) matches. Multiple patterns can be specified using a list."], "choices": null, "aliases": ["exclude"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "file_type", "type": "str", "elements": "", "default": "file", "required": false, "description": ["Type of file to select.", "The 'link' and 'any' choices were added in Ansible 2.3."], "choices": ["any", "directory", "file", "link"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "follow", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Set this to C(true) to follow symlinks in path for systems with python 2.6+."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "get_checksum", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Set this to C(true) to retrieve a file's SHA1 checksum."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "hidden", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Set this to C(true) to include hidden files, otherwise they will be ignored."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "paths", "type": "list", "elements": "str", "default": null, "required": true, "description": ["List of paths of directories to search. All paths must be fully qualified."], "choices": null, "aliases": ["name", "path"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "patterns", "type": "list", "elements": "str", "default": [], "required": false, "description": ["One or more (shell or regex) patterns, which type is controlled by C(use_regex) option.", "The patterns restrict the list of files to be returned to those whose basenames match at least one of the patterns specified. Multiple patterns can be specified using a list.", "The pattern is matched against the file base name, excluding the directory.", "When using regexen, the pattern MUST match the ENTIRE file name, not just parts of it. So if you are looking to match all files ending in .default, you'd need to use C(.*\\.default) as a regexp and not just C(\\.default).", "This parameter expects a list, which can be either comma separated or YAML. If any of the patterns contain a comma, make sure to put them in a list to avoid splitting the patterns in undesirable ways.", "Defaults to C(*) when I(use_regex=False), or C(.*) when I(use_regex=True)."], "choices": null, "aliases": ["pattern"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "read_whole_file", "type": "bool", "elements": "", "default": false, "required": false, "description": ["When doing a C(contains) search, determines whether the whole file should be read into memory or if the regex should be applied to the file line-by-line.", "Setting this to C(true) can have performance and memory implications for large files.", "This uses C(re.search()) instead of C(re.match())."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "recurse", "type": "bool", "elements": "", "default": false, "required": false, "description": ["If target is a directory, recursively descend into the directory looking for files."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "size", "type": "str", "elements": "", "default": null, "required": false, "description": ["Select files whose size is equal to or greater than the specified size.", "Use a negative size to find files equal to or less than the specified size.", "Unqualified values are in bytes but b, k, m, g, and t can be appended to specify bytes, kilobytes, megabytes, gigabytes, and terabytes, respectively.", "Size is not evaluated for directories."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "use_regex", "type": "bool", "elements": "", "default": false, "required": false, "description": ["If C(false), the patterns are file globs (shell).", "If C(true), they are python regexes."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/find.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.gather_facts", "name": "gather_facts", "fqcn": "ansible.builtin.gather_facts", "local_key": "module module:lib/ansible/modules/gather_facts.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    details: multiple modules can be executed in parallel or serially, but the action\n      itself will not be async\n    support: partial\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    details: since this action should just query the target system info it always\n      runs in check mode\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  facts:\n    description: Action returns an C(ansible_facts) dictionary that will update existing\n      host facts\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    details: The action plugin should be able to automatically select the specific\n      platform modules automatically or can be configured manually\n    platforms: all\n    support: N/A\nauthor:\n- Ansible Core Team\ncollection: ansible.builtin\ndescription:\n- This module takes care of executing the R(configured facts modules,FACTS_MODULES),\n  the default is to use the M(ansible.builtin.setup) module.\n- This module is automatically called by playbooks to gather useful variables about\n  remote hosts that can be used in playbooks.\n- It can also be executed directly by C(/usr/bin/ansible) to check what variables\n  are available to a host.\n- Ansible provides many I(facts) about the system, automatically.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/gather_facts.py\nhas_action: true\nmodule: gather_facts\nnotes:\n- This is mostly a wrapper around other fact gathering modules.\n- Options passed into this action must be supported by all the underlying fact modules\n  configured.\n- Facts returned by each module will be merged, conflicts will favor 'last merged'.\n  Order is not guaranteed, when doing parallel gathering on multiple modules.\noptions:\n  parallel:\n    description:\n    - A toggle that controls if the fact modules are executed in parallel or serially\n      and in order. This can guarantee the merge order of module facts at the expense\n      of performance.\n    - By default it will be true if more than one fact module is used.\n    type: bool\nshort_description: Gathers facts about remote hosts\nversion_added: 2.8\nversion_added_collection: ansible.builtin\n", "examples": "\n# Display facts from all hosts and store them indexed by hostname at /tmp/facts.\n# ansible all -m ansible.builtin.gather_facts --tree /tmp/facts\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "parallel", "type": "bool", "elements": "", "default": null, "required": false, "description": ["A toggle that controls if the fact modules are executed in parallel or serially and in order. This can guarantee the merge order of module facts at the expense of performance.", "By default it will be true if more than one fact module is used."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/gather_facts.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.get_url", "name": "get_url", "fqcn": "ansible.builtin.get_url", "local_key": "module module:lib/ansible/modules/get_url.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    details: the changed status will reflect comparison to an empty source file\n    support: partial\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Jan-Piet Mens (@jpmens)\ncollection: ansible.builtin\ndescription:\n- Downloads files from HTTP, HTTPS, or FTP to the remote server. The remote server\n  I(must) have direct access to the remote resource.\n- By default, if an environment variable C(<protocol>_proxy) is set on the target\n  host, requests will be sent through that proxy. This behaviour can be overridden\n  by setting a variable for this task (see R(setting the environment,playbooks_environment)),\n  or by using the use_proxy option.\n- HTTP redirects can redirect from HTTP to HTTPS so you should be sure that your proxy\n  environment for both protocols is correct.\n- From Ansible 2.4 when run with C(--check), it will do a HEAD request to validate\n  the URL but will not download the entire file or verify it against hashes and will\n  report incorrect changed status.\n- For Windows targets, use the M(ansible.windows.win_get_url) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/get_url.py\nhas_action: false\nmodule: get_url\nnotes:\n- For Windows targets, use the M(ansible.windows.win_get_url) module instead.\noptions:\n  attributes:\n    aliases:\n    - attr\n    description:\n    - The attributes the resulting filesystem object should have.\n    - To get supported flags look at the man page for I(chattr) on the target system.\n    - This string should contain the attributes in the same order as the one displayed\n      by I(lsattr).\n    - The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need\n      to be included in the string.\n    type: str\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  backup:\n    default: false\n    description:\n    - Create a backup file including the timestamp information so you can get the\n      original file back if you somehow clobbered it incorrectly.\n    type: bool\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  checksum:\n    default: ''\n    description:\n    - 'If a checksum is passed to this parameter, the digest of the destination file\n      will be calculated after it is downloaded to ensure its integrity and verify\n      that the transfer completed successfully. Format: <algorithm>:<checksum|url>,\n      e.g. checksum=\"sha256:D98291AC[...]B6DC7B97\", checksum=\"sha256:http://example.com/path/sha256sum.txt\"'\n    - If you worry about portability, only the sha1 algorithm is available on all\n      platforms and python versions.\n    - The third party hashlib library can be installed for access to additional algorithms.\n    - Additionally, if a checksum is passed to this parameter, and the file exist\n      under the C(dest) location, the I(destination_checksum) would be calculated,\n      and if checksum equals I(destination_checksum), the file download would be skipped\n      (unless C(force) is true). If the checksum does not equal I(destination_checksum),\n      the destination file is deleted.\n    type: str\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  ciphers:\n    description:\n    - SSL/TLS Ciphers to use for the request\n    - When a list is provided, all ciphers are joined in order with C(:)\n    - See the L(OpenSSL Cipher List Format,https://www.openssl.org/docs/manmaster/man1/openssl-ciphers.html#CIPHER-LIST-FORMAT)\n      for more details.\n    - The available ciphers is dependent on the Python and OpenSSL/LibreSSL versions\n    elements: str\n    type: list\n    version_added: '2.14'\n    version_added_collection: ansible.builtin\n  client_cert:\n    description:\n    - PEM formatted certificate chain file to be used for SSL client authentication.\n    - This file can also include the key as well, and if the key is included, C(client_key)\n      is not required.\n    type: path\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  client_key:\n    description:\n    - PEM formatted file that contains your private key to be used for SSL client\n      authentication.\n    - If C(client_cert) contains both the certificate and key, this option is not\n      required.\n    type: path\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  decompress:\n    default: true\n    description:\n    - Whether to attempt to decompress gzip content-encoded responses\n    type: bool\n    version_added: '2.14'\n    version_added_collection: ansible.builtin\n  dest:\n    description:\n    - Absolute path of where to download the file to.\n    - If C(dest) is a directory, either the server provided filename or, if none provided,\n      the base name of the URL on the remote server will be used. If a directory,\n      C(force) has no effect.\n    - If C(dest) is a directory, the file will always be downloaded (regardless of\n      the C(force) and C(checksum) option), but replaced only if the contents changed.\n    required: true\n    type: path\n  force:\n    default: false\n    description:\n    - If C(true) and C(dest) is not a directory, will download the file every time\n      and replace the file if the contents change. If C(false), the file will only\n      be downloaded if the destination does not exist. Generally should be C(true)\n      only for small local files.\n    - Prior to 0.6, this module behaved as if C(true) was the default.\n    type: bool\n    version_added: '0.7'\n    version_added_collection: ansible.builtin\n  force_basic_auth:\n    default: false\n    description:\n    - Force the sending of the Basic authentication header upon initial request.\n    - httplib2, the library used by the uri module only sends authentication information\n      when a webservice responds to an initial request with a 401 status. Since some\n      basic auth services do not properly send a 401, logins will fail.\n    type: bool\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  group:\n    description:\n    - Name of the group that should own the filesystem object, as would be fed to\n      I(chown).\n    - When left unspecified, it uses the current group of the current user unless\n      you are root, in which case it can preserve the previous ownership.\n    type: str\n  headers:\n    description:\n    - Add custom HTTP headers to a request in hash/dict format.\n    - The hash/dict format was added in Ansible 2.6.\n    - Previous versions used a C(\"key:value,key:value\") string format.\n    - The C(\"key:value,key:value\") string format is deprecated and has been removed\n      in version 2.10.\n    type: dict\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  http_agent:\n    default: ansible-httpget\n    description:\n    - Header to identify as, generally appears in web server logs.\n    type: str\n  mode:\n    description:\n    - The permissions the resulting filesystem object should have.\n    - For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers.\n      You must either add a leading zero so that Ansible's YAML parser knows it is\n      an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777'))\n      so Ansible receives a string and can do its own conversion from string into\n      number.\n    - Giving Ansible a number without following one of these rules will end up with\n      a decimal number which will have unexpected results.\n    - As of Ansible 1.8, the mode may be specified as a symbolic mode (for example,\n      C(u+rwx) or C(u=rw,g=r,o=r)).\n    - If C(mode) is not specified and the destination filesystem object B(does not)\n      exist, the default C(umask) on the system will be used when setting the mode\n      for the newly created filesystem object.\n    - If C(mode) is not specified and the destination filesystem object B(does) exist,\n      the mode of the existing filesystem object will be used.\n    - Specifying C(mode) is the best way to ensure filesystem objects are created\n      with the correct permissions. See CVE-2020-1736 for further details.\n    type: raw\n  owner:\n    description:\n    - Name of the user that should own the filesystem object, as would be fed to I(chown).\n    - When left unspecified, it uses the current user unless you are root, in which\n      case it can preserve the previous ownership.\n    - Specifying a numeric username will be assumed to be a user ID and not a username.\n      Avoid numeric usernames to avoid this confusion.\n    type: str\n  selevel:\n    description:\n    - The level part of the SELinux filesystem object context.\n    - This is the MLS/MCS attribute, sometimes known as the C(range).\n    - When set to C(_default), it will use the C(level) portion of the policy if available.\n    type: str\n  serole:\n    description:\n    - The role part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(role) portion of the policy if available.\n    type: str\n  setype:\n    description:\n    - The type part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(type) portion of the policy if available.\n    type: str\n  seuser:\n    description:\n    - The user part of the SELinux filesystem object context.\n    - By default it uses the C(system) policy, where applicable.\n    - When set to C(_default), it will use the C(user) portion of the policy if available.\n    type: str\n  timeout:\n    default: 10\n    description:\n    - Timeout in seconds for URL request.\n    type: int\n    version_added: '1.8'\n    version_added_collection: ansible.builtin\n  tmp_dest:\n    description:\n    - Absolute path of where temporary file is downloaded to.\n    - When run on Ansible 2.5 or greater, path defaults to ansible's remote_tmp setting\n    - When run on Ansible prior to 2.5, it defaults to C(TMPDIR), C(TEMP) or C(TMP)\n      env variables or a platform specific value.\n    - U(https://docs.python.org/3/library/tempfile.html#tempfile.tempdir)\n    type: path\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  unredirected_headers:\n    default: []\n    description:\n    - A list of header names that will not be sent on subsequent redirected requests.\n      This list is case insensitive. By default all headers will be redirected. In\n      some cases it may be beneficial to list headers such as C(Authorization) here\n      to avoid potential credential exposure.\n    elements: str\n    type: list\n    version_added: '2.12'\n    version_added_collection: ansible.builtin\n  unsafe_writes:\n    default: false\n    description:\n    - Influence when to use atomic operation to prevent data corruption or inconsistent\n      reads from the target filesystem object.\n    - By default this module uses atomic operations to prevent data corruption or\n      inconsistent reads from the target filesystem objects, but sometimes systems\n      are configured or just broken in ways that prevent this. One example is docker\n      mounted filesystem objects, which cannot be updated atomically from inside the\n      container and can only be written in an unsafe manner.\n    - This option allows Ansible to fall back to unsafe methods of updating filesystem\n      objects when atomic operations fail (however, it doesn't force Ansible to perform\n      unsafe writes).\n    - IMPORTANT! Unsafe writes are subject to race conditions and can lead to data\n      corruption.\n    type: bool\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  url:\n    description:\n    - HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path\n    required: true\n    type: str\n  url_password:\n    aliases:\n    - password\n    description:\n    - The password for use in HTTP basic authentication.\n    - If the C(url_username) parameter is not specified, the C(url_password) parameter\n      will not be used.\n    - Since version 2.8 you can also use the 'password' alias for this option.\n    type: str\n    version_added: '1.6'\n    version_added_collection: ansible.builtin\n  url_username:\n    aliases:\n    - username\n    description:\n    - The username for use in HTTP basic authentication.\n    - This parameter can be used without C(url_password) for sites that allow empty\n      passwords.\n    - Since version 2.8 you can also use the C(username) alias for this option.\n    type: str\n    version_added: '1.6'\n    version_added_collection: ansible.builtin\n  use_gssapi:\n    default: false\n    description:\n    - Use GSSAPI to perform the authentication, typically this is for Kerberos or\n      Kerberos through Negotiate authentication.\n    - Requires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi)\n      to be installed.\n    - Credentials for GSSAPI can be specified with I(url_username)/I(url_password)\n      or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential\n      cache.\n    - NTLM authentication is I(not) supported even if the GSSAPI mech for NTLM has\n      been installed.\n    type: bool\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  use_netrc:\n    default: true\n    description:\n    - Determining whether to use credentials from ``~/.netrc`` file\n    - By default .netrc is used with Basic authentication headers\n    - When set to False, .netrc credentials are ignored\n    type: bool\n    version_added: '2.14'\n    version_added_collection: ansible.builtin\n  use_proxy:\n    default: true\n    description:\n    - if C(false), it will not use a proxy, even if one is defined in an environment\n      variable on the target hosts.\n    type: bool\n  validate_certs:\n    default: true\n    description:\n    - If C(false), SSL certificates will not be validated.\n    - This should only be used on personally controlled sites using self-signed certificates.\n    type: bool\nseealso:\n- module: ansible.builtin.uri\n- module: ansible.windows.win_get_url\nshort_description: Downloads files from HTTP, HTTPS, or FTP to node\nversion_added: '0.6'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Download foo.conf\n  ansible.builtin.get_url:\n    url: http://example.com/path/file.conf\n    dest: /etc/foo.conf\n    mode: '0440'\n\n- name: Download file and force basic auth\n  ansible.builtin.get_url:\n    url: http://example.com/path/file.conf\n    dest: /etc/foo.conf\n    force_basic_auth: yes\n\n- name: Download file with custom HTTP headers\n  ansible.builtin.get_url:\n    url: http://example.com/path/file.conf\n    dest: /etc/foo.conf\n    headers:\n      key1: one\n      key2: two\n\n- name: Download file with check (sha256)\n  ansible.builtin.get_url:\n    url: http://example.com/path/file.conf\n    dest: /etc/foo.conf\n    checksum: sha256:b5bb9d8014a0f9b1d61e21e796d78dccdf1352f23cd32812f4850b878ae4944c\n\n- name: Download file with check (md5)\n  ansible.builtin.get_url:\n    url: http://example.com/path/file.conf\n    dest: /etc/foo.conf\n    checksum: md5:66dffb5228a211e61d6d7ef4a86f5758\n\n- name: Download file with checksum url (sha256)\n  ansible.builtin.get_url:\n    url: http://example.com/path/file.conf\n    dest: /etc/foo.conf\n    checksum: sha256:http://example.com/path/sha256sum.txt\n\n- name: Download file from a file path\n  ansible.builtin.get_url:\n    url: file:///tmp/afile.txt\n    dest: /tmp/afilecopy.txt\n\n- name: < Fetch file that requires authentication.\n        username/password only available since 2.8, in older versions you need to use url_username/url_password\n  ansible.builtin.get_url:\n    url: http://example.com/path/file.conf\n    dest: /etc/foo.conf\n    username: bar\n    password: '{{ mysecret }}'\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "attributes", "type": "str", "elements": "", "default": null, "required": false, "description": ["The attributes the resulting filesystem object should have.", "To get supported flags look at the man page for I(chattr) on the target system.", "This string should contain the attributes in the same order as the one displayed by I(lsattr).", "The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need to be included in the string."], "choices": null, "aliases": ["attr"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "backup", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "checksum", "type": "str", "elements": "", "default": "", "required": false, "description": ["If a checksum is passed to this parameter, the digest of the destination file will be calculated after it is downloaded to ensure its integrity and verify that the transfer completed successfully. Format: <algorithm>:<checksum|url>, e.g. checksum=\"sha256:D98291AC[...]B6DC7B97\", checksum=\"sha256:http://example.com/path/sha256sum.txt\"", "If you worry about portability, only the sha1 algorithm is available on all platforms and python versions.", "The third party hashlib library can be installed for access to additional algorithms.", "Additionally, if a checksum is passed to this parameter, and the file exist under the C(dest) location, the I(destination_checksum) would be calculated, and if checksum equals I(destination_checksum), the file download would be skipped (unless C(force) is true). If the checksum does not equal I(destination_checksum), the destination file is deleted."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ciphers", "type": "list", "elements": "str", "default": null, "required": false, "description": ["SSL/TLS Ciphers to use for the request", "When a list is provided, all ciphers are joined in order with C(:)", "See the L(OpenSSL Cipher List Format,https://www.openssl.org/docs/manmaster/man1/openssl-ciphers.html#CIPHER-LIST-FORMAT) for more details.", "The available ciphers is dependent on the Python and OpenSSL/LibreSSL versions"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "client_cert", "type": "str", "elements": "", "default": null, "required": false, "description": ["PEM formatted certificate chain file to be used for SSL client authentication.", "This file can also include the key as well, and if the key is included, C(client_key) is not required."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "client_key", "type": "str", "elements": "", "default": null, "required": false, "description": ["PEM formatted file that contains your private key to be used for SSL client authentication.", "If C(client_cert) contains both the certificate and key, this option is not required."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "decompress", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Whether to attempt to decompress gzip content-encoded responses"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "dest", "type": "str", "elements": "", "default": null, "required": true, "description": ["Absolute path of where to download the file to.", "If C(dest) is a directory, either the server provided filename or, if none provided, the base name of the URL on the remote server will be used. If a directory, C(force) has no effect.", "If C(dest) is a directory, the file will always be downloaded (regardless of the C(force) and C(checksum) option), but replaced only if the contents changed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "force", "type": "bool", "elements": "", "default": false, "required": false, "description": ["If C(true) and C(dest) is not a directory, will download the file every time and replace the file if the contents change. If C(false), the file will only be downloaded if the destination does not exist. Generally should be C(true) only for small local files.", "Prior to 0.6, this module behaved as if C(true) was the default."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "force_basic_auth", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Force the sending of the Basic authentication header upon initial request.", "httplib2, the library used by the uri module only sends authentication information when a webservice responds to an initial request with a 401 status. Since some basic auth services do not properly send a 401, logins will fail."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "group", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the group that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current group of the current user unless you are root, in which case it can preserve the previous ownership."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "headers", "type": "dict", "elements": "", "default": null, "required": false, "description": ["Add custom HTTP headers to a request in hash/dict format.", "The hash/dict format was added in Ansible 2.6.", "Previous versions used a C(\"key:value,key:value\") string format.", "The C(\"key:value,key:value\") string format is deprecated and has been removed in version 2.10."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "http_agent", "type": "str", "elements": "", "default": "ansible-httpget", "required": false, "description": ["Header to identify as, generally appears in web server logs."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mode", "type": "any", "elements": "", "default": null, "required": false, "description": ["The permissions the resulting filesystem object should have.", "For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777')) so Ansible receives a string and can do its own conversion from string into number.", "Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.", "As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r)).", "If C(mode) is not specified and the destination filesystem object B(does not) exist, the default C(umask) on the system will be used when setting the mode for the newly created filesystem object.", "If C(mode) is not specified and the destination filesystem object B(does) exist, the mode of the existing filesystem object will be used.", "Specifying C(mode) is the best way to ensure filesystem objects are created with the correct permissions. See CVE-2020-1736 for further details."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "owner", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the user that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current user unless you are root, in which case it can preserve the previous ownership.", "Specifying a numeric username will be assumed to be a user ID and not a username. Avoid numeric usernames to avoid this confusion."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "selevel", "type": "str", "elements": "", "default": null, "required": false, "description": ["The level part of the SELinux filesystem object context.", "This is the MLS/MCS attribute, sometimes known as the C(range).", "When set to C(_default), it will use the C(level) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "serole", "type": "str", "elements": "", "default": null, "required": false, "description": ["The role part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(role) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "setype", "type": "str", "elements": "", "default": null, "required": false, "description": ["The type part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(type) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "seuser", "type": "str", "elements": "", "default": null, "required": false, "description": ["The user part of the SELinux filesystem object context.", "By default it uses the C(system) policy, where applicable.", "When set to C(_default), it will use the C(user) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "timeout", "type": "int", "elements": "", "default": 10, "required": false, "description": ["Timeout in seconds for URL request."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "tmp_dest", "type": "str", "elements": "", "default": null, "required": false, "description": ["Absolute path of where temporary file is downloaded to.", "When run on Ansible 2.5 or greater, path defaults to ansible's remote_tmp setting", "When run on Ansible prior to 2.5, it defaults to C(TMPDIR), C(TEMP) or C(TMP) env variables or a platform specific value.", "U(https://docs.python.org/3/library/tempfile.html#tempfile.tempdir)"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unredirected_headers", "type": "list", "elements": "str", "default": [], "required": false, "description": ["A list of header names that will not be sent on subsequent redirected requests. This list is case insensitive. By default all headers will be redirected. In some cases it may be beneficial to list headers such as C(Authorization) here to avoid potential credential exposure."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unsafe_writes", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object.", "By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target filesystem objects, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted filesystem objects, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.", "This option allows Ansible to fall back to unsafe methods of updating filesystem objects when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).", "IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "url", "type": "str", "elements": "", "default": null, "required": true, "description": ["HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "url_password", "type": "str", "elements": "", "default": null, "required": false, "description": ["The password for use in HTTP basic authentication.", "If the C(url_username) parameter is not specified, the C(url_password) parameter will not be used.", "Since version 2.8 you can also use the 'password' alias for this option."], "choices": null, "aliases": ["password"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "url_username", "type": "str", "elements": "", "default": null, "required": false, "description": ["The username for use in HTTP basic authentication.", "This parameter can be used without C(url_password) for sites that allow empty passwords.", "Since version 2.8 you can also use the C(username) alias for this option."], "choices": null, "aliases": ["username"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "use_gssapi", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.", "Requires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.", "Credentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.", "NTLM authentication is I(not) supported even if the GSSAPI mech for NTLM has been installed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "use_netrc", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Determining whether to use credentials from ``~/.netrc`` file", "By default .netrc is used with Basic authentication headers", "When set to False, .netrc credentials are ignored"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "use_proxy", "type": "bool", "elements": "", "default": true, "required": false, "description": ["if C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate_certs", "type": "bool", "elements": "", "default": true, "required": false, "description": ["If C(false), SSL certificates will not be validated.", "This should only be used on personally controlled sites using self-signed certificates."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/get_url.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.getent", "name": "getent", "fqcn": "ansible.builtin.getent", "local_key": "module module:lib/ansible/modules/getent.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  facts:\n    description: Action returns an C(ansible_facts) dictionary that will update existing\n      host facts\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Brian Coca (@bcoca)\ncollection: ansible.builtin\ndescription:\n- Runs getent against one of it's various databases and returns information into the\n  host's facts, in a getent_<database> prefixed variable.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/getent.py\nhas_action: false\nmodule: getent\nnotes:\n- Not all databases support enumeration, check system documentation for details.\noptions:\n  database:\n    description:\n    - The name of a getent database supported by the target system (passwd, group,\n      hosts, etc).\n    required: true\n    type: str\n  fail_key:\n    default: 'yes'\n    description:\n    - If a supplied key is missing this will make the task fail if C(true).\n    type: bool\n  key:\n    default: ''\n    description:\n    - Key from which to return values from the specified database, otherwise the full\n      contents are returned.\n    type: str\n  service:\n    description:\n    - Override all databases with the specified service\n    - The underlying system must support the service flag which is not always available.\n    type: str\n    version_added: '2.9'\n    version_added_collection: ansible.builtin\n  split:\n    description:\n    - Character used to split the database values into lists/arrays such as C(:) or\n      C(\\t), otherwise it will try to pick one depending on the database.\n    type: str\nshort_description: A wrapper to the unix getent utility\nversion_added: '1.8'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Get root user info\n  ansible.builtin.getent:\n    database: passwd\n    key: root\n- ansible.builtin.debug:\n    var: ansible_facts.getent_passwd\n\n- name: Get all groups\n  ansible.builtin.getent:\n    database: group\n    split: ':'\n- ansible.builtin.debug:\n    var: ansible_facts.getent_group\n\n- name: Get all hosts, split by tab\n  ansible.builtin.getent:\n    database: hosts\n- ansible.builtin.debug:\n    var: ansible_facts.getent_hosts\n\n- name: Get http service info, no error if missing\n  ansible.builtin.getent:\n    database: services\n    key: http\n    fail_key: False\n- ansible.builtin.debug:\n    var: ansible_facts.getent_services\n\n- name: Get user password hash (requires sudo/root)\n  ansible.builtin.getent:\n    database: shadow\n    key: www-data\n    split: ':'\n- ansible.builtin.debug:\n    var: ansible_facts.getent_shadow\n\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "database", "type": "str", "elements": "", "default": null, "required": true, "description": ["The name of a getent database supported by the target system (passwd, group, hosts, etc)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "fail_key", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["If a supplied key is missing this will make the task fail if C(true)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "key", "type": "str", "elements": "", "default": "", "required": false, "description": ["Key from which to return values from the specified database, otherwise the full contents are returned."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "service", "type": "str", "elements": "", "default": null, "required": false, "description": ["Override all databases with the specified service", "The underlying system must support the service flag which is not always available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "split", "type": "str", "elements": "", "default": null, "required": false, "description": ["Character used to split the database values into lists/arrays such as C(:) or C(\\t), otherwise it will try to pick one depending on the database."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/getent.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.git", "name": "git", "fqcn": "ansible.builtin.git", "local_key": "module module:lib/ansible/modules/git.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Ansible Core Team\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- Manage I(git) checkouts of repositories to deploy files or software.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/git.py\nhas_action: false\nmodule: git\nnotes:\n- 'If the task seems to be hanging, first verify remote host is in C(known_hosts).\n  SSH will prompt user to authorize the first contact with a remote host.  To avoid\n  this prompt, one solution is to use the option accept_hostkey. Another solution\n  is to add the remote host public key in C(/etc/ssh/ssh_known_hosts) before calling\n  the git module, with the following command: ssh-keyscan -H remote_host.com >> /etc/ssh/ssh_known_hosts.'\noptions:\n  accept_hostkey:\n    default: 'no'\n    description:\n    - Will ensure or not that \"-o StrictHostKeyChecking=no\" is present as an ssh option.\n    - Be aware that this disables a protection against MITM attacks.\n    - Those using OpenSSH >= 7.5 might want to set I(ssh_opt) to 'StrictHostKeyChecking=accept-new'\n      instead, it does not remove the MITM issue but it does restrict it to the first\n      attempt.\n    type: bool\n    version_added: '1.5'\n    version_added_collection: ansible.builtin\n  accept_newhostkey:\n    default: 'no'\n    description:\n    - As of OpenSSH 7.5, \"-o StrictHostKeyChecking=accept-new\" can be used which is\n      safer and will only accepts host keys which are not present or are the same.\n      if C(true), ensure that \"-o StrictHostKeyChecking=accept-new\" is present as\n      an ssh option.\n    type: bool\n    version_added: '2.12'\n    version_added_collection: ansible.builtin\n  archive:\n    description:\n    - Specify archive file path with extension. If specified, creates an archive file\n      of the specified format containing the tree structure for the source tree. Allowed\n      archive formats [\"zip\", \"tar.gz\", \"tar\", \"tgz\"].\n    - This will clone and perform git archive from local directory as not all git\n      servers support git archive.\n    type: path\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  archive_prefix:\n    description:\n    - Specify a prefix to add to each file path in archive. Requires I(archive) to\n      be specified.\n    type: str\n    version_added: '2.10'\n    version_added_collection: ansible.builtin\n  bare:\n    default: 'no'\n    description:\n    - If C(true), repository will be created as a bare repo, otherwise it will be\n      a standard repo with a workspace.\n    type: bool\n    version_added: '1.4'\n    version_added_collection: ansible.builtin\n  clone:\n    default: 'yes'\n    description:\n    - If C(false), do not clone the repository even if it does not exist locally.\n    type: bool\n    version_added: '1.9'\n    version_added_collection: ansible.builtin\n  depth:\n    description:\n    - Create a shallow clone with a history truncated to the specified number or revisions.\n      The minimum possible value is C(1), otherwise ignored. Needs I(git>=1.9.1) to\n      work correctly.\n    type: int\n    version_added: '1.2'\n    version_added_collection: ansible.builtin\n  dest:\n    description:\n    - The path of where the repository should be checked out. This is equivalent to\n      C(git clone [repo_url] [directory]). The repository named in I(repo) is not\n      appended to this path and the destination directory must be empty. This parameter\n      is required, unless I(clone) is set to C(false).\n    required: true\n    type: path\n  executable:\n    description:\n    - Path to git executable to use. If not supplied, the normal mechanism for resolving\n      binary paths will be used.\n    type: path\n    version_added: '1.4'\n    version_added_collection: ansible.builtin\n  force:\n    default: 'no'\n    description:\n    - If C(true), any modified files in the working repository will be discarded.  Prior\n      to 0.7, this was always C(true) and could not be disabled.  Prior to 1.9, the\n      default was C(true).\n    type: bool\n    version_added: '0.7'\n    version_added_collection: ansible.builtin\n  gpg_whitelist:\n    default: []\n    description:\n    - A list of trusted GPG fingerprints to compare to the fingerprint of the GPG-signed\n      commit.\n    - Only used when I(verify_commit=yes).\n    - Use of this feature requires Git 2.6+ due to its reliance on git's C(--raw)\n      flag to C(verify-commit) and C(verify-tag).\n    elements: str\n    type: list\n    version_added: '2.9'\n    version_added_collection: ansible.builtin\n  key_file:\n    description:\n    - Specify an optional private key file path, on the target host, to use for the\n      checkout.\n    - This ensures 'IdentitiesOnly=yes' is present in ssh_opts.\n    type: path\n    version_added: '1.5'\n    version_added_collection: ansible.builtin\n  recursive:\n    default: 'yes'\n    description:\n    - If C(false), repository will be cloned without the --recursive option, skipping\n      sub-modules.\n    type: bool\n    version_added: '1.6'\n    version_added_collection: ansible.builtin\n  reference:\n    description:\n    - Reference repository (see \"git clone --reference ...\").\n    version_added: '1.4'\n    version_added_collection: ansible.builtin\n  refspec:\n    description:\n    - Add an additional refspec to be fetched. If version is set to a I(SHA-1) not\n      reachable from any branch or tag, this option may be necessary to specify the\n      ref containing the I(SHA-1). Uses the same syntax as the C(git fetch) command.\n      An example value could be \"refs/meta/config\".\n    type: str\n    version_added: '1.9'\n    version_added_collection: ansible.builtin\n  remote:\n    default: origin\n    description:\n    - Name of the remote.\n    type: str\n  repo:\n    aliases:\n    - name\n    description:\n    - git, SSH, or HTTP(S) protocol address of the git repository.\n    required: true\n    type: str\n  separate_git_dir:\n    description:\n    - The path to place the cloned repository. If specified, Git repository can be\n      separated from working tree.\n    type: path\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  single_branch:\n    default: 'no'\n    description:\n    - Clone only the history leading to the tip of the specified revision.\n    type: bool\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  ssh_opts:\n    description:\n    - Options git will pass to ssh when used as protocol, it works via C(git)'s GIT_SSH/GIT_SSH_COMMAND\n      environment variables.\n    - For older versions it appends GIT_SSH_OPTS (specific to this module) to the\n      variables above or via a wrapper script.\n    - Other options can add to this list, like I(key_file) and I(accept_hostkey).\n    - An example value could be \"-o StrictHostKeyChecking=no\" (although this particular\n      option is better set by I(accept_hostkey)).\n    - The module ensures that 'BatchMode=yes' is always present to avoid prompts.\n    type: str\n    version_added: '1.5'\n    version_added_collection: ansible.builtin\n  track_submodules:\n    default: 'no'\n    description:\n    - If C(true), submodules will track the latest commit on their master branch (or\n      other branch specified in .gitmodules).  If C(false), submodules will be kept\n      at the revision specified by the main project. This is equivalent to specifying\n      the --remote flag to git submodule update.\n    type: bool\n    version_added: '1.8'\n    version_added_collection: ansible.builtin\n  umask:\n    description:\n    - The umask to set before doing any checkouts, or any other repository maintenance.\n    type: raw\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  update:\n    default: 'yes'\n    description:\n    - If C(false), do not retrieve new revisions from the origin repository.\n    - Operations like archive will work on the existing (old) repository and might\n      not respond to changes to the options version or remote.\n    type: bool\n    version_added: '1.2'\n    version_added_collection: ansible.builtin\n  verify_commit:\n    default: 'no'\n    description:\n    - If C(true), when cloning or checking out a I(version) verify the signature of\n      a GPG signed commit. This requires git version>=2.1.0 to be installed. The commit\n      MUST be signed and the public key MUST be present in the GPG keyring.\n    type: bool\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  version:\n    default: HEAD\n    description:\n    - What version of the repository to check out. This can be the literal string\n      C(HEAD), a branch name, a tag name. It can also be a I(SHA-1) hash, in which\n      case I(refspec) needs to be specified if the given revision is not already available.\n    type: str\nrequirements:\n- git>=1.7.1 (the command line tool)\nshort_description: Deploy software (or files) from git checkouts\nversion_added: 0.0.1\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Git checkout\n  ansible.builtin.git:\n    repo: 'https://foosball.example.org/path/to/repo.git'\n    dest: /srv/checkout\n    version: release-0.22\n\n- name: Read-write git checkout from github\n  ansible.builtin.git:\n    repo: git@github.com:mylogin/hello.git\n    dest: /home/mylogin/hello\n\n- name: Just ensuring the repo checkout exists\n  ansible.builtin.git:\n    repo: 'https://foosball.example.org/path/to/repo.git'\n    dest: /srv/checkout\n    update: no\n\n- name: Just get information about the repository whether or not it has already been cloned locally\n  ansible.builtin.git:\n    repo: 'https://foosball.example.org/path/to/repo.git'\n    dest: /srv/checkout\n    clone: no\n    update: no\n\n- name: Checkout a github repo and use refspec to fetch all pull requests\n  ansible.builtin.git:\n    repo: https://github.com/ansible/ansible-examples.git\n    dest: /src/ansible-examples\n    refspec: '+refs/pull/*:refs/heads/*'\n\n- name: Create git archive from repo\n  ansible.builtin.git:\n    repo: https://github.com/ansible/ansible-examples.git\n    dest: /src/ansible-examples\n    archive: /tmp/ansible-examples.zip\n\n- name: Clone a repo with separate git directory\n  ansible.builtin.git:\n    repo: https://github.com/ansible/ansible-examples.git\n    dest: /src/ansible-examples\n    separate_git_dir: /src/ansible-examples.git\n\n- name: Example clone of a single branch\n  ansible.builtin.git:\n    repo: https://github.com/ansible/ansible-examples.git\n    dest: /src/ansible-examples\n    single_branch: yes\n    version: master\n\n- name: Avoid hanging when http(s) password is missing\n  ansible.builtin.git:\n    repo: https://github.com/ansible/could-be-a-private-repo\n    dest: /src/from-private-repo\n  environment:\n    GIT_TERMINAL_PROMPT: 0 # reports \"terminal prompts disabled\" on missing password\n    # or GIT_ASKPASS: /bin/true # for git before version 2.3.0, reports \"Authentication failed\" on missing password\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "accept_hostkey", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Will ensure or not that \"-o StrictHostKeyChecking=no\" is present as an ssh option.", "Be aware that this disables a protection against MITM attacks.", "Those using OpenSSH >= 7.5 might want to set I(ssh_opt) to 'StrictHostKeyChecking=accept-new' instead, it does not remove the MITM issue but it does restrict it to the first attempt."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "accept_newhostkey", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["As of OpenSSH 7.5, \"-o StrictHostKeyChecking=accept-new\" can be used which is safer and will only accepts host keys which are not present or are the same. if C(true), ensure that \"-o StrictHostKeyChecking=accept-new\" is present as an ssh option."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "archive", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specify archive file path with extension. If specified, creates an archive file of the specified format containing the tree structure for the source tree. Allowed archive formats [\"zip\", \"tar.gz\", \"tar\", \"tgz\"].", "This will clone and perform git archive from local directory as not all git servers support git archive."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "archive_prefix", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specify a prefix to add to each file path in archive. Requires I(archive) to be specified."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "bare", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If C(true), repository will be created as a bare repo, otherwise it will be a standard repo with a workspace."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "clone", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["If C(false), do not clone the repository even if it does not exist locally."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "depth", "type": "int", "elements": "", "default": null, "required": false, "description": ["Create a shallow clone with a history truncated to the specified number or revisions. The minimum possible value is C(1), otherwise ignored. Needs I(git>=1.9.1) to work correctly."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "dest", "type": "str", "elements": "", "default": null, "required": true, "description": ["The path of where the repository should be checked out. This is equivalent to C(git clone [repo_url] [directory]). The repository named in I(repo) is not appended to this path and the destination directory must be empty. This parameter is required, unless I(clone) is set to C(false)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "executable", "type": "str", "elements": "", "default": null, "required": false, "description": ["Path to git executable to use. If not supplied, the normal mechanism for resolving binary paths will be used."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "force", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If C(true), any modified files in the working repository will be discarded.  Prior to 0.7, this was always C(true) and could not be disabled.  Prior to 1.9, the default was C(true)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "gpg_whitelist", "type": "list", "elements": "str", "default": [], "required": false, "description": ["A list of trusted GPG fingerprints to compare to the fingerprint of the GPG-signed commit.", "Only used when I(verify_commit=yes).", "Use of this feature requires Git 2.6+ due to its reliance on git's C(--raw) flag to C(verify-commit) and C(verify-tag)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "key_file", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specify an optional private key file path, on the target host, to use for the checkout.", "This ensures 'IdentitiesOnly=yes' is present in ssh_opts."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "recursive", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["If C(false), repository will be cloned without the --recursive option, skipping sub-modules."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "reference", "type": "", "elements": "", "default": null, "required": false, "description": ["Reference repository (see \"git clone --reference ...\")."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "refspec", "type": "str", "elements": "", "default": null, "required": false, "description": ["Add an additional refspec to be fetched. If version is set to a I(SHA-1) not reachable from any branch or tag, this option may be necessary to specify the ref containing the I(SHA-1). Uses the same syntax as the C(git fetch) command. An example value could be \"refs/meta/config\"."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "remote", "type": "str", "elements": "", "default": "origin", "required": false, "description": ["Name of the remote."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "repo", "type": "str", "elements": "", "default": null, "required": true, "description": ["git, SSH, or HTTP(S) protocol address of the git repository."], "choices": null, "aliases": ["name"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "separate_git_dir", "type": "str", "elements": "", "default": null, "required": false, "description": ["The path to place the cloned repository. If specified, Git repository can be separated from working tree."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "single_branch", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Clone only the history leading to the tip of the specified revision."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ssh_opts", "type": "str", "elements": "", "default": null, "required": false, "description": ["Options git will pass to ssh when used as protocol, it works via C(git)'s GIT_SSH/GIT_SSH_COMMAND environment variables.", "For older versions it appends GIT_SSH_OPTS (specific to this module) to the variables above or via a wrapper script.", "Other options can add to this list, like I(key_file) and I(accept_hostkey).", "An example value could be \"-o StrictHostKeyChecking=no\" (although this particular option is better set by I(accept_hostkey)).", "The module ensures that 'BatchMode=yes' is always present to avoid prompts."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "track_submodules", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If C(true), submodules will track the latest commit on their master branch (or other branch specified in .gitmodules).  If C(false), submodules will be kept at the revision specified by the main project. This is equivalent to specifying the --remote flag to git submodule update."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "umask", "type": "any", "elements": "", "default": null, "required": false, "description": ["The umask to set before doing any checkouts, or any other repository maintenance."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "update", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["If C(false), do not retrieve new revisions from the origin repository.", "Operations like archive will work on the existing (old) repository and might not respond to changes to the options version or remote."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "verify_commit", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If C(true), when cloning or checking out a I(version) verify the signature of a GPG signed commit. This requires git version>=2.1.0 to be installed. The commit MUST be signed and the public key MUST be present in the GPG keyring."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "version", "type": "str", "elements": "", "default": "HEAD", "required": false, "description": ["What version of the repository to check out. This can be the literal string C(HEAD), a branch name, a tag name. It can also be a I(SHA-1) hash, in which case I(refspec) needs to be specified if the given revision is not already available."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/git.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.group", "name": "group", "fqcn": "ansible.builtin.group", "local_key": "module module:lib/ansible/modules/group.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Stephen Fromm (@sfromm)\ncollection: ansible.builtin\ndescription:\n- Manage presence of groups on a host.\n- For Windows targets, use the M(ansible.windows.win_group) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/group.py\nhas_action: false\nmodule: group\noptions:\n  gid:\n    description:\n    - Optional I(GID) to set for the group.\n    type: int\n  local:\n    default: false\n    description:\n    - Forces the use of \"local\" command alternatives on platforms that implement it.\n    - This is useful in environments that use centralized authentication when you\n      want to manipulate the local groups. (for example, it uses C(lgroupadd) instead\n      of C(groupadd)).\n    - This requires that these commands exist on the targeted host, otherwise it will\n      be a fatal error.\n    type: bool\n    version_added: '2.6'\n    version_added_collection: ansible.builtin\n  name:\n    description:\n    - Name of the group to manage.\n    required: true\n    type: str\n  non_unique:\n    default: false\n    description:\n    - This option allows to change the group ID to a non-unique value. Requires C(gid).\n    - Not supported on macOS or BusyBox distributions.\n    type: bool\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  state:\n    choices:\n    - absent\n    - present\n    default: present\n    description:\n    - Whether the group should be present or not on the remote host.\n    type: str\n  system:\n    default: false\n    description:\n    - If I(yes), indicates that the group created is a system group.\n    type: bool\nrequirements:\n- groupadd\n- groupdel\n- groupmod\nseealso:\n- module: ansible.builtin.user\n- module: ansible.windows.win_group\nshort_description: Add or remove groups\nversion_added: 0.0.2\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Ensure group \"somegroup\" exists\n  ansible.builtin.group:\n    name: somegroup\n    state: present\n\n- name: Ensure group \"docker\" exists with correct gid\n  ansible.builtin.group:\n    name: docker\n    state: present\n    gid: 1750\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "gid", "type": "int", "elements": "", "default": null, "required": false, "description": ["Optional I(GID) to set for the group."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "local", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Forces the use of \"local\" command alternatives on platforms that implement it.", "This is useful in environments that use centralized authentication when you want to manipulate the local groups. (for example, it uses C(lgroupadd) instead of C(groupadd)).", "This requires that these commands exist on the targeted host, otherwise it will be a fatal error."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": true, "description": ["Name of the group to manage."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "non_unique", "type": "bool", "elements": "", "default": false, "required": false, "description": ["This option allows to change the group ID to a non-unique value. Requires C(gid).", "Not supported on macOS or BusyBox distributions."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "present", "required": false, "description": ["Whether the group should be present or not on the remote host."], "choices": ["absent", "present"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "system", "type": "bool", "elements": "", "default": false, "required": false, "description": ["If I(yes), indicates that the group created is a system group."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/group.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.group_by", "name": "group_by", "fqcn": "ansible.builtin.group_by", "local_key": "module module:lib/ansible/modules/group_by.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: full\n  bypass_task_loop:\n    description: These tasks ignore the C(loop) and C(with_) keywords\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    details: While this makes no changes to target systems the 'in memory' inventory\n      will still be altered\n    support: partial\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  core:\n    description: This is a 'core engine' feature and is not implemented like most\n      task actions, so it is not overridable in any way via the plugin system.\n    details: While parts of this action are implemented in core, other parts are still\n      available as normal plugins and can be partially overridden\n    support: partial\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  ignore_conditional:\n    description: The action is not subject to conditional execution so it will ignore\n      the C(when:) keyword\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\n  tags:\n    description: Allows for the 'tags' keyword to control the selection of this action\n      for execution\n    support: full\n  until:\n    description: Denotes if this action objeys until/retry/poll keywords\n    support: full\nauthor:\n- Jeroen Hoekx (@jhoekx)\ncollection: ansible.builtin\ndescription:\n- Use facts to create ad-hoc groups that can be used later in a playbook.\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/group_by.py\nhas_action: true\nmodule: group_by\nnotes:\n- Spaces in group names are converted to dashes '-'.\n- Though this module does not change the remote host, we do provide 'changed' status\n  as it can be useful for those trying to track inventory changes.\noptions:\n  key:\n    description:\n    - The variables whose values will be used as groups.\n    required: true\n    type: str\n  parents:\n    default: all\n    description:\n    - The list of the parent groups.\n    elements: str\n    type: list\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\nseealso:\n- module: ansible.builtin.add_host\nshort_description: Create Ansible groups based on facts\nversion_added: '0.9'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Create groups based on the machine architecture\n  ansible.builtin.group_by:\n    key: machine_{{ ansible_machine }}\n\n- name: Create groups like 'virt_kvm_host'\n  ansible.builtin.group_by:\n    key: virt_{{ ansible_virtualization_type }}_{{ ansible_virtualization_role }}\n\n- name: Create nested groups\n  ansible.builtin.group_by:\n    key: el{{ ansible_distribution_major_version }}-{{ ansible_architecture }}\n    parents:\n      - el{{ ansible_distribution_major_version }}\n\n- name: Add all active hosts to a static group\n  ansible.builtin.group_by:\n    key: done\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "key", "type": "str", "elements": "", "default": null, "required": true, "description": ["The variables whose values will be used as groups."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "parents", "type": "list", "elements": "str", "default": "all", "required": false, "description": ["The list of the parent groups."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/group_by.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.hostname", "name": "hostname", "fqcn": "ansible.builtin.hostname", "local_key": "module module:lib/ansible/modules/hostname.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  facts:\n    description: Action returns an C(ansible_facts) dictionary that will update existing\n      host facts\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Adrian Likins (@alikins)\n- Hideki Saito (@saito-hideki)\ncollection: ansible.builtin\ndescription:\n- Set system's hostname. Supports most OSs/Distributions including those using C(systemd).\n- Windows, HP-UX, and AIX are not currently supported.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/hostname.py\nhas_action: false\nmodule: hostname\nnotes:\n- This module does B(NOT) modify C(/etc/hosts). You need to modify it yourself using\n  other modules such as M(ansible.builtin.template) or M(ansible.builtin.replace).\n- On macOS, this module uses C(scutil) to set C(HostName), C(ComputerName), and C(LocalHostName).\n  Since C(LocalHostName) cannot contain spaces or most special characters, this module\n  will replace characters when setting C(LocalHostName).\noptions:\n  name:\n    description:\n    - Name of the host.\n    - If the value is a fully qualified domain name that does not resolve from the\n      given host, this will cause the module to hang for a few seconds while waiting\n      for the name resolution attempt to timeout.\n    required: true\n    type: str\n  use:\n    choices:\n    - alpine\n    - debian\n    - freebsd\n    - generic\n    - macos\n    - macosx\n    - darwin\n    - openbsd\n    - openrc\n    - redhat\n    - sles\n    - solaris\n    - systemd\n    description:\n    - Which strategy to use to update the hostname.\n    - If not set we try to autodetect, but this can be problematic, particularly with\n      containers as they can present misleading information.\n    - Note that 'systemd' should be specified for RHEL/EL/CentOS 7+. Older distributions\n      should use 'redhat'.\n    type: str\n    version_added: '2.9'\n    version_added_collection: ansible.builtin\nrequirements:\n- hostname\nshort_description: Manage hostname\nversion_added: '1.4'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Set a hostname\n  ansible.builtin.hostname:\n    name: web01\n\n- name: Set a hostname specifying strategy\n  ansible.builtin.hostname:\n    name: web01\n    use: systemd\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": true, "description": ["Name of the host.", "If the value is a fully qualified domain name that does not resolve from the given host, this will cause the module to hang for a few seconds while waiting for the name resolution attempt to timeout."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "use", "type": "str", "elements": "", "default": null, "required": false, "description": ["Which strategy to use to update the hostname.", "If not set we try to autodetect, but this can be problematic, particularly with containers as they can present misleading information.", "Note that 'systemd' should be specified for RHEL/EL/CentOS 7+. Older distributions should use 'redhat'."], "choices": ["alpine", "debian", "freebsd", "generic", "macos", "macosx", "darwin", "openbsd", "openrc", "redhat", "sles", "solaris", "systemd"], "aliases": null}], "defined_in": "lib/ansible/modules/hostname.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.import_playbook", "name": "import_playbook", "fqcn": "ansible.builtin.import_playbook", "local_key": "module module:lib/ansible/modules/import_playbook.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    details: While this action executes locally on the controller it is not governed\n      by an action plugin\n    support: none\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    details: While the import can be host specific and runs per host it is not dealing\n      with all available host variables, use an include instead for those cases\n    support: partial\n  bypass_task_loop:\n    description: These tasks ignore the C(loop) and C(with_) keywords\n    details: The task itself is not looped, but the loop is applied to each imported\n      task\n    support: partial\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  core:\n    description: This is a 'core engine' feature and is not implemented like most\n      task actions, so it is not overridable in any way via the plugin system.\n    support: full\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    details: Since there are no connection nor facts, there is no sense in delegating\n      imports\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  ignore_conditional:\n    description: The action is not subject to conditional execution so it will ignore\n      the C(when:) keyword\n    details: While the action itself will ignore the conditional, it will be inherited\n      by the imported tasks themselves\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\n  tags:\n    description: Allows for the 'tags' keyword to control the selection of this action\n      for execution\n    details: Tags are not interpreted for this action, they are applied to the imported\n      tasks\n    support: full\n  until:\n    description: Denotes if this action objeys until/retry/poll keywords\n    support: full\nauthor: Ansible Core Team (@ansible)\ncollection: ansible.builtin\ndescription:\n- Includes a file with a list of plays to be executed.\n- Files with a list of plays can only be included at the top level.\n- You cannot use this action inside a play.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/import_playbook.py\nhas_action: false\nmodule: import_playbook\nnotes:\n- This is a core feature of Ansible, rather than a module, and cannot be overridden\n  like a module.\noptions:\n  free-form:\n    description:\n    - The name of the imported playbook is specified directly without any other option.\nseealso:\n- module: ansible.builtin.import_role\n- module: ansible.builtin.import_tasks\n- module: ansible.builtin.include_role\n- module: ansible.builtin.include_tasks\n- description: More information related to including and importing playbooks, roles\n    and tasks.\n  ref: playbooks_reuse_includes\nshort_description: Import a playbook\nversion_added: '2.4'\nversion_added_collection: ansible.builtin\n", "examples": "\n- hosts: localhost\n  tasks:\n    - ansible.builtin.debug:\n        msg: play1\n\n- name: Include a play after another play\n  ansible.builtin.import_playbook: otherplays.yaml\n\n- name: Set variables on an imported playbook\n  ansible.builtin.import_playbook: otherplays.yml\n  vars:\n    service: httpd\n\n- name: Include a playbook from a collection\n  ansible.builtin.import_playbook: my_namespace.my_collection.my_playbook\n\n- name: This DOES NOT WORK\n  hosts: all\n  tasks:\n    - ansible.builtin.debug:\n        msg: task1\n\n    - name: This fails because I'm inside a play already\n      ansible.builtin.import_playbook: stuff.yaml\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "free-form", "type": "", "elements": "", "default": null, "required": false, "description": ["The name of the imported playbook is specified directly without any other option."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/import_playbook.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.import_role", "name": "import_role", "fqcn": "ansible.builtin.import_role", "local_key": "module module:lib/ansible/modules/import_role.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    details: While this action executes locally on the controller it is not governed\n      by an action plugin\n    support: none\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    details: While the import can be host specific and runs per host it is not dealing\n      with all available host variables, use an include instead for those cases\n    support: partial\n  bypass_task_loop:\n    description: These tasks ignore the C(loop) and C(with_) keywords\n    details: The task itself is not looped, but the loop is applied to each imported\n      task\n    support: partial\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  core:\n    description: This is a 'core engine' feature and is not implemented like most\n      task actions, so it is not overridable in any way via the plugin system.\n    support: full\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    details: Since there are no connection nor facts, there is no sense in delegating\n      imports\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  ignore_conditional:\n    description: The action is not subject to conditional execution so it will ignore\n      the C(when:) keyword\n    details: While the action itself will ignore the conditional, it will be inherited\n      by the imported tasks themselves\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\n  tags:\n    description: Allows for the 'tags' keyword to control the selection of this action\n      for execution\n    details: Tags are not interpreted for this action, they are applied to the imported\n      tasks\n    support: full\n  until:\n    description: Denotes if this action objeys until/retry/poll keywords\n    support: full\nauthor: Ansible Core Team (@ansible)\ncollection: ansible.builtin\ndescription:\n- Much like the C(roles:) keyword, this task loads a role, but it allows you to control\n  when the role tasks run in between other tasks of the play.\n- Most keywords, loops and conditionals will only be applied to the imported tasks,\n  not to this statement itself. If you want the opposite behavior, use M(ansible.builtin.include_role)\n  instead.\n- Does not work in handlers.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/import_role.py\nhas_action: false\nmodule: import_role\nnotes:\n- Handlers are made available to the whole play.\n- Since Ansible 2.7 variables defined in C(vars) and C(defaults) for the role are\n  exposed to the play at playbook parsing time. Due to this, these variables will\n  be accessible to roles and tasks executed before the location of the M(ansible.builtin.import_role)\n  task.\n- Unlike M(ansible.builtin.include_role) variable exposure is not configurable, and\n  will always be exposed.\noptions:\n  allow_duplicates:\n    default: true\n    description:\n    - Overrides the role's metadata setting to allow using a role more than once with\n      the same parameters.\n    type: bool\n  defaults_from:\n    default: main\n    description:\n    - File to load from a role's C(defaults/) directory.\n    type: str\n  handlers_from:\n    default: main\n    description:\n    - File to load from a role's C(handlers/) directory.\n    type: str\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  name:\n    description:\n    - The name of the role to be executed.\n    required: true\n    type: str\n  rolespec_validate:\n    default: true\n    description:\n    - Perform role argument spec validation if an argument spec is defined.\n    type: bool\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  tasks_from:\n    default: main\n    description:\n    - File to load from a role's C(tasks/) directory.\n    type: str\n  vars_from:\n    default: main\n    description:\n    - File to load from a role's C(vars/) directory.\n    type: str\nseealso:\n- module: ansible.builtin.import_playbook\n- module: ansible.builtin.import_tasks\n- module: ansible.builtin.include_role\n- module: ansible.builtin.include_tasks\n- description: More information related to including and importing playbooks, roles\n    and tasks.\n  ref: playbooks_reuse_includes\nshort_description: Import a role into a play\nversion_added: '2.4'\nversion_added_collection: ansible.builtin\n", "examples": "\n- hosts: all\n  tasks:\n    - ansible.builtin.import_role:\n        name: myrole\n\n    - name: Run tasks/other.yaml instead of 'main'\n      ansible.builtin.import_role:\n        name: myrole\n        tasks_from: other\n\n    - name: Pass variables to role\n      ansible.builtin.import_role:\n        name: myrole\n      vars:\n        rolevar1: value from task\n\n    - name: Apply condition to each task in role\n      ansible.builtin.import_role:\n        name: myrole\n      when: not idontwanttorun\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "allow_duplicates", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Overrides the role's metadata setting to allow using a role more than once with the same parameters."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "defaults_from", "type": "str", "elements": "", "default": "main", "required": false, "description": ["File to load from a role's C(defaults/) directory."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "handlers_from", "type": "str", "elements": "", "default": "main", "required": false, "description": ["File to load from a role's C(handlers/) directory."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": true, "description": ["The name of the role to be executed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "rolespec_validate", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Perform role argument spec validation if an argument spec is defined."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "tasks_from", "type": "str", "elements": "", "default": "main", "required": false, "description": ["File to load from a role's C(tasks/) directory."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "vars_from", "type": "str", "elements": "", "default": "main", "required": false, "description": ["File to load from a role's C(vars/) directory."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/import_role.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.import_tasks", "name": "import_tasks", "fqcn": "ansible.builtin.import_tasks", "local_key": "module module:lib/ansible/modules/import_tasks.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    details: While this action executes locally on the controller it is not governed\n      by an action plugin\n    support: none\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    details: While the import can be host specific and runs per host it is not dealing\n      with all available host variables, use an include instead for those cases\n    support: partial\n  bypass_task_loop:\n    description: These tasks ignore the C(loop) and C(with_) keywords\n    details: The task itself is not looped, but the loop is applied to each imported\n      task\n    support: partial\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: none\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  core:\n    description: This is a 'core engine' feature and is not implemented like most\n      task actions, so it is not overridable in any way via the plugin system.\n    support: full\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    details: Since there are no connection nor facts, there is no sense in delegating\n      imports\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  ignore_conditional:\n    description: The action is not subject to conditional execution so it will ignore\n      the C(when:) keyword\n    details: While the action itself will ignore the conditional, it will be inherited\n      by the imported tasks themselves\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\n  tags:\n    description: Allows for the 'tags' keyword to control the selection of this action\n      for execution\n    details: Tags are not interpreted for this action, they are applied to the imported\n      tasks\n    support: full\n  until:\n    description: Denotes if this action objeys until/retry/poll keywords\n    support: full\nauthor: Ansible Core Team (@ansible)\ncollection: ansible.builtin\ndescription:\n- Imports a list of tasks to be added to the current playbook for subsequent execution.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/import_tasks.py\nhas_action: false\nmodule: import_tasks\nnotes:\n- This is a core feature of Ansible, rather than a module, and cannot be overridden\n  like a module\noptions:\n  file:\n    description:\n    - Specifies the name of the file that lists tasks to add to the current playbook.\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  free-form:\n    description:\n    - 'Specifies the name of the imported file directly without any other option C(-\n      import_tasks: file.yml).\n\n      '\n    - Most keywords, including loops and conditionals, only apply to the imported\n      tasks, not to this statement itself.\n    - If you need any of those to apply, use M(ansible.builtin.include_tasks) instead.\nseealso:\n- module: ansible.builtin.import_playbook\n- module: ansible.builtin.import_role\n- module: ansible.builtin.include_role\n- module: ansible.builtin.include_tasks\n- description: More information related to including and importing playbooks, roles\n    and tasks.\n  ref: playbooks_reuse_includes\nshort_description: Import a task list\nversion_added: '2.4'\nversion_added_collection: ansible.builtin\n", "examples": "\n- hosts: all\n  tasks:\n    - ansible.builtin.debug:\n        msg: task1\n\n    - name: Include task list in play\n      ansible.builtin.import_tasks:\n        file: stuff.yaml\n\n    - ansible.builtin.debug:\n        msg: task10\n\n- hosts: all\n  tasks:\n    - ansible.builtin.debug:\n        msg: task1\n\n    - name: Apply conditional to all imported tasks\n      ansible.builtin.import_tasks: stuff.yaml\n      when: hostvar is defined\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "file", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies the name of the file that lists tasks to add to the current playbook."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "free-form", "type": "", "elements": "", "default": null, "required": false, "description": ["Specifies the name of the imported file directly without any other option C(- import_tasks: file.yml).\n", "Most keywords, including loops and conditionals, only apply to the imported tasks, not to this statement itself.", "If you need any of those to apply, use M(ansible.builtin.include_tasks) instead."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/import_tasks.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.include_role", "name": "include_role", "fqcn": "ansible.builtin.include_role", "local_key": "module module:lib/ansible/modules/include_role.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    details: While this action executes locally on the controller it is not governed\n      by an action plugin\n    support: none\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  bypass_task_loop:\n    description: These tasks ignore the C(loop) and C(with_) keywords\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  core:\n    description: This is a 'core engine' feature and is not implemented like most\n      task actions, so it is not overridable in any way via the plugin system.\n    support: full\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    details: Since there are no connection nor facts, there is no sense in delegating\n      includes\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  ignore_conditional:\n    description: The action is not subject to conditional execution so it will ignore\n      the C(when:) keyword\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\n  tags:\n    description: Allows for the 'tags' keyword to control the selection of this action\n      for execution\n    details: Tags are interpreted by this action but are not automatically inherited\n      by the include tasks, see C(apply)\n    support: full\n  until:\n    description: Denotes if this action objeys until/retry/poll keywords\n    support: full\nauthor: Ansible Core Team (@ansible)\ncollection: ansible.builtin\ndescription:\n- Dynamically loads and executes a specified role as a task.\n- May be used only where Ansible tasks are allowed - inside C(pre_tasks), C(tasks),\n  or C(post_tasks) play objects, or as a task inside a role.\n- Task-level keywords, loops, and conditionals apply only to the C(include_role) statement\n  itself.\n- To apply keywords to the tasks within the role, pass them using the C(apply) option\n  or use M(ansible.builtin.import_role) instead.\n- Ignores some keywords, like C(until) and C(retries).\n- This module is also supported for Windows targets.\n- Does not work in handlers.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/include_role.py\nhas_action: false\nmodule: include_role\nnotes:\n- Handlers and are made available to the whole play.\n- After Ansible 2.4, you can use M(ansible.builtin.import_role) for C(static) behaviour\n  and this action for C(dynamic) one.\noptions:\n  allow_duplicates:\n    default: true\n    description:\n    - Overrides the role's metadata setting to allow using a role more than once with\n      the same parameters.\n    type: bool\n  apply:\n    description:\n    - Accepts a hash of task keywords (e.g. C(tags), C(become)) that will be applied\n      to all tasks within the included role.\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  defaults_from:\n    default: main\n    description:\n    - File to load from a role's C(defaults/) directory.\n    type: str\n  handlers_from:\n    default: main\n    description:\n    - File to load from a role's C(handlers/) directory.\n    type: str\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  name:\n    description:\n    - The name of the role to be executed.\n    required: true\n    type: str\n  public:\n    default: false\n    description:\n    - This option dictates whether the role's C(vars) and C(defaults) are exposed\n      to the play. If set to C(true) the variables will be available to tasks following\n      the C(include_role) task. This functionality differs from standard variable\n      exposure for roles listed under the C(roles) header or C(import_role) as they\n      are exposed to the play at playbook parsing time, and available to earlier roles\n      and tasks as well.\n    type: bool\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  rolespec_validate:\n    default: true\n    description:\n    - Perform role argument spec validation if an argument spec is defined.\n    type: bool\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  tasks_from:\n    default: main\n    description:\n    - File to load from a role's C(tasks/) directory.\n    type: str\n  vars_from:\n    default: main\n    description:\n    - File to load from a role's C(vars/) directory.\n    type: str\nseealso:\n- module: ansible.builtin.import_playbook\n- module: ansible.builtin.import_role\n- module: ansible.builtin.import_tasks\n- module: ansible.builtin.include_tasks\n- description: More information related to including and importing playbooks, roles\n    and tasks.\n  ref: playbooks_reuse_includes\nshort_description: Load and execute a role\nversion_added: '2.2'\nversion_added_collection: ansible.builtin\n", "examples": "\n- ansible.builtin.include_role:\n    name: myrole\n\n- name: Run tasks/other.yaml instead of 'main'\n  ansible.builtin.include_role:\n    name: myrole\n    tasks_from: other\n\n- name: Pass variables to role\n  ansible.builtin.include_role:\n    name: myrole\n  vars:\n    rolevar1: value from task\n\n- name: Use role in loop\n  ansible.builtin.include_role:\n    name: '{{ roleinputvar }}'\n  loop:\n    - '{{ roleinput1 }}'\n    - '{{ roleinput2 }}'\n  loop_control:\n    loop_var: roleinputvar\n\n- name: Conditional role\n  ansible.builtin.include_role:\n    name: myrole\n  when: not idontwanttorun\n\n- name: Apply tags to tasks within included file\n  ansible.builtin.include_role:\n    name: install\n    apply:\n      tags:\n        - install\n  tags:\n    - always\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "allow_duplicates", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Overrides the role's metadata setting to allow using a role more than once with the same parameters."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "apply", "type": "", "elements": "", "default": null, "required": false, "description": ["Accepts a hash of task keywords (e.g. C(tags), C(become)) that will be applied to all tasks within the included role."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "defaults_from", "type": "str", "elements": "", "default": "main", "required": false, "description": ["File to load from a role's C(defaults/) directory."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "handlers_from", "type": "str", "elements": "", "default": "main", "required": false, "description": ["File to load from a role's C(handlers/) directory."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": true, "description": ["The name of the role to be executed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "public", "type": "bool", "elements": "", "default": false, "required": false, "description": ["This option dictates whether the role's C(vars) and C(defaults) are exposed to the play. If set to C(true) the variables will be available to tasks following the C(include_role) task. This functionality differs from standard variable exposure for roles listed under the C(roles) header or C(import_role) as they are exposed to the play at playbook parsing time, and available to earlier roles and tasks as well."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "rolespec_validate", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Perform role argument spec validation if an argument spec is defined."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "tasks_from", "type": "str", "elements": "", "default": "main", "required": false, "description": ["File to load from a role's C(tasks/) directory."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "vars_from", "type": "str", "elements": "", "default": "main", "required": false, "description": ["File to load from a role's C(vars/) directory."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/include_role.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.include_tasks", "name": "include_tasks", "fqcn": "ansible.builtin.include_tasks", "local_key": "module module:lib/ansible/modules/include_tasks.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    details: While this action executes locally on the controller it is not governed\n      by an action plugin\n    support: none\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  bypass_task_loop:\n    description: These tasks ignore the C(loop) and C(with_) keywords\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: none\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  core:\n    description: This is a 'core engine' feature and is not implemented like most\n      task actions, so it is not overridable in any way via the plugin system.\n    support: full\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    details: Since there are no connection nor facts, there is no sense in delegating\n      includes\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  ignore_conditional:\n    description: The action is not subject to conditional execution so it will ignore\n      the C(when:) keyword\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\n  tags:\n    description: Allows for the 'tags' keyword to control the selection of this action\n      for execution\n    details: Tags are interpreted by this action but are not automatically inherited\n      by the include tasks, see C(apply)\n    support: full\n  until:\n    description: Denotes if this action objeys until/retry/poll keywords\n    support: full\nauthor: Ansible Core Team (@ansible)\ncollection: ansible.builtin\ndescription:\n- Includes a file with a list of tasks to be executed in the current playbook.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/include_tasks.py\nhas_action: false\nmodule: include_tasks\noptions:\n  apply:\n    description:\n    - Accepts a hash of task keywords (e.g. C(tags), C(become)) that will be applied\n      to the tasks within the include.\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  file:\n    description:\n    - Specifies the name of the file that lists tasks to add to the current playbook.\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  free-form:\n    description:\n    - 'Specifies the name of the imported file directly without any other option C(-\n      include_tasks: file.yml).\n\n      '\n    - Is the equivalent of specifying an argument for the I(file) parameter.\n    - Most keywords, including loop, with_items, and conditionals, apply to this statement\n      unlike M(ansible.builtin.import_tasks).\n    - The do-until loop is not supported.\nseealso:\n- module: ansible.builtin.import_playbook\n- module: ansible.builtin.import_role\n- module: ansible.builtin.import_tasks\n- module: ansible.builtin.include_role\n- description: More information related to including and importing playbooks, roles\n    and tasks.\n  ref: playbooks_reuse_includes\nshort_description: Dynamically include a task list\nversion_added: '2.4'\nversion_added_collection: ansible.builtin\n", "examples": "\n- hosts: all\n  tasks:\n    - ansible.builtin.debug:\n        msg: task1\n\n    - name: Include task list in play\n      ansible.builtin.include_tasks:\n        file: stuff.yaml\n\n    - ansible.builtin.debug:\n        msg: task10\n\n- hosts: all\n  tasks:\n    - ansible.builtin.debug:\n        msg: task1\n\n    - name: Include task list in play only if the condition is true\n      ansible.builtin.include_tasks: \"{{ hostvar }}.yaml\"\n      when: hostvar is defined\n\n- name: Apply tags to tasks within included file\n  ansible.builtin.include_tasks:\n    file: install.yml\n    apply:\n      tags:\n        - install\n  tags:\n    - always\n\n- name: Apply tags to tasks within included file when using free-form\n  ansible.builtin.include_tasks: install.yml\n  args:\n    apply:\n      tags:\n        - install\n  tags:\n    - always\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "apply", "type": "str", "elements": "", "default": null, "required": false, "description": ["Accepts a hash of task keywords (e.g. C(tags), C(become)) that will be applied to the tasks within the include."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "file", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies the name of the file that lists tasks to add to the current playbook."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "free-form", "type": "", "elements": "", "default": null, "required": false, "description": ["Specifies the name of the imported file directly without any other option C(- include_tasks: file.yml).\n", "Is the equivalent of specifying an argument for the I(file) parameter.", "Most keywords, including loop, with_items, and conditionals, apply to this statement unlike M(ansible.builtin.import_tasks).", "The do-until loop is not supported."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/include_tasks.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.include_vars", "name": "include_vars", "fqcn": "ansible.builtin.include_vars", "local_key": "module module:lib/ansible/modules/include_vars.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    details: While the action plugin does do some of the work it relies on the core\n      engine to actually create the variables, that part cannot be overridden\n    support: partial\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  bypass_task_loop:\n    description: These tasks ignore the C(loop) and C(with_) keywords\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  core:\n    description: This is a 'core engine' feature and is not implemented like most\n      task actions, so it is not overridable in any way via the plugin system.\n    details: While parts of this action are implemented in core, other parts are still\n      available as normal plugins and can be partially overridden\n    support: partial\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    details:\n    - while variable assignment can be delegated to a different host the execution\n      context is always the current inventory_hostname\n    - connection variables, if set at all, would reflect the host it would target,\n      even if we are not connecting at all in this case\n    support: partial\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  ignore_conditional:\n    description: The action is not subject to conditional execution so it will ignore\n      the C(when:) keyword\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\n  tags:\n    description: Allows for the 'tags' keyword to control the selection of this action\n      for execution\n    support: full\n  until:\n    description: Denotes if this action objeys until/retry/poll keywords\n    support: full\nauthor: Allen Sanabria (@linuxdynasty)\ncollection: ansible.builtin\ndescription:\n- Loads YAML/JSON variables dynamically from a file or directory, recursively, during\n  task runtime.\n- If loading a directory, the files are sorted alphabetically before being loaded.\n- This module is also supported for Windows targets.\n- To assign included variables to a different host than C(inventory_hostname), use\n  C(delegate_to) and set C(delegate_facts=yes).\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/include_vars.py\nhas_action: true\nmodule: include_vars\noptions:\n  depth:\n    default: 0\n    description:\n    - When using C(dir), this module will, by default, recursively go through each\n      sub directory and load up the variables. By explicitly setting the depth, this\n      module will only go as deep as the depth.\n    type: int\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  dir:\n    description:\n    - The directory name from which the variables should be loaded.\n    - If the path is relative and the task is inside a role, it will look inside the\n      role's vars/ subdirectory.\n    - If the path is relative and not inside a role, it will be parsed relative to\n      the playbook.\n    type: path\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  extensions:\n    default:\n    - json\n    - yaml\n    - yml\n    description:\n    - List of file extensions to read when using C(dir).\n    elements: str\n    type: list\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  file:\n    description:\n    - The file name from which variables should be loaded.\n    - If the path is relative, it will look for the file in vars/ subdirectory of\n      a role or relative to playbook.\n    type: path\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  files_matching:\n    description:\n    - Limit the files that are loaded within any directory to this regular expression.\n    type: str\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  free-form:\n    description:\n    - This module allows you to specify the 'file' option directly without any other\n      options.\n    - There is no 'free-form' option, this is just an indicator, see example below.\n  hash_behaviour:\n    choices:\n    - replace\n    - merge\n    default: null\n    description:\n    - If set to C(merge), merges existing hash variables instead of overwriting them.\n    - If omitted C(null), the behavior falls back to the global I(hash_behaviour)\n      configuration.\n    type: str\n    version_added: '2.12'\n    version_added_collection: ansible.builtin\n  ignore_files:\n    description:\n    - List of file names to ignore.\n    elements: str\n    type: list\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  ignore_unknown_extensions:\n    default: false\n    description:\n    - Ignore unknown file extensions within the directory.\n    - This allows users to specify a directory containing vars files that are intermingled\n      with non-vars files extension types (e.g. a directory with a README in it and\n      vars files).\n    type: bool\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  name:\n    description:\n    - The name of a variable into which assign the included vars.\n    - If omitted (null) they will be made top level vars.\n    type: str\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\nseealso:\n- module: ansible.builtin.set_fact\n- description: More information related to task delegation.\n  ref: playbooks_delegation\nshort_description: Load variables from files, dynamically within a task\nversion_added: '1.4'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Include vars of stuff.yaml into the 'stuff' variable (2.2).\n  ansible.builtin.include_vars:\n    file: stuff.yaml\n    name: stuff\n\n- name: Conditionally decide to load in variables into 'plans' when x is 0, otherwise do not. (2.2)\n  ansible.builtin.include_vars:\n    file: contingency_plan.yaml\n    name: plans\n  when: x == 0\n\n- name: Load a variable file based on the OS type, or a default if not found. Using free-form to specify the file.\n  ansible.builtin.include_vars: \"{{ lookup('ansible.builtin.first_found', params) }}\"\n  vars:\n    params:\n      files:\n        - '{{ansible_distribution}}.yaml'\n        - '{{ansible_os_family}}.yaml'\n        - default.yaml\n      paths:\n        - 'vars'\n\n- name: Bare include (free-form)\n  ansible.builtin.include_vars: myvars.yaml\n\n- name: Include all .json and .jsn files in vars/all and all nested directories (2.3)\n  ansible.builtin.include_vars:\n    dir: vars/all\n    extensions:\n      - 'json'\n      - 'jsn'\n\n- name: Include all default extension files in vars/all and all nested directories and save the output in test. (2.2)\n  ansible.builtin.include_vars:\n    dir: vars/all\n    name: test\n\n- name: Include default extension files in vars/services (2.2)\n  ansible.builtin.include_vars:\n    dir: vars/services\n    depth: 1\n\n- name: Include only files matching bastion.yaml (2.2)\n  ansible.builtin.include_vars:\n    dir: vars\n    files_matching: bastion.yaml\n\n- name: Include all .yaml files except bastion.yaml (2.3)\n  ansible.builtin.include_vars:\n    dir: vars\n    ignore_files:\n      - 'bastion.yaml'\n    extensions:\n      - 'yaml'\n\n- name: Ignore warnings raised for files with unknown extensions while loading (2.7)\n  ansible.builtin.include_vars:\n    dir: vars\n    ignore_unknown_extensions: True\n    extensions:\n      - ''\n      - 'yaml'\n      - 'yml'\n      - 'json'\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "depth", "type": "int", "elements": "", "default": 0, "required": false, "description": ["When using C(dir), this module will, by default, recursively go through each sub directory and load up the variables. By explicitly setting the depth, this module will only go as deep as the depth."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "dir", "type": "str", "elements": "", "default": null, "required": false, "description": ["The directory name from which the variables should be loaded.", "If the path is relative and the task is inside a role, it will look inside the role's vars/ subdirectory.", "If the path is relative and not inside a role, it will be parsed relative to the playbook."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "extensions", "type": "list", "elements": "str", "default": ["json", "yaml", "yml"], "required": false, "description": ["List of file extensions to read when using C(dir)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "file", "type": "str", "elements": "", "default": null, "required": false, "description": ["The file name from which variables should be loaded.", "If the path is relative, it will look for the file in vars/ subdirectory of a role or relative to playbook."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "files_matching", "type": "str", "elements": "", "default": null, "required": false, "description": ["Limit the files that are loaded within any directory to this regular expression."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "free-form", "type": "", "elements": "", "default": null, "required": false, "description": ["This module allows you to specify the 'file' option directly without any other options.", "There is no 'free-form' option, this is just an indicator, see example below."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "hash_behaviour", "type": "str", "elements": "", "default": null, "required": false, "description": ["If set to C(merge), merges existing hash variables instead of overwriting them.", "If omitted C(null), the behavior falls back to the global I(hash_behaviour) configuration."], "choices": ["replace", "merge"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ignore_files", "type": "list", "elements": "str", "default": null, "required": false, "description": ["List of file names to ignore."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ignore_unknown_extensions", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Ignore unknown file extensions within the directory.", "This allows users to specify a directory containing vars files that are intermingled with non-vars files extension types (e.g. a directory with a README in it and vars files)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": false, "description": ["The name of a variable into which assign the included vars.", "If omitted (null) they will be made top level vars."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/include_vars.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.iptables", "name": "iptables", "fqcn": "ansible.builtin.iptables", "local_key": "module module:lib/ansible/modules/iptables.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: linux\n    support: N/A\nauthor:\n- \"Linus Unneb\\xE4ck (@LinusU) <linus@folkdatorn.se>\"\n- \"S\\xE9bastien DA ROCHA (@sebastiendarocha)\"\ncollection: ansible.builtin\ndescription:\n- C(iptables) is used to set up, maintain, and inspect the tables of IP packet filter\n  rules in the Linux kernel.\n- This module does not handle the saving and/or loading of rules, but rather only\n  manipulates the current rules that are present in memory. This is the same as the\n  behaviour of the C(iptables) and C(ip6tables) command which this module uses internally.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/iptables.py\nhas_action: false\nmodule: iptables\nnotes:\n- This module just deals with individual rules. If you need advanced chaining of rules\n  the recommended way is to template the iptables restore file.\noptions:\n  action:\n    choices:\n    - append\n    - insert\n    default: append\n    description:\n    - Whether the rule should be appended at the bottom or inserted at the top.\n    - If the rule already exists the chain will not be modified.\n    type: str\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  chain:\n    description:\n    - Specify the iptables chain to modify.\n    - This could be a user-defined chain or one of the standard iptables chains, like\n      C(INPUT), C(FORWARD), C(OUTPUT), C(PREROUTING), C(POSTROUTING), C(SECMARK) or\n      C(CONNSECMARK).\n    type: str\n  chain_management:\n    default: false\n    description:\n    - If C(true) and C(state) is C(present), the chain will be created if needed.\n    - If C(true) and C(state) is C(absent), the chain will be deleted if the only\n      other parameter passed are C(chain) and optionally C(table).\n    type: bool\n    version_added: '2.13'\n    version_added_collection: ansible.builtin\n  comment:\n    description:\n    - This specifies a comment that will be added to the rule.\n    type: str\n  ctstate:\n    default: []\n    description:\n    - A list of the connection states to match in the conntrack module.\n    - Possible values are C(INVALID), C(NEW), C(ESTABLISHED), C(RELATED), C(UNTRACKED),\n      C(SNAT), C(DNAT).\n    elements: str\n    type: list\n  destination:\n    description:\n    - Destination specification.\n    - Address can be either a network name, a hostname, a network IP address (with\n      /mask), or a plain IP address.\n    - Hostnames will be resolved once only, before the rule is submitted to the kernel.\n      Please note that specifying any name to be resolved with a remote query such\n      as DNS is a really bad idea.\n    - The mask can be either a network mask or a plain number, specifying the number\n      of 1's at the left side of the network mask. Thus, a mask of 24 is equivalent\n      to 255.255.255.0. A C(!) argument before the address specification inverts the\n      sense of the address.\n    type: str\n  destination_port:\n    description:\n    - 'Destination port or port range specification. This can either be a service\n      name or a port number. An inclusive range can also be specified, using the format\n      first:last. If the first port is omitted, ''0'' is assumed; if the last is omitted,\n      ''65535'' is assumed. If the first port is greater than the second one they\n      will be swapped. This is only valid if the rule also specifies one of the following\n      protocols: tcp, udp, dccp or sctp.'\n    type: str\n  destination_ports:\n    description:\n    - This specifies multiple destination port numbers or port ranges to match in\n      the multiport module.\n    - It can only be used in conjunction with the protocols tcp, udp, udplite, dccp\n      and sctp.\n    elements: str\n    type: list\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  dst_range:\n    description:\n    - Specifies the destination IP range to match in the iprange module.\n    type: str\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  flush:\n    default: false\n    description:\n    - Flushes the specified table and chain of all rules.\n    - If no chain is specified then the entire table is purged.\n    - Ignores all other parameters.\n    type: bool\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  fragment:\n    description:\n    - This means that the rule only refers to second and further fragments of fragmented\n      packets.\n    - Since there is no way to tell the source or destination ports of such a packet\n      (or ICMP type), such a packet will not match any rules which specify them.\n    - When the \"!\" argument precedes fragment argument, the rule will only match head\n      fragments, or unfragmented packets.\n    type: str\n  gateway:\n    description:\n    - This specifies the IP address of host to send the cloned packets.\n    - This option is only valid when C(jump) is set to C(TEE).\n    type: str\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  gid_owner:\n    description:\n    - Specifies the GID or group to use in match by owner rule.\n    type: str\n    version_added: '2.9'\n    version_added_collection: ansible.builtin\n  goto:\n    description:\n    - This specifies that the processing should continue in a user specified chain.\n    - Unlike the jump argument return will not continue processing in this chain but\n      instead in the chain that called us via jump.\n    type: str\n  icmp_type:\n    description:\n    - This allows specification of the ICMP type, which can be a numeric ICMP type,\n      type/code pair, or one of the ICMP type names shown by the command 'iptables\n      -p icmp -h'\n    type: str\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  in_interface:\n    description:\n    - Name of an interface via which a packet was received (only for packets entering\n      the C(INPUT), C(FORWARD) and C(PREROUTING) chains).\n    - When the C(!) argument is used before the interface name, the sense is inverted.\n    - If the interface name ends in a C(+), then any interface which begins with this\n      name will match.\n    - If this option is omitted, any interface name will match.\n    type: str\n  ip_version:\n    choices:\n    - ipv4\n    - ipv6\n    default: ipv4\n    description:\n    - Which version of the IP protocol this rule should apply to.\n    type: str\n  jump:\n    description:\n    - This specifies the target of the rule; i.e., what to do if the packet matches\n      it.\n    - The target can be a user-defined chain (other than the one this rule is in),\n      one of the special builtin targets which decide the fate of the packet immediately,\n      or an extension (see EXTENSIONS below).\n    - If this option is omitted in a rule (and the goto parameter is not used), then\n      matching the rule will have no effect on the packet's fate, but the counters\n      on the rule will be incremented.\n    type: str\n  limit:\n    description:\n    - Specifies the maximum average number of matches to allow per second.\n    - The number can specify units explicitly, using C(/second), C(/minute), C(/hour)\n      or C(/day), or parts of them (so C(5/second) is the same as C(5/s)).\n    type: str\n  limit_burst:\n    description:\n    - Specifies the maximum burst before the above limit kicks in.\n    type: str\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  log_level:\n    choices:\n    - '0'\n    - '1'\n    - '2'\n    - '3'\n    - '4'\n    - '5'\n    - '6'\n    - '7'\n    - emerg\n    - alert\n    - crit\n    - error\n    - warning\n    - notice\n    - info\n    - debug\n    description:\n    - Logging level according to the syslogd-defined priorities.\n    - The value can be strings or numbers from 1-8.\n    - This parameter is only applicable if C(jump) is set to C(LOG).\n    type: str\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  log_prefix:\n    description:\n    - Specifies a log text for the rule. Only make sense with a LOG jump.\n    type: str\n    version_added: '2.5'\n    version_added_collection: ansible.builtin\n  match:\n    default: []\n    description:\n    - Specifies a match to use, that is, an extension module that tests for a specific\n      property.\n    - The set of matches make up the condition under which a target is invoked.\n    - Matches are evaluated first to last if specified as an array and work in short-circuit\n      fashion, i.e. if one extension yields false, evaluation will stop.\n    elements: str\n    type: list\n  match_set:\n    description:\n    - Specifies a set name which can be defined by ipset.\n    - Must be used together with the match_set_flags parameter.\n    - When the C(!) argument is prepended then it inverts the rule.\n    - Uses the iptables set extension.\n    type: str\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  match_set_flags:\n    choices:\n    - src\n    - dst\n    - src,dst\n    - dst,src\n    description:\n    - Specifies the necessary flags for the match_set parameter.\n    - Must be used together with the match_set parameter.\n    - Uses the iptables set extension.\n    type: str\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  out_interface:\n    description:\n    - Name of an interface via which a packet is going to be sent (for packets entering\n      the C(FORWARD), C(OUTPUT) and C(POSTROUTING) chains).\n    - When the C(!) argument is used before the interface name, the sense is inverted.\n    - If the interface name ends in a C(+), then any interface which begins with this\n      name will match.\n    - If this option is omitted, any interface name will match.\n    type: str\n  policy:\n    choices:\n    - ACCEPT\n    - DROP\n    - QUEUE\n    - RETURN\n    description:\n    - Set the policy for the chain to the given target.\n    - Only built-in chains can have policies.\n    - This parameter requires the C(chain) parameter.\n    - If you specify this parameter, all other parameters will be ignored.\n    - This parameter is used to set default policy for the given C(chain). Do not\n      confuse this with C(jump) parameter.\n    type: str\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  protocol:\n    description:\n    - The protocol of the rule or of the packet to check.\n    - The specified protocol can be one of C(tcp), C(udp), C(udplite), C(icmp), C(ipv6-icmp)\n      or C(icmpv6), C(esp), C(ah), C(sctp) or the special keyword C(all), or it can\n      be a numeric value, representing one of these protocols or a different one.\n    - A protocol name from I(/etc/protocols) is also allowed.\n    - A C(!) argument before the protocol inverts the test.\n    - The number zero is equivalent to all.\n    - C(all) will match with all protocols and is taken as default when this option\n      is omitted.\n    type: str\n  reject_with:\n    description:\n    - 'Specifies the error packet type to return while rejecting. It implies \"jump:\n      REJECT\".'\n    type: str\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  rule_num:\n    description:\n    - Insert the rule as the given rule number.\n    - This works only with C(action=insert).\n    type: str\n    version_added: '2.5'\n    version_added_collection: ansible.builtin\n  set_counters:\n    description:\n    - This enables the administrator to initialize the packet and byte counters of\n      a rule (during C(INSERT), C(APPEND), C(REPLACE) operations).\n    type: str\n  set_dscp_mark:\n    description:\n    - This allows specifying a DSCP mark to be added to packets. It takes either an\n      integer or hex value.\n    - Mutually exclusive with C(set_dscp_mark_class).\n    type: str\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  set_dscp_mark_class:\n    description:\n    - This allows specifying a predefined DiffServ class which will be translated\n      to the corresponding DSCP mark.\n    - Mutually exclusive with C(set_dscp_mark).\n    type: str\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  source:\n    description:\n    - Source specification.\n    - Address can be either a network name, a hostname, a network IP address (with\n      /mask), or a plain IP address.\n    - Hostnames will be resolved once only, before the rule is submitted to the kernel.\n      Please note that specifying any name to be resolved with a remote query such\n      as DNS is a really bad idea.\n    - The mask can be either a network mask or a plain number, specifying the number\n      of 1's at the left side of the network mask. Thus, a mask of 24 is equivalent\n      to 255.255.255.0. A C(!) argument before the address specification inverts the\n      sense of the address.\n    type: str\n  source_port:\n    description:\n    - Source port or port range specification.\n    - This can either be a service name or a port number.\n    - An inclusive range can also be specified, using the format C(first:last).\n    - If the first port is omitted, C(0) is assumed; if the last is omitted, C(65535)\n      is assumed.\n    - If the first port is greater than the second one they will be swapped.\n    type: str\n  src_range:\n    description:\n    - Specifies the source IP range to match in the iprange module.\n    type: str\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  state:\n    choices:\n    - absent\n    - present\n    default: present\n    description:\n    - Whether the rule should be absent or present.\n    type: str\n  syn:\n    choices:\n    - ignore\n    - match\n    - negate\n    default: ignore\n    description:\n    - This allows matching packets that have the SYN bit set and the ACK and RST bits\n      unset.\n    - When negated, this matches all packets with the RST or the ACK bits set.\n    type: str\n    version_added: '2.5'\n    version_added_collection: ansible.builtin\n  table:\n    choices:\n    - filter\n    - nat\n    - mangle\n    - raw\n    - security\n    default: filter\n    description:\n    - This option specifies the packet matching table which the command should operate\n      on.\n    - If the kernel is configured with automatic module loading, an attempt will be\n      made to load the appropriate module for that table if it is not already there.\n    type: str\n  tcp_flags:\n    default: {}\n    description:\n    - TCP flags specification.\n    - C(tcp_flags) expects a dict with the two keys C(flags) and C(flags_set).\n    suboptions:\n      flags:\n        description:\n        - List of flags you want to examine.\n        elements: str\n        type: list\n      flags_set:\n        description:\n        - Flags to be set.\n        elements: str\n        type: list\n    type: dict\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  to_destination:\n    description:\n    - This specifies a destination address to use with C(DNAT).\n    - Without this, the destination address is never altered.\n    type: str\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  to_ports:\n    description:\n    - This specifies a destination port or range of ports to use, without this, the\n      destination port is never altered.\n    - This is only valid if the rule also specifies one of the protocol C(tcp), C(udp),\n      C(dccp) or C(sctp).\n    type: str\n  to_source:\n    description:\n    - This specifies a source address to use with C(SNAT).\n    - Without this, the source address is never altered.\n    type: str\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  uid_owner:\n    description:\n    - Specifies the UID or username to use in match by owner rule.\n    - From Ansible 2.6 when the C(!) argument is prepended then the it inverts the\n      rule to apply instead to all users except that one specified.\n    type: str\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  wait:\n    description:\n    - Wait N seconds for the xtables lock to prevent multiple instances of the program\n      from running concurrently.\n    type: str\n    version_added: '2.10'\n    version_added_collection: ansible.builtin\nshort_description: Modify iptables rules\nversion_added: '2.0'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Block specific IP\n  ansible.builtin.iptables:\n    chain: INPUT\n    source: 8.8.8.8\n    jump: DROP\n  become: yes\n\n- name: Forward port 80 to 8600\n  ansible.builtin.iptables:\n    table: nat\n    chain: PREROUTING\n    in_interface: eth0\n    protocol: tcp\n    match: tcp\n    destination_port: 80\n    jump: REDIRECT\n    to_ports: 8600\n    comment: Redirect web traffic to port 8600\n  become: yes\n\n- name: Allow related and established connections\n  ansible.builtin.iptables:\n    chain: INPUT\n    ctstate: ESTABLISHED,RELATED\n    jump: ACCEPT\n  become: yes\n\n- name: Allow new incoming SYN packets on TCP port 22 (SSH)\n  ansible.builtin.iptables:\n    chain: INPUT\n    protocol: tcp\n    destination_port: 22\n    ctstate: NEW\n    syn: match\n    jump: ACCEPT\n    comment: Accept new SSH connections.\n\n- name: Match on IP ranges\n  ansible.builtin.iptables:\n    chain: FORWARD\n    src_range: 192.168.1.100-192.168.1.199\n    dst_range: 10.0.0.1-10.0.0.50\n    jump: ACCEPT\n\n- name: Allow source IPs defined in ipset \"admin_hosts\" on port 22\n  ansible.builtin.iptables:\n    chain: INPUT\n    match_set: admin_hosts\n    match_set_flags: src\n    destination_port: 22\n    jump: ALLOW\n\n- name: Tag all outbound tcp packets with DSCP mark 8\n  ansible.builtin.iptables:\n    chain: OUTPUT\n    jump: DSCP\n    table: mangle\n    set_dscp_mark: 8\n    protocol: tcp\n\n- name: Tag all outbound tcp packets with DSCP DiffServ class CS1\n  ansible.builtin.iptables:\n    chain: OUTPUT\n    jump: DSCP\n    table: mangle\n    set_dscp_mark_class: CS1\n    protocol: tcp\n\n# Create the user-defined chain ALLOWLIST\n- iptables:\n    chain: ALLOWLIST\n    chain_management: true\n\n# Delete the user-defined chain ALLOWLIST\n- iptables:\n    chain: ALLOWLIST\n    chain_management: true\n    state: absent\n\n- name: Insert a rule on line 5\n  ansible.builtin.iptables:\n    chain: INPUT\n    protocol: tcp\n    destination_port: 8080\n    jump: ACCEPT\n    action: insert\n    rule_num: 5\n\n# Think twice before running following task as this may lock target system\n- name: Set the policy for the INPUT chain to DROP\n  ansible.builtin.iptables:\n    chain: INPUT\n    policy: DROP\n\n- name: Reject tcp with tcp-reset\n  ansible.builtin.iptables:\n    chain: INPUT\n    protocol: tcp\n    reject_with: tcp-reset\n    ip_version: ipv4\n\n- name: Set tcp flags\n  ansible.builtin.iptables:\n    chain: OUTPUT\n    jump: DROP\n    protocol: tcp\n    tcp_flags:\n      flags: ALL\n      flags_set:\n        - ACK\n        - RST\n        - SYN\n        - FIN\n\n- name: Iptables flush filter\n  ansible.builtin.iptables:\n    chain: \"{{ item }}\"\n    flush: yes\n  with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]\n\n- name: Iptables flush nat\n  ansible.builtin.iptables:\n    table: nat\n    chain: '{{ item }}'\n    flush: yes\n  with_items: [ 'INPUT', 'OUTPUT', 'PREROUTING', 'POSTROUTING' ]\n\n- name: Log packets arriving into an user-defined chain\n  ansible.builtin.iptables:\n    chain: LOGGING\n    action: append\n    state: present\n    limit: 2/second\n    limit_burst: 20\n    log_prefix: \"IPTABLES:INFO: \"\n    log_level: info\n\n- name: Allow connections on multiple ports\n  ansible.builtin.iptables:\n    chain: INPUT\n    protocol: tcp\n    destination_ports:\n      - \"80\"\n      - \"443\"\n      - \"8081:8083\"\n    jump: ACCEPT\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "action", "type": "str", "elements": "", "default": "append", "required": false, "description": ["Whether the rule should be appended at the bottom or inserted at the top.", "If the rule already exists the chain will not be modified."], "choices": ["append", "insert"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "chain", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specify the iptables chain to modify.", "This could be a user-defined chain or one of the standard iptables chains, like C(INPUT), C(FORWARD), C(OUTPUT), C(PREROUTING), C(POSTROUTING), C(SECMARK) or C(CONNSECMARK)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "chain_management", "type": "bool", "elements": "", "default": false, "required": false, "description": ["If C(true) and C(state) is C(present), the chain will be created if needed.", "If C(true) and C(state) is C(absent), the chain will be deleted if the only other parameter passed are C(chain) and optionally C(table)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "comment", "type": "str", "elements": "", "default": null, "required": false, "description": ["This specifies a comment that will be added to the rule."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ctstate", "type": "list", "elements": "str", "default": [], "required": false, "description": ["A list of the connection states to match in the conntrack module.", "Possible values are C(INVALID), C(NEW), C(ESTABLISHED), C(RELATED), C(UNTRACKED), C(SNAT), C(DNAT)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "destination", "type": "str", "elements": "", "default": null, "required": false, "description": ["Destination specification.", "Address can be either a network name, a hostname, a network IP address (with /mask), or a plain IP address.", "Hostnames will be resolved once only, before the rule is submitted to the kernel. Please note that specifying any name to be resolved with a remote query such as DNS is a really bad idea.", "The mask can be either a network mask or a plain number, specifying the number of 1's at the left side of the network mask. Thus, a mask of 24 is equivalent to 255.255.255.0. A C(!) argument before the address specification inverts the sense of the address."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "destination_port", "type": "str", "elements": "", "default": null, "required": false, "description": ["Destination port or port range specification. This can either be a service name or a port number. An inclusive range can also be specified, using the format first:last. If the first port is omitted, '0' is assumed; if the last is omitted, '65535' is assumed. If the first port is greater than the second one they will be swapped. This is only valid if the rule also specifies one of the following protocols: tcp, udp, dccp or sctp."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "destination_ports", "type": "list", "elements": "str", "default": null, "required": false, "description": ["This specifies multiple destination port numbers or port ranges to match in the multiport module.", "It can only be used in conjunction with the protocols tcp, udp, udplite, dccp and sctp."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "dst_range", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies the destination IP range to match in the iprange module."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "flush", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Flushes the specified table and chain of all rules.", "If no chain is specified then the entire table is purged.", "Ignores all other parameters."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "fragment", "type": "str", "elements": "", "default": null, "required": false, "description": ["This means that the rule only refers to second and further fragments of fragmented packets.", "Since there is no way to tell the source or destination ports of such a packet (or ICMP type), such a packet will not match any rules which specify them.", "When the \"!\" argument precedes fragment argument, the rule will only match head fragments, or unfragmented packets."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "gateway", "type": "str", "elements": "", "default": null, "required": false, "description": ["This specifies the IP address of host to send the cloned packets.", "This option is only valid when C(jump) is set to C(TEE)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "gid_owner", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies the GID or group to use in match by owner rule."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "goto", "type": "str", "elements": "", "default": null, "required": false, "description": ["This specifies that the processing should continue in a user specified chain.", "Unlike the jump argument return will not continue processing in this chain but instead in the chain that called us via jump."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "icmp_type", "type": "str", "elements": "", "default": null, "required": false, "description": ["This allows specification of the ICMP type, which can be a numeric ICMP type, type/code pair, or one of the ICMP type names shown by the command 'iptables -p icmp -h'"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "in_interface", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of an interface via which a packet was received (only for packets entering the C(INPUT), C(FORWARD) and C(PREROUTING) chains).", "When the C(!) argument is used before the interface name, the sense is inverted.", "If the interface name ends in a C(+), then any interface which begins with this name will match.", "If this option is omitted, any interface name will match."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ip_version", "type": "str", "elements": "", "default": "ipv4", "required": false, "description": ["Which version of the IP protocol this rule should apply to."], "choices": ["ipv4", "ipv6"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "jump", "type": "str", "elements": "", "default": null, "required": false, "description": ["This specifies the target of the rule; i.e., what to do if the packet matches it.", "The target can be a user-defined chain (other than the one this rule is in), one of the special builtin targets which decide the fate of the packet immediately, or an extension (see EXTENSIONS below).", "If this option is omitted in a rule (and the goto parameter is not used), then matching the rule will have no effect on the packet's fate, but the counters on the rule will be incremented."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "limit", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies the maximum average number of matches to allow per second.", "The number can specify units explicitly, using C(/second), C(/minute), C(/hour) or C(/day), or parts of them (so C(5/second) is the same as C(5/s))."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "limit_burst", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies the maximum burst before the above limit kicks in."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "log_level", "type": "str", "elements": "", "default": null, "required": false, "description": ["Logging level according to the syslogd-defined priorities.", "The value can be strings or numbers from 1-8.", "This parameter is only applicable if C(jump) is set to C(LOG)."], "choices": ["0", "1", "2", "3", "4", "5", "6", "7", "emerg", "alert", "crit", "error", "warning", "notice", "info", "debug"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "log_prefix", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies a log text for the rule. Only make sense with a LOG jump."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "match", "type": "list", "elements": "str", "default": [], "required": false, "description": ["Specifies a match to use, that is, an extension module that tests for a specific property.", "The set of matches make up the condition under which a target is invoked.", "Matches are evaluated first to last if specified as an array and work in short-circuit fashion, i.e. if one extension yields false, evaluation will stop."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "match_set", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies a set name which can be defined by ipset.", "Must be used together with the match_set_flags parameter.", "When the C(!) argument is prepended then it inverts the rule.", "Uses the iptables set extension."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "match_set_flags", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies the necessary flags for the match_set parameter.", "Must be used together with the match_set parameter.", "Uses the iptables set extension."], "choices": ["src", "dst", "src,dst", "dst,src"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "out_interface", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of an interface via which a packet is going to be sent (for packets entering the C(FORWARD), C(OUTPUT) and C(POSTROUTING) chains).", "When the C(!) argument is used before the interface name, the sense is inverted.", "If the interface name ends in a C(+), then any interface which begins with this name will match.", "If this option is omitted, any interface name will match."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "policy", "type": "str", "elements": "", "default": null, "required": false, "description": ["Set the policy for the chain to the given target.", "Only built-in chains can have policies.", "This parameter requires the C(chain) parameter.", "If you specify this parameter, all other parameters will be ignored.", "This parameter is used to set default policy for the given C(chain). Do not confuse this with C(jump) parameter."], "choices": ["ACCEPT", "DROP", "QUEUE", "RETURN"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "protocol", "type": "str", "elements": "", "default": null, "required": false, "description": ["The protocol of the rule or of the packet to check.", "The specified protocol can be one of C(tcp), C(udp), C(udplite), C(icmp), C(ipv6-icmp) or C(icmpv6), C(esp), C(ah), C(sctp) or the special keyword C(all), or it can be a numeric value, representing one of these protocols or a different one.", "A protocol name from I(/etc/protocols) is also allowed.", "A C(!) argument before the protocol inverts the test.", "The number zero is equivalent to all.", "C(all) will match with all protocols and is taken as default when this option is omitted."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "reject_with", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies the error packet type to return while rejecting. It implies \"jump: REJECT\"."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "rule_num", "type": "str", "elements": "", "default": null, "required": false, "description": ["Insert the rule as the given rule number.", "This works only with C(action=insert)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "set_counters", "type": "str", "elements": "", "default": null, "required": false, "description": ["This enables the administrator to initialize the packet and byte counters of a rule (during C(INSERT), C(APPEND), C(REPLACE) operations)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "set_dscp_mark", "type": "str", "elements": "", "default": null, "required": false, "description": ["This allows specifying a DSCP mark to be added to packets. It takes either an integer or hex value.", "Mutually exclusive with C(set_dscp_mark_class)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "set_dscp_mark_class", "type": "str", "elements": "", "default": null, "required": false, "description": ["This allows specifying a predefined DiffServ class which will be translated to the corresponding DSCP mark.", "Mutually exclusive with C(set_dscp_mark)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "source", "type": "str", "elements": "", "default": null, "required": false, "description": ["Source specification.", "Address can be either a network name, a hostname, a network IP address (with /mask), or a plain IP address.", "Hostnames will be resolved once only, before the rule is submitted to the kernel. Please note that specifying any name to be resolved with a remote query such as DNS is a really bad idea.", "The mask can be either a network mask or a plain number, specifying the number of 1's at the left side of the network mask. Thus, a mask of 24 is equivalent to 255.255.255.0. A C(!) argument before the address specification inverts the sense of the address."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "source_port", "type": "str", "elements": "", "default": null, "required": false, "description": ["Source port or port range specification.", "This can either be a service name or a port number.", "An inclusive range can also be specified, using the format C(first:last).", "If the first port is omitted, C(0) is assumed; if the last is omitted, C(65535) is assumed.", "If the first port is greater than the second one they will be swapped."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "src_range", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies the source IP range to match in the iprange module."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "present", "required": false, "description": ["Whether the rule should be absent or present."], "choices": ["absent", "present"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "syn", "type": "str", "elements": "", "default": "ignore", "required": false, "description": ["This allows matching packets that have the SYN bit set and the ACK and RST bits unset.", "When negated, this matches all packets with the RST or the ACK bits set."], "choices": ["ignore", "match", "negate"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "table", "type": "str", "elements": "", "default": "filter", "required": false, "description": ["This option specifies the packet matching table which the command should operate on.", "If the kernel is configured with automatic module loading, an attempt will be made to load the appropriate module for that table if it is not already there."], "choices": ["filter", "nat", "mangle", "raw", "security"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "tcp_flags", "type": "dict", "elements": "", "default": {}, "required": false, "description": ["TCP flags specification.", "C(tcp_flags) expects a dict with the two keys C(flags) and C(flags_set)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "to_destination", "type": "str", "elements": "", "default": null, "required": false, "description": ["This specifies a destination address to use with C(DNAT).", "Without this, the destination address is never altered."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "to_ports", "type": "str", "elements": "", "default": null, "required": false, "description": ["This specifies a destination port or range of ports to use, without this, the destination port is never altered.", "This is only valid if the rule also specifies one of the protocol C(tcp), C(udp), C(dccp) or C(sctp)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "to_source", "type": "str", "elements": "", "default": null, "required": false, "description": ["This specifies a source address to use with C(SNAT).", "Without this, the source address is never altered."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "uid_owner", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies the UID or username to use in match by owner rule.", "From Ansible 2.6 when the C(!) argument is prepended then the it inverts the rule to apply instead to all users except that one specified."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "wait", "type": "str", "elements": "", "default": null, "required": false, "description": ["Wait N seconds for the xtables lock to prevent multiple instances of the program from running concurrently."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/iptables.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.known_hosts", "name": "known_hosts", "fqcn": "ansible.builtin.known_hosts", "local_key": "module module:lib/ansible/modules/known_hosts.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Matthew Vernon (@mcv21)\ncollection: ansible.builtin\ndescription:\n- The C(known_hosts) module lets you add or remove a host keys from the C(known_hosts)\n  file.\n- Starting at Ansible 2.2, multiple entries per host are allowed, but only one for\n  each key type supported by ssh. This is useful if you're going to want to use the\n  M(ansible.builtin.git) module over ssh, for example.\n- If you have a very large number of host keys to manage, you will find the M(ansible.builtin.template)\n  module more useful.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/known_hosts.py\nhas_action: false\nmodule: known_hosts\noptions:\n  hash_host:\n    default: 'no'\n    description:\n    - Hash the hostname in the known_hosts file.\n    type: bool\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  key:\n    description:\n    - The SSH public host key, as a string.\n    - Required if C(state=present), optional when C(state=absent), in which case all\n      keys for the host are removed.\n    - The key must be in the right format for SSH (see sshd(8), section \"SSH_KNOWN_HOSTS\n      FILE FORMAT\").\n    - Specifically, the key should not match the format that is found in an SSH pubkey\n      file, but should rather have the hostname prepended to a line that includes\n      the pubkey, the same way that it would appear in the known_hosts file. The value\n      prepended to the line must also match the value of the name parameter.\n    - Should be of format C(<hostname[,IP]> ssh-rsa <pubkey>).\n    - For custom SSH port, C(key) needs to specify port as well. See example section.\n    type: str\n  name:\n    aliases:\n    - host\n    description:\n    - The host to add or remove (must match a host specified in key). It will be converted\n      to lowercase so that ssh-keygen can find it.\n    - Must match with <hostname> or <ip> present in key attribute.\n    - For custom SSH port, C(name) needs to specify port as well. See example section.\n    required: true\n    type: str\n  path:\n    default: ~/.ssh/known_hosts\n    description:\n    - The known_hosts file to edit.\n    - The known_hosts file will be created if needed. The rest of the path must exist\n      prior to running the module.\n    type: path\n  state:\n    choices:\n    - absent\n    - present\n    default: present\n    description:\n    - I(present) to add the host key.\n    - I(absent) to remove it.\n    type: str\nshort_description: Add or remove a host from the C(known_hosts) file\nversion_added: '1.9'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Tell the host about our servers it might want to ssh to\n  ansible.builtin.known_hosts:\n    path: /etc/ssh/ssh_known_hosts\n    name: foo.com.invalid\n    key: \"{{ lookup('ansible.builtin.file', 'pubkeys/foo.com.invalid') }}\"\n\n- name: Another way to call known_hosts\n  ansible.builtin.known_hosts:\n    name: host1.example.com   # or 10.9.8.77\n    key: host1.example.com,10.9.8.77 ssh-rsa ASDeararAIUHI324324  # some key gibberish\n    path: /etc/ssh/ssh_known_hosts\n    state: present\n\n- name: Add host with custom SSH port\n  ansible.builtin.known_hosts:\n    name: '[host1.example.com]:2222'\n    key: '[host1.example.com]:2222 ssh-rsa ASDeararAIUHI324324' # some key gibberish\n    path: /etc/ssh/ssh_known_hosts\n    state: present\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "hash_host", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Hash the hostname in the known_hosts file."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "key", "type": "str", "elements": "", "default": null, "required": false, "description": ["The SSH public host key, as a string.", "Required if C(state=present), optional when C(state=absent), in which case all keys for the host are removed.", "The key must be in the right format for SSH (see sshd(8), section \"SSH_KNOWN_HOSTS FILE FORMAT\").", "Specifically, the key should not match the format that is found in an SSH pubkey file, but should rather have the hostname prepended to a line that includes the pubkey, the same way that it would appear in the known_hosts file. The value prepended to the line must also match the value of the name parameter.", "Should be of format C(<hostname[,IP]> ssh-rsa <pubkey>).", "For custom SSH port, C(key) needs to specify port as well. See example section."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": true, "description": ["The host to add or remove (must match a host specified in key). It will be converted to lowercase so that ssh-keygen can find it.", "Must match with <hostname> or <ip> present in key attribute.", "For custom SSH port, C(name) needs to specify port as well. See example section."], "choices": null, "aliases": ["host"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "path", "type": "str", "elements": "", "default": "~/.ssh/known_hosts", "required": false, "description": ["The known_hosts file to edit.", "The known_hosts file will be created if needed. The rest of the path must exist prior to running the module."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "present", "required": false, "description": ["I(present) to add the host key.", "I(absent) to remove it."], "choices": ["absent", "present"], "aliases": null}], "defined_in": "lib/ansible/modules/known_hosts.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.lineinfile", "name": "lineinfile", "fqcn": "ansible.builtin.lineinfile", "local_key": "module module:lib/ansible/modules/lineinfile.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\n  safe_file_operations:\n    description: Uses Ansible's strict file operation functions to ensure proper permissions\n      and avoid data corruption\n    support: full\n  vault:\n    description: Can automatically decrypt Ansible vaulted files\n    support: none\nauthor:\n- Daniel Hokka Zakrissoni (@dhozac)\n- Ahti Kitsik (@ahtik)\n- Jose Angel Munoz (@imjoseangel)\ncollection: ansible.builtin\ndescription:\n- This module ensures a particular line is in a file, or replace an existing line\n  using a back-referenced regular expression.\n- This is primarily useful when you want to change a single line in a file only.\n- See the M(ansible.builtin.replace) module if you want to change multiple, similar\n  lines or check M(ansible.builtin.blockinfile) if you want to insert/update/remove\n  a block of lines in a file. For other cases, see the M(ansible.builtin.copy) or\n  M(ansible.builtin.template) modules.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/lineinfile.py\nhas_action: false\nmodule: lineinfile\nnotes:\n- As of Ansible 2.3, the I(dest) option has been changed to I(path) as default, but\n  I(dest) still works as well.\noptions:\n  attributes:\n    aliases:\n    - attr\n    description:\n    - The attributes the resulting filesystem object should have.\n    - To get supported flags look at the man page for I(chattr) on the target system.\n    - This string should contain the attributes in the same order as the one displayed\n      by I(lsattr).\n    - The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need\n      to be included in the string.\n    type: str\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  backrefs:\n    default: false\n    description:\n    - Used with C(state=present).\n    - If set, C(line) can contain backreferences (both positional and named) that\n      will get populated if the C(regexp) matches.\n    - This parameter changes the operation of the module slightly; C(insertbefore)\n      and C(insertafter) will be ignored, and if the C(regexp) does not match anywhere\n      in the file, the file will be left unchanged.\n    - If the C(regexp) does match, the last matching line will be replaced by the\n      expanded line parameter.\n    - Mutually exclusive with C(search_string).\n    type: bool\n    version_added: '1.1'\n    version_added_collection: ansible.builtin\n  backup:\n    default: false\n    description:\n    - Create a backup file including the timestamp information so you can get the\n      original file back if you somehow clobbered it incorrectly.\n    type: bool\n  create:\n    default: false\n    description:\n    - Used with C(state=present).\n    - If specified, the file will be created if it does not already exist.\n    - By default it will fail if the file is missing.\n    type: bool\n  firstmatch:\n    default: false\n    description:\n    - Used with C(insertafter) or C(insertbefore).\n    - If set, C(insertafter) and C(insertbefore) will work with the first line that\n      matches the given regular expression.\n    type: bool\n    version_added: '2.5'\n    version_added_collection: ansible.builtin\n  group:\n    description:\n    - Name of the group that should own the filesystem object, as would be fed to\n      I(chown).\n    - When left unspecified, it uses the current group of the current user unless\n      you are root, in which case it can preserve the previous ownership.\n    type: str\n  insertafter:\n    choices:\n    - EOF\n    - '*regex*'\n    default: EOF\n    description:\n    - Used with C(state=present).\n    - If specified, the line will be inserted after the last match of specified regular\n      expression.\n    - If the first match is required, use(firstmatch=yes).\n    - A special value is available; C(EOF) for inserting the line at the end of the\n      file.\n    - If specified regular expression has no matches, EOF will be used instead.\n    - If C(insertbefore) is set, default value C(EOF) will be ignored.\n    - If regular expressions are passed to both C(regexp) and C(insertafter), C(insertafter)\n      is only honored if no match for C(regexp) is found.\n    - May not be used with C(backrefs) or C(insertbefore).\n    type: str\n  insertbefore:\n    choices:\n    - BOF\n    - '*regex*'\n    description:\n    - Used with C(state=present).\n    - If specified, the line will be inserted before the last match of specified regular\n      expression.\n    - If the first match is required, use C(firstmatch=yes).\n    - A value is available; C(BOF) for inserting the line at the beginning of the\n      file.\n    - If specified regular expression has no matches, the line will be inserted at\n      the end of the file.\n    - If regular expressions are passed to both C(regexp) and C(insertbefore), C(insertbefore)\n      is only honored if no match for C(regexp) is found.\n    - May not be used with C(backrefs) or C(insertafter).\n    type: str\n    version_added: '1.1'\n    version_added_collection: ansible.builtin\n  line:\n    aliases:\n    - value\n    description:\n    - The line to insert/replace into the file.\n    - Required for C(state=present).\n    - If C(backrefs) is set, may contain backreferences that will get expanded with\n      the C(regexp) capture groups if the regexp matches.\n    type: str\n  mode:\n    description:\n    - The permissions the resulting filesystem object should have.\n    - For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers.\n      You must either add a leading zero so that Ansible's YAML parser knows it is\n      an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777'))\n      so Ansible receives a string and can do its own conversion from string into\n      number.\n    - Giving Ansible a number without following one of these rules will end up with\n      a decimal number which will have unexpected results.\n    - As of Ansible 1.8, the mode may be specified as a symbolic mode (for example,\n      C(u+rwx) or C(u=rw,g=r,o=r)).\n    - If C(mode) is not specified and the destination filesystem object B(does not)\n      exist, the default C(umask) on the system will be used when setting the mode\n      for the newly created filesystem object.\n    - If C(mode) is not specified and the destination filesystem object B(does) exist,\n      the mode of the existing filesystem object will be used.\n    - Specifying C(mode) is the best way to ensure filesystem objects are created\n      with the correct permissions. See CVE-2020-1736 for further details.\n    type: raw\n  others:\n    description:\n    - All arguments accepted by the M(ansible.builtin.file) module also work here.\n    type: str\n  owner:\n    description:\n    - Name of the user that should own the filesystem object, as would be fed to I(chown).\n    - When left unspecified, it uses the current user unless you are root, in which\n      case it can preserve the previous ownership.\n    - Specifying a numeric username will be assumed to be a user ID and not a username.\n      Avoid numeric usernames to avoid this confusion.\n    type: str\n  path:\n    aliases:\n    - dest\n    - destfile\n    - name\n    description:\n    - The file to modify.\n    - Before Ansible 2.3 this option was only usable as I(dest), I(destfile) and I(name).\n    required: true\n    type: path\n  regexp:\n    aliases:\n    - regex\n    description:\n    - The regular expression to look for in every line of the file.\n    - For C(state=present), the pattern to replace if found. Only the last line found\n      will be replaced.\n    - For C(state=absent), the pattern of the line(s) to remove.\n    - If the regular expression is not matched, the line will be added to the file\n      in keeping with C(insertbefore) or C(insertafter) settings.\n    - When modifying a line the regexp should typically match both the initial state\n      of the line as well as its state after replacement by C(line) to ensure idempotence.\n    - Uses Python regular expressions. See U(https://docs.python.org/3/library/re.html).\n    type: str\n    version_added: '1.7'\n    version_added_collection: ansible.builtin\n  search_string:\n    description:\n    - The literal string to look for in every line of the file. This does not have\n      to match the entire line.\n    - For C(state=present), the line to replace if the string is found in the file.\n      Only the last line found will be replaced.\n    - For C(state=absent), the line(s) to remove if the string is in the line.\n    - If the literal expression is not matched, the line will be added to the file\n      in keeping with C(insertbefore) or C(insertafter) settings.\n    - Mutually exclusive with C(backrefs) and C(regexp).\n    type: str\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  selevel:\n    description:\n    - The level part of the SELinux filesystem object context.\n    - This is the MLS/MCS attribute, sometimes known as the C(range).\n    - When set to C(_default), it will use the C(level) portion of the policy if available.\n    type: str\n  serole:\n    description:\n    - The role part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(role) portion of the policy if available.\n    type: str\n  setype:\n    description:\n    - The type part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(type) portion of the policy if available.\n    type: str\n  seuser:\n    description:\n    - The user part of the SELinux filesystem object context.\n    - By default it uses the C(system) policy, where applicable.\n    - When set to C(_default), it will use the C(user) portion of the policy if available.\n    type: str\n  state:\n    choices:\n    - absent\n    - present\n    default: present\n    description:\n    - Whether the line should be there or not.\n    type: str\n  unsafe_writes:\n    default: false\n    description:\n    - Influence when to use atomic operation to prevent data corruption or inconsistent\n      reads from the target filesystem object.\n    - By default this module uses atomic operations to prevent data corruption or\n      inconsistent reads from the target filesystem objects, but sometimes systems\n      are configured or just broken in ways that prevent this. One example is docker\n      mounted filesystem objects, which cannot be updated atomically from inside the\n      container and can only be written in an unsafe manner.\n    - This option allows Ansible to fall back to unsafe methods of updating filesystem\n      objects when atomic operations fail (however, it doesn't force Ansible to perform\n      unsafe writes).\n    - IMPORTANT! Unsafe writes are subject to race conditions and can lead to data\n      corruption.\n    type: bool\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  validate:\n    description:\n    - The validation command to run before copying the updated file into the final\n      destination.\n    - A temporary file path is used to validate, passed in through '%s' which must\n      be present as in the examples below.\n    - Also, the command is passed securely so shell features such as expansion and\n      pipes will not work.\n    - For an example on how to handle more complex validation than what this option\n      provides, see R(handling complex validation,complex_configuration_validation).\n    type: str\nseealso:\n- module: ansible.builtin.blockinfile\n- module: ansible.builtin.copy\n- module: ansible.builtin.file\n- module: ansible.builtin.replace\n- module: ansible.builtin.template\n- module: community.windows.win_lineinfile\nshort_description: Manage lines in text files\nversion_added: '0.7'\nversion_added_collection: ansible.builtin\n", "examples": "\n# NOTE: Before 2.3, option 'dest', 'destfile' or 'name' was used instead of 'path'\n- name: Ensure SELinux is set to enforcing mode\n  ansible.builtin.lineinfile:\n    path: /etc/selinux/config\n    regexp: '^SELINUX='\n    line: SELINUX=enforcing\n\n- name: Make sure group wheel is not in the sudoers configuration\n  ansible.builtin.lineinfile:\n    path: /etc/sudoers\n    state: absent\n    regexp: '^%wheel'\n\n- name: Replace a localhost entry with our own\n  ansible.builtin.lineinfile:\n    path: /etc/hosts\n    regexp: '^127\\.0\\.0\\.1'\n    line: 127.0.0.1 localhost\n    owner: root\n    group: root\n    mode: '0644'\n\n- name: Replace a localhost entry searching for a literal string to avoid escaping\n  ansible.builtin.lineinfile:\n    path: /etc/hosts\n    search_string: '127.0.0.1'\n    line: 127.0.0.1 localhost\n    owner: root\n    group: root\n    mode: '0644'\n\n- name: Ensure the default Apache port is 8080\n  ansible.builtin.lineinfile:\n    path: /etc/httpd/conf/httpd.conf\n    regexp: '^Listen '\n    insertafter: '^#Listen '\n    line: Listen 8080\n\n- name: Ensure php extension matches new pattern\n  ansible.builtin.lineinfile:\n    path: /etc/httpd/conf/httpd.conf\n    search_string: '<FilesMatch \".php[45]?$\">'\n    insertafter: '^\\t<Location \\/>\\n'\n    line: '        <FilesMatch \".php[34]?$\">'\n\n- name: Ensure we have our own comment added to /etc/services\n  ansible.builtin.lineinfile:\n    path: /etc/services\n    regexp: '^# port for http'\n    insertbefore: '^www.*80/tcp'\n    line: '# port for http by default'\n\n- name: Add a line to a file if the file does not exist, without passing regexp\n  ansible.builtin.lineinfile:\n    path: /tmp/testfile\n    line: 192.168.1.99 foo.lab.net foo\n    create: yes\n\n# NOTE: Yaml requires escaping backslashes in double quotes but not in single quotes\n- name: Ensure the JBoss memory settings are exactly as needed\n  ansible.builtin.lineinfile:\n    path: /opt/jboss-as/bin/standalone.conf\n    regexp: '^(.*)Xms(\\d+)m(.*)$'\n    line: '\\1Xms${xms}m\\3'\n    backrefs: yes\n\n# NOTE: Fully quoted because of the ': ' on the line. See the Gotchas in the YAML docs.\n- name: Validate the sudoers file before saving\n  ansible.builtin.lineinfile:\n    path: /etc/sudoers\n    state: present\n    regexp: '^%ADMIN ALL='\n    line: '%ADMIN ALL=(ALL) NOPASSWD: ALL'\n    validate: /usr/sbin/visudo -cf %s\n\n# See https://docs.python.org/3/library/re.html for further details on syntax\n- name: Use backrefs with alternative group syntax to avoid conflicts with variable values\n  ansible.builtin.lineinfile:\n    path: /tmp/config\n    regexp: ^(host=).*\n    line: \\g<1>{{ hostname }}\n    backrefs: yes\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "attributes", "type": "str", "elements": "", "default": null, "required": false, "description": ["The attributes the resulting filesystem object should have.", "To get supported flags look at the man page for I(chattr) on the target system.", "This string should contain the attributes in the same order as the one displayed by I(lsattr).", "The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need to be included in the string."], "choices": null, "aliases": ["attr"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "backrefs", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Used with C(state=present).", "If set, C(line) can contain backreferences (both positional and named) that will get populated if the C(regexp) matches.", "This parameter changes the operation of the module slightly; C(insertbefore) and C(insertafter) will be ignored, and if the C(regexp) does not match anywhere in the file, the file will be left unchanged.", "If the C(regexp) does match, the last matching line will be replaced by the expanded line parameter.", "Mutually exclusive with C(search_string)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "backup", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "create", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Used with C(state=present).", "If specified, the file will be created if it does not already exist.", "By default it will fail if the file is missing."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "firstmatch", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Used with C(insertafter) or C(insertbefore).", "If set, C(insertafter) and C(insertbefore) will work with the first line that matches the given regular expression."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "group", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the group that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current group of the current user unless you are root, in which case it can preserve the previous ownership."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "insertafter", "type": "str", "elements": "", "default": "EOF", "required": false, "description": ["Used with C(state=present).", "If specified, the line will be inserted after the last match of specified regular expression.", "If the first match is required, use(firstmatch=yes).", "A special value is available; C(EOF) for inserting the line at the end of the file.", "If specified regular expression has no matches, EOF will be used instead.", "If C(insertbefore) is set, default value C(EOF) will be ignored.", "If regular expressions are passed to both C(regexp) and C(insertafter), C(insertafter) is only honored if no match for C(regexp) is found.", "May not be used with C(backrefs) or C(insertbefore)."], "choices": ["EOF", "*regex*"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "insertbefore", "type": "str", "elements": "", "default": null, "required": false, "description": ["Used with C(state=present).", "If specified, the line will be inserted before the last match of specified regular expression.", "If the first match is required, use C(firstmatch=yes).", "A value is available; C(BOF) for inserting the line at the beginning of the file.", "If specified regular expression has no matches, the line will be inserted at the end of the file.", "If regular expressions are passed to both C(regexp) and C(insertbefore), C(insertbefore) is only honored if no match for C(regexp) is found.", "May not be used with C(backrefs) or C(insertafter)."], "choices": ["BOF", "*regex*"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "line", "type": "str", "elements": "", "default": null, "required": false, "description": ["The line to insert/replace into the file.", "Required for C(state=present).", "If C(backrefs) is set, may contain backreferences that will get expanded with the C(regexp) capture groups if the regexp matches."], "choices": null, "aliases": ["value"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mode", "type": "any", "elements": "", "default": null, "required": false, "description": ["The permissions the resulting filesystem object should have.", "For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777')) so Ansible receives a string and can do its own conversion from string into number.", "Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.", "As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r)).", "If C(mode) is not specified and the destination filesystem object B(does not) exist, the default C(umask) on the system will be used when setting the mode for the newly created filesystem object.", "If C(mode) is not specified and the destination filesystem object B(does) exist, the mode of the existing filesystem object will be used.", "Specifying C(mode) is the best way to ensure filesystem objects are created with the correct permissions. See CVE-2020-1736 for further details."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "others", "type": "str", "elements": "", "default": null, "required": false, "description": ["All arguments accepted by the M(ansible.builtin.file) module also work here."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "owner", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the user that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current user unless you are root, in which case it can preserve the previous ownership.", "Specifying a numeric username will be assumed to be a user ID and not a username. Avoid numeric usernames to avoid this confusion."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "path", "type": "str", "elements": "", "default": null, "required": true, "description": ["The file to modify.", "Before Ansible 2.3 this option was only usable as I(dest), I(destfile) and I(name)."], "choices": null, "aliases": ["dest", "destfile", "name"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "regexp", "type": "str", "elements": "", "default": null, "required": false, "description": ["The regular expression to look for in every line of the file.", "For C(state=present), the pattern to replace if found. Only the last line found will be replaced.", "For C(state=absent), the pattern of the line(s) to remove.", "If the regular expression is not matched, the line will be added to the file in keeping with C(insertbefore) or C(insertafter) settings.", "When modifying a line the regexp should typically match both the initial state of the line as well as its state after replacement by C(line) to ensure idempotence.", "Uses Python regular expressions. See U(https://docs.python.org/3/library/re.html)."], "choices": null, "aliases": ["regex"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "search_string", "type": "str", "elements": "", "default": null, "required": false, "description": ["The literal string to look for in every line of the file. This does not have to match the entire line.", "For C(state=present), the line to replace if the string is found in the file. Only the last line found will be replaced.", "For C(state=absent), the line(s) to remove if the string is in the line.", "If the literal expression is not matched, the line will be added to the file in keeping with C(insertbefore) or C(insertafter) settings.", "Mutually exclusive with C(backrefs) and C(regexp)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "selevel", "type": "str", "elements": "", "default": null, "required": false, "description": ["The level part of the SELinux filesystem object context.", "This is the MLS/MCS attribute, sometimes known as the C(range).", "When set to C(_default), it will use the C(level) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "serole", "type": "str", "elements": "", "default": null, "required": false, "description": ["The role part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(role) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "setype", "type": "str", "elements": "", "default": null, "required": false, "description": ["The type part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(type) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "seuser", "type": "str", "elements": "", "default": null, "required": false, "description": ["The user part of the SELinux filesystem object context.", "By default it uses the C(system) policy, where applicable.", "When set to C(_default), it will use the C(user) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "present", "required": false, "description": ["Whether the line should be there or not."], "choices": ["absent", "present"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unsafe_writes", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object.", "By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target filesystem objects, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted filesystem objects, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.", "This option allows Ansible to fall back to unsafe methods of updating filesystem objects when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).", "IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate", "type": "str", "elements": "", "default": null, "required": false, "description": ["The validation command to run before copying the updated file into the final destination.", "A temporary file path is used to validate, passed in through '%s' which must be present as in the examples below.", "Also, the command is passed securely so shell features such as expansion and pipes will not work.", "For an example on how to handle more complex validation than what this option provides, see R(handling complex validation,complex_configuration_validation)."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/lineinfile.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.meta", "name": "meta", "fqcn": "ansible.builtin.meta", "local_key": "module module:lib/ansible/modules/meta.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: none\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    details: Some of the subactions ignore the host loop, see the description above\n      for each specific action for the exceptions\n    support: partial\n  bypass_task_loop:\n    description: These tasks ignore the C(loop) and C(with_) keywords\n    details: Most of the subactions ignore the task loop, see the description above\n      for each specific action for the exceptions\n    support: partial\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    details: While these actions don't modify the targets directly they do change\n      possible states of the target within the run\n    support: partial\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    details: Most options in this action do not use a connection, except C(reset_connection)\n      which still does not connect to the remote\n    support: partial\n  core:\n    description: This is a 'core engine' feature and is not implemented like most\n      task actions, so it is not overridable in any way via the plugin system.\n    support: full\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  ignore_conditional:\n    description: The action is not subject to conditional execution so it will ignore\n      the C(when:) keyword\n    details: Only some options support conditionals and when they do they act 'bypassing\n      the host loop', taking the values from first available host\n    support: partial\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\n  tags:\n    description: Allows for the 'tags' keyword to control the selection of this action\n      for execution\n    support: full\n  until:\n    description: Denotes if this action objeys until/retry/poll keywords\n    support: full\nauthor:\n- Ansible Core Team\ncollection: ansible.builtin\ndescription:\n- Meta tasks are a special kind of task which can influence Ansible internal execution\n  or state.\n- Meta tasks can be used anywhere within your playbook.\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/meta.py\nhas_action: false\nmodule: meta\nnotes:\n- C(clear_facts) will remove the persistent facts from M(ansible.builtin.set_fact)\n  using C(cacheable=True), but not the current host variable it creates for the current\n  run.\n- Skipping C(meta) tasks with tags is not supported before Ansible 2.11.\noptions:\n  free_form:\n    choices:\n    - clear_facts\n    - clear_host_errors\n    - end_host\n    - end_play\n    - flush_handlers\n    - noop\n    - refresh_inventory\n    - reset_connection\n    - end_batch\n    description:\n    - This module takes a free form command, as a string. There is not an actual option\n      named \"free form\".  See the examples!\n    - C(flush_handlers) makes Ansible run any handler tasks which have thus far been\n      notified. Ansible inserts these tasks internally at certain points to implicitly\n      trigger handler runs (after pre/post tasks, the final role execution, and the\n      main tasks section of your plays).\n    - C(refresh_inventory) (added in Ansible 2.0) forces the reload of the inventory,\n      which in the case of dynamic inventory scripts means they will be re-executed.\n      If the dynamic inventory script is using a cache, Ansible cannot know this and\n      has no way of refreshing it (you can disable the cache or, if available for\n      your specific inventory datasource (e.g. aws), you can use the an inventory\n      plugin instead of an inventory script). This is mainly useful when additional\n      hosts are created and users wish to use them instead of using the M(ansible.builtin.add_host)\n      module.\n    - C(noop) (added in Ansible 2.0) This literally does 'nothing'. It is mainly used\n      internally and not recommended for general use.\n    - C(clear_facts) (added in Ansible 2.1) causes the gathered facts for the hosts\n      specified in the play's list of hosts to be cleared, including the fact cache.\n    - C(clear_host_errors) (added in Ansible 2.1) clears the failed state (if any)\n      from hosts specified in the play's list of hosts.\n    - C(end_play) (added in Ansible 2.2) causes the play to end without failing the\n      host(s). Note that this affects all hosts.\n    - C(reset_connection) (added in Ansible 2.3) interrupts a persistent connection\n      (i.e. ssh + control persist)\n    - C(end_host) (added in Ansible 2.8) is a per-host variation of C(end_play). Causes\n      the play to end for the current host without failing it.\n    - C(end_batch) (added in Ansible 2.12) causes the current batch (see C(serial))\n      to end without failing the host(s). Note that with C(serial=0) or undefined\n      this behaves the same as C(end_play).\n    required: true\nseealso:\n- module: ansible.builtin.assert\n- module: ansible.builtin.fail\nshort_description: Execute Ansible 'actions'\nversion_added: '1.2'\nversion_added_collection: ansible.builtin\n", "examples": "\n# Example showing flushing handlers on demand, not at end of play\n- ansible.builtin.template:\n    src: new.j2\n    dest: /etc/config.txt\n  notify: myhandler\n\n- name: Force all notified handlers to run at this point, not waiting for normal sync points\n  ansible.builtin.meta: flush_handlers\n\n# Example showing how to refresh inventory during play\n- name: Reload inventory, useful with dynamic inventories when play makes changes to the existing hosts\n  cloud_guest:            # this is fake module\n    name: newhost\n    state: present\n\n- name: Refresh inventory to ensure new instances exist in inventory\n  ansible.builtin.meta: refresh_inventory\n\n# Example showing how to clear all existing facts of targeted hosts\n- name: Clear gathered facts from all currently targeted hosts\n  ansible.builtin.meta: clear_facts\n\n# Example showing how to continue using a failed target\n- name: Bring host back to play after failure\n  ansible.builtin.copy:\n    src: file\n    dest: /etc/file\n  remote_user: imightnothavepermission\n\n- ansible.builtin.meta: clear_host_errors\n\n# Example showing how to reset an existing connection\n- ansible.builtin.user:\n    name: '{{ ansible_user }}'\n    groups: input\n\n- name: Reset ssh connection to allow user changes to affect 'current login user'\n  ansible.builtin.meta: reset_connection\n\n# Example showing how to end the play for specific targets\n- name: End the play for hosts that run CentOS 6\n  ansible.builtin.meta: end_host\n  when:\n  - ansible_distribution == 'CentOS'\n  - ansible_distribution_major_version == '6'\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "free_form", "type": "", "elements": "", "default": null, "required": true, "description": ["This module takes a free form command, as a string. There is not an actual option named \"free form\".  See the examples!", "C(flush_handlers) makes Ansible run any handler tasks which have thus far been notified. Ansible inserts these tasks internally at certain points to implicitly trigger handler runs (after pre/post tasks, the final role execution, and the main tasks section of your plays).", "C(refresh_inventory) (added in Ansible 2.0) forces the reload of the inventory, which in the case of dynamic inventory scripts means they will be re-executed. If the dynamic inventory script is using a cache, Ansible cannot know this and has no way of refreshing it (you can disable the cache or, if available for your specific inventory datasource (e.g. aws), you can use the an inventory plugin instead of an inventory script). This is mainly useful when additional hosts are created and users wish to use them instead of using the M(ansible.builtin.add_host) module.", "C(noop) (added in Ansible 2.0) This literally does 'nothing'. It is mainly used internally and not recommended for general use.", "C(clear_facts) (added in Ansible 2.1) causes the gathered facts for the hosts specified in the play's list of hosts to be cleared, including the fact cache.", "C(clear_host_errors) (added in Ansible 2.1) clears the failed state (if any) from hosts specified in the play's list of hosts.", "C(end_play) (added in Ansible 2.2) causes the play to end without failing the host(s). Note that this affects all hosts.", "C(reset_connection) (added in Ansible 2.3) interrupts a persistent connection (i.e. ssh + control persist)", "C(end_host) (added in Ansible 2.8) is a per-host variation of C(end_play). Causes the play to end for the current host without failing it.", "C(end_batch) (added in Ansible 2.12) causes the current batch (see C(serial)) to end without failing the host(s). Note that with C(serial=0) or undefined this behaves the same as C(end_play)."], "choices": ["clear_facts", "clear_host_errors", "end_host", "end_play", "flush_handlers", "noop", "refresh_inventory", "reset_connection", "end_batch"], "aliases": null}], "defined_in": "lib/ansible/modules/meta.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.package", "name": "package", "fqcn": "ansible.builtin.package", "local_key": "module module:lib/ansible/modules/package.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: full\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    details: support depends on the underlying plugin invoked\n    support: N/A\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    details: support depends on the underlying plugin invoked\n    support: N/A\n  platform:\n    description: Target OS/families that can be operated against\n    details: The support depends on the availability for the specific plugin for each\n      platform and if fact gathering is able to detect it\n    platforms: all\n    support: N/A\nauthor:\n- Ansible Core Team\ncollection: ansible.builtin\ndescription:\n- This modules manages packages on a target without specifying a package manager module\n  (like M(ansible.builtin.yum), M(ansible.builtin.apt), ...). It is convenient to\n  use in an heterogeneous environment of machines without having to create a specific\n  task for each package manager. C(package) calls behind the module for the package\n  manager used by the operating system discovered by the module M(ansible.builtin.setup).  If\n  C(setup) was not yet run, C(package) will run it.\n- This module acts as a proxy to the underlying package manager module. While all\n  arguments will be passed to the underlying module, not all modules support the same\n  arguments. This documentation only covers the minimum intersection of module arguments\n  that all packaging modules support.\n- For Windows targets, use the M(ansible.windows.win_package) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/package.py\nhas_action: true\nmodule: package\nnotes:\n- While C(package) abstracts package managers to ease dealing with multiple distributions,\n  package name often differs for the same software.\noptions:\n  name:\n    description:\n    - Package name, or package specifier with version.\n    - Syntax varies with package manager. For example C(name-1.0) or C(name=1.0).\n    - Package names also vary with package manager; this module will not \"translate\"\n      them per distro. For example C(libyaml-dev), C(libyaml-devel).\n    required: true\n  state:\n    description:\n    - Whether to install (C(present)), or remove (C(absent)) a package.\n    - You can use other states like C(latest) ONLY if they are supported by the underlying\n      package module(s) executed.\n    required: true\n  use:\n    default: auto\n    description:\n    - The required package manager module to use (C(yum), C(apt), and so on). The\n      default 'auto' will use existing facts or try to autodetect it.\n    - You should only use this field if the automatic selection is not working for\n      some reason.\nrequirements:\n- Whatever is required for the package plugins specific for each system.\nshort_description: Generic OS package manager\nversion_added: 2.0\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Install ntpdate\n  ansible.builtin.package:\n    name: ntpdate\n    state: present\n\n# This uses a variable as this changes per distribution.\n- name: Remove the apache package\n  ansible.builtin.package:\n    name: \"{{ apache }}\"\n    state: absent\n\n- name: Install the latest version of Apache and MariaDB\n  ansible.builtin.package:\n    name:\n      - httpd\n      - mariadb-server\n    state: latest\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "", "elements": "", "default": null, "required": true, "description": ["Package name, or package specifier with version.", "Syntax varies with package manager. For example C(name-1.0) or C(name=1.0).", "Package names also vary with package manager; this module will not \"translate\" them per distro. For example C(libyaml-dev), C(libyaml-devel)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "", "elements": "", "default": null, "required": true, "description": ["Whether to install (C(present)), or remove (C(absent)) a package.", "You can use other states like C(latest) ONLY if they are supported by the underlying package module(s) executed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "use", "type": "", "elements": "", "default": "auto", "required": false, "description": ["The required package manager module to use (C(yum), C(apt), and so on). The default 'auto' will use existing facts or try to autodetect it.", "You should only use this field if the automatic selection is not working for some reason."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/package.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.package_facts", "name": "package_facts", "fqcn": "ansible.builtin.package_facts", "local_key": "module module:lib/ansible/modules/package_facts.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  facts:\n    description: Action returns an C(ansible_facts) dictionary that will update existing\n      host facts\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Matthew Jones (@matburt)\n- Brian Coca (@bcoca)\n- Adam Miller (@maxamillion)\ncollection: ansible.builtin\ndescription:\n- Return information about installed packages as facts.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/package_facts.py\nhas_action: false\nmodule: package_facts\noptions:\n  manager:\n    choices:\n    - auto\n    - rpm\n    - apt\n    - portage\n    - pkg\n    - pacman\n    - apk\n    - pkg_info\n    default:\n    - auto\n    description:\n    - The package manager used by the system so we can query the package information.\n    - Since 2.8 this is a list and can support multiple package managers per system.\n    - The 'portage' and 'pkg' options were added in version 2.8.\n    - The 'apk' option was added in version 2.11.\n    - The 'pkg_info' option was added in version 2.13.\n    elements: str\n    type: list\n  strategy:\n    choices:\n    - first\n    - all\n    default: first\n    description:\n    - This option controls how the module queries the package managers on the system.\n      C(first) means it will return only information for the first supported package\n      manager available. C(all) will return information for all supported and available\n      package managers on the system.\n    type: str\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\nrequirements:\n- For 'portage' support it requires the C(qlist) utility, which is part of 'app-portage/portage-utils'.\n- For Debian-based systems C(python-apt) package must be installed on targeted hosts.\n- For SUSE-based systems C(python3-rpm) package must be installed on targeted hosts.\n  This package is required because SUSE does not include RPM Python bindings by default.\nshort_description: Package information as facts\nversion_added: '2.5'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Gather the package facts\n  ansible.builtin.package_facts:\n    manager: auto\n\n- name: Print the package facts\n  ansible.builtin.debug:\n    var: ansible_facts.packages\n\n- name: Check whether a package called foobar is installed\n  ansible.builtin.debug:\n    msg: \"{{ ansible_facts.packages['foobar'] | length }} versions of foobar are installed!\"\n  when: \"'foobar' in ansible_facts.packages\"\n\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "manager", "type": "list", "elements": "str", "default": ["auto"], "required": false, "description": ["The package manager used by the system so we can query the package information.", "Since 2.8 this is a list and can support multiple package managers per system.", "The 'portage' and 'pkg' options were added in version 2.8.", "The 'apk' option was added in version 2.11.", "The 'pkg_info' option was added in version 2.13."], "choices": ["auto", "rpm", "apt", "portage", "pkg", "pacman", "apk", "pkg_info"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "strategy", "type": "str", "elements": "", "default": "first", "required": false, "description": ["This option controls how the module queries the package managers on the system. C(first) means it will return only information for the first supported package manager available. C(all) will return information for all supported and available package managers on the system."], "choices": ["first", "all"], "aliases": null}], "defined_in": "lib/ansible/modules/package_facts.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.pause", "name": "pause", "fqcn": "ansible.builtin.pause", "local_key": "module module:lib/ansible/modules/pause.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: full\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\nauthor: Tim Bielawa (@tbielawa)\ncollection: ansible.builtin\ndescription:\n- Pauses playbook execution for a set amount of time, or until a prompt is acknowledged.\n  All parameters are optional. The default behavior is to pause with a prompt.\n- To pause/wait/sleep per host, use the M(ansible.builtin.wait_for) module.\n- You can use C(ctrl+c) if you wish to advance a pause earlier than it is set to expire\n  or if you need to abort a playbook run entirely. To continue early press C(ctrl+c)\n  and then C(c). To abort a playbook press C(ctrl+c) and then C(a).\n- The pause module integrates into async/parallelized playbooks without any special\n  considerations (see Rolling Updates). When using pauses with the C(serial) playbook\n  parameter (as in rolling updates) you are only prompted once for the current group\n  of hosts.\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/pause.py\nhas_action: true\nmodule: pause\nnotes:\n- Starting in 2.2,  if you specify 0 or negative for minutes or seconds, it will wait\n  for 1 second, previously it would wait indefinitely.\n- User input is not captured or echoed, regardless of echo setting, when minutes or\n  seconds is specified.\noptions:\n  echo:\n    default: 'yes'\n    description:\n    - Controls whether or not keyboard input is shown when typing.\n    - Has no effect if 'seconds' or 'minutes' is set.\n    type: bool\n    version_added: 2.5\n    version_added_collection: ansible.builtin\n  minutes:\n    description:\n    - A positive number of minutes to pause for.\n  prompt:\n    description:\n    - Optional text to use for the prompt message.\n  seconds:\n    description:\n    - A positive number of seconds to pause for.\nshort_description: Pause playbook execution\nversion_added: '0.8'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Pause for 5 minutes to build app cache\n  ansible.builtin.pause:\n    minutes: 5\n\n- name: Pause until you can verify updates to an application were successful\n  ansible.builtin.pause:\n\n- name: A helpful reminder of what to look out for post-update\n  ansible.builtin.pause:\n    prompt: \"Make sure org.foo.FooOverload exception is not present\"\n\n- name: Pause to get some sensitive input\n  ansible.builtin.pause:\n    prompt: \"Enter a secret\"\n    echo: no\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "echo", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["Controls whether or not keyboard input is shown when typing.", "Has no effect if 'seconds' or 'minutes' is set."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "minutes", "type": "", "elements": "", "default": null, "required": false, "description": ["A positive number of minutes to pause for."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "prompt", "type": "", "elements": "", "default": null, "required": false, "description": ["Optional text to use for the prompt message."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "seconds", "type": "", "elements": "", "default": null, "required": false, "description": ["A positive number of seconds to pause for."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/pause.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.ping", "name": "ping", "fqcn": "ansible.builtin.ping", "local_key": "module module:lib/ansible/modules/ping.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Ansible Core Team\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- A trivial test module, this module always returns C(pong) on successful contact.\n  It does not make sense in playbooks, but it is useful from C(/usr/bin/ansible) to\n  verify the ability to login and that a usable Python is configured.\n- This is NOT ICMP ping, this is just a trivial test module that requires Python on\n  the remote-node.\n- For Windows targets, use the M(ansible.windows.win_ping) module instead.\n- For Network targets, use the M(ansible.netcommon.net_ping) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/ping.py\nhas_action: false\nmodule: ping\noptions:\n  data:\n    default: pong\n    description:\n    - Data to return for the C(ping) return value.\n    - If this parameter is set to C(crash), the module will cause an exception.\n    type: str\nseealso:\n- module: ansible.netcommon.net_ping\n- module: ansible.windows.win_ping\nshort_description: Try to connect to host, verify a usable python and return C(pong)\n  on success\nversion_added: historical\nversion_added_collection: ansible.builtin\n", "examples": "\n# Test we can logon to 'webservers' and execute python with json lib.\n# ansible webservers -m ansible.builtin.ping\n\n- name: Example from an Ansible Playbook\n  ansible.builtin.ping:\n\n- name: Induce an exception to see what happens\n  ansible.builtin.ping:\n    data: crash\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "data", "type": "str", "elements": "", "default": "pong", "required": false, "description": ["Data to return for the C(ping) return value.", "If this parameter is set to C(crash), the module will cause an exception."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/ping.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.pip", "name": "pip", "fqcn": "ansible.builtin.pip", "local_key": "module module:lib/ansible/modules/pip.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Matt Wright (@mattupstate)\ncollection: ansible.builtin\ndescription:\n- 'Manage Python library dependencies. To use this module, one of the following keys\n  is required: C(name) or C(requirements).'\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/pip.py\nhas_action: false\nmodule: pip\nnotes:\n- The virtualenv (U(http://www.virtualenv.org/)) must be installed on the remote host\n  if the virtualenv parameter is specified and the virtualenv needs to be created.\n- Although it executes using the Ansible Python interpreter, the pip module shells\n  out to run the actual pip command, so it can use any pip version you specify with\n  I(executable). By default, it uses the pip version for the Ansible Python interpreter.\n  For example, pip3 on python 3, and pip2 or pip on python 2.\n- The interpreter used by Ansible (see R(ansible_python_interpreter, ansible_python_interpreter))\n  requires the setuptools package, regardless of the version of pip set with the I(executable)\n  option.\noptions:\n  chdir:\n    description:\n    - cd into this directory before running the command\n    type: path\n    version_added: '1.3'\n    version_added_collection: ansible.builtin\n  editable:\n    default: 'no'\n    description:\n    - Pass the editable flag.\n    type: bool\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  executable:\n    description:\n    - The explicit executable or pathname for the pip executable, if different from\n      the Ansible Python interpreter. For example C(pip3.3), if there are both Python\n      2.7 and 3.3 installations in the system and you want to run pip for the Python\n      3.3 installation.\n    - Mutually exclusive with I(virtualenv) (added in 2.1).\n    - Does not affect the Ansible Python interpreter.\n    - The setuptools package must be installed for both the Ansible Python interpreter\n      and for the version of Python specified by this option.\n    type: path\n    version_added: '1.3'\n    version_added_collection: ansible.builtin\n  extra_args:\n    description:\n    - Extra arguments passed to pip.\n    type: str\n    version_added: '1.0'\n    version_added_collection: ansible.builtin\n  name:\n    description:\n    - The name of a Python library to install or the url(bzr+,hg+,git+,svn+) of the\n      remote package.\n    - This can be a list (since 2.2) and contain version specifiers (since 2.7).\n    elements: str\n    type: list\n  requirements:\n    description:\n    - The path to a pip requirements file, which should be local to the remote system.\n      File can be specified as a relative path if using the chdir option.\n    type: str\n  state:\n    choices:\n    - absent\n    - forcereinstall\n    - latest\n    - present\n    default: present\n    description:\n    - The state of module\n    - The 'forcereinstall' option is only available in Ansible 2.1 and above.\n    type: str\n  umask:\n    description:\n    - The system umask to apply before installing the pip package. This is useful,\n      for example, when installing on systems that have a very restrictive umask by\n      default (e.g., \"0077\") and you want to pip install packages which are to be\n      used by all users. Note that this requires you to specify desired umask mode\n      as an octal string, (e.g., \"0022\").\n    type: str\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  version:\n    description:\n    - The version number to install of the Python library specified in the I(name)\n      parameter.\n    type: str\n  virtualenv:\n    description:\n    - An optional path to a I(virtualenv) directory to install into. It cannot be\n      specified together with the 'executable' parameter (added in 2.1). If the virtualenv\n      does not exist, it will be created before installing packages. The optional\n      virtualenv_site_packages, virtualenv_command, and virtualenv_python options\n      affect the creation of the virtualenv.\n    type: path\n  virtualenv_command:\n    default: virtualenv\n    description:\n    - The command or a pathname to the command to create the virtual environment with.\n      For example C(pyvenv), C(virtualenv), C(virtualenv2), C(~/bin/virtualenv), C(/usr/local/bin/virtualenv).\n    type: path\n    version_added: '1.1'\n    version_added_collection: ansible.builtin\n  virtualenv_python:\n    description:\n    - The Python executable used for creating the virtual environment. For example\n      C(python3.5), C(python2.7). When not specified, the Python version used to run\n      the ansible module is used. This parameter should not be used when C(virtualenv_command)\n      is using C(pyvenv) or the C(-m venv) module.\n    type: str\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  virtualenv_site_packages:\n    default: 'no'\n    description:\n    - Whether the virtual environment will inherit packages from the global site-packages\n      directory.  Note that if this setting is changed on an already existing virtual\n      environment it will not have any effect, the environment must be deleted and\n      newly created.\n    type: bool\n    version_added: '1.0'\n    version_added_collection: ansible.builtin\nrequirements:\n- pip\n- virtualenv\n- setuptools\nshort_description: Manages Python library dependencies\nversion_added: '0.7'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Install bottle python package\n  ansible.builtin.pip:\n    name: bottle\n\n- name: Install bottle python package on version 0.11\n  ansible.builtin.pip:\n    name: bottle==0.11\n\n- name: Install bottle python package with version specifiers\n  ansible.builtin.pip:\n    name: bottle>0.10,<0.20,!=0.11\n\n- name: Install multi python packages with version specifiers\n  ansible.builtin.pip:\n    name:\n      - django>1.11.0,<1.12.0\n      - bottle>0.10,<0.20,!=0.11\n\n- name: Install python package using a proxy\n  ansible.builtin.pip:\n    name: six\n  environment:\n    http_proxy: 'http://127.0.0.1:8080'\n    https_proxy: 'https://127.0.0.1:8080'\n\n# You do not have to supply '-e' option in extra_args\n- name: Install MyApp using one of the remote protocols (bzr+,hg+,git+,svn+)\n  ansible.builtin.pip:\n    name: svn+http://myrepo/svn/MyApp#egg=MyApp\n\n- name: Install MyApp using one of the remote protocols (bzr+,hg+,git+)\n  ansible.builtin.pip:\n    name: git+http://myrepo/app/MyApp\n\n- name: Install MyApp from local tarball\n  ansible.builtin.pip:\n    name: file:///path/to/MyApp.tar.gz\n\n- name: Install bottle into the specified (virtualenv), inheriting none of the globally installed modules\n  ansible.builtin.pip:\n    name: bottle\n    virtualenv: /my_app/venv\n\n- name: Install bottle into the specified (virtualenv), inheriting globally installed modules\n  ansible.builtin.pip:\n    name: bottle\n    virtualenv: /my_app/venv\n    virtualenv_site_packages: yes\n\n- name: Install bottle into the specified (virtualenv), using Python 2.7\n  ansible.builtin.pip:\n    name: bottle\n    virtualenv: /my_app/venv\n    virtualenv_command: virtualenv-2.7\n\n- name: Install bottle within a user home directory\n  ansible.builtin.pip:\n    name: bottle\n    extra_args: --user\n\n- name: Install specified python requirements\n  ansible.builtin.pip:\n    requirements: /my_app/requirements.txt\n\n- name: Install specified python requirements in indicated (virtualenv)\n  ansible.builtin.pip:\n    requirements: /my_app/requirements.txt\n    virtualenv: /my_app/venv\n\n- name: Install specified python requirements and custom Index URL\n  ansible.builtin.pip:\n    requirements: /my_app/requirements.txt\n    extra_args: -i https://example.com/pypi/simple\n\n- name: Install specified python requirements offline from a local directory with downloaded packages\n  ansible.builtin.pip:\n    requirements: /my_app/requirements.txt\n    extra_args: \"--no-index --find-links=file:///my_downloaded_packages_dir\"\n\n- name: Install bottle for Python 3.3 specifically, using the 'pip3.3' executable\n  ansible.builtin.pip:\n    name: bottle\n    executable: pip3.3\n\n- name: Install bottle, forcing reinstallation if it's already installed\n  ansible.builtin.pip:\n    name: bottle\n    state: forcereinstall\n\n- name: Install bottle while ensuring the umask is 0022 (to ensure other users can use it)\n  ansible.builtin.pip:\n    name: bottle\n    umask: \"0022\"\n  become: True\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "chdir", "type": "str", "elements": "", "default": null, "required": false, "description": ["cd into this directory before running the command"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "editable", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Pass the editable flag."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "executable", "type": "str", "elements": "", "default": null, "required": false, "description": ["The explicit executable or pathname for the pip executable, if different from the Ansible Python interpreter. For example C(pip3.3), if there are both Python 2.7 and 3.3 installations in the system and you want to run pip for the Python 3.3 installation.", "Mutually exclusive with I(virtualenv) (added in 2.1).", "Does not affect the Ansible Python interpreter.", "The setuptools package must be installed for both the Ansible Python interpreter and for the version of Python specified by this option."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "extra_args", "type": "str", "elements": "", "default": null, "required": false, "description": ["Extra arguments passed to pip."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "list", "elements": "str", "default": null, "required": false, "description": ["The name of a Python library to install or the url(bzr+,hg+,git+,svn+) of the remote package.", "This can be a list (since 2.2) and contain version specifiers (since 2.7)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "requirements", "type": "str", "elements": "", "default": null, "required": false, "description": ["The path to a pip requirements file, which should be local to the remote system. File can be specified as a relative path if using the chdir option."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "present", "required": false, "description": ["The state of module", "The 'forcereinstall' option is only available in Ansible 2.1 and above."], "choices": ["absent", "forcereinstall", "latest", "present"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "umask", "type": "str", "elements": "", "default": null, "required": false, "description": ["The system umask to apply before installing the pip package. This is useful, for example, when installing on systems that have a very restrictive umask by default (e.g., \"0077\") and you want to pip install packages which are to be used by all users. Note that this requires you to specify desired umask mode as an octal string, (e.g., \"0022\")."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "version", "type": "str", "elements": "", "default": null, "required": false, "description": ["The version number to install of the Python library specified in the I(name) parameter."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "virtualenv", "type": "str", "elements": "", "default": null, "required": false, "description": ["An optional path to a I(virtualenv) directory to install into. It cannot be specified together with the 'executable' parameter (added in 2.1). If the virtualenv does not exist, it will be created before installing packages. The optional virtualenv_site_packages, virtualenv_command, and virtualenv_python options affect the creation of the virtualenv."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "virtualenv_command", "type": "str", "elements": "", "default": "virtualenv", "required": false, "description": ["The command or a pathname to the command to create the virtual environment with. For example C(pyvenv), C(virtualenv), C(virtualenv2), C(~/bin/virtualenv), C(/usr/local/bin/virtualenv)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "virtualenv_python", "type": "str", "elements": "", "default": null, "required": false, "description": ["The Python executable used for creating the virtual environment. For example C(python3.5), C(python2.7). When not specified, the Python version used to run the ansible module is used. This parameter should not be used when C(virtualenv_command) is using C(pyvenv) or the C(-m venv) module."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "virtualenv_site_packages", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Whether the virtual environment will inherit packages from the global site-packages directory.  Note that if this setting is changed on an already existing virtual environment it will not have any effect, the environment must be deleted and newly created."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/pip.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.raw", "name": "raw", "fqcn": "ansible.builtin.raw", "local_key": "module module:lib/ansible/modules/raw.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    details: This action is one of the few that requires no Python on the remote as\n      it passes the command directly into the connection string\n    platforms: all\n    support: N/A\n  raw:\n    description: Indicates if an action takes a 'raw' or 'free form' string as an\n      option and has it's own special parsing of it\n    support: full\nauthor:\n- Ansible Core Team\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- Executes a low-down and dirty SSH command, not going through the module subsystem.\n- This is useful and should only be done in a few cases. A common case is installing\n  C(python) on a system without python installed by default. Another is speaking to\n  any devices such as routers that do not have any Python installed. In any other\n  case, using the M(ansible.builtin.shell) or M(ansible.builtin.command) module is\n  much more appropriate.\n- Arguments given to C(raw) are run directly through the configured remote shell.\n- Standard output, error output and return code are returned when available.\n- There is no change handler support for this module.\n- This module does not require python on the remote system, much like the M(ansible.builtin.script)\n  module.\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/raw.py\nhas_action: true\nmodule: raw\nnotes:\n- 'If using raw from a playbook, you may need to disable fact gathering using C(gather_facts:\n  no) if you''re using C(raw) to bootstrap python onto the machine.'\n- If you want to execute a command securely and predictably, it may be better to use\n  the M(ansible.builtin.command) or M(ansible.builtin.shell) modules instead.\n- The C(environment) keyword does not work with raw normally, it requires a shell\n  which means it only works if C(executable) is set or using the module with privilege\n  escalation (C(become)).\noptions:\n  executable:\n    description:\n    - Change the shell used to execute the command. Should be an absolute path to\n      the executable.\n    - When using privilege escalation (C(become)) a default shell will be assigned\n      if one is not provided as privilege escalation requires a shell.\n    version_added: '1.0'\n    version_added_collection: ansible.builtin\n  free_form:\n    description:\n    - The raw module takes a free form command to run.\n    - There is no parameter actually named 'free form'; see the examples!\n    required: true\nseealso:\n- module: ansible.builtin.command\n- module: ansible.builtin.shell\n- module: ansible.windows.win_command\n- module: ansible.windows.win_shell\nshort_description: Executes a low-down and dirty command\nversion_added: historical\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Bootstrap a host without python2 installed\n  ansible.builtin.raw: dnf install -y python2 python2-dnf libselinux-python\n\n- name: Run a command that uses non-posix shell-isms (in this example /bin/sh doesn't handle redirection and wildcards together but bash does)\n  ansible.builtin.raw: cat < /tmp/*txt\n  args:\n    executable: /bin/bash\n\n- name: Safely use templated variables. Always use quote filter to avoid injection issues.\n  ansible.builtin.raw: \"{{ package_mgr|quote }} {{ pkg_flags|quote }} install {{ python|quote }}\"\n\n- name: List user accounts on a Windows system\n  ansible.builtin.raw: Get-WmiObject -Class Win32_UserAccount\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "executable", "type": "", "elements": "", "default": null, "required": false, "description": ["Change the shell used to execute the command. Should be an absolute path to the executable.", "When using privilege escalation (C(become)) a default shell will be assigned if one is not provided as privilege escalation requires a shell."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "free_form", "type": "", "elements": "", "default": null, "required": true, "description": ["The raw module takes a free form command to run.", "There is no parameter actually named 'free form'; see the examples!"], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/raw.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.reboot", "name": "reboot", "fqcn": "ansible.builtin.reboot", "local_key": "module module:lib/ansible/modules/reboot.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Matt Davis (@nitzmahone)\n- Sam Doran (@samdoran)\ncollection: ansible.builtin\ndescription:\n- Reboot a machine, wait for it to go down, come back up, and respond to commands.\n- For Windows targets, use the M(ansible.windows.win_reboot) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/reboot.py\nhas_action: true\nmodule: reboot\nnotes:\n- C(PATH) is ignored on the remote node when searching for the C(shutdown) command.\n  Use C(search_paths) to specify locations to search if the default paths do not work.\noptions:\n  boot_time_command:\n    default: cat /proc/sys/kernel/random/boot_id\n    description:\n    - Command to run that returns a unique string indicating the last time the system\n      was booted.\n    - Setting this to a command that has different output each time it is run will\n      cause the task to fail.\n    type: str\n    version_added: '2.10'\n    version_added_collection: ansible.builtin\n  connect_timeout:\n    description:\n    - Maximum seconds to wait for a successful connection to the managed hosts before\n      trying again.\n    - If unspecified, the default setting for the underlying connection plugin is\n      used.\n    type: int\n  msg:\n    default: Reboot initiated by Ansible\n    description:\n    - Message to display to users before reboot.\n    type: str\n  post_reboot_delay:\n    default: 0\n    description:\n    - Seconds to wait after the reboot command was successful before attempting to\n      validate the system rebooted successfully.\n    - This is useful if you want wait for something to settle despite your connection\n      already working.\n    type: int\n  pre_reboot_delay:\n    default: 0\n    description:\n    - Seconds to wait before reboot. Passed as a parameter to the reboot command.\n    - On Linux, macOS and OpenBSD, this is converted to minutes and rounded down.\n      If less than 60, it will be set to 0.\n    - On Solaris and FreeBSD, this will be seconds.\n    type: int\n  reboot_command:\n    default: '[determined based on target OS]'\n    description:\n    - Command to run that reboots the system, including any parameters passed to the\n      command.\n    - Can be an absolute path to the command or just the command name. If an absolute\n      path to the command is not given, C(search_paths) on the target system will\n      be searched to find the absolute path.\n    - This will cause C(pre_reboot_delay), C(post_reboot_delay), and C(msg) to be\n      ignored.\n    type: str\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  reboot_timeout:\n    default: 600\n    description:\n    - Maximum seconds to wait for machine to reboot and respond to a test command.\n    - This timeout is evaluated separately for both reboot verification and test command\n      success so the maximum execution time for the module is twice this amount.\n    type: int\n  search_paths:\n    default:\n    - /sbin\n    - /bin\n    - /usr/sbin\n    - /usr/bin\n    - /usr/local/sbin\n    description:\n    - Paths to search on the remote machine for the C(shutdown) command.\n    - I(Only) these paths will be searched for the C(shutdown) command. C(PATH) is\n      ignored in the remote node when searching for the C(shutdown) command.\n    elements: str\n    type: list\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  test_command:\n    default: whoami\n    description:\n    - Command to run on the rebooted host and expect success from to determine the\n      machine is ready for further tasks.\n    type: str\nseealso:\n- module: ansible.windows.win_reboot\nshort_description: Reboot a machine\nversion_added: '2.7'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Unconditionally reboot the machine with all defaults\n  ansible.builtin.reboot:\n\n- name: Reboot a slow machine that might have lots of updates to apply\n  ansible.builtin.reboot:\n    reboot_timeout: 3600\n\n- name: Reboot a machine with shutdown command in unusual place\n  ansible.builtin.reboot:\n    search_paths:\n     - '/lib/molly-guard'\n\n- name: Reboot machine using a custom reboot command\n  ansible.builtin.reboot:\n    reboot_command: launchctl reboot userspace\n    boot_time_command: uptime | cut -d ' ' -f 5\n\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "boot_time_command", "type": "str", "elements": "", "default": "cat /proc/sys/kernel/random/boot_id", "required": false, "description": ["Command to run that returns a unique string indicating the last time the system was booted.", "Setting this to a command that has different output each time it is run will cause the task to fail."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "connect_timeout", "type": "int", "elements": "", "default": null, "required": false, "description": ["Maximum seconds to wait for a successful connection to the managed hosts before trying again.", "If unspecified, the default setting for the underlying connection plugin is used."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "msg", "type": "str", "elements": "", "default": "Reboot initiated by Ansible", "required": false, "description": ["Message to display to users before reboot."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "post_reboot_delay", "type": "int", "elements": "", "default": 0, "required": false, "description": ["Seconds to wait after the reboot command was successful before attempting to validate the system rebooted successfully.", "This is useful if you want wait for something to settle despite your connection already working."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "pre_reboot_delay", "type": "int", "elements": "", "default": 0, "required": false, "description": ["Seconds to wait before reboot. Passed as a parameter to the reboot command.", "On Linux, macOS and OpenBSD, this is converted to minutes and rounded down. If less than 60, it will be set to 0.", "On Solaris and FreeBSD, this will be seconds."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "reboot_command", "type": "str", "elements": "", "default": "[determined based on target OS]", "required": false, "description": ["Command to run that reboots the system, including any parameters passed to the command.", "Can be an absolute path to the command or just the command name. If an absolute path to the command is not given, C(search_paths) on the target system will be searched to find the absolute path.", "This will cause C(pre_reboot_delay), C(post_reboot_delay), and C(msg) to be ignored."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "reboot_timeout", "type": "int", "elements": "", "default": 600, "required": false, "description": ["Maximum seconds to wait for machine to reboot and respond to a test command.", "This timeout is evaluated separately for both reboot verification and test command success so the maximum execution time for the module is twice this amount."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "search_paths", "type": "list", "elements": "str", "default": ["/sbin", "/bin", "/usr/sbin", "/usr/bin", "/usr/local/sbin"], "required": false, "description": ["Paths to search on the remote machine for the C(shutdown) command.", "I(Only) these paths will be searched for the C(shutdown) command. C(PATH) is ignored in the remote node when searching for the C(shutdown) command."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "test_command", "type": "str", "elements": "", "default": "whoami", "required": false, "description": ["Command to run on the rebooted host and expect success from to determine the machine is ready for further tasks."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/reboot.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.replace", "name": "replace", "fqcn": "ansible.builtin.replace", "local_key": "module module:lib/ansible/modules/replace.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\n  safe_file_operations:\n    description: Uses Ansible's strict file operation functions to ensure proper permissions\n      and avoid data corruption\n    support: full\n  vault:\n    description: Can automatically decrypt Ansible vaulted files\n    support: none\nauthor: Evan Kaufman (@EvanK)\ncollection: ansible.builtin\ndescription:\n- This module will replace all instances of a pattern within a file.\n- It is up to the user to maintain idempotence by ensuring that the same pattern would\n  never match any replacements made.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/replace.py\nhas_action: false\nmodule: replace\nnotes:\n- As of Ansible 2.3, the I(dest) option has been changed to I(path) as default, but\n  I(dest) still works as well.\n- As of Ansible 2.7.10, the combined use of I(before) and I(after) works properly.\n  If you were relying on the previous incorrect behavior, you may be need to adjust\n  your tasks. See U(https://github.com/ansible/ansible/issues/31354) for details.\n- Option I(follow) has been removed in Ansible 2.5, because this module modifies the\n  contents of the file so I(follow=no) doesn't make sense.\noptions:\n  after:\n    description:\n    - If specified, only content after this match will be replaced/removed.\n    - Can be used in combination with C(before).\n    - Uses Python regular expressions; see U(https://docs.python.org/3/library/re.html).\n    - Uses DOTALL, which means the C(.) special character I(can match newlines).\n    type: str\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  attributes:\n    aliases:\n    - attr\n    description:\n    - The attributes the resulting filesystem object should have.\n    - To get supported flags look at the man page for I(chattr) on the target system.\n    - This string should contain the attributes in the same order as the one displayed\n      by I(lsattr).\n    - The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need\n      to be included in the string.\n    type: str\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  backup:\n    default: false\n    description:\n    - Create a backup file including the timestamp information so you can get the\n      original file back if you somehow clobbered it incorrectly.\n    type: bool\n  before:\n    description:\n    - If specified, only content before this match will be replaced/removed.\n    - Can be used in combination with C(after).\n    - Uses Python regular expressions; see U(https://docs.python.org/3/library/re.html).\n    - Uses DOTALL, which means the C(.) special character I(can match newlines).\n    type: str\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  encoding:\n    default: utf-8\n    description:\n    - The character encoding for reading and writing the file.\n    type: str\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  group:\n    description:\n    - Name of the group that should own the filesystem object, as would be fed to\n      I(chown).\n    - When left unspecified, it uses the current group of the current user unless\n      you are root, in which case it can preserve the previous ownership.\n    type: str\n  mode:\n    description:\n    - The permissions the resulting filesystem object should have.\n    - For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers.\n      You must either add a leading zero so that Ansible's YAML parser knows it is\n      an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777'))\n      so Ansible receives a string and can do its own conversion from string into\n      number.\n    - Giving Ansible a number without following one of these rules will end up with\n      a decimal number which will have unexpected results.\n    - As of Ansible 1.8, the mode may be specified as a symbolic mode (for example,\n      C(u+rwx) or C(u=rw,g=r,o=r)).\n    - If C(mode) is not specified and the destination filesystem object B(does not)\n      exist, the default C(umask) on the system will be used when setting the mode\n      for the newly created filesystem object.\n    - If C(mode) is not specified and the destination filesystem object B(does) exist,\n      the mode of the existing filesystem object will be used.\n    - Specifying C(mode) is the best way to ensure filesystem objects are created\n      with the correct permissions. See CVE-2020-1736 for further details.\n    type: raw\n  others:\n    description:\n    - All arguments accepted by the M(ansible.builtin.file) module also work here.\n    type: str\n  owner:\n    description:\n    - Name of the user that should own the filesystem object, as would be fed to I(chown).\n    - When left unspecified, it uses the current user unless you are root, in which\n      case it can preserve the previous ownership.\n    - Specifying a numeric username will be assumed to be a user ID and not a username.\n      Avoid numeric usernames to avoid this confusion.\n    type: str\n  path:\n    aliases:\n    - dest\n    - destfile\n    - name\n    description:\n    - The file to modify.\n    - Before Ansible 2.3 this option was only usable as I(dest), I(destfile) and I(name).\n    required: true\n    type: path\n  regexp:\n    description:\n    - The regular expression to look for in the contents of the file.\n    - Uses Python regular expressions; see U(https://docs.python.org/3/library/re.html).\n    - Uses MULTILINE mode, which means C(^) and C($) match the beginning and end of\n      the file, as well as the beginning and end respectively of I(each line) of the\n      file.\n    - Does not use DOTALL, which means the C(.) special character matches any character\n      I(except newlines). A common mistake is to assume that a negated character set\n      like C([^#]) will also not match newlines.\n    - In order to exclude newlines, they must be added to the set like C([^#\\n]).\n    - Note that, as of Ansible 2.0, short form tasks should have any escape sequences\n      backslash-escaped in order to prevent them being parsed as string literal escapes.\n      See the examples.\n    required: true\n    type: str\n  replace:\n    description:\n    - The string to replace regexp matches.\n    - May contain backreferences that will get expanded with the regexp capture groups\n      if the regexp matches.\n    - If not set, matches are removed entirely.\n    - Backreferences can be used ambiguously like C(\\1), or explicitly like C(\\g<1>).\n    type: str\n  selevel:\n    description:\n    - The level part of the SELinux filesystem object context.\n    - This is the MLS/MCS attribute, sometimes known as the C(range).\n    - When set to C(_default), it will use the C(level) portion of the policy if available.\n    type: str\n  serole:\n    description:\n    - The role part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(role) portion of the policy if available.\n    type: str\n  setype:\n    description:\n    - The type part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(type) portion of the policy if available.\n    type: str\n  seuser:\n    description:\n    - The user part of the SELinux filesystem object context.\n    - By default it uses the C(system) policy, where applicable.\n    - When set to C(_default), it will use the C(user) portion of the policy if available.\n    type: str\n  unsafe_writes:\n    default: false\n    description:\n    - Influence when to use atomic operation to prevent data corruption or inconsistent\n      reads from the target filesystem object.\n    - By default this module uses atomic operations to prevent data corruption or\n      inconsistent reads from the target filesystem objects, but sometimes systems\n      are configured or just broken in ways that prevent this. One example is docker\n      mounted filesystem objects, which cannot be updated atomically from inside the\n      container and can only be written in an unsafe manner.\n    - This option allows Ansible to fall back to unsafe methods of updating filesystem\n      objects when atomic operations fail (however, it doesn't force Ansible to perform\n      unsafe writes).\n    - IMPORTANT! Unsafe writes are subject to race conditions and can lead to data\n      corruption.\n    type: bool\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  validate:\n    description:\n    - The validation command to run before copying the updated file into the final\n      destination.\n    - A temporary file path is used to validate, passed in through '%s' which must\n      be present as in the examples below.\n    - Also, the command is passed securely so shell features such as expansion and\n      pipes will not work.\n    - For an example on how to handle more complex validation than what this option\n      provides, see R(handling complex validation,complex_configuration_validation).\n    type: str\nshort_description: Replace all instances of a particular string in a file using a\n  back-referenced regular expression\nversion_added: '1.6'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Replace old hostname with new hostname (requires Ansible >= 2.4)\n  ansible.builtin.replace:\n    path: /etc/hosts\n    regexp: '(\\s+)old\\.host\\.name(\\s+.*)?$'\n    replace: '\\1new.host.name\\2'\n\n- name: Replace after the expression till the end of the file (requires Ansible >= 2.4)\n  ansible.builtin.replace:\n    path: /etc/apache2/sites-available/default.conf\n    after: 'NameVirtualHost [*]'\n    regexp: '^(.+)$'\n    replace: '# \\1'\n\n- name: Replace before the expression till the begin of the file (requires Ansible >= 2.4)\n  ansible.builtin.replace:\n    path: /etc/apache2/sites-available/default.conf\n    before: '# live site config'\n    regexp: '^(.+)$'\n    replace: '# \\1'\n\n# Prior to Ansible 2.7.10, using before and after in combination did the opposite of what was intended.\n# see https://github.com/ansible/ansible/issues/31354 for details.\n- name: Replace between the expressions (requires Ansible >= 2.4)\n  ansible.builtin.replace:\n    path: /etc/hosts\n    after: '<VirtualHost [*]>'\n    before: '</VirtualHost>'\n    regexp: '^(.+)$'\n    replace: '# \\1'\n\n- name: Supports common file attributes\n  ansible.builtin.replace:\n    path: /home/jdoe/.ssh/known_hosts\n    regexp: '^old\\.host\\.name[^\\n]*\\n'\n    owner: jdoe\n    group: jdoe\n    mode: '0644'\n\n- name: Supports a validate command\n  ansible.builtin.replace:\n    path: /etc/apache/ports\n    regexp: '^(NameVirtualHost|Listen)\\s+80\\s*$'\n    replace: '\\1 127.0.0.1:8080'\n    validate: '/usr/sbin/apache2ctl -f %s -t'\n\n- name: Short form task (in ansible 2+) necessitates backslash-escaped sequences\n  ansible.builtin.replace: path=/etc/hosts regexp='\\\\b(localhost)(\\\\d*)\\\\b' replace='\\\\1\\\\2.localdomain\\\\2 \\\\1\\\\2'\n\n- name: Long form task does not\n  ansible.builtin.replace:\n    path: /etc/hosts\n    regexp: '\\b(localhost)(\\d*)\\b'\n    replace: '\\1\\2.localdomain\\2 \\1\\2'\n\n- name: Explicitly specifying positional matched groups in replacement\n  ansible.builtin.replace:\n    path: /etc/ssh/sshd_config\n    regexp: '^(ListenAddress[ ]+)[^\\n]+$'\n    replace: '\\g<1>0.0.0.0'\n\n- name: Explicitly specifying named matched groups\n  ansible.builtin.replace:\n    path: /etc/ssh/sshd_config\n    regexp: '^(?P<dctv>ListenAddress[ ]+)(?P<host>[^\\n]+)$'\n    replace: '#\\g<dctv>\\g<host>\\n\\g<dctv>0.0.0.0'\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "after", "type": "str", "elements": "", "default": null, "required": false, "description": ["If specified, only content after this match will be replaced/removed.", "Can be used in combination with C(before).", "Uses Python regular expressions; see U(https://docs.python.org/3/library/re.html).", "Uses DOTALL, which means the C(.) special character I(can match newlines)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "attributes", "type": "str", "elements": "", "default": null, "required": false, "description": ["The attributes the resulting filesystem object should have.", "To get supported flags look at the man page for I(chattr) on the target system.", "This string should contain the attributes in the same order as the one displayed by I(lsattr).", "The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need to be included in the string."], "choices": null, "aliases": ["attr"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "backup", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "before", "type": "str", "elements": "", "default": null, "required": false, "description": ["If specified, only content before this match will be replaced/removed.", "Can be used in combination with C(after).", "Uses Python regular expressions; see U(https://docs.python.org/3/library/re.html).", "Uses DOTALL, which means the C(.) special character I(can match newlines)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "encoding", "type": "str", "elements": "", "default": "utf-8", "required": false, "description": ["The character encoding for reading and writing the file."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "group", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the group that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current group of the current user unless you are root, in which case it can preserve the previous ownership."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mode", "type": "any", "elements": "", "default": null, "required": false, "description": ["The permissions the resulting filesystem object should have.", "For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777')) so Ansible receives a string and can do its own conversion from string into number.", "Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.", "As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r)).", "If C(mode) is not specified and the destination filesystem object B(does not) exist, the default C(umask) on the system will be used when setting the mode for the newly created filesystem object.", "If C(mode) is not specified and the destination filesystem object B(does) exist, the mode of the existing filesystem object will be used.", "Specifying C(mode) is the best way to ensure filesystem objects are created with the correct permissions. See CVE-2020-1736 for further details."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "others", "type": "str", "elements": "", "default": null, "required": false, "description": ["All arguments accepted by the M(ansible.builtin.file) module also work here."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "owner", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the user that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current user unless you are root, in which case it can preserve the previous ownership.", "Specifying a numeric username will be assumed to be a user ID and not a username. Avoid numeric usernames to avoid this confusion."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "path", "type": "str", "elements": "", "default": null, "required": true, "description": ["The file to modify.", "Before Ansible 2.3 this option was only usable as I(dest), I(destfile) and I(name)."], "choices": null, "aliases": ["dest", "destfile", "name"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "regexp", "type": "str", "elements": "", "default": null, "required": true, "description": ["The regular expression to look for in the contents of the file.", "Uses Python regular expressions; see U(https://docs.python.org/3/library/re.html).", "Uses MULTILINE mode, which means C(^) and C($) match the beginning and end of the file, as well as the beginning and end respectively of I(each line) of the file.", "Does not use DOTALL, which means the C(.) special character matches any character I(except newlines). A common mistake is to assume that a negated character set like C([^#]) will also not match newlines.", "In order to exclude newlines, they must be added to the set like C([^#\\n]).", "Note that, as of Ansible 2.0, short form tasks should have any escape sequences backslash-escaped in order to prevent them being parsed as string literal escapes. See the examples."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "replace", "type": "str", "elements": "", "default": null, "required": false, "description": ["The string to replace regexp matches.", "May contain backreferences that will get expanded with the regexp capture groups if the regexp matches.", "If not set, matches are removed entirely.", "Backreferences can be used ambiguously like C(\\1), or explicitly like C(\\g<1>)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "selevel", "type": "str", "elements": "", "default": null, "required": false, "description": ["The level part of the SELinux filesystem object context.", "This is the MLS/MCS attribute, sometimes known as the C(range).", "When set to C(_default), it will use the C(level) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "serole", "type": "str", "elements": "", "default": null, "required": false, "description": ["The role part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(role) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "setype", "type": "str", "elements": "", "default": null, "required": false, "description": ["The type part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(type) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "seuser", "type": "str", "elements": "", "default": null, "required": false, "description": ["The user part of the SELinux filesystem object context.", "By default it uses the C(system) policy, where applicable.", "When set to C(_default), it will use the C(user) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unsafe_writes", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object.", "By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target filesystem objects, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted filesystem objects, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.", "This option allows Ansible to fall back to unsafe methods of updating filesystem objects when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).", "IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate", "type": "str", "elements": "", "default": null, "required": false, "description": ["The validation command to run before copying the updated file into the final destination.", "A temporary file path is used to validate, passed in through '%s' which must be present as in the examples below.", "Also, the command is passed securely so shell features such as expansion and pipes will not work.", "For an example on how to handle more complex validation than what this option provides, see R(handling complex validation,complex_configuration_validation)."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/replace.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.rpm_key", "name": "rpm_key", "fqcn": "ansible.builtin.rpm_key", "local_key": "module module:lib/ansible/modules/rpm_key.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: rhel\n    support: N/A\nauthor:\n- Hector Acosta (@hacosta) <hector.acosta@gazzang.com>\ncollection: ansible.builtin\ndescription:\n- Adds or removes (rpm --import) a gpg key to your rpm database.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/rpm_key.py\nhas_action: false\nmodule: rpm_key\noptions:\n  fingerprint:\n    description:\n    - The long-form fingerprint of the key being imported.\n    - This will be used to verify the specified key.\n    type: str\n    version_added: 2.9\n    version_added_collection: ansible.builtin\n  key:\n    description:\n    - Key that will be modified. Can be a url, a file on the managed node, or a keyid\n      if the key already exists in the database.\n    required: true\n    type: str\n  state:\n    choices:\n    - absent\n    - present\n    default: present\n    description:\n    - If the key will be imported or removed from the rpm db.\n    type: str\n  validate_certs:\n    default: 'yes'\n    description:\n    - If C(false) and the C(key) is a url starting with https, SSL certificates will\n      not be validated.\n    - This should only be used on personally controlled sites using self-signed certificates.\n    type: bool\nshort_description: Adds or removes a gpg key from the rpm db\nversion_added: '1.3'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Import a key from a url\n  ansible.builtin.rpm_key:\n    state: present\n    key: http://apt.sw.be/RPM-GPG-KEY.dag.txt\n\n- name: Import a key from a file\n  ansible.builtin.rpm_key:\n    state: present\n    key: /path/to/key.gpg\n\n- name: Ensure a key is not present in the db\n  ansible.builtin.rpm_key:\n    state: absent\n    key: DEADB33F\n\n- name: Verify the key, using a fingerprint, before import\n  ansible.builtin.rpm_key:\n    key: /path/to/RPM-GPG-KEY.dag.txt\n    fingerprint: EBC6 E12C 62B1 C734 026B  2122 A20E 5214 6B8D 79E6\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "fingerprint", "type": "str", "elements": "", "default": null, "required": false, "description": ["The long-form fingerprint of the key being imported.", "This will be used to verify the specified key."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "key", "type": "str", "elements": "", "default": null, "required": true, "description": ["Key that will be modified. Can be a url, a file on the managed node, or a keyid if the key already exists in the database."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "present", "required": false, "description": ["If the key will be imported or removed from the rpm db."], "choices": ["absent", "present"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate_certs", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["If C(false) and the C(key) is a url starting with https, SSL certificates will not be validated.", "This should only be used on personally controlled sites using self-signed certificates."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/rpm_key.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.script", "name": "script", "fqcn": "ansible.builtin.script", "local_key": "module module:lib/ansible/modules/script.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    details: while the script itself is arbitrary and cannot be subject to the check\n      mode semantics it adds C(creates)/C(removes) options as a workaround\n    support: partial\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    details: This action is one of the few that requires no Python on the remote as\n      it passes the command directly into the connection string\n    platforms: all\n    support: N/A\n  raw:\n    description: Indicates if an action takes a 'raw' or 'free form' string as an\n      option and has it's own special parsing of it\n    support: full\n  safe_file_operations:\n    description: Uses Ansible's strict file operation functions to ensure proper permissions\n      and avoid data corruption\n    support: none\n  vault:\n    description: Can automatically decrypt Ansible vaulted files\n    support: full\nauthor:\n- Ansible Core Team\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- The C(script) module takes the script name followed by a list of space-delimited\n  arguments.\n- Either a free form command or C(cmd) parameter is required, see the examples.\n- The local script at path will be transferred to the remote node and then executed.\n- The given script will be processed through the shell environment on the remote node.\n- This module does not require python on the remote system, much like the M(ansible.builtin.raw)\n  module.\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/script.py\nhas_action: true\nmodule: script\nnotes:\n- It is usually preferable to write Ansible modules rather than pushing scripts. Convert\n  your script to an Ansible module for bonus points!\n- The C(ssh) connection plugin will force pseudo-tty allocation via C(-tt) when scripts\n  are executed. Pseudo-ttys do not have a stderr channel and all stderr is sent to\n  stdout. If you depend on separated stdout and stderr result keys, please switch\n  to a copy+command set of tasks instead of using script.\n- If the path to the local script contains spaces, it needs to be quoted.\n- This module is also supported for Windows targets.\noptions:\n  chdir:\n    description:\n    - Change into this directory on the remote node before running the script.\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  cmd:\n    description:\n    - Path to the local script to run followed by optional arguments.\n    type: str\n  creates:\n    description:\n    - A filename on the remote node, when it already exists, this step will B(not)\n      be run.\n    version_added: '1.5'\n    version_added_collection: ansible.builtin\n  decrypt:\n    default: true\n    description:\n    - This option controls the autodecryption of source files using vault.\n    type: bool\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  executable:\n    description:\n    - Name or path of a executable to invoke the script with.\n    version_added: '2.6'\n    version_added_collection: ansible.builtin\n  free_form:\n    description:\n    - Path to the local script file followed by optional arguments.\n  removes:\n    description:\n    - A filename on the remote node, when it does not exist, this step will B(not)\n      be run.\n    version_added: '1.5'\n    version_added_collection: ansible.builtin\nseealso:\n- module: ansible.builtin.shell\n- module: ansible.windows.win_shell\nshort_description: Runs a local script on a remote node after transferring it\nversion_added: '0.9'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Run a script with arguments (free form)\n  ansible.builtin.script: /some/local/script.sh --some-argument 1234\n\n- name: Run a script with arguments (using 'cmd' parameter)\n  ansible.builtin.script:\n    cmd: /some/local/script.sh --some-argument 1234\n\n- name: Run a script only if file.txt does not exist on the remote node\n  ansible.builtin.script: /some/local/create_file.sh --some-argument 1234\n  args:\n    creates: /the/created/file.txt\n\n- name: Run a script only if file.txt exists on the remote node\n  ansible.builtin.script: /some/local/remove_file.sh --some-argument 1234\n  args:\n    removes: /the/removed/file.txt\n\n- name: Run a script using an executable in a non-system path\n  ansible.builtin.script: /some/local/script\n  args:\n    executable: /some/remote/executable\n\n- name: Run a script using an executable in a system path\n  ansible.builtin.script: /some/local/script.py\n  args:\n    executable: python3\n\n- name: Run a Powershell script on a windows host\n  script: subdirectories/under/path/with/your/playbook/script.ps1\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "chdir", "type": "", "elements": "", "default": null, "required": false, "description": ["Change into this directory on the remote node before running the script."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "cmd", "type": "str", "elements": "", "default": null, "required": false, "description": ["Path to the local script to run followed by optional arguments."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "creates", "type": "", "elements": "", "default": null, "required": false, "description": ["A filename on the remote node, when it already exists, this step will B(not) be run."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "decrypt", "type": "bool", "elements": "", "default": true, "required": false, "description": ["This option controls the autodecryption of source files using vault."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "executable", "type": "", "elements": "", "default": null, "required": false, "description": ["Name or path of a executable to invoke the script with."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "free_form", "type": "", "elements": "", "default": null, "required": false, "description": ["Path to the local script file followed by optional arguments."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "removes", "type": "", "elements": "", "default": null, "required": false, "description": ["A filename on the remote node, when it does not exist, this step will B(not) be run."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/script.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.service", "name": "service", "fqcn": "ansible.builtin.service", "local_key": "module module:lib/ansible/modules/service.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: full\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    details: support depends on the underlying plugin invoked\n    support: N/A\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    details: support depends on the underlying plugin invoked\n    support: N/A\n  platform:\n    description: Target OS/families that can be operated against\n    details: The support depends on the availability for the specific plugin for each\n      platform and if fact gathering is able to detect it\n    platforms: all\n    support: N/A\nauthor:\n- Ansible Core Team\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- Controls services on remote hosts. Supported init systems include BSD init, OpenRC,\n  SysV, Solaris SMF, systemd, upstart.\n- This module acts as a proxy to the underlying service manager module. While all\n  arguments will be passed to the underlying module, not all modules support the same\n  arguments. This documentation only covers the minimum intersection of module arguments\n  that all service manager modules support.\n- This module is a proxy for multiple more specific service manager modules (such\n  as M(ansible.builtin.systemd) and M(ansible.builtin.sysvinit)). This allows management\n  of a heterogeneous environment of machines without creating a specific task for\n  each service manager. The module to be executed is determined by the I(use) option,\n  which defaults to the service manager discovered by M(ansible.builtin.setup).  If\n  C(setup) was not yet run, this module may run it.\n- For Windows targets, use the M(ansible.windows.win_service) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/service.py\nhas_action: true\nmodule: service\nnotes:\n- For AIX, group subsystem names can be used.\noptions:\n  arguments:\n    aliases:\n    - args\n    description:\n    - Additional arguments provided on the command line.\n    - While using remote hosts with systemd this setting will be ignored.\n    type: str\n  enabled:\n    description:\n    - Whether the service should start on boot.\n    - B(At least one of state and enabled are required.)\n    type: bool\n  name:\n    description:\n    - Name of the service.\n    required: true\n    type: str\n  pattern:\n    description:\n    - If the service does not respond to the status command, name a substring to look\n      for as would be found in the output of the I(ps) command as a stand-in for a\n      status result.\n    - If the string is found, the service will be assumed to be started.\n    - While using remote hosts with systemd this setting will be ignored.\n    type: str\n    version_added: '0.7'\n    version_added_collection: ansible.builtin\n  runlevel:\n    default: default\n    description:\n    - For OpenRC init scripts (e.g. Gentoo) only.\n    - The runlevel that this service belongs to.\n    - While using remote hosts with systemd this setting will be ignored.\n    type: str\n  sleep:\n    description:\n    - If the service is being C(restarted) then sleep this many seconds between the\n      stop and start command.\n    - This helps to work around badly-behaving init scripts that exit immediately\n      after signaling a process to stop.\n    - Not all service managers support sleep, i.e when using systemd this setting\n      will be ignored.\n    type: int\n    version_added: '1.3'\n    version_added_collection: ansible.builtin\n  state:\n    choices:\n    - reloaded\n    - restarted\n    - started\n    - stopped\n    description:\n    - C(started)/C(stopped) are idempotent actions that will not run commands unless\n      necessary.\n    - C(restarted) will always bounce the service.\n    - C(reloaded) will always reload.\n    - B(At least one of state and enabled are required.)\n    - Note that reloaded will start the service if it is not already started, even\n      if your chosen init system wouldn't normally.\n    type: str\n  use:\n    default: auto\n    description:\n    - The service module actually uses system specific modules, normally through auto\n      detection, this setting can force a specific module.\n    - Normally it uses the value of the 'ansible_service_mgr' fact and falls back\n      to the old 'service' module when none matching is found.\n    type: str\n    version_added: 2.2\n    version_added_collection: ansible.builtin\nseealso:\n- module: ansible.windows.win_service\nshort_description: Manage services\nversion_added: '0.1'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Start service httpd, if not started\n  ansible.builtin.service:\n    name: httpd\n    state: started\n\n- name: Stop service httpd, if started\n  ansible.builtin.service:\n    name: httpd\n    state: stopped\n\n- name: Restart service httpd, in all cases\n  ansible.builtin.service:\n    name: httpd\n    state: restarted\n\n- name: Reload service httpd, in all cases\n  ansible.builtin.service:\n    name: httpd\n    state: reloaded\n\n- name: Enable service httpd, and not touch the state\n  ansible.builtin.service:\n    name: httpd\n    enabled: yes\n\n- name: Start service foo, based on running process /usr/bin/foo\n  ansible.builtin.service:\n    name: foo\n    pattern: /usr/bin/foo\n    state: started\n\n- name: Restart network service for interface eth0\n  ansible.builtin.service:\n    name: network\n    state: restarted\n    args: eth0\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "arguments", "type": "str", "elements": "", "default": null, "required": false, "description": ["Additional arguments provided on the command line.", "While using remote hosts with systemd this setting will be ignored."], "choices": null, "aliases": ["args"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "enabled", "type": "bool", "elements": "", "default": null, "required": false, "description": ["Whether the service should start on boot.", "B(At least one of state and enabled are required.)"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": true, "description": ["Name of the service."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "pattern", "type": "str", "elements": "", "default": null, "required": false, "description": ["If the service does not respond to the status command, name a substring to look for as would be found in the output of the I(ps) command as a stand-in for a status result.", "If the string is found, the service will be assumed to be started.", "While using remote hosts with systemd this setting will be ignored."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "runlevel", "type": "str", "elements": "", "default": "default", "required": false, "description": ["For OpenRC init scripts (e.g. Gentoo) only.", "The runlevel that this service belongs to.", "While using remote hosts with systemd this setting will be ignored."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "sleep", "type": "int", "elements": "", "default": null, "required": false, "description": ["If the service is being C(restarted) then sleep this many seconds between the stop and start command.", "This helps to work around badly-behaving init scripts that exit immediately after signaling a process to stop.", "Not all service managers support sleep, i.e when using systemd this setting will be ignored."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": null, "required": false, "description": ["C(started)/C(stopped) are idempotent actions that will not run commands unless necessary.", "C(restarted) will always bounce the service.", "C(reloaded) will always reload.", "B(At least one of state and enabled are required.)", "Note that reloaded will start the service if it is not already started, even if your chosen init system wouldn't normally."], "choices": ["reloaded", "restarted", "started", "stopped"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "use", "type": "str", "elements": "", "default": "auto", "required": false, "description": ["The service module actually uses system specific modules, normally through auto detection, this setting can force a specific module.", "Normally it uses the value of the 'ansible_service_mgr' fact and falls back to the old 'service' module when none matching is found."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/service.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.service_facts", "name": "service_facts", "fqcn": "ansible.builtin.service_facts", "local_key": "module module:lib/ansible/modules/service_facts.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  facts:\n    description: Action returns an C(ansible_facts) dictionary that will update existing\n      host facts\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Adam Miller (@maxamillion)\ncollection: ansible.builtin\ndescription:\n- Return service state information as fact data for various service management utilities.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/service_facts.py\nhas_action: false\nmodule: service_facts\nnotes:\n- When accessing the C(ansible_facts.services) facts collected by this module, it\n  is recommended to not use \"dot notation\" because services can have a C(-) character\n  in their name which would result in invalid \"dot notation\", such as C(ansible_facts.services.zuul-gateway).\n  It is instead recommended to using the string value of the service name as the key\n  in order to obtain the fact data value like C(ansible_facts.services['zuul-gateway'])\n- AIX SRC was added in version 2.11.\nrequirements:\n- 'Any of the following supported init systems: systemd, sysv, upstart, openrc, AIX\n  SRC'\nshort_description: Return service state information as fact data\nversion_added: '2.5'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Populate service facts\n  ansible.builtin.service_facts:\n\n- name: Print service facts\n  ansible.builtin.debug:\n    var: ansible_facts.services\n", "arguments": [], "defined_in": "lib/ansible/modules/service_facts.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.set_fact", "name": "set_fact", "fqcn": "ansible.builtin.set_fact", "local_key": "module module:lib/ansible/modules/set_fact.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    details: While the action plugin does do some of the work it relies on the core\n      engine to actually create the variables, that part cannot be overriden\n    support: partial\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  bypass_task_loop:\n    description: These tasks ignore the C(loop) and C(with_) keywords\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  core:\n    description: This is a 'core engine' feature and is not implemented like most\n      task actions, so it is not overridable in any way via the plugin system.\n    details: While parts of this action are implemented in core, other parts are still\n      available as normal plugins and can be partially overridden\n    support: partial\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    details:\n    - while variable assignment can be delegated to a different host the execution\n      context is always the current inventory_hostname\n    - connection variables, if set at all, would reflect the host it would target,\n      even if we are not connecting at all in this case\n    support: partial\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  ignore_conditional:\n    description: The action is not subject to conditional execution so it will ignore\n      the C(when:) keyword\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\n  tags:\n    description: Allows for the 'tags' keyword to control the selection of this action\n      for execution\n    support: full\n  until:\n    description: Denotes if this action objeys until/retry/poll keywords\n    support: full\nauthor:\n- Dag Wieers (@dagwieers)\ncollection: ansible.builtin\ndescription:\n- This action allows setting variables associated to the current host.\n- These variables will be available to subsequent plays during an ansible-playbook\n  run via the host they were set on.\n- Set C(cacheable) to C(true) to save variables across executions using a fact cache.\n  Variables will keep the set_fact precedence for the current run, but will used 'cached\n  fact' precedence for subsequent ones.\n- Per the standard Ansible variable precedence rules, other types of variables have\n  a higher priority, so this value may be overridden.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/set_fact.py\nhas_action: true\nmodule: set_fact\nnotes:\n- Because of the nature of tasks, set_fact will produce 'static' values for a variable.\n  Unlike normal 'lazy' variables, the value gets evaluated and templated on assignment.\n- Some boolean values (yes, no, true, false) will always be converted to boolean type,\n  unless C(DEFAULT_JINJA2_NATIVE) is enabled.  This is done so the C(var=value) booleans,\n  otherwise it would only be able to create strings, but it also prevents using those\n  values to create YAML strings. Using the setting will restrict k=v to strings, but\n  will allow you to specify string or boolean in YAML.\n- 'To create lists/arrays or dictionary/hashes use YAML notation C(var: [val1, val2]).'\n- Since 'cacheable' is now a module param, 'cacheable' is no longer a valid fact name.\noptions:\n  cacheable:\n    default: false\n    description:\n    - This boolean converts the variable into an actual 'fact' which will also be\n      added to the fact cache. It does not enable fact caching across runs, it just\n      means it will work with it if already enabled.\n    - Normally this module creates 'host level variables' and has much higher precedence,\n      this option changes the nature and precedence (by 7 steps) of the variable created.\n      U(https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html#variable-precedence-where-should-i-put-a-variable)\n    - 'This actually creates 2 copies of the variable, a normal ''set_fact'' host\n      variable with high precedence and a lower ''ansible_fact'' one that is available\n      for persistence via the facts cache plugin. This creates a possibly confusing\n      interaction with C(meta: clear_facts) as it will remove the ''ansible_fact''\n      but not the host variable.'\n    type: bool\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  key_value:\n    description:\n    - 'The C(set_fact) module takes C(key=value) pairs or C(key: value) (YAML notation)\n      as variables to set in the playbook scope. The ''key'' is the resulting variable\n      name and the value is, of course, the value of said variable.'\n    - You can create multiple variables at once, by supplying multiple pairs, but\n      do NOT mix notations.\n    required: true\nseealso:\n- module: ansible.builtin.include_vars\n- description: More information related to variable precedence and which type of variable\n    wins over others.\n  ref: ansible_variable_precedence\nshort_description: Set host variable(s) and fact(s).\nversion_added: '1.2'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Setting host facts using key=value pairs, this format can only create strings or booleans\n  ansible.builtin.set_fact: one_fact=\"something\" other_fact=\"{{ local_var }}\"\n\n- name: Setting host facts using complex arguments\n  ansible.builtin.set_fact:\n    one_fact: something\n    other_fact: \"{{ local_var * 2 }}\"\n    another_fact: \"{{ some_registered_var.results | map(attribute='ansible_facts.some_fact') | list }}\"\n\n- name: Setting facts so that they will be persisted in the fact cache\n  ansible.builtin.set_fact:\n    one_fact: something\n    other_fact: \"{{ local_var * 2 }}\"\n    cacheable: yes\n\n- name: Creating list and dictionary variables\n  ansible.builtin.set_fact:\n    one_dict:\n        something: here\n        other: there\n    one_list:\n        - a\n        - b\n        - c\n# As of Ansible 1.8, Ansible will convert boolean strings ('true', 'false', 'yes', 'no')\n# to proper boolean values when using the key=value syntax, however it is still\n# recommended that booleans be set using the complex argument style:\n- name: Setting booleans using complex argument style\n  ansible.builtin.set_fact:\n    one_fact: yes\n    other_fact: no\n\n- name: Creating list and dictionary variables using 'shorthand' YAML\n  ansible.builtin.set_fact:\n    two_dict: {'something': here2, 'other': somewhere}\n    two_list: [1,2,3]\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "cacheable", "type": "bool", "elements": "", "default": false, "required": false, "description": ["This boolean converts the variable into an actual 'fact' which will also be added to the fact cache. It does not enable fact caching across runs, it just means it will work with it if already enabled.", "Normally this module creates 'host level variables' and has much higher precedence, this option changes the nature and precedence (by 7 steps) of the variable created. U(https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html#variable-precedence-where-should-i-put-a-variable)", "This actually creates 2 copies of the variable, a normal 'set_fact' host variable with high precedence and a lower 'ansible_fact' one that is available for persistence via the facts cache plugin. This creates a possibly confusing interaction with C(meta: clear_facts) as it will remove the 'ansible_fact' but not the host variable."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "key_value", "type": "", "elements": "", "default": null, "required": true, "description": ["The C(set_fact) module takes C(key=value) pairs or C(key: value) (YAML notation) as variables to set in the playbook scope. The 'key' is the resulting variable name and the value is, of course, the value of said variable.", "You can create multiple variables at once, by supplying multiple pairs, but do NOT mix notations."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/set_fact.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.set_stats", "name": "set_stats", "fqcn": "ansible.builtin.set_stats", "local_key": "module module:lib/ansible/modules/set_stats.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    details: While the action plugin does do some of the work it relies on the core\n      engine to actually create the variables, that part cannot be overridden\n    support: partial\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  bypass_task_loop:\n    description: These tasks ignore the C(loop) and C(with_) keywords\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  core:\n    description: This is a 'core engine' feature and is not implemented like most\n      task actions, so it is not overridable in any way via the plugin system.\n    details: While parts of this action are implemented in core, other parts are still\n      available as normal plugins and can be partially overridden\n    support: partial\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  ignore_conditional:\n    description: The action is not subject to conditional execution so it will ignore\n      the C(when:) keyword\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\n  tags:\n    description: Allows for the 'tags' keyword to control the selection of this action\n      for execution\n    support: full\n  until:\n    description: Denotes if this action objeys until/retry/poll keywords\n    support: full\nauthor: Brian Coca (@bcoca)\ncollection: ansible.builtin\ndescription:\n- This module allows setting/accumulating stats on the current ansible run, either\n  per host or for all hosts in the run.\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/set_stats.py\nhas_action: true\nmodule: set_stats\nnotes:\n- In order for custom stats to be displayed, you must set C(show_custom_stats) in\n  section C([defaults]) in C(ansible.cfg) or by defining environment variable C(ANSIBLE_SHOW_CUSTOM_STATS)\n  to C(true). See the C(default) callback plugin for details.\noptions:\n  aggregate:\n    default: true\n    description:\n    - Whether the provided value is aggregated to the existing stat C(true) or will\n      replace it C(false).\n    type: bool\n  data:\n    description:\n    - A dictionary of which each key represents a stat (or variable) you want to keep\n      track of.\n    required: true\n    type: dict\n  per_host:\n    default: false\n    description:\n    - whether the stats are per host or for all hosts in the run.\n    type: bool\nshort_description: Define and display stats for the current ansible run\nversion_added: '2.3'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Aggregating packages_installed stat per host\n  ansible.builtin.set_stats:\n    data:\n      packages_installed: 31\n    per_host: yes\n\n- name: Aggregating random stats for all hosts using complex arguments\n  ansible.builtin.set_stats:\n    data:\n      one_stat: 11\n      other_stat: \"{{ local_var * 2 }}\"\n      another_stat: \"{{ some_registered_var.results | map(attribute='ansible_facts.some_fact') | list }}\"\n    per_host: no\n\n- name: Setting stats (not aggregating)\n  ansible.builtin.set_stats:\n    data:\n      the_answer: 42\n    aggregate: no\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "aggregate", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Whether the provided value is aggregated to the existing stat C(true) or will replace it C(false)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "data", "type": "dict", "elements": "", "default": null, "required": true, "description": ["A dictionary of which each key represents a stat (or variable) you want to keep track of."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "per_host", "type": "bool", "elements": "", "default": false, "required": false, "description": ["whether the stats are per host or for all hosts in the run."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/set_stats.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.setup", "name": "setup", "fqcn": "ansible.builtin.setup", "local_key": "module module:lib/ansible/modules/setup.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  facts:\n    description: Action returns an C(ansible_facts) dictionary that will update existing\n      host facts\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix, windows\n    support: N/A\nauthor:\n- Ansible Core Team\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- This module is automatically called by playbooks to gather useful variables about\n  remote hosts that can be used in playbooks. It can also be executed directly by\n  C(/usr/bin/ansible) to check what variables are available to a host. Ansible provides\n  many I(facts) about the system, automatically.\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/setup.py\nhas_action: false\nmodule: setup\nnotes:\n- More ansible facts will be added with successive releases. If I(facter) or I(ohai)\n  are installed, variables from these programs will also be snapshotted into the JSON\n  file for usage in templating. These variables are prefixed with C(facter_) and C(ohai_)\n  so it's easy to tell their source. All variables are bubbled up to the caller. Using\n  the ansible facts and choosing to not install I(facter) and I(ohai) means you can\n  avoid Ruby-dependencies on your remote systems. (See also M(community.general.facter)\n  and M(community.general.ohai).)\n- The filter option filters only the first level subkey below ansible_facts.\n- If the target host is Windows, you will not currently have the ability to use C(filter)\n  as this is provided by a simpler implementation of the module.\n- This module should be run with elevated privileges on BSD systems to gather facts\n  like ansible_product_version.\n- For more information about delegated facts, please check U(https://docs.ansible.com/ansible/latest/user_guide/playbooks_delegation.html#delegating-facts).\noptions:\n  fact_path:\n    default: /etc/ansible/facts.d\n    description:\n    - Path used for local ansible facts (C(*.fact)) - files in this dir will be run\n      (if executable) and their results be added to C(ansible_local) facts. If a file\n      is not executable it is read instead. File/results format can be JSON or INI-format.\n      The default C(fact_path) can be specified in C(ansible.cfg) for when setup is\n      automatically called as part of C(gather_facts). NOTE - For windows clients,\n      the results will be added to a variable named after the local file (without\n      extension suffix), rather than C(ansible_local).\n    - Since Ansible 2.1, Windows hosts can use C(fact_path). Make sure that this path\n      exists on the target host. Files in this path MUST be PowerShell scripts C(.ps1)\n      which outputs an object. This object will be formatted by Ansible as json so\n      the script should be outputting a raw hashtable, array, or other primitive object.\n    type: path\n    version_added: '1.3'\n    version_added_collection: ansible.builtin\n  filter:\n    default: []\n    description:\n    - If supplied, only return facts that match one of the shell-style (fnmatch) pattern.\n      An empty list basically means 'no filter'. As of Ansible 2.11, the type has\n      changed from string to list and the default has became an empty list. A simple\n      string is still accepted and works as a single pattern. The behaviour prior\n      to Ansible 2.11 remains.\n    elements: str\n    type: list\n    version_added: '1.1'\n    version_added_collection: ansible.builtin\n  gather_subset:\n    default: all\n    description:\n    - 'If supplied, restrict the additional facts collected to the given subset. Possible\n      values: C(all), C(all_ipv4_addresses), C(all_ipv6_addresses), C(apparmor), C(architecture),\n      C(caps), C(chroot),C(cmdline), C(date_time), C(default_ipv4), C(default_ipv6),\n      C(devices), C(distribution), C(distribution_major_version), C(distribution_release),\n      C(distribution_version), C(dns), C(effective_group_ids), C(effective_user_id),\n      C(env), C(facter), C(fips), C(hardware), C(interfaces), C(is_chroot), C(iscsi),\n      C(kernel), C(local), C(lsb), C(machine), C(machine_id), C(mounts), C(network),\n      C(ohai), C(os_family), C(pkg_mgr), C(platform), C(processor), C(processor_cores),\n      C(processor_count), C(python), C(python_version), C(real_user_id), C(selinux),\n      C(service_mgr), C(ssh_host_key_dsa_public), C(ssh_host_key_ecdsa_public), C(ssh_host_key_ed25519_public),\n      C(ssh_host_key_rsa_public), C(ssh_host_pub_keys), C(ssh_pub_keys), C(system),\n      C(system_capabilities), C(system_capabilities_enforced), C(user), C(user_dir),\n      C(user_gecos), C(user_gid), C(user_id), C(user_shell), C(user_uid), C(virtual),\n      C(virtualization_role), C(virtualization_type). Can specify a list of values\n      to specify a larger subset. Values can also be used with an initial C(!) to\n      specify that that specific subset should not be collected.  For instance: C(!hardware,!network,!virtual,!ohai,!facter).\n      If C(!all) is specified then only the min subset is collected. To avoid collecting\n      even the min subset, specify C(!all,!min). To collect only specific facts, use\n      C(!all,!min), and specify the particular fact subsets. Use the filter parameter\n      if you do not want to display some collected facts.'\n    elements: str\n    type: list\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  gather_timeout:\n    default: 10\n    description:\n    - Set the default timeout in seconds for individual fact gathering.\n    type: int\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\nshort_description: Gathers facts about remote hosts\nversion_added: historical\nversion_added_collection: ansible.builtin\n", "examples": "\n# Display facts from all hosts and store them indexed by I(hostname) at C(/tmp/facts).\n# ansible all -m ansible.builtin.setup --tree /tmp/facts\n\n# Display only facts regarding memory found by ansible on all hosts and output them.\n# ansible all -m ansible.builtin.setup -a 'filter=ansible_*_mb'\n\n# Display only facts returned by facter.\n# ansible all -m ansible.builtin.setup -a 'filter=facter_*'\n\n# Collect only facts returned by facter.\n# ansible all -m ansible.builtin.setup -a 'gather_subset=!all,facter'\n\n- name: Collect only facts returned by facter\n  ansible.builtin.setup:\n    gather_subset:\n      - '!all'\n      - '!<any valid subset>'\n      - facter\n\n- name: Filter and return only selected facts\n  ansible.builtin.setup:\n    filter:\n      - 'ansible_distribution'\n      - 'ansible_machine_id'\n      - 'ansible_*_mb'\n\n# Display only facts about certain interfaces.\n# ansible all -m ansible.builtin.setup -a 'filter=ansible_eth[0-2]'\n\n# Restrict additional gathered facts to network and virtual (includes default minimum facts)\n# ansible all -m ansible.builtin.setup -a 'gather_subset=network,virtual'\n\n# Collect only network and virtual (excludes default minimum facts)\n# ansible all -m ansible.builtin.setup -a 'gather_subset=!all,network,virtual'\n\n# Do not call puppet facter or ohai even if present.\n# ansible all -m ansible.builtin.setup -a 'gather_subset=!facter,!ohai'\n\n# Only collect the default minimum amount of facts:\n# ansible all -m ansible.builtin.setup -a 'gather_subset=!all'\n\n# Collect no facts, even the default minimum subset of facts:\n# ansible all -m ansible.builtin.setup -a 'gather_subset=!all,!min'\n\n# Display facts from Windows hosts with custom facts stored in C:\\custom_facts.\n# ansible windows -m ansible.builtin.setup -a \"fact_path='c:\\custom_facts'\"\n\n# Gathers facts for the machines in the dbservers group (a.k.a Delegating facts)\n- hosts: app_servers\n  tasks:\n    - name: Gather facts from db servers\n      ansible.builtin.setup:\n      delegate_to: \"{{ item }}\"\n      delegate_facts: true\n      loop: \"{{ groups['dbservers'] }}\"\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "fact_path", "type": "str", "elements": "", "default": "/etc/ansible/facts.d", "required": false, "description": ["Path used for local ansible facts (C(*.fact)) - files in this dir will be run (if executable) and their results be added to C(ansible_local) facts. If a file is not executable it is read instead. File/results format can be JSON or INI-format. The default C(fact_path) can be specified in C(ansible.cfg) for when setup is automatically called as part of C(gather_facts). NOTE - For windows clients, the results will be added to a variable named after the local file (without extension suffix), rather than C(ansible_local).", "Since Ansible 2.1, Windows hosts can use C(fact_path). Make sure that this path exists on the target host. Files in this path MUST be PowerShell scripts C(.ps1) which outputs an object. This object will be formatted by Ansible as json so the script should be outputting a raw hashtable, array, or other primitive object."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "filter", "type": "list", "elements": "str", "default": [], "required": false, "description": ["If supplied, only return facts that match one of the shell-style (fnmatch) pattern. An empty list basically means 'no filter'. As of Ansible 2.11, the type has changed from string to list and the default has became an empty list. A simple string is still accepted and works as a single pattern. The behaviour prior to Ansible 2.11 remains."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "gather_subset", "type": "list", "elements": "str", "default": "all", "required": false, "description": ["If supplied, restrict the additional facts collected to the given subset. Possible values: C(all), C(all_ipv4_addresses), C(all_ipv6_addresses), C(apparmor), C(architecture), C(caps), C(chroot),C(cmdline), C(date_time), C(default_ipv4), C(default_ipv6), C(devices), C(distribution), C(distribution_major_version), C(distribution_release), C(distribution_version), C(dns), C(effective_group_ids), C(effective_user_id), C(env), C(facter), C(fips), C(hardware), C(interfaces), C(is_chroot), C(iscsi), C(kernel), C(local), C(lsb), C(machine), C(machine_id), C(mounts), C(network), C(ohai), C(os_family), C(pkg_mgr), C(platform), C(processor), C(processor_cores), C(processor_count), C(python), C(python_version), C(real_user_id), C(selinux), C(service_mgr), C(ssh_host_key_dsa_public), C(ssh_host_key_ecdsa_public), C(ssh_host_key_ed25519_public), C(ssh_host_key_rsa_public), C(ssh_host_pub_keys), C(ssh_pub_keys), C(system), C(system_capabilities), C(system_capabilities_enforced), C(user), C(user_dir), C(user_gecos), C(user_gid), C(user_id), C(user_shell), C(user_uid), C(virtual), C(virtualization_role), C(virtualization_type). Can specify a list of values to specify a larger subset. Values can also be used with an initial C(!) to specify that that specific subset should not be collected.  For instance: C(!hardware,!network,!virtual,!ohai,!facter). If C(!all) is specified then only the min subset is collected. To avoid collecting even the min subset, specify C(!all,!min). To collect only specific facts, use C(!all,!min), and specify the particular fact subsets. Use the filter parameter if you do not want to display some collected facts."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "gather_timeout", "type": "int", "elements": "", "default": 10, "required": false, "description": ["Set the default timeout in seconds for individual fact gathering."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/setup.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.shell", "name": "shell", "fqcn": "ansible.builtin.shell", "local_key": "module module:lib/ansible/modules/shell.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    details: while the command itself is arbitrary and cannot be subject to the check\n      mode semantics it adds C(creates)/C(removes) options as a workaround\n    support: partial\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: full\n  raw:\n    description: Indicates if an action takes a 'raw' or 'free form' string as an\n      option and has it's own special parsing of it\n    support: full\nauthor:\n- Ansible Core Team\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- The C(shell) module takes the command name followed by a list of space-delimited\n  arguments.\n- Either a free form command or C(cmd) parameter is required, see the examples.\n- It is almost exactly like the M(ansible.builtin.command) module but runs the command\n  through a shell (C(/bin/sh)) on the remote node.\n- For Windows targets, use the M(ansible.windows.win_shell) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/shell.py\nhas_action: true\nmodule: shell\nnotes:\n- If you want to execute a command securely and predictably, it may be better to use\n  the M(ansible.builtin.command) module instead. Best practices when writing playbooks\n  will follow the trend of using M(ansible.builtin.command) unless the M(ansible.builtin.shell)\n  module is explicitly required. When running ad-hoc commands, use your best judgement.\n- To sanitize any variables passed to the shell module, you should use C({{ var |\n  quote }}) instead of just C({{ var }}) to make sure they do not include evil things\n  like semicolons.\n- An alternative to using inline shell scripts with this module is to use the M(ansible.builtin.script)\n  module possibly together with the M(ansible.builtin.template) module.\n- For rebooting systems, use the M(ansible.builtin.reboot) or M(ansible.windows.win_reboot)\n  module.\noptions:\n  chdir:\n    description:\n    - Change into this directory before running the command.\n    type: path\n    version_added: '0.6'\n    version_added_collection: ansible.builtin\n  cmd:\n    description:\n    - The command to run followed by optional arguments.\n    type: str\n  creates:\n    description:\n    - A filename, when it already exists, this step will B(not) be run.\n    type: path\n  executable:\n    description:\n    - Change the shell used to execute the command.\n    - This expects an absolute path to the executable.\n    type: path\n    version_added: '0.9'\n    version_added_collection: ansible.builtin\n  free_form:\n    description:\n    - The shell module takes a free form command to run, as a string.\n    - There is no actual parameter named 'free form'.\n    - See the examples on how to use this module.\n    type: str\n  removes:\n    description:\n    - A filename, when it does not exist, this step will B(not) be run.\n    type: path\n    version_added: '0.8'\n    version_added_collection: ansible.builtin\n  stdin:\n    description:\n    - Set the stdin of the command directly to the specified value.\n    type: str\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  stdin_add_newline:\n    default: true\n    description:\n    - Whether to append a newline to stdin data.\n    type: bool\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\nseealso:\n- module: ansible.builtin.command\n- module: ansible.builtin.raw\n- module: ansible.builtin.script\n- module: ansible.windows.win_shell\nshort_description: Execute shell commands on targets\nversion_added: '0.2'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Execute the command in remote shell; stdout goes to the specified file on the remote\n  ansible.builtin.shell: somescript.sh >> somelog.txt\n\n- name: Change the working directory to somedir/ before executing the command\n  ansible.builtin.shell: somescript.sh >> somelog.txt\n  args:\n    chdir: somedir/\n\n# You can also use the 'args' form to provide the options.\n- name: This command will change the working directory to somedir/ and will only run when somedir/somelog.txt doesn't exist\n  ansible.builtin.shell: somescript.sh >> somelog.txt\n  args:\n    chdir: somedir/\n    creates: somelog.txt\n\n# You can also use the 'cmd' parameter instead of free form format.\n- name: This command will change the working directory to somedir/\n  ansible.builtin.shell:\n    cmd: ls -l | grep log\n    chdir: somedir/\n\n- name: Run a command that uses non-posix shell-isms (in this example /bin/sh doesn't handle redirection and wildcards together but bash does)\n  ansible.builtin.shell: cat < /tmp/*txt\n  args:\n    executable: /bin/bash\n\n- name: Run a command using a templated variable (always use quote filter to avoid injection)\n  ansible.builtin.shell: cat {{ myfile|quote }}\n\n# You can use shell to run other executables to perform actions inline\n- name: Run expect to wait for a successful PXE boot via out-of-band CIMC\n  ansible.builtin.shell: |\n    set timeout 300\n    spawn ssh admin@{{ cimc_host }}\n\n    expect \"password:\"\n    send \"{{ cimc_password }}\\n\"\n\n    expect \"\\n{{ cimc_name }}\"\n    send \"connect host\\n\"\n\n    expect \"pxeboot.n12\"\n    send \"\\n\"\n\n    exit 0\n  args:\n    executable: /usr/bin/expect\n  delegate_to: localhost\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "chdir", "type": "str", "elements": "", "default": null, "required": false, "description": ["Change into this directory before running the command."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "cmd", "type": "str", "elements": "", "default": null, "required": false, "description": ["The command to run followed by optional arguments."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "creates", "type": "str", "elements": "", "default": null, "required": false, "description": ["A filename, when it already exists, this step will B(not) be run."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "executable", "type": "str", "elements": "", "default": null, "required": false, "description": ["Change the shell used to execute the command.", "This expects an absolute path to the executable."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "free_form", "type": "str", "elements": "", "default": null, "required": false, "description": ["The shell module takes a free form command to run, as a string.", "There is no actual parameter named 'free form'.", "See the examples on how to use this module."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "removes", "type": "str", "elements": "", "default": null, "required": false, "description": ["A filename, when it does not exist, this step will B(not) be run."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "stdin", "type": "str", "elements": "", "default": null, "required": false, "description": ["Set the stdin of the command directly to the specified value."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "stdin_add_newline", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Whether to append a newline to stdin data."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/shell.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.slurp", "name": "slurp", "fqcn": "ansible.builtin.slurp", "local_key": "module module:lib/ansible/modules/slurp.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix, windows\n    support: N/A\nauthor:\n- Ansible Core Team\n- Michael DeHaan (@mpdehaan)\ncollection: ansible.builtin\ndescription:\n- This module works like M(ansible.builtin.fetch). It is used for fetching a base64-\n  encoded blob containing the data in a remote file.\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/slurp.py\nhas_action: false\nmodule: slurp\nnotes:\n- This module returns an 'in memory' base64 encoded version of the file, take into\n  account that this will require at least twice the RAM as the original file size.\noptions:\n  src:\n    aliases:\n    - path\n    description:\n    - The file on the remote system to fetch. This I(must) be a file, not a directory.\n    required: true\n    type: path\nseealso:\n- module: ansible.builtin.fetch\nshort_description: Slurps a file from remote nodes\nversion_added: historical\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Find out what the remote machine's mounts are\n  ansible.builtin.slurp:\n    src: /proc/mounts\n  register: mounts\n\n- name: Print returned information\n  ansible.builtin.debug:\n    msg: \"{{ mounts['content'] | b64decode }}\"\n\n# From the commandline, find the pid of the remote machine's sshd\n# $ ansible host -m ansible.builtin.slurp -a 'src=/var/run/sshd.pid'\n# host | SUCCESS => {\n#     \"changed\": false,\n#     \"content\": \"MjE3OQo=\",\n#     \"encoding\": \"base64\",\n#     \"source\": \"/var/run/sshd.pid\"\n# }\n# $ echo MjE3OQo= | base64 -d\n# 2179\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "src", "type": "str", "elements": "", "default": null, "required": true, "description": ["The file on the remote system to fetch. This I(must) be a file, not a directory."], "choices": null, "aliases": ["path"]}], "defined_in": "lib/ansible/modules/slurp.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.stat", "name": "stat", "fqcn": "ansible.builtin.stat", "local_key": "module module:lib/ansible/modules/stat.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor: Bruce Pennypacker (@bpennypacker)\ncollection: ansible.builtin\ndescription:\n- Retrieves facts for a file similar to the Linux/Unix 'stat' command.\n- For Windows targets, use the M(ansible.windows.win_stat) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/stat.py\nhas_action: false\nmodule: stat\noptions:\n  checksum_algorithm:\n    aliases:\n    - checksum\n    - checksum_algo\n    choices:\n    - md5\n    - sha1\n    - sha224\n    - sha256\n    - sha384\n    - sha512\n    default: sha1\n    description:\n    - Algorithm to determine checksum of file.\n    - Will throw an error if the host is unable to use specified algorithm.\n    - The remote host has to support the hashing method specified, C(md5) can be unavailable\n      if the host is FIPS-140 compliant.\n    type: str\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  follow:\n    default: false\n    description:\n    - Whether to follow symlinks.\n    type: bool\n  get_attributes:\n    aliases:\n    - attr\n    - attributes\n    default: true\n    description:\n    - Get file attributes using lsattr tool if present.\n    type: bool\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  get_checksum:\n    default: true\n    description:\n    - Whether to return a checksum of the file.\n    type: bool\n    version_added: '1.8'\n    version_added_collection: ansible.builtin\n  get_mime:\n    aliases:\n    - mime\n    - mime_type\n    - mime-type\n    default: true\n    description:\n    - Use file magic and return data about the nature of the file. this uses the 'file'\n      utility found on most Linux/Unix systems.\n    - This will add both C(mime_type) and C(charset) fields to the return, if possible.\n    - In Ansible 2.3 this option changed from I(mime) to I(get_mime) and the default\n      changed to C(true).\n    type: bool\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  path:\n    aliases:\n    - dest\n    - name\n    description:\n    - The full path of the file/object to get the facts of.\n    required: true\n    type: path\nseealso:\n- module: ansible.builtin.file\n- module: ansible.windows.win_stat\nshort_description: Retrieve file or file system status\nversion_added: '1.3'\nversion_added_collection: ansible.builtin\n", "examples": "\n# Obtain the stats of /etc/foo.conf, and check that the file still belongs\n# to 'root'. Fail otherwise.\n- name: Get stats of a file\n  ansible.builtin.stat:\n    path: /etc/foo.conf\n  register: st\n- name: Fail if the file does not belong to 'root'\n  ansible.builtin.fail:\n    msg: \"Whoops! file ownership has changed\"\n  when: st.stat.pw_name != 'root'\n\n# Determine if a path exists and is a symlink. Note that if the path does\n# not exist, and we test sym.stat.islnk, it will fail with an error. So\n# therefore, we must test whether it is defined.\n# Run this to understand the structure, the skipped ones do not pass the\n# check performed by 'when'\n- name: Get stats of the FS object\n  ansible.builtin.stat:\n    path: /path/to/something\n  register: sym\n\n- name: Print a debug message\n  ansible.builtin.debug:\n    msg: \"islnk isn't defined (path doesn't exist)\"\n  when: sym.stat.islnk is not defined\n\n- name: Print a debug message\n  ansible.builtin.debug:\n    msg: \"islnk is defined (path must exist)\"\n  when: sym.stat.islnk is defined\n\n- name: Print a debug message\n  ansible.builtin.debug:\n    msg: \"Path exists and is a symlink\"\n  when: sym.stat.islnk is defined and sym.stat.islnk\n\n- name: Print a debug message\n  ansible.builtin.debug:\n    msg: \"Path exists and isn't a symlink\"\n  when: sym.stat.islnk is defined and sym.stat.islnk == False\n\n\n# Determine if a path exists and is a directory.  Note that we need to test\n# both that p.stat.isdir actually exists, and also that it's set to true.\n- name: Get stats of the FS object\n  ansible.builtin.stat:\n    path: /path/to/something\n  register: p\n- name: Print a debug message\n  ansible.builtin.debug:\n    msg: \"Path exists and is a directory\"\n  when: p.stat.isdir is defined and p.stat.isdir\n\n- name: Do not calculate the checksum\n  ansible.builtin.stat:\n    path: /path/to/myhugefile\n    get_checksum: no\n\n- name: Use sha256 to calculate the checksum\n  ansible.builtin.stat:\n    path: /path/to/something\n    checksum_algorithm: sha256\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "checksum_algorithm", "type": "str", "elements": "", "default": "sha1", "required": false, "description": ["Algorithm to determine checksum of file.", "Will throw an error if the host is unable to use specified algorithm.", "The remote host has to support the hashing method specified, C(md5) can be unavailable if the host is FIPS-140 compliant."], "choices": ["md5", "sha1", "sha224", "sha256", "sha384", "sha512"], "aliases": ["checksum", "checksum_algo"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "follow", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Whether to follow symlinks."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "get_attributes", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Get file attributes using lsattr tool if present."], "choices": null, "aliases": ["attr", "attributes"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "get_checksum", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Whether to return a checksum of the file."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "get_mime", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Use file magic and return data about the nature of the file. this uses the 'file' utility found on most Linux/Unix systems.", "This will add both C(mime_type) and C(charset) fields to the return, if possible.", "In Ansible 2.3 this option changed from I(mime) to I(get_mime) and the default changed to C(true)."], "choices": null, "aliases": ["mime", "mime_type", "mime-type"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "path", "type": "str", "elements": "", "default": null, "required": true, "description": ["The full path of the file/object to get the facts of."], "choices": null, "aliases": ["dest", "name"]}], "defined_in": "lib/ansible/modules/stat.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.subversion", "name": "subversion", "fqcn": "ansible.builtin.subversion", "local_key": "module module:lib/ansible/modules/subversion.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Dane Summers (@dsummersl) <njharman@gmail.com>\ncollection: ansible.builtin\ndescription:\n- Deploy given repository URL / revision to dest. If dest exists, update to the specified\n  revision, otherwise perform a checkout.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/subversion.py\nhas_action: false\nmodule: subversion\nnotes:\n- This module does not handle externals.\noptions:\n  checkout:\n    default: 'yes'\n    description:\n    - If C(false), do not check out the repository if it does not exist locally.\n    type: bool\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  dest:\n    description:\n    - Absolute path where the repository should be deployed.\n    - The destination directory must be specified unless I(checkout=no), I(update=no),\n      and I(export=no).\n    type: path\n  executable:\n    description:\n    - Path to svn executable to use. If not supplied, the normal mechanism for resolving\n      binary paths will be used.\n    type: path\n    version_added: '1.4'\n    version_added_collection: ansible.builtin\n  export:\n    default: 'no'\n    description:\n    - If C(true), do export instead of checkout/update.\n    type: bool\n    version_added: '1.6'\n    version_added_collection: ansible.builtin\n  force:\n    default: 'no'\n    description:\n    - If C(true), modified files will be discarded. If C(false), module will fail\n      if it encounters modified files. Prior to 1.9 the default was C(true).\n    type: bool\n  in_place:\n    default: 'no'\n    description:\n    - If the directory exists, then the working copy will be checked-out over-the-top\n      using svn checkout --force; if force is specified then existing files with different\n      content are reverted.\n    type: bool\n    version_added: '2.6'\n    version_added_collection: ansible.builtin\n  password:\n    description:\n    - C(--password) parameter passed to svn when svn is less than version 1.10.0.\n      This is not secure and the password will be leaked to argv.\n    - C(--password-from-stdin) parameter when svn is greater or equal to version 1.10.0.\n    type: str\n  repo:\n    aliases:\n    - name\n    - repository\n    description:\n    - The subversion URL to the repository.\n    required: true\n    type: str\n  revision:\n    aliases:\n    - rev\n    - version\n    default: HEAD\n    description:\n    - Specific revision to checkout.\n    type: str\n  switch:\n    default: 'yes'\n    description:\n    - If C(false), do not call svn switch before update.\n    type: bool\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  update:\n    default: 'yes'\n    description:\n    - If C(false), do not retrieve new revisions from the origin repository.\n    type: bool\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  username:\n    description:\n    - C(--username) parameter passed to svn.\n    type: str\n  validate_certs:\n    default: 'no'\n    description:\n    - If C(false), passes the C(--trust-server-cert) flag to svn.\n    - If C(true), does not pass the flag.\n    type: bool\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\nrequirements:\n- subversion (the command line tool with C(svn) entrypoint)\nshort_description: Deploys a subversion repository\nversion_added: '0.7'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Checkout subversion repository to specified folder\n  ansible.builtin.subversion:\n    repo: svn+ssh://an.example.org/path/to/repo\n    dest: /src/checkout\n\n- name: Export subversion directory to folder\n  ansible.builtin.subversion:\n    repo: svn+ssh://an.example.org/path/to/repo\n    dest: /src/export\n    export: yes\n\n- name: Get information about the repository whether or not it has already been cloned locally\n  ansible.builtin.subversion:\n    repo: svn+ssh://an.example.org/path/to/repo\n    dest: /src/checkout\n    checkout: no\n    update: no\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "checkout", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["If C(false), do not check out the repository if it does not exist locally."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "dest", "type": "str", "elements": "", "default": null, "required": false, "description": ["Absolute path where the repository should be deployed.", "The destination directory must be specified unless I(checkout=no), I(update=no), and I(export=no)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "executable", "type": "str", "elements": "", "default": null, "required": false, "description": ["Path to svn executable to use. If not supplied, the normal mechanism for resolving binary paths will be used."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "export", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If C(true), do export instead of checkout/update."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "force", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If C(true), modified files will be discarded. If C(false), module will fail if it encounters modified files. Prior to 1.9 the default was C(true)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "in_place", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If the directory exists, then the working copy will be checked-out over-the-top using svn checkout --force; if force is specified then existing files with different content are reverted."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "password", "type": "str", "elements": "", "default": null, "required": false, "description": ["C(--password) parameter passed to svn when svn is less than version 1.10.0. This is not secure and the password will be leaked to argv.", "C(--password-from-stdin) parameter when svn is greater or equal to version 1.10.0."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "repo", "type": "str", "elements": "", "default": null, "required": true, "description": ["The subversion URL to the repository."], "choices": null, "aliases": ["name", "repository"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "revision", "type": "str", "elements": "", "default": "HEAD", "required": false, "description": ["Specific revision to checkout."], "choices": null, "aliases": ["rev", "version"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "switch", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["If C(false), do not call svn switch before update."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "update", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["If C(false), do not retrieve new revisions from the origin repository."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "username", "type": "str", "elements": "", "default": null, "required": false, "description": ["C(--username) parameter passed to svn."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate_certs", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If C(false), passes the C(--trust-server-cert) flag to svn.", "If C(true), does not pass the flag."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/subversion.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.systemd", "name": "systemd", "fqcn": "ansible.builtin.systemd", "local_key": "module module:lib/ansible/modules/systemd.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Ansible Core Team\ncollection: ansible.builtin\ndescription:\n- Controls systemd units (services, timers, and so on) on remote hosts.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/systemd.py\nhas_action: false\nmodule: systemd_service\nnotes:\n- Since 2.4, one of the following options is required C(state), C(enabled), C(masked),\n  C(daemon_reload), (C(daemon_reexec) since 2.8), and all except C(daemon_reload)\n  and (C(daemon_reexec) since 2.8) also require C(name).\n- Before 2.4 you always required C(name).\n- Globs are not supported in name, i.e C(postgres*.service).\n- The service names might vary by specific OS/distribution\noptions:\n  daemon_reexec:\n    aliases:\n    - daemon-reexec\n    default: false\n    description:\n    - Run daemon_reexec command before doing any other operations, the systemd manager\n      will serialize the manager state.\n    type: bool\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  daemon_reload:\n    aliases:\n    - daemon-reload\n    default: false\n    description:\n    - Run daemon-reload before doing any other operations, to make sure systemd has\n      read any changes.\n    - When set to C(true), runs daemon-reload even if the module does not start or\n      stop anything.\n    type: bool\n  enabled:\n    description:\n    - Whether the unit should start on boot. B(At least one of state and enabled are\n      required.)\n    type: bool\n  force:\n    description:\n    - Whether to override existing symlinks.\n    type: bool\n    version_added: 2.6\n    version_added_collection: ansible.builtin\n  masked:\n    description:\n    - Whether the unit should be masked or not, a masked unit is impossible to start.\n    type: bool\n  name:\n    aliases:\n    - service\n    - unit\n    description:\n    - Name of the unit. This parameter takes the name of exactly one unit to work\n      with.\n    - When no extension is given, it is implied to a C(.service) as systemd.\n    - When using in a chroot environment you always need to specify the name of the\n      unit with the extension. For example, C(crond.service).\n    type: str\n  no_block:\n    default: false\n    description:\n    - Do not synchronously wait for the requested operation to finish. Enqueued job\n      will continue without Ansible blocking on its completion.\n    type: bool\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  scope:\n    choices:\n    - system\n    - user\n    - global\n    default: system\n    description:\n    - Run systemctl within a given service manager scope, either as the default system\n      scope C(system), the current user's scope C(user), or the scope of all users\n      C(global).\n    - For systemd to work with 'user', the executing user must have its own instance\n      of dbus started and accessible (systemd requirement).\n    - 'The user dbus process is normally started during normal login, but not during\n      the run of Ansible tasks. Otherwise you will probably get a ''Failed to connect\n      to bus: no such file or directory'' error.'\n    - The user must have access, normally given via setting the C(XDG_RUNTIME_DIR)\n      variable, see example below.\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  state:\n    choices:\n    - reloaded\n    - restarted\n    - started\n    - stopped\n    description:\n    - C(started)/C(stopped) are idempotent actions that will not run commands unless\n      necessary. C(restarted) will always bounce the unit. C(reloaded) will always\n      reload.\n    type: str\nrequirements:\n- A system managed by systemd.\nshort_description: Manage systemd units\nversion_added: '2.2'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Make sure a service unit is running\n  ansible.builtin.systemd:\n    state: started\n    name: httpd\n\n- name: Stop service cron on debian, if running\n  ansible.builtin.systemd:\n    name: cron\n    state: stopped\n\n- name: Restart service cron on centos, in all cases, also issue daemon-reload to pick up config changes\n  ansible.builtin.systemd:\n    state: restarted\n    daemon_reload: true\n    name: crond\n\n- name: Reload service httpd, in all cases\n  ansible.builtin.systemd:\n    name: httpd.service\n    state: reloaded\n\n- name: Enable service httpd and ensure it is not masked\n  ansible.builtin.systemd:\n    name: httpd\n    enabled: true\n    masked: no\n\n- name: Enable a timer unit for dnf-automatic\n  ansible.builtin.systemd:\n    name: dnf-automatic.timer\n    state: started\n    enabled: true\n\n- name: Just force systemd to reread configs (2.4 and above)\n  ansible.builtin.systemd:\n    daemon_reload: true\n\n- name: Just force systemd to re-execute itself (2.8 and above)\n  ansible.builtin.systemd:\n    daemon_reexec: true\n\n- name: Run a user service when XDG_RUNTIME_DIR is not set on remote login\n  ansible.builtin.systemd:\n    name: myservice\n    state: started\n    scope: user\n  environment:\n    XDG_RUNTIME_DIR: \"/run/user/{{ myuid }}\"\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "daemon_reexec", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Run daemon_reexec command before doing any other operations, the systemd manager will serialize the manager state."], "choices": null, "aliases": ["daemon-reexec"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "daemon_reload", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Run daemon-reload before doing any other operations, to make sure systemd has read any changes.", "When set to C(true), runs daemon-reload even if the module does not start or stop anything."], "choices": null, "aliases": ["daemon-reload"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "enabled", "type": "bool", "elements": "", "default": null, "required": false, "description": ["Whether the unit should start on boot. B(At least one of state and enabled are required.)"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "force", "type": "bool", "elements": "", "default": null, "required": false, "description": ["Whether to override existing symlinks."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "masked", "type": "bool", "elements": "", "default": null, "required": false, "description": ["Whether the unit should be masked or not, a masked unit is impossible to start."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the unit. This parameter takes the name of exactly one unit to work with.", "When no extension is given, it is implied to a C(.service) as systemd.", "When using in a chroot environment you always need to specify the name of the unit with the extension. For example, C(crond.service)."], "choices": null, "aliases": ["service", "unit"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "no_block", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Do not synchronously wait for the requested operation to finish. Enqueued job will continue without Ansible blocking on its completion."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "scope", "type": "str", "elements": "", "default": "system", "required": false, "description": ["Run systemctl within a given service manager scope, either as the default system scope C(system), the current user's scope C(user), or the scope of all users C(global).", "For systemd to work with 'user', the executing user must have its own instance of dbus started and accessible (systemd requirement).", "The user dbus process is normally started during normal login, but not during the run of Ansible tasks. Otherwise you will probably get a 'Failed to connect to bus: no such file or directory' error.", "The user must have access, normally given via setting the C(XDG_RUNTIME_DIR) variable, see example below."], "choices": ["system", "user", "global"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": null, "required": false, "description": ["C(started)/C(stopped) are idempotent actions that will not run commands unless necessary. C(restarted) will always bounce the unit. C(reloaded) will always reload."], "choices": ["reloaded", "restarted", "started", "stopped"], "aliases": null}], "defined_in": "lib/ansible/modules/systemd.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.systemd_service", "name": "systemd_service", "fqcn": "ansible.builtin.systemd_service", "local_key": "module module:lib/ansible/modules/systemd_service.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Ansible Core Team\ncollection: ansible.builtin\ndescription:\n- Controls systemd units (services, timers, and so on) on remote hosts.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/systemd_service.py\nhas_action: false\nmodule: systemd_service\nnotes:\n- Since 2.4, one of the following options is required C(state), C(enabled), C(masked),\n  C(daemon_reload), (C(daemon_reexec) since 2.8), and all except C(daemon_reload)\n  and (C(daemon_reexec) since 2.8) also require C(name).\n- Before 2.4 you always required C(name).\n- Globs are not supported in name, i.e C(postgres*.service).\n- The service names might vary by specific OS/distribution\noptions:\n  daemon_reexec:\n    aliases:\n    - daemon-reexec\n    default: false\n    description:\n    - Run daemon_reexec command before doing any other operations, the systemd manager\n      will serialize the manager state.\n    type: bool\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  daemon_reload:\n    aliases:\n    - daemon-reload\n    default: false\n    description:\n    - Run daemon-reload before doing any other operations, to make sure systemd has\n      read any changes.\n    - When set to C(true), runs daemon-reload even if the module does not start or\n      stop anything.\n    type: bool\n  enabled:\n    description:\n    - Whether the unit should start on boot. B(At least one of state and enabled are\n      required.)\n    type: bool\n  force:\n    description:\n    - Whether to override existing symlinks.\n    type: bool\n    version_added: 2.6\n    version_added_collection: ansible.builtin\n  masked:\n    description:\n    - Whether the unit should be masked or not, a masked unit is impossible to start.\n    type: bool\n  name:\n    aliases:\n    - service\n    - unit\n    description:\n    - Name of the unit. This parameter takes the name of exactly one unit to work\n      with.\n    - When no extension is given, it is implied to a C(.service) as systemd.\n    - When using in a chroot environment you always need to specify the name of the\n      unit with the extension. For example, C(crond.service).\n    type: str\n  no_block:\n    default: false\n    description:\n    - Do not synchronously wait for the requested operation to finish. Enqueued job\n      will continue without Ansible blocking on its completion.\n    type: bool\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  scope:\n    choices:\n    - system\n    - user\n    - global\n    default: system\n    description:\n    - Run systemctl within a given service manager scope, either as the default system\n      scope C(system), the current user's scope C(user), or the scope of all users\n      C(global).\n    - For systemd to work with 'user', the executing user must have its own instance\n      of dbus started and accessible (systemd requirement).\n    - 'The user dbus process is normally started during normal login, but not during\n      the run of Ansible tasks. Otherwise you will probably get a ''Failed to connect\n      to bus: no such file or directory'' error.'\n    - The user must have access, normally given via setting the C(XDG_RUNTIME_DIR)\n      variable, see example below.\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  state:\n    choices:\n    - reloaded\n    - restarted\n    - started\n    - stopped\n    description:\n    - C(started)/C(stopped) are idempotent actions that will not run commands unless\n      necessary. C(restarted) will always bounce the unit. C(reloaded) will always\n      reload.\n    type: str\nrequirements:\n- A system managed by systemd.\nshort_description: Manage systemd units\nversion_added: '2.2'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Make sure a service unit is running\n  ansible.builtin.systemd:\n    state: started\n    name: httpd\n\n- name: Stop service cron on debian, if running\n  ansible.builtin.systemd:\n    name: cron\n    state: stopped\n\n- name: Restart service cron on centos, in all cases, also issue daemon-reload to pick up config changes\n  ansible.builtin.systemd:\n    state: restarted\n    daemon_reload: true\n    name: crond\n\n- name: Reload service httpd, in all cases\n  ansible.builtin.systemd:\n    name: httpd.service\n    state: reloaded\n\n- name: Enable service httpd and ensure it is not masked\n  ansible.builtin.systemd:\n    name: httpd\n    enabled: true\n    masked: no\n\n- name: Enable a timer unit for dnf-automatic\n  ansible.builtin.systemd:\n    name: dnf-automatic.timer\n    state: started\n    enabled: true\n\n- name: Just force systemd to reread configs (2.4 and above)\n  ansible.builtin.systemd:\n    daemon_reload: true\n\n- name: Just force systemd to re-execute itself (2.8 and above)\n  ansible.builtin.systemd:\n    daemon_reexec: true\n\n- name: Run a user service when XDG_RUNTIME_DIR is not set on remote login\n  ansible.builtin.systemd:\n    name: myservice\n    state: started\n    scope: user\n  environment:\n    XDG_RUNTIME_DIR: \"/run/user/{{ myuid }}\"\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "daemon_reexec", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Run daemon_reexec command before doing any other operations, the systemd manager will serialize the manager state."], "choices": null, "aliases": ["daemon-reexec"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "daemon_reload", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Run daemon-reload before doing any other operations, to make sure systemd has read any changes.", "When set to C(true), runs daemon-reload even if the module does not start or stop anything."], "choices": null, "aliases": ["daemon-reload"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "enabled", "type": "bool", "elements": "", "default": null, "required": false, "description": ["Whether the unit should start on boot. B(At least one of state and enabled are required.)"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "force", "type": "bool", "elements": "", "default": null, "required": false, "description": ["Whether to override existing symlinks."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "masked", "type": "bool", "elements": "", "default": null, "required": false, "description": ["Whether the unit should be masked or not, a masked unit is impossible to start."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the unit. This parameter takes the name of exactly one unit to work with.", "When no extension is given, it is implied to a C(.service) as systemd.", "When using in a chroot environment you always need to specify the name of the unit with the extension. For example, C(crond.service)."], "choices": null, "aliases": ["service", "unit"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "no_block", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Do not synchronously wait for the requested operation to finish. Enqueued job will continue without Ansible blocking on its completion."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "scope", "type": "str", "elements": "", "default": "system", "required": false, "description": ["Run systemctl within a given service manager scope, either as the default system scope C(system), the current user's scope C(user), or the scope of all users C(global).", "For systemd to work with 'user', the executing user must have its own instance of dbus started and accessible (systemd requirement).", "The user dbus process is normally started during normal login, but not during the run of Ansible tasks. Otherwise you will probably get a 'Failed to connect to bus: no such file or directory' error.", "The user must have access, normally given via setting the C(XDG_RUNTIME_DIR) variable, see example below."], "choices": ["system", "user", "global"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": null, "required": false, "description": ["C(started)/C(stopped) are idempotent actions that will not run commands unless necessary. C(restarted) will always bounce the unit. C(reloaded) will always reload."], "choices": ["reloaded", "restarted", "started", "stopped"], "aliases": null}], "defined_in": "lib/ansible/modules/systemd_service.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.sysvinit", "name": "sysvinit", "fqcn": "ansible.builtin.sysvinit", "local_key": "module module:lib/ansible/modules/sysvinit.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Ansible Core Team\ncollection: ansible.builtin\ndescription:\n- Controls services on target hosts that use the SysV init system.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/sysvinit.py\nhas_action: false\nmodule: sysvinit\nnotes:\n- One option other than name is required.\n- The service names might vary by specific OS/distribution\noptions:\n  arguments:\n    aliases:\n    - args\n    description:\n    - Additional arguments provided on the command line that some init scripts accept.\n    type: str\n  daemonize:\n    default: false\n    description:\n    - Have the module daemonize as the service itself might not do so properly.\n    - This is useful with badly written init scripts or daemons, which commonly manifests\n      as the task hanging as it is still holding the tty or the service dying when\n      the task is over as the connection closes the session.\n    type: bool\n  enabled:\n    description:\n    - Whether the service should start on boot. B(At least one of state and enabled\n      are required.)\n    type: bool\n  name:\n    aliases:\n    - service\n    description:\n    - Name of the service.\n    required: true\n    type: str\n  pattern:\n    description:\n    - A substring to look for as would be found in the output of the I(ps) command\n      as a stand-in for a status result.\n    - If the string is found, the service will be assumed to be running.\n    - This option is mainly for use with init scripts that don't support the 'status'\n      option.\n    type: str\n  runlevels:\n    description:\n    - The runlevels this script should be enabled/disabled from.\n    - Use this to override the defaults set by the package or init script itself.\n    elements: str\n    type: list\n  sleep:\n    default: 1\n    description:\n    - If the service is being C(restarted) or C(reloaded) then sleep this many seconds\n      between the stop and start command. This helps to workaround badly behaving\n      services.\n    type: int\n  state:\n    choices:\n    - started\n    - stopped\n    - restarted\n    - reloaded\n    description:\n    - C(started)/C(stopped) are idempotent actions that will not run commands unless\n      necessary. Not all init scripts support C(restarted) nor C(reloaded) natively,\n      so these will both trigger a stop and start as needed.\n    type: str\nrequirements:\n- That the service managed has a corresponding init script.\nshort_description: Manage SysV services.\nversion_added: '2.6'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Make sure apache2 is started\n  ansible.builtin.sysvinit:\n      name: apache2\n      state: started\n      enabled: yes\n\n- name: Make sure apache2 is started on runlevels 3 and 5\n  ansible.builtin.sysvinit:\n      name: apache2\n      state: started\n      enabled: yes\n      runlevels:\n        - 3\n        - 5\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "arguments", "type": "str", "elements": "", "default": null, "required": false, "description": ["Additional arguments provided on the command line that some init scripts accept."], "choices": null, "aliases": ["args"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "daemonize", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Have the module daemonize as the service itself might not do so properly.", "This is useful with badly written init scripts or daemons, which commonly manifests as the task hanging as it is still holding the tty or the service dying when the task is over as the connection closes the session."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "enabled", "type": "bool", "elements": "", "default": null, "required": false, "description": ["Whether the service should start on boot. B(At least one of state and enabled are required.)"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": true, "description": ["Name of the service."], "choices": null, "aliases": ["service"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "pattern", "type": "str", "elements": "", "default": null, "required": false, "description": ["A substring to look for as would be found in the output of the I(ps) command as a stand-in for a status result.", "If the string is found, the service will be assumed to be running.", "This option is mainly for use with init scripts that don't support the 'status' option."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "runlevels", "type": "list", "elements": "str", "default": null, "required": false, "description": ["The runlevels this script should be enabled/disabled from.", "Use this to override the defaults set by the package or init script itself."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "sleep", "type": "int", "elements": "", "default": 1, "required": false, "description": ["If the service is being C(restarted) or C(reloaded) then sleep this many seconds between the stop and start command. This helps to workaround badly behaving services."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": null, "required": false, "description": ["C(started)/C(stopped) are idempotent actions that will not run commands unless necessary. Not all init scripts support C(restarted) nor C(reloaded) natively, so these will both trigger a stop and start as needed."], "choices": ["started", "stopped", "restarted", "reloaded"], "aliases": null}], "defined_in": "lib/ansible/modules/sysvinit.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.tempfile", "name": "tempfile", "fqcn": "ansible.builtin.tempfile", "local_key": "module module:lib/ansible/modules/tempfile.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Krzysztof Magosa (@krzysztof-magosa)\ncollection: ansible.builtin\ndescription:\n- The C(tempfile) module creates temporary files and directories. C(mktemp) command\n  takes different parameters on various systems, this module helps to avoid troubles\n  related to that. Files/directories created by module are accessible only by creator.\n  In case you need to make them world-accessible you need to use M(ansible.builtin.file)\n  module.\n- For Windows targets, use the M(ansible.windows.win_tempfile) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/tempfile.py\nhas_action: false\nmodule: tempfile\noptions:\n  path:\n    description:\n    - Location where temporary file or directory should be created.\n    - If path is not specified, the default system temporary directory will be used.\n    type: path\n  prefix:\n    default: ansible.\n    description:\n    - Prefix of file/directory name created by module.\n    type: str\n  state:\n    choices:\n    - directory\n    - file\n    default: file\n    description:\n    - Whether to create file or directory.\n    type: str\n  suffix:\n    default: ''\n    description:\n    - Suffix of file/directory name created by module.\n    type: str\nseealso:\n- module: ansible.builtin.file\n- module: ansible.windows.win_tempfile\nshort_description: Creates temporary files and directories\nversion_added: '2.3'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Create temporary build directory\n  ansible.builtin.tempfile:\n    state: directory\n    suffix: build\n\n- name: Create temporary file\n  ansible.builtin.tempfile:\n    state: file\n    suffix: temp\n  register: tempfile_1\n\n- name: Use the registered var and the file module to remove the temporary file\n  ansible.builtin.file:\n    path: \"{{ tempfile_1.path }}\"\n    state: absent\n  when: tempfile_1.path is defined\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "path", "type": "str", "elements": "", "default": null, "required": false, "description": ["Location where temporary file or directory should be created.", "If path is not specified, the default system temporary directory will be used."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "prefix", "type": "str", "elements": "", "default": "ansible.", "required": false, "description": ["Prefix of file/directory name created by module."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "file", "required": false, "description": ["Whether to create file or directory."], "choices": ["directory", "file"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "suffix", "type": "str", "elements": "", "default": "", "required": false, "description": ["Suffix of file/directory name created by module."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/tempfile.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.template", "name": "template", "fqcn": "ansible.builtin.template", "local_key": "module module:lib/ansible/modules/template.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\n  safe_file_operations:\n    description: Uses Ansible's strict file operation functions to ensure proper permissions\n      and avoid data corruption\n    support: full\n  vault:\n    description: Can automatically decrypt Ansible vaulted files\n    support: full\nauthor:\n- Ansible Core Team\n- Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- Templates are processed by the L(Jinja2 templating language,http://jinja.pocoo.org/docs/).\n- Documentation on the template formatting can be found in the L(Template Designer\n  Documentation,http://jinja.pocoo.org/docs/templates/).\n- Additional variables listed below can be used in templates.\n- C(ansible_managed) (configurable via the C(defaults) section of C(ansible.cfg))\n  contains a string which can be used to describe the template name, host, modification\n  time of the template file and the owner uid.\n- C(template_host) contains the node name of the template's machine.\n- C(template_uid) is the numeric user id of the owner.\n- C(template_path) is the path of the template.\n- C(template_fullpath) is the absolute path of the template.\n- C(template_destpath) is the path of the template on the remote system (added in\n  2.8).\n- C(template_run_date) is the date that the template was rendered.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/template.py\nhas_action: true\nmodule: template\nnotes:\n- For Windows you can use M(ansible.windows.win_template) which uses C(\\r\\n) as C(newline_sequence)\n  by default.\n- The C(jinja2_native) setting has no effect. Native types are never used in the C(template)\n  module which is by design used for generating text files. For working with templates\n  and utilizing Jinja2 native types see the C(jinja2_native) parameter of the C(template\n  lookup).\n- Including a string that uses a date in the template will result in the template\n  being marked 'changed' each time.\n- Since Ansible 0.9, templates are loaded with C(trim_blocks=True).\n- 'Also, you can override jinja2 settings by adding a special header to template file.\n  i.e. C(#jinja2:variable_start_string:''[%'', variable_end_string:''%]'', trim_blocks:\n  False) which changes the variable interpolation markers to C([% var %]) instead\n  of C({{ var }}). This is the best way to prevent evaluation of things that look\n  like, but should not be Jinja2.\n\n  '\n- To find Byte Order Marks in files, use C(Format-Hex <file> -Count 16) on Windows,\n  and use C(od -a -t x1 -N 16 <file>) on Linux.\noptions:\n  attributes:\n    aliases:\n    - attr\n    description:\n    - The attributes the resulting filesystem object should have.\n    - To get supported flags look at the man page for I(chattr) on the target system.\n    - This string should contain the attributes in the same order as the one displayed\n      by I(lsattr).\n    - The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need\n      to be included in the string.\n    type: str\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  backup:\n    default: false\n    description:\n    - Create a backup file including the timestamp information so you can get the\n      original file back if you somehow clobbered it incorrectly.\n    type: bool\n  block_end_string:\n    default: '%}'\n    description:\n    - The string marking the end of a block.\n    type: str\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  block_start_string:\n    default: '{%'\n    description:\n    - The string marking the beginning of a block.\n    type: str\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  comment_end_string:\n    description:\n    - The string marking the end of a comment statement.\n    type: str\n    version_added: '2.12'\n    version_added_collection: ansible.builtin\n  comment_start_string:\n    description:\n    - The string marking the beginning of a comment statement.\n    type: str\n    version_added: '2.12'\n    version_added_collection: ansible.builtin\n  dest:\n    description:\n    - Location to render the template to on the remote machine.\n    required: true\n    type: path\n  follow:\n    default: false\n    description:\n    - Determine whether symbolic links should be followed.\n    - When set to C(true) symbolic links will be followed, if they exist.\n    - When set to C(false) symbolic links will not be followed.\n    - Previous to Ansible 2.4, this was hardcoded as C(true).\n    type: bool\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  force:\n    default: true\n    description:\n    - Determine when the file is being transferred if the destination already exists.\n    - When set to C(yes), replace the remote file when contents are different than\n      the source.\n    - When set to C(no), the file will only be transferred if the destination does\n      not exist.\n    type: bool\n  group:\n    description:\n    - Name of the group that should own the filesystem object, as would be fed to\n      I(chown).\n    - When left unspecified, it uses the current group of the current user unless\n      you are root, in which case it can preserve the previous ownership.\n    type: str\n  lstrip_blocks:\n    default: false\n    description:\n    - Determine when leading spaces and tabs should be stripped.\n    - When set to C(yes) leading spaces and tabs are stripped from the start of a\n      line to a block.\n    type: bool\n    version_added: '2.6'\n    version_added_collection: ansible.builtin\n  mode:\n    description:\n    - The permissions the resulting filesystem object should have.\n    - For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers.\n      You must either add a leading zero so that Ansible's YAML parser knows it is\n      an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777'))\n      so Ansible receives a string and can do its own conversion from string into\n      number.\n    - Giving Ansible a number without following one of these rules will end up with\n      a decimal number which will have unexpected results.\n    - As of Ansible 1.8, the mode may be specified as a symbolic mode (for example,\n      C(u+rwx) or C(u=rw,g=r,o=r)).\n    - If C(mode) is not specified and the destination filesystem object B(does not)\n      exist, the default C(umask) on the system will be used when setting the mode\n      for the newly created filesystem object.\n    - If C(mode) is not specified and the destination filesystem object B(does) exist,\n      the mode of the existing filesystem object will be used.\n    - Specifying C(mode) is the best way to ensure filesystem objects are created\n      with the correct permissions. See CVE-2020-1736 for further details.\n    type: raw\n  newline_sequence:\n    choices:\n    - \\n\n    - \\r\n    - \\r\\n\n    default: \\n\n    description:\n    - Specify the newline sequence to use for templating files.\n    type: str\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  output_encoding:\n    default: utf-8\n    description:\n    - Overrides the encoding used to write the template file defined by C(dest).\n    - It defaults to C(utf-8), but any encoding supported by python can be used.\n    - The source template file must always be encoded using C(utf-8), for homogeneity.\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  owner:\n    description:\n    - Name of the user that should own the filesystem object, as would be fed to I(chown).\n    - When left unspecified, it uses the current user unless you are root, in which\n      case it can preserve the previous ownership.\n    - Specifying a numeric username will be assumed to be a user ID and not a username.\n      Avoid numeric usernames to avoid this confusion.\n    type: str\n  selevel:\n    description:\n    - The level part of the SELinux filesystem object context.\n    - This is the MLS/MCS attribute, sometimes known as the C(range).\n    - When set to C(_default), it will use the C(level) portion of the policy if available.\n    type: str\n  serole:\n    description:\n    - The role part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(role) portion of the policy if available.\n    type: str\n  setype:\n    description:\n    - The type part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(type) portion of the policy if available.\n    type: str\n  seuser:\n    description:\n    - The user part of the SELinux filesystem object context.\n    - By default it uses the C(system) policy, where applicable.\n    - When set to C(_default), it will use the C(user) portion of the policy if available.\n    type: str\n  src:\n    description:\n    - Path of a Jinja2 formatted template on the Ansible controller.\n    - This can be a relative or an absolute path.\n    - The file must be encoded with C(utf-8) but I(output_encoding) can be used to\n      control the encoding of the output template.\n    required: true\n    type: path\n  trim_blocks:\n    default: true\n    description:\n    - Determine when newlines should be removed from blocks.\n    - When set to C(yes) the first newline after a block is removed (block, not variable\n      tag!).\n    type: bool\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  unsafe_writes:\n    default: false\n    description:\n    - Influence when to use atomic operation to prevent data corruption or inconsistent\n      reads from the target filesystem object.\n    - By default this module uses atomic operations to prevent data corruption or\n      inconsistent reads from the target filesystem objects, but sometimes systems\n      are configured or just broken in ways that prevent this. One example is docker\n      mounted filesystem objects, which cannot be updated atomically from inside the\n      container and can only be written in an unsafe manner.\n    - This option allows Ansible to fall back to unsafe methods of updating filesystem\n      objects when atomic operations fail (however, it doesn't force Ansible to perform\n      unsafe writes).\n    - IMPORTANT! Unsafe writes are subject to race conditions and can lead to data\n      corruption.\n    type: bool\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  validate:\n    description:\n    - The validation command to run before copying the updated file into the final\n      destination.\n    - A temporary file path is used to validate, passed in through '%s' which must\n      be present as in the examples below.\n    - Also, the command is passed securely so shell features such as expansion and\n      pipes will not work.\n    - For an example on how to handle more complex validation than what this option\n      provides, see R(handling complex validation,complex_configuration_validation).\n    type: str\n  variable_end_string:\n    default: '}}'\n    description:\n    - The string marking the end of a print statement.\n    type: str\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  variable_start_string:\n    default: '{{'\n    description:\n    - The string marking the beginning of a print statement.\n    type: str\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\nseealso:\n- module: ansible.builtin.copy\n- module: ansible.windows.win_copy\n- module: ansible.windows.win_template\nshort_description: Template a file out to a target host\nversion_added: historical\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Template a file to /etc/file.conf\n  ansible.builtin.template:\n    src: /mytemplates/foo.j2\n    dest: /etc/file.conf\n    owner: bin\n    group: wheel\n    mode: '0644'\n\n- name: Template a file, using symbolic modes (equivalent to 0644)\n  ansible.builtin.template:\n    src: /mytemplates/foo.j2\n    dest: /etc/file.conf\n    owner: bin\n    group: wheel\n    mode: u=rw,g=r,o=r\n\n- name: Copy a version of named.conf that is dependent on the OS. setype obtained by doing ls -Z /etc/named.conf on original file\n  ansible.builtin.template:\n    src: named.conf_{{ ansible_os_family }}.j2\n    dest: /etc/named.conf\n    group: named\n    setype: named_conf_t\n    mode: 0640\n\n- name: Create a DOS-style text file from a template\n  ansible.builtin.template:\n    src: config.ini.j2\n    dest: /share/windows/config.ini\n    newline_sequence: '\\r\\n'\n\n- name: Copy a new sudoers file into place, after passing validation with visudo\n  ansible.builtin.template:\n    src: /mine/sudoers\n    dest: /etc/sudoers\n    validate: /usr/sbin/visudo -cf %s\n\n- name: Update sshd configuration safely, avoid locking yourself out\n  ansible.builtin.template:\n    src: etc/ssh/sshd_config.j2\n    dest: /etc/ssh/sshd_config\n    owner: root\n    group: root\n    mode: '0600'\n    validate: /usr/sbin/sshd -t -f %s\n    backup: yes\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "attributes", "type": "str", "elements": "", "default": null, "required": false, "description": ["The attributes the resulting filesystem object should have.", "To get supported flags look at the man page for I(chattr) on the target system.", "This string should contain the attributes in the same order as the one displayed by I(lsattr).", "The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need to be included in the string."], "choices": null, "aliases": ["attr"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "backup", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "block_end_string", "type": "str", "elements": "", "default": "%}", "required": false, "description": ["The string marking the end of a block."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "block_start_string", "type": "str", "elements": "", "default": "{%", "required": false, "description": ["The string marking the beginning of a block."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "comment_end_string", "type": "str", "elements": "", "default": null, "required": false, "description": ["The string marking the end of a comment statement."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "comment_start_string", "type": "str", "elements": "", "default": null, "required": false, "description": ["The string marking the beginning of a comment statement."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "dest", "type": "str", "elements": "", "default": null, "required": true, "description": ["Location to render the template to on the remote machine."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "follow", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Determine whether symbolic links should be followed.", "When set to C(true) symbolic links will be followed, if they exist.", "When set to C(false) symbolic links will not be followed.", "Previous to Ansible 2.4, this was hardcoded as C(true)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "force", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Determine when the file is being transferred if the destination already exists.", "When set to C(yes), replace the remote file when contents are different than the source.", "When set to C(no), the file will only be transferred if the destination does not exist."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "group", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the group that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current group of the current user unless you are root, in which case it can preserve the previous ownership."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "lstrip_blocks", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Determine when leading spaces and tabs should be stripped.", "When set to C(yes) leading spaces and tabs are stripped from the start of a line to a block."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mode", "type": "any", "elements": "", "default": null, "required": false, "description": ["The permissions the resulting filesystem object should have.", "For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777')) so Ansible receives a string and can do its own conversion from string into number.", "Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.", "As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r)).", "If C(mode) is not specified and the destination filesystem object B(does not) exist, the default C(umask) on the system will be used when setting the mode for the newly created filesystem object.", "If C(mode) is not specified and the destination filesystem object B(does) exist, the mode of the existing filesystem object will be used.", "Specifying C(mode) is the best way to ensure filesystem objects are created with the correct permissions. See CVE-2020-1736 for further details."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "newline_sequence", "type": "str", "elements": "", "default": "\\n", "required": false, "description": ["Specify the newline sequence to use for templating files."], "choices": ["\\n", "\\r", "\\r\\n"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "output_encoding", "type": "str", "elements": "", "default": "utf-8", "required": false, "description": ["Overrides the encoding used to write the template file defined by C(dest).", "It defaults to C(utf-8), but any encoding supported by python can be used.", "The source template file must always be encoded using C(utf-8), for homogeneity."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "owner", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the user that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current user unless you are root, in which case it can preserve the previous ownership.", "Specifying a numeric username will be assumed to be a user ID and not a username. Avoid numeric usernames to avoid this confusion."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "selevel", "type": "str", "elements": "", "default": null, "required": false, "description": ["The level part of the SELinux filesystem object context.", "This is the MLS/MCS attribute, sometimes known as the C(range).", "When set to C(_default), it will use the C(level) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "serole", "type": "str", "elements": "", "default": null, "required": false, "description": ["The role part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(role) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "setype", "type": "str", "elements": "", "default": null, "required": false, "description": ["The type part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(type) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "seuser", "type": "str", "elements": "", "default": null, "required": false, "description": ["The user part of the SELinux filesystem object context.", "By default it uses the C(system) policy, where applicable.", "When set to C(_default), it will use the C(user) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "src", "type": "str", "elements": "", "default": null, "required": true, "description": ["Path of a Jinja2 formatted template on the Ansible controller.", "This can be a relative or an absolute path.", "The file must be encoded with C(utf-8) but I(output_encoding) can be used to control the encoding of the output template."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "trim_blocks", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Determine when newlines should be removed from blocks.", "When set to C(yes) the first newline after a block is removed (block, not variable tag!)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unsafe_writes", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object.", "By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target filesystem objects, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted filesystem objects, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.", "This option allows Ansible to fall back to unsafe methods of updating filesystem objects when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).", "IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate", "type": "str", "elements": "", "default": null, "required": false, "description": ["The validation command to run before copying the updated file into the final destination.", "A temporary file path is used to validate, passed in through '%s' which must be present as in the examples below.", "Also, the command is passed securely so shell features such as expansion and pipes will not work.", "For an example on how to handle more complex validation than what this option provides, see R(handling complex validation,complex_configuration_validation)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "variable_end_string", "type": "str", "elements": "", "default": "}}", "required": false, "description": ["The string marking the end of a print statement."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "variable_start_string", "type": "str", "elements": "", "default": "{{", "required": false, "description": ["The string marking the beginning of a print statement."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/template.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.unarchive", "name": "unarchive", "fqcn": "ansible.builtin.unarchive", "local_key": "module module:lib/ansible/modules/unarchive.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    details: Not supported for gzipped tar files.\n    support: partial\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    details: Uses gtar's C(--diff) arg to calculate if changed or not. If this C(arg)\n      is not supported, it will always unpack the archive.\n    support: partial\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\n  safe_file_operations:\n    description: Uses Ansible's strict file operation functions to ensure proper permissions\n      and avoid data corruption\n    support: none\n  vault:\n    description: Can automatically decrypt Ansible vaulted files\n    support: full\nauthor: Michael DeHaan\ncollection: ansible.builtin\ndescription:\n- The C(unarchive) module unpacks an archive. It will not unpack a compressed file\n  that does not contain an archive.\n- By default, it will copy the source file from the local system to the target before\n  unpacking.\n- Set C(remote_src=yes) to unpack an archive which already exists on the target.\n- If checksum validation is desired, use M(ansible.builtin.get_url) or M(ansible.builtin.uri)\n  instead to fetch the file and set C(remote_src=yes).\n- For Windows targets, use the M(community.windows.win_unzip) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/unarchive.py\nhas_action: true\nmodule: unarchive\nnotes:\n- Requires C(zipinfo) and C(gtar)/C(unzip) command on target host.\n- Requires C(zstd) command on target host to expand I(.tar.zst) files.\n- Can handle I(.zip) files using C(unzip) as well as I(.tar), I(.tar.gz), I(.tar.bz2),\n  I(.tar.xz), and I(.tar.zst) files using C(gtar).\n- Does not handle I(.gz) files, I(.bz2) files, I(.xz), or I(.zst) files that do not\n  contain a I(.tar) archive.\n- Existing files/directories in the destination which are not in the archive are not\n  touched. This is the same behavior as a normal archive extraction.\n- Existing files/directories in the destination which are not in the archive are ignored\n  for purposes of deciding if the archive should be unpacked or not.\noptions:\n  attributes:\n    aliases:\n    - attr\n    description:\n    - The attributes the resulting filesystem object should have.\n    - To get supported flags look at the man page for I(chattr) on the target system.\n    - This string should contain the attributes in the same order as the one displayed\n      by I(lsattr).\n    - The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need\n      to be included in the string.\n    type: str\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  copy:\n    default: true\n    description:\n    - If true, the file is copied from local controller to the managed (remote) node,\n      otherwise, the plugin will look for src archive on the managed machine.\n    - This option has been deprecated in favor of C(remote_src).\n    - This option is mutually exclusive with C(remote_src).\n    type: bool\n  creates:\n    description:\n    - If the specified absolute path (file or directory) already exists, this step\n      will B(not) be run.\n    - The specified absolute path (file or directory) must be below the base path\n      given with C(dest:).\n    type: path\n    version_added: '1.6'\n    version_added_collection: ansible.builtin\n  decrypt:\n    default: true\n    description:\n    - This option controls the autodecryption of source files using vault.\n    type: bool\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  dest:\n    description:\n    - Remote absolute path where the archive should be unpacked.\n    - The given path must exist. Base directory is not created by this module.\n    required: true\n    type: path\n  exclude:\n    default: []\n    description:\n    - List the directory and file entries that you would like to exclude from the\n      unarchive action.\n    - Mutually exclusive with C(include).\n    elements: str\n    type: list\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  extra_opts:\n    default: ''\n    description:\n    - Specify additional options by passing in an array.\n    - Each space-separated command-line option should be a new element of the array.\n      See examples.\n    - Command-line options with multiple elements must use multiple lines in the array,\n      one for each element.\n    elements: str\n    type: list\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  group:\n    description:\n    - Name of the group that should own the filesystem object, as would be fed to\n      I(chown).\n    - When left unspecified, it uses the current group of the current user unless\n      you are root, in which case it can preserve the previous ownership.\n    type: str\n  include:\n    default: []\n    description:\n    - List of directory and file entries that you would like to extract from the archive.\n      If C(include) is not empty, only files listed here will be extracted.\n    - Mutually exclusive with C(exclude).\n    elements: str\n    type: list\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  io_buffer_size:\n    default: 65536\n    description:\n    - Size of the volatile memory buffer that is used for extracting files from the\n      archive in bytes.\n    type: int\n    version_added: '2.12'\n    version_added_collection: ansible.builtin\n  keep_newer:\n    default: false\n    description:\n    - Do not replace existing files that are newer than files from the archive.\n    type: bool\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  list_files:\n    default: false\n    description:\n    - If set to True, return the list of files that are contained in the tarball.\n    type: bool\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  mode:\n    description:\n    - The permissions the resulting filesystem object should have.\n    - For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers.\n      You must either add a leading zero so that Ansible's YAML parser knows it is\n      an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777'))\n      so Ansible receives a string and can do its own conversion from string into\n      number.\n    - Giving Ansible a number without following one of these rules will end up with\n      a decimal number which will have unexpected results.\n    - As of Ansible 1.8, the mode may be specified as a symbolic mode (for example,\n      C(u+rwx) or C(u=rw,g=r,o=r)).\n    - If C(mode) is not specified and the destination filesystem object B(does not)\n      exist, the default C(umask) on the system will be used when setting the mode\n      for the newly created filesystem object.\n    - If C(mode) is not specified and the destination filesystem object B(does) exist,\n      the mode of the existing filesystem object will be used.\n    - Specifying C(mode) is the best way to ensure filesystem objects are created\n      with the correct permissions. See CVE-2020-1736 for further details.\n    type: raw\n  owner:\n    description:\n    - Name of the user that should own the filesystem object, as would be fed to I(chown).\n    - When left unspecified, it uses the current user unless you are root, in which\n      case it can preserve the previous ownership.\n    - Specifying a numeric username will be assumed to be a user ID and not a username.\n      Avoid numeric usernames to avoid this confusion.\n    type: str\n  remote_src:\n    default: false\n    description:\n    - Set to C(true) to indicate the archived file is already on the remote system\n      and not local to the Ansible controller.\n    - This option is mutually exclusive with C(copy).\n    type: bool\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  selevel:\n    description:\n    - The level part of the SELinux filesystem object context.\n    - This is the MLS/MCS attribute, sometimes known as the C(range).\n    - When set to C(_default), it will use the C(level) portion of the policy if available.\n    type: str\n  serole:\n    description:\n    - The role part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(role) portion of the policy if available.\n    type: str\n  setype:\n    description:\n    - The type part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(type) portion of the policy if available.\n    type: str\n  seuser:\n    description:\n    - The user part of the SELinux filesystem object context.\n    - By default it uses the C(system) policy, where applicable.\n    - When set to C(_default), it will use the C(user) portion of the policy if available.\n    type: str\n  src:\n    description:\n    - If C(remote_src=no) (default), local path to archive file to copy to the target\n      server; can be absolute or relative. If C(remote_src=yes), path on the target\n      server to existing archive file to unpack.\n    - If C(remote_src=yes) and C(src) contains C(://), the remote machine will download\n      the file from the URL first. (version_added 2.0). This is only for simple cases,\n      for full download support use the M(ansible.builtin.get_url) module.\n    required: true\n    type: path\n  unsafe_writes:\n    default: false\n    description:\n    - Influence when to use atomic operation to prevent data corruption or inconsistent\n      reads from the target filesystem object.\n    - By default this module uses atomic operations to prevent data corruption or\n      inconsistent reads from the target filesystem objects, but sometimes systems\n      are configured or just broken in ways that prevent this. One example is docker\n      mounted filesystem objects, which cannot be updated atomically from inside the\n      container and can only be written in an unsafe manner.\n    - This option allows Ansible to fall back to unsafe methods of updating filesystem\n      objects when atomic operations fail (however, it doesn't force Ansible to perform\n      unsafe writes).\n    - IMPORTANT! Unsafe writes are subject to race conditions and can lead to data\n      corruption.\n    type: bool\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  validate_certs:\n    default: true\n    description:\n    - This only applies if using a https URL as the source of the file.\n    - This should only set to C(false) used on personally controlled sites using self-signed\n      certificate.\n    - Prior to 2.2 the code worked as if this was set to C(true).\n    type: bool\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\nseealso:\n- module: community.general.archive\n- module: community.general.iso_extract\n- module: community.windows.win_unzip\nshort_description: Unpacks an archive after (optionally) copying it from the local\n  machine\ntodo:\n- Re-implement tar support using native tarfile module.\n- Re-implement zip support using native zipfile module.\nversion_added: '1.4'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Extract foo.tgz into /var/lib/foo\n  ansible.builtin.unarchive:\n    src: foo.tgz\n    dest: /var/lib/foo\n\n- name: Unarchive a file that is already on the remote machine\n  ansible.builtin.unarchive:\n    src: /tmp/foo.zip\n    dest: /usr/local/bin\n    remote_src: yes\n\n- name: Unarchive a file that needs to be downloaded (added in 2.0)\n  ansible.builtin.unarchive:\n    src: https://example.com/example.zip\n    dest: /usr/local/bin\n    remote_src: yes\n\n- name: Unarchive a file with extra options\n  ansible.builtin.unarchive:\n    src: /tmp/foo.zip\n    dest: /usr/local/bin\n    extra_opts:\n    - --transform\n    - s/^xxx/yyy/\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "attributes", "type": "str", "elements": "", "default": null, "required": false, "description": ["The attributes the resulting filesystem object should have.", "To get supported flags look at the man page for I(chattr) on the target system.", "This string should contain the attributes in the same order as the one displayed by I(lsattr).", "The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need to be included in the string."], "choices": null, "aliases": ["attr"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "copy", "type": "bool", "elements": "", "default": true, "required": false, "description": ["If true, the file is copied from local controller to the managed (remote) node, otherwise, the plugin will look for src archive on the managed machine.", "This option has been deprecated in favor of C(remote_src).", "This option is mutually exclusive with C(remote_src)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "creates", "type": "str", "elements": "", "default": null, "required": false, "description": ["If the specified absolute path (file or directory) already exists, this step will B(not) be run.", "The specified absolute path (file or directory) must be below the base path given with C(dest:)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "decrypt", "type": "bool", "elements": "", "default": true, "required": false, "description": ["This option controls the autodecryption of source files using vault."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "dest", "type": "str", "elements": "", "default": null, "required": true, "description": ["Remote absolute path where the archive should be unpacked.", "The given path must exist. Base directory is not created by this module."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "exclude", "type": "list", "elements": "str", "default": [], "required": false, "description": ["List the directory and file entries that you would like to exclude from the unarchive action.", "Mutually exclusive with C(include)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "extra_opts", "type": "list", "elements": "str", "default": "", "required": false, "description": ["Specify additional options by passing in an array.", "Each space-separated command-line option should be a new element of the array. See examples.", "Command-line options with multiple elements must use multiple lines in the array, one for each element."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "group", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the group that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current group of the current user unless you are root, in which case it can preserve the previous ownership."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "include", "type": "list", "elements": "str", "default": [], "required": false, "description": ["List of directory and file entries that you would like to extract from the archive. If C(include) is not empty, only files listed here will be extracted.", "Mutually exclusive with C(exclude)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "io_buffer_size", "type": "int", "elements": "", "default": 65536, "required": false, "description": ["Size of the volatile memory buffer that is used for extracting files from the archive in bytes."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "keep_newer", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Do not replace existing files that are newer than files from the archive."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "list_files", "type": "bool", "elements": "", "default": false, "required": false, "description": ["If set to True, return the list of files that are contained in the tarball."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mode", "type": "any", "elements": "", "default": null, "required": false, "description": ["The permissions the resulting filesystem object should have.", "For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777')) so Ansible receives a string and can do its own conversion from string into number.", "Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.", "As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r)).", "If C(mode) is not specified and the destination filesystem object B(does not) exist, the default C(umask) on the system will be used when setting the mode for the newly created filesystem object.", "If C(mode) is not specified and the destination filesystem object B(does) exist, the mode of the existing filesystem object will be used.", "Specifying C(mode) is the best way to ensure filesystem objects are created with the correct permissions. See CVE-2020-1736 for further details."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "owner", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the user that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current user unless you are root, in which case it can preserve the previous ownership.", "Specifying a numeric username will be assumed to be a user ID and not a username. Avoid numeric usernames to avoid this confusion."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "remote_src", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Set to C(true) to indicate the archived file is already on the remote system and not local to the Ansible controller.", "This option is mutually exclusive with C(copy)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "selevel", "type": "str", "elements": "", "default": null, "required": false, "description": ["The level part of the SELinux filesystem object context.", "This is the MLS/MCS attribute, sometimes known as the C(range).", "When set to C(_default), it will use the C(level) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "serole", "type": "str", "elements": "", "default": null, "required": false, "description": ["The role part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(role) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "setype", "type": "str", "elements": "", "default": null, "required": false, "description": ["The type part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(type) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "seuser", "type": "str", "elements": "", "default": null, "required": false, "description": ["The user part of the SELinux filesystem object context.", "By default it uses the C(system) policy, where applicable.", "When set to C(_default), it will use the C(user) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "src", "type": "str", "elements": "", "default": null, "required": true, "description": ["If C(remote_src=no) (default), local path to archive file to copy to the target server; can be absolute or relative. If C(remote_src=yes), path on the target server to existing archive file to unpack.", "If C(remote_src=yes) and C(src) contains C(://), the remote machine will download the file from the URL first. (version_added 2.0). This is only for simple cases, for full download support use the M(ansible.builtin.get_url) module."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unsafe_writes", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object.", "By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target filesystem objects, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted filesystem objects, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.", "This option allows Ansible to fall back to unsafe methods of updating filesystem objects when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).", "IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate_certs", "type": "bool", "elements": "", "default": true, "required": false, "description": ["This only applies if using a https URL as the source of the file.", "This should only set to C(false) used on personally controlled sites using self-signed certificate.", "Prior to 2.2 the code worked as if this was set to C(true)."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/unarchive.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.uri", "name": "uri", "fqcn": "ansible.builtin.uri", "local_key": "module module:lib/ansible/modules/uri.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Romeo Theriault (@romeotheriault)\ncollection: ansible.builtin\ndescription:\n- Interacts with HTTP and HTTPS web services and supports Digest, Basic and WSSE HTTP\n  authentication mechanisms.\n- For Windows targets, use the M(ansible.windows.win_uri) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/uri.py\nhas_action: true\nmodule: uri\nnotes:\n- The dependency on httplib2 was removed in Ansible 2.1.\n- The module returns all the HTTP headers in lower-case.\n- For Windows targets, use the M(ansible.windows.win_uri) module instead.\noptions:\n  attributes:\n    aliases:\n    - attr\n    description:\n    - The attributes the resulting filesystem object should have.\n    - To get supported flags look at the man page for I(chattr) on the target system.\n    - This string should contain the attributes in the same order as the one displayed\n      by I(lsattr).\n    - The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need\n      to be included in the string.\n    type: str\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  body:\n    description:\n    - The body of the http request/response to the web service. If C(body_format)\n      is set to 'json' it will take an already formatted JSON string or convert a\n      data structure into JSON.\n    - If C(body_format) is set to 'form-urlencoded' it will convert a dictionary or\n      list of tuples into an 'application/x-www-form-urlencoded' string. (Added in\n      v2.7)\n    - If C(body_format) is set to 'form-multipart' it will convert a dictionary into\n      'multipart/form-multipart' body. (Added in v2.10)\n    type: raw\n  body_format:\n    choices:\n    - form-urlencoded\n    - json\n    - raw\n    - form-multipart\n    default: raw\n    description:\n    - The serialization format of the body. When set to C(json), C(form-multipart),\n      or C(form-urlencoded), encodes the body argument, if needed, and automatically\n      sets the Content-Type header accordingly.\n    - As of v2.3 it is possible to override the C(Content-Type) header, when set to\n      C(json) or C(form-urlencoded) via the I(headers) option.\n    - The 'Content-Type' header cannot be overridden when using C(form-multipart)\n    - C(form-urlencoded) was added in v2.7.\n    - C(form-multipart) was added in v2.10.\n    type: str\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  ca_path:\n    description:\n    - PEM formatted file that contains a CA certificate to be used for validation\n    type: path\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  ciphers:\n    description:\n    - SSL/TLS Ciphers to use for the request.\n    - When a list is provided, all ciphers are joined in order with C(:)\n    - See the L(OpenSSL Cipher List Format,https://www.openssl.org/docs/manmaster/man1/openssl-ciphers.html#CIPHER-LIST-FORMAT)\n      for more details.\n    - The available ciphers is dependent on the Python and OpenSSL/LibreSSL versions\n    elements: str\n    type: list\n    version_added: '2.14'\n    version_added_collection: ansible.builtin\n  client_cert:\n    description:\n    - PEM formatted certificate chain file to be used for SSL client authentication.\n    - This file can also include the key as well, and if the key is included, I(client_key)\n      is not required\n    type: path\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  client_key:\n    description:\n    - PEM formatted file that contains your private key to be used for SSL client\n      authentication.\n    - If I(client_cert) contains both the certificate and key, this option is not\n      required.\n    type: path\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  creates:\n    description:\n    - A filename, when it already exists, this step will not be run.\n    type: path\n  decompress:\n    default: true\n    description:\n    - Whether to attempt to decompress gzip content-encoded responses\n    type: bool\n    version_added: '2.14'\n    version_added_collection: ansible.builtin\n  dest:\n    description:\n    - A path of where to download the file to (if desired). If I(dest) is a directory,\n      the basename of the file on the remote server will be used.\n    type: path\n  follow_redirects:\n    choices:\n    - all\n    - 'no'\n    - none\n    - safe\n    - urllib2\n    - 'yes'\n    default: safe\n    description:\n    - Whether or not the URI module should follow redirects. C(all) will follow all\n      redirects. C(safe) will follow only \"safe\" redirects, where \"safe\" means that\n      the client is only doing a GET or HEAD on the URI to which it is being redirected.\n      C(none) will not follow any redirects. Note that C(true) and C(false) choices\n      are accepted for backwards compatibility, where C(true) is the equivalent of\n      C(all) and C(false) is the equivalent of C(safe). C(true) and C(false) are deprecated\n      and will be removed in some future version of Ansible.\n    type: str\n  force:\n    default: false\n    description:\n    - If C(true) do not get a cached copy.\n    type: bool\n  force_basic_auth:\n    default: false\n    description:\n    - Force the sending of the Basic authentication header upon initial request.\n    - When this setting is C(false), this module will first try an unauthenticated\n      request, and when the server replies with an C(HTTP 401) error, it will submit\n      the Basic authentication header.\n    - When this setting is C(true), this module will immediately send a Basic authentication\n      header on the first request.\n    - 'Use this setting in any of the following scenarios:'\n    - You know the webservice endpoint always requires HTTP Basic authentication,\n      and you want to speed up your requests by eliminating the first roundtrip.\n    - The web service does not properly send an HTTP 401 error to your client, so\n      Ansible's HTTP library will not properly respond with HTTP credentials, and\n      logins will fail.\n    - The webservice bans or rate-limits clients that cause any HTTP 401 errors.\n    type: bool\n  group:\n    description:\n    - Name of the group that should own the filesystem object, as would be fed to\n      I(chown).\n    - When left unspecified, it uses the current group of the current user unless\n      you are root, in which case it can preserve the previous ownership.\n    type: str\n  headers:\n    description:\n    - Add custom HTTP headers to a request in the format of a YAML hash. As of C(2.3)\n      supplying C(Content-Type) here will override the header generated by supplying\n      C(json) or C(form-urlencoded) for I(body_format).\n    type: dict\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  http_agent:\n    default: ansible-httpget\n    description:\n    - Header to identify as, generally appears in web server logs.\n    type: str\n  method:\n    default: GET\n    description:\n    - The HTTP method of the request or response.\n    - In more recent versions we do not restrict the method at the module level anymore\n      but it still must be a valid method accepted by the service handling the request.\n    type: str\n  mode:\n    description:\n    - The permissions the resulting filesystem object should have.\n    - For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers.\n      You must either add a leading zero so that Ansible's YAML parser knows it is\n      an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777'))\n      so Ansible receives a string and can do its own conversion from string into\n      number.\n    - Giving Ansible a number without following one of these rules will end up with\n      a decimal number which will have unexpected results.\n    - As of Ansible 1.8, the mode may be specified as a symbolic mode (for example,\n      C(u+rwx) or C(u=rw,g=r,o=r)).\n    - If C(mode) is not specified and the destination filesystem object B(does not)\n      exist, the default C(umask) on the system will be used when setting the mode\n      for the newly created filesystem object.\n    - If C(mode) is not specified and the destination filesystem object B(does) exist,\n      the mode of the existing filesystem object will be used.\n    - Specifying C(mode) is the best way to ensure filesystem objects are created\n      with the correct permissions. See CVE-2020-1736 for further details.\n    type: raw\n  owner:\n    description:\n    - Name of the user that should own the filesystem object, as would be fed to I(chown).\n    - When left unspecified, it uses the current user unless you are root, in which\n      case it can preserve the previous ownership.\n    - Specifying a numeric username will be assumed to be a user ID and not a username.\n      Avoid numeric usernames to avoid this confusion.\n    type: str\n  remote_src:\n    default: false\n    description:\n    - If C(false), the module will search for the C(src) on the controller node.\n    - If C(true), the module will search for the C(src) on the managed (remote) node.\n    type: bool\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  removes:\n    description:\n    - A filename, when it does not exist, this step will not be run.\n    type: path\n  return_content:\n    default: false\n    description:\n    - Whether or not to return the body of the response as a \"content\" key in the\n      dictionary result no matter it succeeded or failed.\n    - Independently of this option, if the reported Content-type is \"application/json\",\n      then the JSON is always loaded into a key called C(json) in the dictionary results.\n    type: bool\n  selevel:\n    description:\n    - The level part of the SELinux filesystem object context.\n    - This is the MLS/MCS attribute, sometimes known as the C(range).\n    - When set to C(_default), it will use the C(level) portion of the policy if available.\n    type: str\n  serole:\n    description:\n    - The role part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(role) portion of the policy if available.\n    type: str\n  setype:\n    description:\n    - The type part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(type) portion of the policy if available.\n    type: str\n  seuser:\n    description:\n    - The user part of the SELinux filesystem object context.\n    - By default it uses the C(system) policy, where applicable.\n    - When set to C(_default), it will use the C(user) portion of the policy if available.\n    type: str\n  src:\n    description:\n    - Path to file to be submitted to the remote server.\n    - Cannot be used with I(body).\n    - Should be used with I(force_basic_auth) to ensure success when the remote end\n      sends a 401.\n    type: path\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  status_code:\n    default:\n    - 200\n    description:\n    - A list of valid, numeric, HTTP status codes that signifies success of the request.\n    elements: int\n    type: list\n  timeout:\n    default: 30\n    description:\n    - The socket level timeout in seconds\n    type: int\n  unix_socket:\n    description:\n    - Path to Unix domain socket to use for connection\n    type: path\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  unredirected_headers:\n    default: []\n    description:\n    - A list of header names that will not be sent on subsequent redirected requests.\n      This list is case insensitive. By default all headers will be redirected. In\n      some cases it may be beneficial to list headers such as C(Authorization) here\n      to avoid potential credential exposure.\n    elements: str\n    type: list\n    version_added: '2.12'\n    version_added_collection: ansible.builtin\n  unsafe_writes:\n    default: false\n    description:\n    - Influence when to use atomic operation to prevent data corruption or inconsistent\n      reads from the target filesystem object.\n    - By default this module uses atomic operations to prevent data corruption or\n      inconsistent reads from the target filesystem objects, but sometimes systems\n      are configured or just broken in ways that prevent this. One example is docker\n      mounted filesystem objects, which cannot be updated atomically from inside the\n      container and can only be written in an unsafe manner.\n    - This option allows Ansible to fall back to unsafe methods of updating filesystem\n      objects when atomic operations fail (however, it doesn't force Ansible to perform\n      unsafe writes).\n    - IMPORTANT! Unsafe writes are subject to race conditions and can lead to data\n      corruption.\n    type: bool\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  url:\n    description:\n    - HTTP or HTTPS URL in the form (http|https)://host.domain[:port]/path\n    required: true\n    type: str\n  url_password:\n    aliases:\n    - password\n    description:\n    - A password for the module to use for Digest, Basic or WSSE authentication.\n    type: str\n  url_username:\n    aliases:\n    - user\n    description:\n    - A username for the module to use for Digest, Basic or WSSE authentication.\n    type: str\n  use_gssapi:\n    default: false\n    description:\n    - Use GSSAPI to perform the authentication, typically this is for Kerberos or\n      Kerberos through Negotiate authentication.\n    - Requires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi)\n      to be installed.\n    - Credentials for GSSAPI can be specified with I(url_username)/I(url_password)\n      or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential\n      cache.\n    - NTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has\n      been installed.\n    type: bool\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  use_netrc:\n    default: true\n    description:\n    - Determining whether to use credentials from ``~/.netrc`` file\n    - By default .netrc is used with Basic authentication headers\n    - When set to False, .netrc credentials are ignored\n    type: bool\n    version_added: '2.14'\n    version_added_collection: ansible.builtin\n  use_proxy:\n    default: true\n    description:\n    - If C(false), it will not use a proxy, even if one is defined in an environment\n      variable on the target hosts.\n    type: bool\n  validate_certs:\n    default: true\n    description:\n    - If C(false), SSL certificates will not be validated.\n    - This should only set to C(false) used on personally controlled sites using self-signed\n      certificates.\n    - Prior to 1.9.2 the code defaulted to C(false).\n    type: bool\n    version_added: 1.9.2\n    version_added_collection: ansible.builtin\nseealso:\n- module: ansible.builtin.get_url\n- module: ansible.windows.win_uri\nshort_description: Interacts with webservices\nversion_added: '1.1'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Check that you can connect (GET) to a page and it returns a status 200\n  ansible.builtin.uri:\n    url: http://www.example.com\n\n- name: Check that a page returns a status 200 and fail if the word AWESOME is not in the page contents\n  ansible.builtin.uri:\n    url: http://www.example.com\n    return_content: true\n  register: this\n  failed_when: \"'AWESOME' not in this.content\"\n\n- name: Create a JIRA issue\n  ansible.builtin.uri:\n    url: https://your.jira.example.com/rest/api/2/issue/\n    user: your_username\n    password: your_pass\n    method: POST\n    body: \"{{ lookup('ansible.builtin.file','issue.json') }}\"\n    force_basic_auth: true\n    status_code: 201\n    body_format: json\n\n- name: Login to a form based webpage, then use the returned cookie to access the app in later tasks\n  ansible.builtin.uri:\n    url: https://your.form.based.auth.example.com/index.php\n    method: POST\n    body_format: form-urlencoded\n    body:\n      name: your_username\n      password: your_password\n      enter: Sign in\n    status_code: 302\n  register: login\n\n- name: Login to a form based webpage using a list of tuples\n  ansible.builtin.uri:\n    url: https://your.form.based.auth.example.com/index.php\n    method: POST\n    body_format: form-urlencoded\n    body:\n    - [ name, your_username ]\n    - [ password, your_password ]\n    - [ enter, Sign in ]\n    status_code: 302\n  register: login\n\n- name: Upload a file via multipart/form-multipart\n  ansible.builtin.uri:\n    url: https://httpbin.org/post\n    method: POST\n    body_format: form-multipart\n    body:\n      file1:\n        filename: /bin/true\n        mime_type: application/octet-stream\n      file2:\n        content: text based file content\n        filename: fake.txt\n        mime_type: text/plain\n      text_form_field: value\n\n- name: Connect to website using a previously stored cookie\n  ansible.builtin.uri:\n    url: https://your.form.based.auth.example.com/dashboard.php\n    method: GET\n    return_content: true\n    headers:\n      Cookie: \"{{ login.cookies_string }}\"\n\n- name: Queue build of a project in Jenkins\n  ansible.builtin.uri:\n    url: http://{{ jenkins.host }}/job/{{ jenkins.job }}/build?token={{ jenkins.token }}\n    user: \"{{ jenkins.user }}\"\n    password: \"{{ jenkins.password }}\"\n    method: GET\n    force_basic_auth: true\n    status_code: 201\n\n- name: POST from contents of local file\n  ansible.builtin.uri:\n    url: https://httpbin.org/post\n    method: POST\n    src: file.json\n\n- name: POST from contents of remote file\n  ansible.builtin.uri:\n    url: https://httpbin.org/post\n    method: POST\n    src: /path/to/my/file.json\n    remote_src: true\n\n- name: Create workspaces in Log analytics Azure\n  ansible.builtin.uri:\n    url: https://www.mms.microsoft.com/Embedded/Api/ConfigDataSources/LogManagementData/Save\n    method: POST\n    body_format: json\n    status_code: [200, 202]\n    return_content: true\n    headers:\n      Content-Type: application/json\n      x-ms-client-workspace-path: /subscriptions/{{ sub_id }}/resourcegroups/{{ res_group }}/providers/microsoft.operationalinsights/workspaces/{{ w_spaces }}\n      x-ms-client-platform: ibiza\n      x-ms-client-auth-token: \"{{ token_az }}\"\n    body:\n\n- name: Pause play until a URL is reachable from this host\n  ansible.builtin.uri:\n    url: \"http://192.0.2.1/some/test\"\n    follow_redirects: none\n    method: GET\n  register: _result\n  until: _result.status == 200\n  retries: 720 # 720 * 5 seconds = 1hour (60*60/5)\n  delay: 5 # Every 5 seconds\n\n- name: Provide SSL/TLS ciphers as a list\n  uri:\n    url: https://example.org\n    ciphers:\n      - '@SECLEVEL=2'\n      - ECDH+AESGCM\n      - ECDH+CHACHA20\n      - ECDH+AES\n      - DHE+AES\n      - '!aNULL'\n      - '!eNULL'\n      - '!aDSS'\n      - '!SHA1'\n      - '!AESCCM'\n\n- name: Provide SSL/TLS ciphers as an OpenSSL formatted cipher list\n  uri:\n    url: https://example.org\n    ciphers: '@SECLEVEL=2:ECDH+AESGCM:ECDH+CHACHA20:ECDH+AES:DHE+AES:!aNULL:!eNULL:!aDSS:!SHA1:!AESCCM'\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "attributes", "type": "str", "elements": "", "default": null, "required": false, "description": ["The attributes the resulting filesystem object should have.", "To get supported flags look at the man page for I(chattr) on the target system.", "This string should contain the attributes in the same order as the one displayed by I(lsattr).", "The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need to be included in the string."], "choices": null, "aliases": ["attr"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "body", "type": "any", "elements": "", "default": null, "required": false, "description": ["The body of the http request/response to the web service. If C(body_format) is set to 'json' it will take an already formatted JSON string or convert a data structure into JSON.", "If C(body_format) is set to 'form-urlencoded' it will convert a dictionary or list of tuples into an 'application/x-www-form-urlencoded' string. (Added in v2.7)", "If C(body_format) is set to 'form-multipart' it will convert a dictionary into 'multipart/form-multipart' body. (Added in v2.10)"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "body_format", "type": "str", "elements": "", "default": "raw", "required": false, "description": ["The serialization format of the body. When set to C(json), C(form-multipart), or C(form-urlencoded), encodes the body argument, if needed, and automatically sets the Content-Type header accordingly.", "As of v2.3 it is possible to override the C(Content-Type) header, when set to C(json) or C(form-urlencoded) via the I(headers) option.", "The 'Content-Type' header cannot be overridden when using C(form-multipart)", "C(form-urlencoded) was added in v2.7.", "C(form-multipart) was added in v2.10."], "choices": ["form-urlencoded", "json", "raw", "form-multipart"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ca_path", "type": "str", "elements": "", "default": null, "required": false, "description": ["PEM formatted file that contains a CA certificate to be used for validation"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ciphers", "type": "list", "elements": "str", "default": null, "required": false, "description": ["SSL/TLS Ciphers to use for the request.", "When a list is provided, all ciphers are joined in order with C(:)", "See the L(OpenSSL Cipher List Format,https://www.openssl.org/docs/manmaster/man1/openssl-ciphers.html#CIPHER-LIST-FORMAT) for more details.", "The available ciphers is dependent on the Python and OpenSSL/LibreSSL versions"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "client_cert", "type": "str", "elements": "", "default": null, "required": false, "description": ["PEM formatted certificate chain file to be used for SSL client authentication.", "This file can also include the key as well, and if the key is included, I(client_key) is not required"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "client_key", "type": "str", "elements": "", "default": null, "required": false, "description": ["PEM formatted file that contains your private key to be used for SSL client authentication.", "If I(client_cert) contains both the certificate and key, this option is not required."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "creates", "type": "str", "elements": "", "default": null, "required": false, "description": ["A filename, when it already exists, this step will not be run."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "decompress", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Whether to attempt to decompress gzip content-encoded responses"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "dest", "type": "str", "elements": "", "default": null, "required": false, "description": ["A path of where to download the file to (if desired). If I(dest) is a directory, the basename of the file on the remote server will be used."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "follow_redirects", "type": "str", "elements": "", "default": "safe", "required": false, "description": ["Whether or not the URI module should follow redirects. C(all) will follow all redirects. C(safe) will follow only \"safe\" redirects, where \"safe\" means that the client is only doing a GET or HEAD on the URI to which it is being redirected. C(none) will not follow any redirects. Note that C(true) and C(false) choices are accepted for backwards compatibility, where C(true) is the equivalent of C(all) and C(false) is the equivalent of C(safe). C(true) and C(false) are deprecated and will be removed in some future version of Ansible."], "choices": ["all", "no", "none", "safe", "urllib2", "yes"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "force", "type": "bool", "elements": "", "default": false, "required": false, "description": ["If C(true) do not get a cached copy."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "force_basic_auth", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Force the sending of the Basic authentication header upon initial request.", "When this setting is C(false), this module will first try an unauthenticated request, and when the server replies with an C(HTTP 401) error, it will submit the Basic authentication header.", "When this setting is C(true), this module will immediately send a Basic authentication header on the first request.", "Use this setting in any of the following scenarios:", "You know the webservice endpoint always requires HTTP Basic authentication, and you want to speed up your requests by eliminating the first roundtrip.", "The web service does not properly send an HTTP 401 error to your client, so Ansible's HTTP library will not properly respond with HTTP credentials, and logins will fail.", "The webservice bans or rate-limits clients that cause any HTTP 401 errors."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "group", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the group that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current group of the current user unless you are root, in which case it can preserve the previous ownership."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "headers", "type": "dict", "elements": "", "default": null, "required": false, "description": ["Add custom HTTP headers to a request in the format of a YAML hash. As of C(2.3) supplying C(Content-Type) here will override the header generated by supplying C(json) or C(form-urlencoded) for I(body_format)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "http_agent", "type": "str", "elements": "", "default": "ansible-httpget", "required": false, "description": ["Header to identify as, generally appears in web server logs."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "method", "type": "str", "elements": "", "default": "GET", "required": false, "description": ["The HTTP method of the request or response.", "In more recent versions we do not restrict the method at the module level anymore but it still must be a valid method accepted by the service handling the request."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mode", "type": "any", "elements": "", "default": null, "required": false, "description": ["The permissions the resulting filesystem object should have.", "For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777')) so Ansible receives a string and can do its own conversion from string into number.", "Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.", "As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r)).", "If C(mode) is not specified and the destination filesystem object B(does not) exist, the default C(umask) on the system will be used when setting the mode for the newly created filesystem object.", "If C(mode) is not specified and the destination filesystem object B(does) exist, the mode of the existing filesystem object will be used.", "Specifying C(mode) is the best way to ensure filesystem objects are created with the correct permissions. See CVE-2020-1736 for further details."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "owner", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the user that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current user unless you are root, in which case it can preserve the previous ownership.", "Specifying a numeric username will be assumed to be a user ID and not a username. Avoid numeric usernames to avoid this confusion."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "remote_src", "type": "bool", "elements": "", "default": false, "required": false, "description": ["If C(false), the module will search for the C(src) on the controller node.", "If C(true), the module will search for the C(src) on the managed (remote) node."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "removes", "type": "str", "elements": "", "default": null, "required": false, "description": ["A filename, when it does not exist, this step will not be run."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "return_content", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Whether or not to return the body of the response as a \"content\" key in the dictionary result no matter it succeeded or failed.", "Independently of this option, if the reported Content-type is \"application/json\", then the JSON is always loaded into a key called C(json) in the dictionary results."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "selevel", "type": "str", "elements": "", "default": null, "required": false, "description": ["The level part of the SELinux filesystem object context.", "This is the MLS/MCS attribute, sometimes known as the C(range).", "When set to C(_default), it will use the C(level) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "serole", "type": "str", "elements": "", "default": null, "required": false, "description": ["The role part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(role) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "setype", "type": "str", "elements": "", "default": null, "required": false, "description": ["The type part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(type) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "seuser", "type": "str", "elements": "", "default": null, "required": false, "description": ["The user part of the SELinux filesystem object context.", "By default it uses the C(system) policy, where applicable.", "When set to C(_default), it will use the C(user) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "src", "type": "str", "elements": "", "default": null, "required": false, "description": ["Path to file to be submitted to the remote server.", "Cannot be used with I(body).", "Should be used with I(force_basic_auth) to ensure success when the remote end sends a 401."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "status_code", "type": "list", "elements": "int", "default": [200], "required": false, "description": ["A list of valid, numeric, HTTP status codes that signifies success of the request."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "timeout", "type": "int", "elements": "", "default": 30, "required": false, "description": ["The socket level timeout in seconds"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unix_socket", "type": "str", "elements": "", "default": null, "required": false, "description": ["Path to Unix domain socket to use for connection"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unredirected_headers", "type": "list", "elements": "str", "default": [], "required": false, "description": ["A list of header names that will not be sent on subsequent redirected requests. This list is case insensitive. By default all headers will be redirected. In some cases it may be beneficial to list headers such as C(Authorization) here to avoid potential credential exposure."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unsafe_writes", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object.", "By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target filesystem objects, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted filesystem objects, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.", "This option allows Ansible to fall back to unsafe methods of updating filesystem objects when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).", "IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "url", "type": "str", "elements": "", "default": null, "required": true, "description": ["HTTP or HTTPS URL in the form (http|https)://host.domain[:port]/path"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "url_password", "type": "str", "elements": "", "default": null, "required": false, "description": ["A password for the module to use for Digest, Basic or WSSE authentication."], "choices": null, "aliases": ["password"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "url_username", "type": "str", "elements": "", "default": null, "required": false, "description": ["A username for the module to use for Digest, Basic or WSSE authentication."], "choices": null, "aliases": ["user"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "use_gssapi", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.", "Requires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.", "Credentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.", "NTLM authentication is C(not) supported even if the GSSAPI mech for NTLM has been installed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "use_netrc", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Determining whether to use credentials from ``~/.netrc`` file", "By default .netrc is used with Basic authentication headers", "When set to False, .netrc credentials are ignored"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "use_proxy", "type": "bool", "elements": "", "default": true, "required": false, "description": ["If C(false), it will not use a proxy, even if one is defined in an environment variable on the target hosts."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate_certs", "type": "bool", "elements": "", "default": true, "required": false, "description": ["If C(false), SSL certificates will not be validated.", "This should only set to C(false) used on personally controlled sites using self-signed certificates.", "Prior to 1.9.2 the code defaulted to C(false)."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/uri.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.user", "name": "user", "fqcn": "ansible.builtin.user", "local_key": "module module:lib/ansible/modules/user.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Stephen Fromm (@sfromm)\ncollection: ansible.builtin\ndescription:\n- Manage user accounts and user attributes.\n- For Windows targets, use the M(ansible.windows.win_user) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/user.py\nhas_action: false\nmodule: user\nnotes:\n- There are specific requirements per platform on user management utilities. However\n  they generally come pre-installed with the system and Ansible will require they\n  are present at runtime. If they are not, a descriptive error message will be shown.\n- On SunOS platforms, the shadow file is backed up automatically since this module\n  edits it directly. On other platforms, the shadow file is backed up by the underlying\n  tools used by this module.\n- On macOS, this module uses C(dscl) to create, modify, and delete accounts. C(dseditgroup)\n  is used to modify group membership. Accounts are hidden from the login window by\n  modifying C(/Library/Preferences/com.apple.loginwindow.plist).\n- On FreeBSD, this module uses C(pw useradd) and C(chpass) to create, C(pw usermod)\n  and C(chpass) to modify, C(pw userdel) remove, C(pw lock) to lock, and C(pw unlock)\n  to unlock accounts.\n- On all other platforms, this module uses C(useradd) to create, C(usermod) to modify,\n  and C(userdel) to remove accounts.\noptions:\n  append:\n    default: false\n    description:\n    - If C(true), add the user to the groups specified in C(groups).\n    - If C(false), user will only be added to the groups specified in C(groups), removing\n      them from all other groups.\n    type: bool\n  authorization:\n    description:\n    - Sets the authorization of the user.\n    - Does nothing when used with other platforms.\n    - Can set multiple authorizations using comma separation.\n    - To delete all authorizations, use C(authorization='').\n    - Currently supported on Illumos/Solaris.\n    type: str\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  comment:\n    description:\n    - Optionally sets the description (aka I(GECOS)) of user account.\n    type: str\n  create_home:\n    aliases:\n    - createhome\n    default: true\n    description:\n    - Unless set to C(false), a home directory will be made for the user when the\n      account is created or if the home directory does not exist.\n    - Changed from C(createhome) to C(create_home) in Ansible 2.5.\n    type: bool\n  expires:\n    description:\n    - An expiry time for the user in epoch, it will be ignored on platforms that do\n      not support this.\n    - Currently supported on GNU/Linux, FreeBSD, and DragonFlyBSD.\n    - Since Ansible 2.6 you can remove the expiry time by specifying a negative value.\n      Currently supported on GNU/Linux and FreeBSD.\n    type: float\n    version_added: '1.9'\n    version_added_collection: ansible.builtin\n  force:\n    default: false\n    description:\n    - This only affects C(state=absent), it forces removal of the user and associated\n      directories on supported platforms.\n    - The behavior is the same as C(userdel --force), check the man page for C(userdel)\n      on your system for details and support.\n    - When used with C(generate_ssh_key=yes) this forces an existing key to be overwritten.\n    type: bool\n  generate_ssh_key:\n    default: false\n    description:\n    - Whether to generate a SSH key for the user in question.\n    - This will B(not) overwrite an existing SSH key unless used with C(force=yes).\n    type: bool\n    version_added: '0.9'\n    version_added_collection: ansible.builtin\n  group:\n    description:\n    - Optionally sets the user's primary group (takes a group name).\n    type: str\n  groups:\n    description:\n    - List of groups user will be added to.\n    - By default, the user is removed from all other groups. Configure C(append) to\n      modify this.\n    - When set to an empty string C(''), the user is removed from all groups except\n      the primary group.\n    - Before Ansible 2.3, the only input format allowed was a comma separated string.\n    elements: str\n    type: list\n  hidden:\n    description:\n    - macOS only, optionally hide the user from the login window and system preferences.\n    - The default will be C(true) if the I(system) option is used.\n    type: bool\n    version_added: '2.6'\n    version_added_collection: ansible.builtin\n  home:\n    description:\n    - Optionally set the user's home directory.\n    type: path\n  local:\n    default: false\n    description:\n    - Forces the use of \"local\" command alternatives on platforms that implement it.\n    - This is useful in environments that use centralized authentication when you\n      want to manipulate the local users (in other words, it uses C(luseradd) instead\n      of C(useradd)).\n    - This will check C(/etc/passwd) for an existing account before invoking commands.\n      If the local account database exists somewhere other than C(/etc/passwd), this\n      setting will not work properly.\n    - This requires that the above commands as well as C(/etc/passwd) must exist on\n      the target host, otherwise it will be a fatal error.\n    type: bool\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  login_class:\n    description:\n    - Optionally sets the user's login class, a feature of most BSD OSs.\n    type: str\n  move_home:\n    default: false\n    description:\n    - 'If set to C(true) when used with C(home: ), attempt to move the user''s old\n      home directory to the specified directory if it isn''t there already and the\n      old home exists.'\n    type: bool\n  name:\n    aliases:\n    - user\n    description:\n    - Name of the user to create, remove or modify.\n    required: true\n    type: str\n  non_unique:\n    default: false\n    description:\n    - Optionally when used with the -u option, this option allows to change the user\n      ID to a non-unique value.\n    type: bool\n    version_added: '1.1'\n    version_added_collection: ansible.builtin\n  password:\n    description:\n    - If provided, set the user's password to the provided encrypted hash (Linux)\n      or plain text password (macOS).\n    - B(Linux/Unix/POSIX:) Enter the hashed password as the value.\n    - See L(FAQ entry,https://docs.ansible.com/ansible/latest/reference_appendices/faq.html#how-do-i-generate-encrypted-passwords-for-the-user-module)\n      for details on various ways to generate the hash of a password.\n    - To create an account with a locked/disabled password on Linux systems, set this\n      to C('!') or C('*').\n    - To create an account with a locked/disabled password on OpenBSD, set this to\n      C('*************').\n    - B(OS X/macOS:) Enter the cleartext password as the value. Be sure to take relevant\n      security precautions.\n    type: str\n  password_expire_max:\n    description:\n    - Maximum number of days between password change.\n    - Supported on Linux only.\n    type: int\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  password_expire_min:\n    description:\n    - Minimum number of days between password change.\n    - Supported on Linux only.\n    type: int\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  password_lock:\n    description:\n    - Lock the password (C(usermod -L), C(usermod -U), C(pw lock)).\n    - Implementation differs by platform. This option does not always mean the user\n      cannot login using other methods.\n    - This option does not disable the user, only lock the password.\n    - This must be set to C(False) in order to unlock a currently locked password.\n      The absence of this parameter will not unlock a password.\n    - Currently supported on Linux, FreeBSD, DragonFlyBSD, NetBSD, OpenBSD.\n    type: bool\n    version_added: '2.6'\n    version_added_collection: ansible.builtin\n  profile:\n    description:\n    - Sets the profile of the user.\n    - Does nothing when used with other platforms.\n    - Can set multiple profiles using comma separation.\n    - To delete all the profiles, use C(profile='').\n    - Currently supported on Illumos/Solaris.\n    type: str\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  remove:\n    default: false\n    description:\n    - This only affects C(state=absent), it attempts to remove directories associated\n      with the user.\n    - The behavior is the same as C(userdel --remove), check the man page for details\n      and support.\n    type: bool\n  role:\n    description:\n    - Sets the role of the user.\n    - Does nothing when used with other platforms.\n    - Can set multiple roles using comma separation.\n    - To delete all roles, use C(role='').\n    - Currently supported on Illumos/Solaris.\n    type: str\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  seuser:\n    description:\n    - Optionally sets the seuser type (user_u) on selinux enabled systems.\n    type: str\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\n  shell:\n    description:\n    - Optionally set the user's shell.\n    - On macOS, before Ansible 2.5, the default shell for non-system users was C(/usr/bin/false).\n      Since Ansible 2.5, the default shell for non-system users on macOS is C(/bin/bash).\n    - See notes for details on how other operating systems determine the default shell\n      by the underlying tool.\n    type: str\n  skeleton:\n    description:\n    - Optionally set a home skeleton directory.\n    - Requires C(create_home) option!\n    type: str\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  ssh_key_bits:\n    description:\n    - Optionally specify number of bits in SSH key to create.\n    - The default value depends on ssh-keygen.\n    type: int\n    version_added: '0.9'\n    version_added_collection: ansible.builtin\n  ssh_key_comment:\n    default: ansible-generated on $HOSTNAME\n    description:\n    - Optionally define the comment for the SSH key.\n    type: str\n    version_added: '0.9'\n    version_added_collection: ansible.builtin\n  ssh_key_file:\n    description:\n    - Optionally specify the SSH key filename.\n    - If this is a relative filename then it will be relative to the user's home directory.\n    - This parameter defaults to I(.ssh/id_rsa).\n    type: path\n    version_added: '0.9'\n    version_added_collection: ansible.builtin\n  ssh_key_passphrase:\n    description:\n    - Set a passphrase for the SSH key.\n    - If no passphrase is provided, the SSH key will default to having no passphrase.\n    type: str\n    version_added: '0.9'\n    version_added_collection: ansible.builtin\n  ssh_key_type:\n    default: rsa\n    description:\n    - Optionally specify the type of SSH key to generate.\n    - Available SSH key types will depend on implementation present on target host.\n    type: str\n    version_added: '0.9'\n    version_added_collection: ansible.builtin\n  state:\n    choices:\n    - absent\n    - present\n    default: present\n    description:\n    - Whether the account should exist or not, taking action if the state is different\n      from what is stated.\n    type: str\n  system:\n    default: false\n    description:\n    - When creating an account C(state=present), setting this to C(true) makes the\n      user a system account.\n    - This setting cannot be changed on existing users.\n    type: bool\n  uid:\n    description:\n    - Optionally sets the I(UID) of the user.\n    type: int\n  umask:\n    description:\n    - Sets the umask of the user.\n    - Does nothing when used with other platforms.\n    - Currently supported on Linux.\n    - Requires C(local) is omitted or False.\n    type: str\n    version_added: '2.12'\n    version_added_collection: ansible.builtin\n  update_password:\n    choices:\n    - always\n    - on_create\n    default: always\n    description:\n    - C(always) will update passwords if they differ.\n    - C(on_create) will only set the password for newly created users.\n    type: str\n    version_added: '1.3'\n    version_added_collection: ansible.builtin\nseealso:\n- module: ansible.posix.authorized_key\n- module: ansible.builtin.group\n- module: ansible.windows.win_user\nshort_description: Manage user accounts\nversion_added: '0.2'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Add the user 'johnd' with a specific uid and a primary group of 'admin'\n  ansible.builtin.user:\n    name: johnd\n    comment: John Doe\n    uid: 1040\n    group: admin\n\n- name: Add the user 'james' with a bash shell, appending the group 'admins' and 'developers' to the user's groups\n  ansible.builtin.user:\n    name: james\n    shell: /bin/bash\n    groups: admins,developers\n    append: yes\n\n- name: Remove the user 'johnd'\n  ansible.builtin.user:\n    name: johnd\n    state: absent\n    remove: yes\n\n- name: Create a 2048-bit SSH key for user jsmith in ~jsmith/.ssh/id_rsa\n  ansible.builtin.user:\n    name: jsmith\n    generate_ssh_key: yes\n    ssh_key_bits: 2048\n    ssh_key_file: .ssh/id_rsa\n\n- name: Added a consultant whose account you want to expire\n  ansible.builtin.user:\n    name: james18\n    shell: /bin/zsh\n    groups: developers\n    expires: 1422403387\n\n- name: Starting at Ansible 2.6, modify user, remove expiry time\n  ansible.builtin.user:\n    name: james18\n    expires: -1\n\n- name: Set maximum expiration date for password\n  ansible.builtin.user:\n    name: ram19\n    password_expire_max: 10\n\n- name: Set minimum expiration date for password\n  ansible.builtin.user:\n    name: pushkar15\n    password_expire_min: 5\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "append", "type": "bool", "elements": "", "default": false, "required": false, "description": ["If C(true), add the user to the groups specified in C(groups).", "If C(false), user will only be added to the groups specified in C(groups), removing them from all other groups."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "authorization", "type": "str", "elements": "", "default": null, "required": false, "description": ["Sets the authorization of the user.", "Does nothing when used with other platforms.", "Can set multiple authorizations using comma separation.", "To delete all authorizations, use C(authorization='').", "Currently supported on Illumos/Solaris."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "comment", "type": "str", "elements": "", "default": null, "required": false, "description": ["Optionally sets the description (aka I(GECOS)) of user account."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "create_home", "type": "bool", "elements": "", "default": true, "required": false, "description": ["Unless set to C(false), a home directory will be made for the user when the account is created or if the home directory does not exist.", "Changed from C(createhome) to C(create_home) in Ansible 2.5."], "choices": null, "aliases": ["createhome"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "expires", "type": "float", "elements": "", "default": null, "required": false, "description": ["An expiry time for the user in epoch, it will be ignored on platforms that do not support this.", "Currently supported on GNU/Linux, FreeBSD, and DragonFlyBSD.", "Since Ansible 2.6 you can remove the expiry time by specifying a negative value. Currently supported on GNU/Linux and FreeBSD."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "force", "type": "bool", "elements": "", "default": false, "required": false, "description": ["This only affects C(state=absent), it forces removal of the user and associated directories on supported platforms.", "The behavior is the same as C(userdel --force), check the man page for C(userdel) on your system for details and support.", "When used with C(generate_ssh_key=yes) this forces an existing key to be overwritten."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "generate_ssh_key", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Whether to generate a SSH key for the user in question.", "This will B(not) overwrite an existing SSH key unless used with C(force=yes)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "group", "type": "str", "elements": "", "default": null, "required": false, "description": ["Optionally sets the user's primary group (takes a group name)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "groups", "type": "list", "elements": "str", "default": null, "required": false, "description": ["List of groups user will be added to.", "By default, the user is removed from all other groups. Configure C(append) to modify this.", "When set to an empty string C(''), the user is removed from all groups except the primary group.", "Before Ansible 2.3, the only input format allowed was a comma separated string."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "hidden", "type": "bool", "elements": "", "default": null, "required": false, "description": ["macOS only, optionally hide the user from the login window and system preferences.", "The default will be C(true) if the I(system) option is used."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "home", "type": "str", "elements": "", "default": null, "required": false, "description": ["Optionally set the user's home directory."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "local", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Forces the use of \"local\" command alternatives on platforms that implement it.", "This is useful in environments that use centralized authentication when you want to manipulate the local users (in other words, it uses C(luseradd) instead of C(useradd)).", "This will check C(/etc/passwd) for an existing account before invoking commands. If the local account database exists somewhere other than C(/etc/passwd), this setting will not work properly.", "This requires that the above commands as well as C(/etc/passwd) must exist on the target host, otherwise it will be a fatal error."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "login_class", "type": "str", "elements": "", "default": null, "required": false, "description": ["Optionally sets the user's login class, a feature of most BSD OSs."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "move_home", "type": "bool", "elements": "", "default": false, "required": false, "description": ["If set to C(true) when used with C(home: ), attempt to move the user's old home directory to the specified directory if it isn't there already and the old home exists."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": true, "description": ["Name of the user to create, remove or modify."], "choices": null, "aliases": ["user"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "non_unique", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Optionally when used with the -u option, this option allows to change the user ID to a non-unique value."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "password", "type": "str", "elements": "", "default": null, "required": false, "description": ["If provided, set the user's password to the provided encrypted hash (Linux) or plain text password (macOS).", "B(Linux/Unix/POSIX:) Enter the hashed password as the value.", "See L(FAQ entry,https://docs.ansible.com/ansible/latest/reference_appendices/faq.html#how-do-i-generate-encrypted-passwords-for-the-user-module) for details on various ways to generate the hash of a password.", "To create an account with a locked/disabled password on Linux systems, set this to C('!') or C('*').", "To create an account with a locked/disabled password on OpenBSD, set this to C('*************').", "B(OS X/macOS:) Enter the cleartext password as the value. Be sure to take relevant security precautions."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "password_expire_max", "type": "int", "elements": "", "default": null, "required": false, "description": ["Maximum number of days between password change.", "Supported on Linux only."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "password_expire_min", "type": "int", "elements": "", "default": null, "required": false, "description": ["Minimum number of days between password change.", "Supported on Linux only."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "password_lock", "type": "bool", "elements": "", "default": null, "required": false, "description": ["Lock the password (C(usermod -L), C(usermod -U), C(pw lock)).", "Implementation differs by platform. This option does not always mean the user cannot login using other methods.", "This option does not disable the user, only lock the password.", "This must be set to C(False) in order to unlock a currently locked password. The absence of this parameter will not unlock a password.", "Currently supported on Linux, FreeBSD, DragonFlyBSD, NetBSD, OpenBSD."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "profile", "type": "str", "elements": "", "default": null, "required": false, "description": ["Sets the profile of the user.", "Does nothing when used with other platforms.", "Can set multiple profiles using comma separation.", "To delete all the profiles, use C(profile='').", "Currently supported on Illumos/Solaris."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "remove", "type": "bool", "elements": "", "default": false, "required": false, "description": ["This only affects C(state=absent), it attempts to remove directories associated with the user.", "The behavior is the same as C(userdel --remove), check the man page for details and support."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "role", "type": "str", "elements": "", "default": null, "required": false, "description": ["Sets the role of the user.", "Does nothing when used with other platforms.", "Can set multiple roles using comma separation.", "To delete all roles, use C(role='').", "Currently supported on Illumos/Solaris."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "seuser", "type": "str", "elements": "", "default": null, "required": false, "description": ["Optionally sets the seuser type (user_u) on selinux enabled systems."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "shell", "type": "str", "elements": "", "default": null, "required": false, "description": ["Optionally set the user's shell.", "On macOS, before Ansible 2.5, the default shell for non-system users was C(/usr/bin/false). Since Ansible 2.5, the default shell for non-system users on macOS is C(/bin/bash).", "See notes for details on how other operating systems determine the default shell by the underlying tool."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "skeleton", "type": "str", "elements": "", "default": null, "required": false, "description": ["Optionally set a home skeleton directory.", "Requires C(create_home) option!"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ssh_key_bits", "type": "int", "elements": "", "default": null, "required": false, "description": ["Optionally specify number of bits in SSH key to create.", "The default value depends on ssh-keygen."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ssh_key_comment", "type": "str", "elements": "", "default": "ansible-generated on $HOSTNAME", "required": false, "description": ["Optionally define the comment for the SSH key."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ssh_key_file", "type": "str", "elements": "", "default": null, "required": false, "description": ["Optionally specify the SSH key filename.", "If this is a relative filename then it will be relative to the user's home directory.", "This parameter defaults to I(.ssh/id_rsa)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ssh_key_passphrase", "type": "str", "elements": "", "default": null, "required": false, "description": ["Set a passphrase for the SSH key.", "If no passphrase is provided, the SSH key will default to having no passphrase."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ssh_key_type", "type": "str", "elements": "", "default": "rsa", "required": false, "description": ["Optionally specify the type of SSH key to generate.", "Available SSH key types will depend on implementation present on target host."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "present", "required": false, "description": ["Whether the account should exist or not, taking action if the state is different from what is stated."], "choices": ["absent", "present"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "system", "type": "bool", "elements": "", "default": false, "required": false, "description": ["When creating an account C(state=present), setting this to C(true) makes the user a system account.", "This setting cannot be changed on existing users."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "uid", "type": "int", "elements": "", "default": null, "required": false, "description": ["Optionally sets the I(UID) of the user."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "umask", "type": "str", "elements": "", "default": null, "required": false, "description": ["Sets the umask of the user.", "Does nothing when used with other platforms.", "Currently supported on Linux.", "Requires C(local) is omitted or False."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "update_password", "type": "str", "elements": "", "default": "always", "required": false, "description": ["C(always) will update passwords if they differ.", "C(on_create) will only set the password for newly created users."], "choices": ["always", "on_create"], "aliases": null}], "defined_in": "lib/ansible/modules/user.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.validate_argument_spec", "name": "validate_argument_spec", "fqcn": "ansible.builtin.validate_argument_spec", "local_key": "module module:lib/ansible/modules/validate_argument_spec.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  become:\n    description: Is usable alongside become keywords\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  connection:\n    description: Uses the target's configured connection information to execute code\n      on it\n    support: none\n  delegation:\n    description: Can be used in conjunction with delegate_to and related keywords\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: all\n    support: N/A\nauthor:\n- Ansible Core Team\ncollection: ansible.builtin\ndescription:\n- This module validates role arguments with a defined argument specification.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/validate_argument_spec.py\nhas_action: true\nmodule: validate_argument_spec\noptions:\n  argument_spec:\n    description:\n    - A dictionary like AnsibleModule argument_spec\n    required: true\n  provided_arguments:\n    description:\n    - A dictionary of the arguments that will be validated according to argument_spec\nshort_description: Validate role argument specs.\nversion_added: '2.11'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: verify vars needed for this task file are present when included\n  ansible.builtin.validate_argument_spec:\n        argument_spec: '{{required_data}}'\n  vars:\n    required_data:\n        # unlike spec file, just put the options in directly\n        stuff:\n            description: stuff\n            type: str\n            choices: ['who', 'knows', 'what']\n            default: what\n        but:\n            description: i guess we need one\n            type: str\n            required: true\n\n\n- name: verify vars needed for this task file are present when included, with spec from a spec file\n  ansible.builtin.validate_argument_spec:\n        argument_spec: \"{{lookup('ansible.builtin.file', 'myargspec.yml')['specname']['options']}}\"\n\n\n- name: verify vars needed for next include and not from inside it, also with params i'll only define there\n  block:\n    - ansible.builtin.validate_argument_spec:\n        argument_spec: \"{{lookup('ansible.builtin.file', 'nakedoptions.yml'}}\"\n        provided_arguments:\n            but: \"that i can define on the include itself, like in it's C(vars:) keyword\"\n\n    - name: the include itself\n      vars:\n        stuff: knows\n        but: nobuts!\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "argument_spec", "type": "", "elements": "", "default": null, "required": true, "description": ["A dictionary like AnsibleModule argument_spec"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "provided_arguments", "type": "", "elements": "", "default": null, "required": false, "description": ["A dictionary of the arguments that will be validated according to argument_spec"], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/validate_argument_spec.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.wait_for", "name": "wait_for", "fqcn": "ansible.builtin.wait_for", "local_key": "module module:lib/ansible/modules/wait_for.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: posix\n    support: N/A\nauthor:\n- Jeroen Hoekx (@jhoekx)\n- John Jarvis (@jarv)\n- Andrii Radyk (@AnderEnder)\ncollection: ansible.builtin\ndescription:\n- You can wait for a set amount of time C(timeout), this is the default if nothing\n  is specified or just C(timeout) is specified. This does not produce an error.\n- Waiting for a port to become available is useful for when services are not immediately\n  available after their init scripts return which is true of certain Java application\n  servers.\n- It is also useful when starting guests with the M(community.libvirt.virt) module\n  and needing to pause until they are ready.\n- This module can also be used to wait for a regex match a string to be present in\n  a file.\n- In Ansible 1.6 and later, this module can also be used to wait for a file to be\n  available or absent on the filesystem.\n- In Ansible 1.8 and later, this module can also be used to wait for active connections\n  to be closed before continuing, useful if a node is being rotated out of a load\n  balancer pool.\n- For Windows targets, use the M(ansible.windows.win_wait_for) module instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/wait_for.py\nhas_action: false\nmodule: wait_for\nnotes:\n- The ability to use search_regex with a port connection was added in Ansible 1.7.\n- Prior to Ansible 2.4, testing for the absence of a directory or UNIX socket did\n  not work correctly.\n- Prior to Ansible 2.4, testing for the presence of a file did not work correctly\n  if the remote user did not have read access to that file.\n- Under some circumstances when using mandatory access control, a path may always\n  be treated as being absent even if it exists, but can't be modified or created by\n  the remote user either.\n- When waiting for a path, symbolic links will be followed.  Many other modules that\n  manipulate files do not follow symbolic links, so operations on the path using other\n  modules may not work exactly as expected.\noptions:\n  active_connection_states:\n    default:\n    - ESTABLISHED\n    - FIN_WAIT1\n    - FIN_WAIT2\n    - SYN_RECV\n    - SYN_SENT\n    - TIME_WAIT\n    description:\n    - The list of TCP connection states which are counted as active connections.\n    elements: str\n    type: list\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  connect_timeout:\n    default: 5\n    description:\n    - Maximum number of seconds to wait for a connection to happen before closing\n      and retrying.\n    type: int\n  delay:\n    default: 0\n    description:\n    - Number of seconds to wait before starting to poll.\n    type: int\n  exclude_hosts:\n    description:\n    - List of hosts or IPs to ignore when looking for active TCP connections for C(drained)\n      state.\n    elements: str\n    type: list\n    version_added: '1.8'\n    version_added_collection: ansible.builtin\n  host:\n    default: 127.0.0.1\n    description:\n    - A resolvable hostname or IP address to wait for.\n    type: str\n  msg:\n    description:\n    - This overrides the normal error message from a failure to meet the required\n      conditions.\n    type: str\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  path:\n    description:\n    - Path to a file on the filesystem that must exist before continuing.\n    - C(path) and C(port) are mutually exclusive parameters.\n    type: path\n    version_added: '1.4'\n    version_added_collection: ansible.builtin\n  port:\n    description:\n    - Port number to poll.\n    - C(path) and C(port) are mutually exclusive parameters.\n    type: int\n  search_regex:\n    description:\n    - Can be used to match a string in either a file or a socket connection.\n    - Defaults to a multiline regex.\n    type: str\n    version_added: '1.4'\n    version_added_collection: ansible.builtin\n  sleep:\n    default: 1\n    description:\n    - Number of seconds to sleep between checks.\n    - Before Ansible 2.3 this was hardcoded to 1 second.\n    type: int\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  state:\n    choices:\n    - absent\n    - drained\n    - present\n    - started\n    - stopped\n    default: started\n    description:\n    - Either C(present), C(started), or C(stopped), C(absent), or C(drained).\n    - When checking a port C(started) will ensure the port is open, C(stopped) will\n      check that it is closed, C(drained) will check for active connections.\n    - When checking for a file or a search string C(present) or C(started) will ensure\n      that the file or string is present before continuing, C(absent) will check that\n      file is absent or removed.\n    type: str\n  timeout:\n    default: 300\n    description:\n    - Maximum number of seconds to wait for, when used with another condition it will\n      force an error.\n    - When used without other conditions it is equivalent of just sleeping.\n    type: int\nseealso:\n- module: ansible.builtin.wait_for_connection\n- module: ansible.windows.win_wait_for\n- module: community.windows.win_wait_for_process\nshort_description: Waits for a condition before continuing\nversion_added: '0.7'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Sleep for 300 seconds and continue with play\n  ansible.builtin.wait_for:\n    timeout: 300\n  delegate_to: localhost\n\n- name: Wait for port 8000 to become open on the host, don't start checking for 10 seconds\n  ansible.builtin.wait_for:\n    port: 8000\n    delay: 10\n\n- name: Waits for port 8000 of any IP to close active connections, don't start checking for 10 seconds\n  ansible.builtin.wait_for:\n    host: 0.0.0.0\n    port: 8000\n    delay: 10\n    state: drained\n\n- name: Wait for port 8000 of any IP to close active connections, ignoring connections for specified hosts\n  ansible.builtin.wait_for:\n    host: 0.0.0.0\n    port: 8000\n    state: drained\n    exclude_hosts: 10.2.1.2,10.2.1.3\n\n- name: Wait until the file /tmp/foo is present before continuing\n  ansible.builtin.wait_for:\n    path: /tmp/foo\n\n- name: Wait until the string \"completed\" is in the file /tmp/foo before continuing\n  ansible.builtin.wait_for:\n    path: /tmp/foo\n    search_regex: completed\n\n- name: Wait until regex pattern matches in the file /tmp/foo and print the matched group\n  ansible.builtin.wait_for:\n    path: /tmp/foo\n    search_regex: completed (?P<task>\\w+)\n  register: waitfor\n- ansible.builtin.debug:\n    msg: Completed {{ waitfor['match_groupdict']['task'] }}\n\n- name: Wait until the lock file is removed\n  ansible.builtin.wait_for:\n    path: /var/lock/file.lock\n    state: absent\n\n- name: Wait until the process is finished and pid was destroyed\n  ansible.builtin.wait_for:\n    path: /proc/3466/status\n    state: absent\n\n- name: Output customized message when failed\n  ansible.builtin.wait_for:\n    path: /tmp/foo\n    state: present\n    msg: Timeout to find file /tmp/foo\n\n# Do not assume the inventory_hostname is resolvable and delay 10 seconds at start\n- name: Wait 300 seconds for port 22 to become open and contain \"OpenSSH\"\n  ansible.builtin.wait_for:\n    port: 22\n    host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'\n    search_regex: OpenSSH\n    delay: 10\n  connection: local\n\n# Same as above but you normally have ansible_connection set in inventory, which overrides 'connection'\n- name: Wait 300 seconds for port 22 to become open and contain \"OpenSSH\"\n  ansible.builtin.wait_for:\n    port: 22\n    host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'\n    search_regex: OpenSSH\n    delay: 10\n  vars:\n    ansible_connection: local\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "active_connection_states", "type": "list", "elements": "str", "default": ["ESTABLISHED", "FIN_WAIT1", "FIN_WAIT2", "SYN_RECV", "SYN_SENT", "TIME_WAIT"], "required": false, "description": ["The list of TCP connection states which are counted as active connections."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "connect_timeout", "type": "int", "elements": "", "default": 5, "required": false, "description": ["Maximum number of seconds to wait for a connection to happen before closing and retrying."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "delay", "type": "int", "elements": "", "default": 0, "required": false, "description": ["Number of seconds to wait before starting to poll."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "exclude_hosts", "type": "list", "elements": "str", "default": null, "required": false, "description": ["List of hosts or IPs to ignore when looking for active TCP connections for C(drained) state."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "host", "type": "str", "elements": "", "default": "127.0.0.1", "required": false, "description": ["A resolvable hostname or IP address to wait for."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "msg", "type": "str", "elements": "", "default": null, "required": false, "description": ["This overrides the normal error message from a failure to meet the required conditions."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "path", "type": "str", "elements": "", "default": null, "required": false, "description": ["Path to a file on the filesystem that must exist before continuing.", "C(path) and C(port) are mutually exclusive parameters."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "port", "type": "int", "elements": "", "default": null, "required": false, "description": ["Port number to poll.", "C(path) and C(port) are mutually exclusive parameters."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "search_regex", "type": "str", "elements": "", "default": null, "required": false, "description": ["Can be used to match a string in either a file or a socket connection.", "Defaults to a multiline regex."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "sleep", "type": "int", "elements": "", "default": 1, "required": false, "description": ["Number of seconds to sleep between checks.", "Before Ansible 2.3 this was hardcoded to 1 second."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "started", "required": false, "description": ["Either C(present), C(started), or C(stopped), C(absent), or C(drained).", "When checking a port C(started) will ensure the port is open, C(stopped) will check that it is closed, C(drained) will check for active connections.", "When checking for a file or a search string C(present) or C(started) will ensure that the file or string is present before continuing, C(absent) will check that file is absent or removed."], "choices": ["absent", "drained", "present", "started", "stopped"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "timeout", "type": "int", "elements": "", "default": 300, "required": false, "description": ["Maximum number of seconds to wait for, when used with another condition it will force an error.", "When used without other conditions it is equivalent of just sleeping."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/wait_for.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.wait_for_connection", "name": "wait_for_connection", "fqcn": "ansible.builtin.wait_for_connection", "local_key": "module module:lib/ansible/modules/wait_for_connection.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    support: full\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: none\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: none\n  platform:\n    description: Target OS/families that can be operated against\n    details: As long as there is a connection plugin\n    platforms: all\n    support: N/A\nauthor:\n- Dag Wieers (@dagwieers)\ncollection: ansible.builtin\ndescription:\n- Waits for a total of C(timeout) seconds.\n- Retries the transport connection after a timeout of C(connect_timeout).\n- Tests the transport connection every C(sleep) seconds.\n- This module makes use of internal ansible transport (and configuration) and the\n  ping/win_ping module to guarantee correct end-to-end functioning.\n- This module is also supported for Windows targets.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/wait_for_connection.py\nhas_action: true\nmodule: wait_for_connection\noptions:\n  connect_timeout:\n    default: 5\n    description:\n    - Maximum number of seconds to wait for a connection to happen before closing\n      and retrying.\n    type: int\n  delay:\n    default: 0\n    description:\n    - Number of seconds to wait before starting to poll.\n    type: int\n  sleep:\n    default: 1\n    description:\n    - Number of seconds to sleep between checks.\n    type: int\n  timeout:\n    default: 600\n    description:\n    - Maximum number of seconds to wait for.\n    type: int\nseealso:\n- module: ansible.builtin.wait_for\n- module: ansible.windows.win_wait_for\n- module: community.windows.win_wait_for_process\nshort_description: Waits until remote system is reachable/usable\nversion_added: '2.3'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Wait 600 seconds for target connection to become reachable/usable\n  ansible.builtin.wait_for_connection:\n\n- name: Wait 300 seconds, but only start checking after 60 seconds\n  ansible.builtin.wait_for_connection:\n    delay: 60\n    timeout: 300\n\n# Wake desktops, wait for them to become ready and continue playbook\n- hosts: all\n  gather_facts: no\n  tasks:\n  - name: Send magic Wake-On-Lan packet to turn on individual systems\n    community.general.wakeonlan:\n      mac: '{{ mac }}'\n      broadcast: 192.168.0.255\n    delegate_to: localhost\n\n  - name: Wait for system to become reachable\n    ansible.builtin.wait_for_connection:\n\n  - name: Gather facts for first time\n    ansible.builtin.setup:\n\n# Build a new VM, wait for it to become ready and continue playbook\n- hosts: all\n  gather_facts: no\n  tasks:\n  - name: Clone new VM, if missing\n    community.vmware.vmware_guest:\n      hostname: '{{ vcenter_ipaddress }}'\n      name: '{{ inventory_hostname_short }}'\n      template: Windows 2012R2\n      customization:\n        hostname: '{{ vm_shortname }}'\n        runonce:\n        - powershell.exe -ExecutionPolicy Unrestricted -File C:\\Windows\\Temp\\ConfigureRemotingForAnsible.ps1 -ForceNewSSLCert -EnableCredSSP\n    delegate_to: localhost\n\n  - name: Wait for system to become reachable over WinRM\n    ansible.builtin.wait_for_connection:\n      timeout: 900\n\n  - name: Gather facts for first time\n    ansible.builtin.setup:\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "connect_timeout", "type": "int", "elements": "", "default": 5, "required": false, "description": ["Maximum number of seconds to wait for a connection to happen before closing and retrying."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "delay", "type": "int", "elements": "", "default": 0, "required": false, "description": ["Number of seconds to wait before starting to poll."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "sleep", "type": "int", "elements": "", "default": 1, "required": false, "description": ["Number of seconds to sleep between checks."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "timeout", "type": "int", "elements": "", "default": 600, "required": false, "description": ["Maximum number of seconds to wait for."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/wait_for_connection.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.yum", "name": "yum", "fqcn": "ansible.builtin.yum", "local_key": "module module:lib/ansible/modules/yum.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  action:\n    description: Indicates this has a corresponding action plugin so some parts of\n      the options can be executed on the controller\n    details: In the case of yum, it has 2 action plugins that use it under the hood,\n      M(ansible.builtin.yum) and M(ansible.builtin.package).\n    support: partial\n  async:\n    description: Supports being used with the C(async) keyword\n    support: none\n  bypass_host_loop:\n    description:\n    - Forces a 'global' task that does not execute per host, this bypasses per host\n      templating and serial, throttle and other loop considerations\n    - Conditionals will work as if C(run_once) is being used, variables used will\n      be from the first available host\n    - This action will not work normally outside of lockstep strategies\n    support: none\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: rhel\n    support: N/A\nauthor:\n- Ansible Core Team\n- Seth Vidal (@skvidal)\n- Eduard Snesarev (@verm666)\n- Berend De Schouwer (@berenddeschouwer)\n- Abhijeet Kasurde (@Akasurde)\n- Adam Miller (@maxamillion)\ncollection: ansible.builtin\ndescription:\n- Installs, upgrade, downgrades, removes, and lists packages and groups with the I(yum)\n  package manager.\n- This module only works on Python 2. If you require Python 3 support see the M(ansible.builtin.dnf)\n  module.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/yum.py\nhas_action: true\nmodule: yum\nnotes:\n- When used with a C(loop:) each package will be processed individually, it is much\n  more efficient to pass the list directly to the I(name) option.\n- In versions prior to 1.9.2 this module installed and removed each package given\n  to the yum module separately. This caused problems when packages specified by filename\n  or url had to be installed or removed together. In 1.9.2 this was fixed so that\n  packages are installed in one yum transaction. However, if one of the packages adds\n  a new yum repository that the other packages come from (such as epel-release) then\n  that package needs to be installed in a separate task. This mimics yum's command\n  line behaviour.\n- Yum itself has two types of groups.  \"Package groups\" are specified in the rpm itself\n  while \"environment groups\" are specified in a separate file (usually by the distribution).  Unfortunately,\n  this division becomes apparent to ansible users because ansible needs to operate\n  on the group of packages in a single transaction and yum requires groups to be specified\n  in different ways when used in that way.  Package groups are specified as \"@development-tools\"\n  and environment groups are \"@^gnome-desktop-environment\". Use the \"yum group list\n  hidden ids\" command to see which category of group the group you want to install\n  falls into.\n- 'The yum module does not support clearing yum cache in an idempotent way, so it\n  was decided not to implement it, the only method is to use command and call the\n  yum command directly, namely \"command: yum clean all\" https://github.com/ansible/ansible/pull/31450#issuecomment-352889579'\noptions:\n  allow_downgrade:\n    default: 'no'\n    description:\n    - Specify if the named package and version is allowed to downgrade a maybe already\n      installed higher version of that package. Note that setting allow_downgrade=True\n      can make this module behave in a non-idempotent way. The task could end up with\n      a set of packages that does not match the complete list of specified packages\n      to install (because dependencies between the downgraded package and others can\n      cause changes to the packages which were in the earlier transaction).\n    type: bool\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  autoremove:\n    default: 'no'\n    description:\n    - If C(true), removes all \"leaf\" packages from the system that were originally\n      installed as dependencies of user-installed packages but which are no longer\n      required by any such package. Should be used alone or when state is I(absent)\n    - 'NOTE: This feature requires yum >= 3.4.3 (RHEL/CentOS 7+)'\n    type: bool\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  bugfix:\n    default: 'no'\n    description:\n    - If set to C(true), and C(state=latest) then only installs updates that have\n      been marked bugfix related.\n    type: bool\n    version_added: '2.6'\n    version_added_collection: ansible.builtin\n  cacheonly:\n    default: 'no'\n    description:\n    - Tells yum to run entirely from system cache; does not download or update metadata.\n    type: bool\n    version_added: '2.12'\n    version_added_collection: ansible.builtin\n  conf_file:\n    description:\n    - The remote yum configuration file to use for the transaction.\n    type: str\n    version_added: '0.6'\n    version_added_collection: ansible.builtin\n  disable_excludes:\n    description:\n    - Disable the excludes defined in YUM config files.\n    - If set to C(all), disables all excludes.\n    - If set to C(main), disable excludes defined in [main] in yum.conf.\n    - If set to C(repoid), disable excludes defined for given repo id.\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  disable_gpg_check:\n    default: 'no'\n    description:\n    - Whether to disable the GPG checking of signatures of packages being installed.\n      Has an effect only if state is I(present) or I(latest).\n    type: bool\n    version_added: '1.2'\n    version_added_collection: ansible.builtin\n  disable_plugin:\n    description:\n    - I(Plugin) name to disable for the install/update operation. The disabled plugins\n      will not persist beyond the transaction.\n    elements: str\n    type: list\n    version_added: '2.5'\n    version_added_collection: ansible.builtin\n  disablerepo:\n    description:\n    - I(Repoid) of repositories to disable for the install/update operation. These\n      repos will not persist beyond the transaction. When specifying multiple repos,\n      separate them with a C(\",\").\n    - As of Ansible 2.7, this can alternatively be a list instead of C(\",\") separated\n      string\n    elements: str\n    type: list\n    version_added: '0.9'\n    version_added_collection: ansible.builtin\n  download_dir:\n    description:\n    - Specifies an alternate directory to store packages.\n    - Has an effect only if I(download_only) is specified.\n    type: str\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  download_only:\n    default: 'no'\n    description:\n    - Only download the packages, do not install them.\n    type: bool\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  enable_plugin:\n    description:\n    - I(Plugin) name to enable for the install/update operation. The enabled plugin\n      will not persist beyond the transaction.\n    elements: str\n    type: list\n    version_added: '2.5'\n    version_added_collection: ansible.builtin\n  enablerepo:\n    description:\n    - I(Repoid) of repositories to enable for the install/update operation. These\n      repos will not persist beyond the transaction. When specifying multiple repos,\n      separate them with a C(\",\").\n    - As of Ansible 2.7, this can alternatively be a list instead of C(\",\") separated\n      string\n    elements: str\n    type: list\n    version_added: '0.9'\n    version_added_collection: ansible.builtin\n  exclude:\n    description:\n    - Package name(s) to exclude when state=present, or latest\n    elements: str\n    type: list\n    version_added: '2.0'\n    version_added_collection: ansible.builtin\n  install_repoquery:\n    default: 'yes'\n    description:\n    - If repoquery is not available, install yum-utils. If the system is registered\n      to RHN or an RHN Satellite, repoquery allows for querying all channels assigned\n      to the system. It is also required to use the 'list' parameter.\n    - 'NOTE: This will run and be logged as a separate yum transation which takes\n      place before any other installation or removal.'\n    - 'NOTE: This will use the system''s default enabled repositories without regard\n      for disablerepo/enablerepo given to the module.'\n    required: false\n    type: bool\n    version_added: '1.5'\n    version_added_collection: ansible.builtin\n  install_weak_deps:\n    default: 'yes'\n    description:\n    - Will also install all packages linked by a weak dependency relation.\n    - 'NOTE: This feature requires yum >= 4 (RHEL/CentOS 8+)'\n    type: bool\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  installroot:\n    default: /\n    description:\n    - Specifies an alternative installroot, relative to which all packages will be\n      installed.\n    type: str\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  list:\n    description:\n    - 'Package name to run the equivalent of C(yum list --show-duplicates <package>)\n      against. In addition to listing packages, use can also list the following: C(installed),\n      C(updates), C(available) and C(repos).'\n    - This parameter is mutually exclusive with I(name).\n    type: str\n  lock_timeout:\n    default: 30\n    description:\n    - Amount of time to wait for the yum lockfile to be freed.\n    required: false\n    type: int\n    version_added: '2.8'\n    version_added_collection: ansible.builtin\n  name:\n    aliases:\n    - pkg\n    description:\n    - A package name or package specifier with version, like C(name-1.0).\n    - Comparison operators for package version are valid here C(>), C(<), C(>=), C(<=).\n      Example - C(name>=1.0)\n    - If a previous version is specified, the task also needs to turn C(allow_downgrade)\n      on. See the C(allow_downgrade) documentation for caveats with downgrading packages.\n    - When using state=latest, this can be C('*') which means run C(yum -y update).\n    - You can also pass a url or a local path to a rpm file (using state=present).\n      To operate on several packages this can accept a comma separated string of packages\n      or (as of 2.0) a list of packages.\n    elements: str\n    type: list\n  releasever:\n    description:\n    - Specifies an alternative release from which all packages will be installed.\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  security:\n    default: 'no'\n    description:\n    - If set to C(true), and C(state=latest) then only installs updates that have\n      been marked security related.\n    type: bool\n    version_added: '2.4'\n    version_added_collection: ansible.builtin\n  skip_broken:\n    default: 'no'\n    description:\n    - Skip all unavailable packages or packages with broken dependencies without raising\n      an error. Equivalent to passing the --skip-broken option.\n    type: bool\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  sslverify:\n    default: 'yes'\n    description:\n    - Disables SSL validation of the repository server for this transaction.\n    - This should be set to C(false) if one of the configured repositories is using\n      an untrusted or self-signed certificate.\n    type: bool\n    version_added: '2.13'\n    version_added_collection: ansible.builtin\n  state:\n    choices:\n    - absent\n    - installed\n    - latest\n    - present\n    - removed\n    description:\n    - Whether to install (C(present) or C(installed), C(latest)), or remove (C(absent)\n      or C(removed)) a package.\n    - C(present) and C(installed) will simply ensure that a desired package is installed.\n    - C(latest) will update the specified package if it's not of the latest available\n      version.\n    - C(absent) and C(removed) will remove the specified package.\n    - Default is C(None), however in effect the default action is C(present) unless\n      the C(autoremove) option is enabled for this module, then C(absent) is inferred.\n    type: str\n  update_cache:\n    aliases:\n    - expire-cache\n    default: 'no'\n    description:\n    - Force yum to check if cache is out of date and redownload if needed. Has an\n      effect only if state is I(present) or I(latest).\n    type: bool\n    version_added: '1.9'\n    version_added_collection: ansible.builtin\n  update_only:\n    default: 'no'\n    description:\n    - When using latest, only update installed packages. Do not install packages.\n    - Has an effect only if state is I(latest)\n    type: bool\n    version_added: '2.5'\n    version_added_collection: ansible.builtin\n  use_backend:\n    choices:\n    - auto\n    - yum\n    - yum4\n    - dnf\n    default: auto\n    description:\n    - This module supports C(yum) (as it always has), this is known as C(yum3)/C(YUM3)/C(yum-deprecated)\n      by upstream yum developers. As of Ansible 2.7+, this module also supports C(YUM4),\n      which is the \"new yum\" and it has an C(dnf) backend.\n    - By default, this module will select the backend based on the C(ansible_pkg_mgr)\n      fact.\n    type: str\n    version_added: '2.7'\n    version_added_collection: ansible.builtin\n  validate_certs:\n    default: 'yes'\n    description:\n    - This only applies if using a https url as the source of the rpm. e.g. for localinstall.\n      If set to C(false), the SSL certificates will not be validated.\n    - This should only set to C(false) used on personally controlled sites using self-signed\n      certificates as it avoids verifying the source site.\n    - Prior to 2.1 the code worked as if this was set to C(true).\n    type: bool\n    version_added: '2.1'\n    version_added_collection: ansible.builtin\nrequirements:\n- yum\nshort_description: Manages packages with the I(yum) package manager\nversion_added: historical\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Install the latest version of Apache\n  ansible.builtin.yum:\n    name: httpd\n    state: latest\n\n- name: Install Apache >= 2.4\n  ansible.builtin.yum:\n    name: httpd>=2.4\n    state: present\n\n- name: Install a list of packages (suitable replacement for 2.11 loop deprecation warning)\n  ansible.builtin.yum:\n    name:\n      - nginx\n      - postgresql\n      - postgresql-server\n    state: present\n\n- name: Install a list of packages with a list variable\n  ansible.builtin.yum:\n    name: \"{{ packages }}\"\n  vars:\n    packages:\n    - httpd\n    - httpd-tools\n\n- name: Remove the Apache package\n  ansible.builtin.yum:\n    name: httpd\n    state: absent\n\n- name: Install the latest version of Apache from the testing repo\n  ansible.builtin.yum:\n    name: httpd\n    enablerepo: testing\n    state: present\n\n- name: Install one specific version of Apache\n  ansible.builtin.yum:\n    name: httpd-2.2.29-1.4.amzn1\n    state: present\n\n- name: Upgrade all packages\n  ansible.builtin.yum:\n    name: '*'\n    state: latest\n\n- name: Upgrade all packages, excluding kernel & foo related packages\n  ansible.builtin.yum:\n    name: '*'\n    state: latest\n    exclude: kernel*,foo*\n\n- name: Install the nginx rpm from a remote repo\n  ansible.builtin.yum:\n    name: http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm\n    state: present\n\n- name: Install nginx rpm from a local file\n  ansible.builtin.yum:\n    name: /usr/local/src/nginx-release-centos-6-0.el6.ngx.noarch.rpm\n    state: present\n\n- name: Install the 'Development tools' package group\n  ansible.builtin.yum:\n    name: \"@Development tools\"\n    state: present\n\n- name: Install the 'Gnome desktop' environment group\n  ansible.builtin.yum:\n    name: \"@^gnome-desktop-environment\"\n    state: present\n\n- name: List ansible packages and register result to print with debug later\n  ansible.builtin.yum:\n    list: ansible\n  register: result\n\n- name: Install package with multiple repos enabled\n  ansible.builtin.yum:\n    name: sos\n    enablerepo: \"epel,ol7_latest\"\n\n- name: Install package with multiple repos disabled\n  ansible.builtin.yum:\n    name: sos\n    disablerepo: \"epel,ol7_latest\"\n\n- name: Download the nginx package but do not install it\n  ansible.builtin.yum:\n    name:\n      - nginx\n    state: latest\n    download_only: true\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "allow_downgrade", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Specify if the named package and version is allowed to downgrade a maybe already installed higher version of that package. Note that setting allow_downgrade=True can make this module behave in a non-idempotent way. The task could end up with a set of packages that does not match the complete list of specified packages to install (because dependencies between the downgraded package and others can cause changes to the packages which were in the earlier transaction)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "autoremove", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If C(true), removes all \"leaf\" packages from the system that were originally installed as dependencies of user-installed packages but which are no longer required by any such package. Should be used alone or when state is I(absent)", "NOTE: This feature requires yum >= 3.4.3 (RHEL/CentOS 7+)"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "bugfix", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If set to C(true), and C(state=latest) then only installs updates that have been marked bugfix related."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "cacheonly", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Tells yum to run entirely from system cache; does not download or update metadata."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "conf_file", "type": "str", "elements": "", "default": null, "required": false, "description": ["The remote yum configuration file to use for the transaction."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "disable_excludes", "type": "str", "elements": "", "default": null, "required": false, "description": ["Disable the excludes defined in YUM config files.", "If set to C(all), disables all excludes.", "If set to C(main), disable excludes defined in [main] in yum.conf.", "If set to C(repoid), disable excludes defined for given repo id."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "disable_gpg_check", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Whether to disable the GPG checking of signatures of packages being installed. Has an effect only if state is I(present) or I(latest)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "disable_plugin", "type": "list", "elements": "str", "default": null, "required": false, "description": ["I(Plugin) name to disable for the install/update operation. The disabled plugins will not persist beyond the transaction."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "disablerepo", "type": "list", "elements": "str", "default": null, "required": false, "description": ["I(Repoid) of repositories to disable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos, separate them with a C(\",\").", "As of Ansible 2.7, this can alternatively be a list instead of C(\",\") separated string"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "download_dir", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies an alternate directory to store packages.", "Has an effect only if I(download_only) is specified."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "download_only", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Only download the packages, do not install them."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "enable_plugin", "type": "list", "elements": "str", "default": null, "required": false, "description": ["I(Plugin) name to enable for the install/update operation. The enabled plugin will not persist beyond the transaction."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "enablerepo", "type": "list", "elements": "str", "default": null, "required": false, "description": ["I(Repoid) of repositories to enable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos, separate them with a C(\",\").", "As of Ansible 2.7, this can alternatively be a list instead of C(\",\") separated string"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "exclude", "type": "list", "elements": "str", "default": null, "required": false, "description": ["Package name(s) to exclude when state=present, or latest"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "install_repoquery", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["If repoquery is not available, install yum-utils. If the system is registered to RHN or an RHN Satellite, repoquery allows for querying all channels assigned to the system. It is also required to use the 'list' parameter.", "NOTE: This will run and be logged as a separate yum transation which takes place before any other installation or removal.", "NOTE: This will use the system's default enabled repositories without regard for disablerepo/enablerepo given to the module."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "install_weak_deps", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["Will also install all packages linked by a weak dependency relation.", "NOTE: This feature requires yum >= 4 (RHEL/CentOS 8+)"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "installroot", "type": "str", "elements": "", "default": "/", "required": false, "description": ["Specifies an alternative installroot, relative to which all packages will be installed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "list", "type": "str", "elements": "", "default": null, "required": false, "description": ["Package name to run the equivalent of C(yum list --show-duplicates <package>) against. In addition to listing packages, use can also list the following: C(installed), C(updates), C(available) and C(repos).", "This parameter is mutually exclusive with I(name)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "lock_timeout", "type": "int", "elements": "", "default": 30, "required": false, "description": ["Amount of time to wait for the yum lockfile to be freed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "list", "elements": "str", "default": null, "required": false, "description": ["A package name or package specifier with version, like C(name-1.0).", "Comparison operators for package version are valid here C(>), C(<), C(>=), C(<=). Example - C(name>=1.0)", "If a previous version is specified, the task also needs to turn C(allow_downgrade) on. See the C(allow_downgrade) documentation for caveats with downgrading packages.", "When using state=latest, this can be C('*') which means run C(yum -y update).", "You can also pass a url or a local path to a rpm file (using state=present). To operate on several packages this can accept a comma separated string of packages or (as of 2.0) a list of packages."], "choices": null, "aliases": ["pkg"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "releasever", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies an alternative release from which all packages will be installed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "security", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If set to C(true), and C(state=latest) then only installs updates that have been marked security related."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "skip_broken", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Skip all unavailable packages or packages with broken dependencies without raising an error. Equivalent to passing the --skip-broken option."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "sslverify", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["Disables SSL validation of the repository server for this transaction.", "This should be set to C(false) if one of the configured repositories is using an untrusted or self-signed certificate."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": null, "required": false, "description": ["Whether to install (C(present) or C(installed), C(latest)), or remove (C(absent) or C(removed)) a package.", "C(present) and C(installed) will simply ensure that a desired package is installed.", "C(latest) will update the specified package if it's not of the latest available version.", "C(absent) and C(removed) will remove the specified package.", "Default is C(None), however in effect the default action is C(present) unless the C(autoremove) option is enabled for this module, then C(absent) is inferred."], "choices": ["absent", "installed", "latest", "present", "removed"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "update_cache", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Force yum to check if cache is out of date and redownload if needed. Has an effect only if state is I(present) or I(latest)."], "choices": null, "aliases": ["expire-cache"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "update_only", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["When using latest, only update installed packages. Do not install packages.", "Has an effect only if state is I(latest)"], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "use_backend", "type": "str", "elements": "", "default": "auto", "required": false, "description": ["This module supports C(yum) (as it always has), this is known as C(yum3)/C(YUM3)/C(yum-deprecated) by upstream yum developers. As of Ansible 2.7+, this module also supports C(YUM4), which is the \"new yum\" and it has an C(dnf) backend.", "By default, this module will select the backend based on the C(ansible_pkg_mgr) fact."], "choices": ["auto", "yum", "yum4", "dnf"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "validate_certs", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["This only applies if using a https url as the source of the rpm. e.g. for localinstall. If set to C(false), the SSL certificates will not be validated.", "This should only set to C(false) used on personally controlled sites using self-signed certificates as it avoids verifying the source site.", "Prior to 2.1 the code worked as if this was set to C(true)."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/yum.py", "builtin": true, "used_in": [], "annotations": {}}
{"py/object": "ansible_risk_insight.models.Module", "type": "module", "key": "module collection:ansible.builtin#module:ansible.builtin.yum_repository", "name": "yum_repository", "fqcn": "ansible.builtin.yum_repository", "local_key": "module module:lib/ansible/modules/yum_repository.py", "collection": "ansible.builtin", "role": "", "documentation": "attributes:\n  check_mode:\n    description: Can run in check_mode and return changed status prediction without\n      modifying target\n    support: full\n  diff_mode:\n    description: Will return details on what has changed (or possibly needs changing\n      in check_mode), when in diff mode\n    support: full\n  platform:\n    description: Target OS/families that can be operated against\n    platforms: rhel\n    support: N/A\nauthor: Jiri Tyr (@jtyr)\ncollection: ansible.builtin\ndescription:\n- Add or remove YUM repositories in RPM-based Linux distributions.\n- If you wish to update an existing repository definition use M(community.general.ini_file)\n  instead.\nfilename: /Users/hiro/dev/ansible/ansible-risk-insight/ari-test-env/lib/python3.11/site-packages/ansible/modules/yum_repository.py\nhas_action: false\nmodule: yum_repository\nnotes:\n- All comments will be removed if modifying an existing repo file.\n- Section order is preserved in an existing repo file.\n- Parameters in a section are ordered alphabetically in an existing repo file.\n- The repo file will be automatically deleted if it contains no repository.\n- When removing a repository, beware that the metadata cache may still remain on disk\n  until you run C(yum clean all). Use a notification handler for this.\n- The C(params) parameter was removed in Ansible 2.5 due to circumventing Ansible's\n  parameter handling\noptions:\n  async:\n    description:\n    - If set to C(true) Yum will download packages and metadata from this repo in\n      parallel, if possible.\n    - In ansible-core 2.11, 2.12, and 2.13 the default value is C(true).\n    - This option has been deprecated in RHEL 8. If you're using one of the versions\n      listed above, you can set this option to None to avoid passing an unknown configuration\n      option.\n    type: bool\n  attributes:\n    aliases:\n    - attr\n    description:\n    - The attributes the resulting filesystem object should have.\n    - To get supported flags look at the man page for I(chattr) on the target system.\n    - This string should contain the attributes in the same order as the one displayed\n      by I(lsattr).\n    - The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need\n      to be included in the string.\n    type: str\n    version_added: '2.3'\n    version_added_collection: ansible.builtin\n  bandwidth:\n    default: '0'\n    description:\n    - Maximum available network bandwidth in bytes/second. Used with the I(throttle)\n      option.\n    - If I(throttle) is a percentage and bandwidth is C(0) then bandwidth throttling\n      will be disabled. If I(throttle) is expressed as a data rate (bytes/sec) then\n      this option is ignored. Default is C(0) (no bandwidth throttling).\n    type: str\n  baseurl:\n    description:\n    - URL to the directory where the yum repository's 'repodata' directory lives.\n    - It can also be a list of multiple URLs.\n    - This, the I(metalink) or I(mirrorlist) parameters are required if I(state) is\n      set to C(present).\n    elements: str\n    type: list\n  cost:\n    default: '1000'\n    description:\n    - Relative cost of accessing this repository. Useful for weighing one repo's packages\n      as greater/less than any other.\n    type: str\n  deltarpm_metadata_percentage:\n    default: '100'\n    description:\n    - When the relative size of deltarpm metadata vs pkgs is larger than this, deltarpm\n      metadata is not downloaded from the repo. Note that you can give values over\n      C(100), so C(200) means that the metadata is required to be half the size of\n      the packages. Use C(0) to turn off this check, and always download metadata.\n    type: str\n  deltarpm_percentage:\n    default: '75'\n    description:\n    - When the relative size of delta vs pkg is larger than this, delta is not used.\n      Use C(0) to turn off delta rpm processing. Local repositories (with file://\n      I(baseurl)) have delta rpms turned off by default.\n    type: str\n  description:\n    description:\n    - A human readable string describing the repository. This option corresponds to\n      the \"name\" property in the repo file.\n    - This parameter is only required if I(state) is set to C(present).\n    type: str\n  enabled:\n    description:\n    - This tells yum whether or not use this repository.\n    - Yum default value is C(true).\n    type: bool\n  enablegroups:\n    description:\n    - Determines whether yum will allow the use of package groups for this repository.\n    - Yum default value is C(true).\n    type: bool\n  exclude:\n    description:\n    - List of packages to exclude from updates or installs. This should be a space\n      separated list. Shell globs using wildcards (eg. C(*) and C(?)) are allowed.\n    - The list can also be a regular YAML array.\n    elements: str\n    type: list\n  failovermethod:\n    choices:\n    - roundrobin\n    - priority\n    default: roundrobin\n    description:\n    - C(roundrobin) randomly selects a URL out of the list of URLs to start with and\n      proceeds through each of them as it encounters a failure contacting the host.\n    - C(priority) starts from the first I(baseurl) listed and reads through them sequentially.\n    type: str\n  file:\n    description:\n    - File name without the C(.repo) extension to save the repo in. Defaults to the\n      value of I(name).\n    type: str\n  gpgcakey:\n    description:\n    - A URL pointing to the ASCII-armored CA key file for the repository.\n    type: str\n  gpgcheck:\n    description:\n    - Tells yum whether or not it should perform a GPG signature check on packages.\n    - No default setting. If the value is not set, the system setting from C(/etc/yum.conf)\n      or system default of C(false) will be used.\n    type: bool\n  gpgkey:\n    description:\n    - A URL pointing to the ASCII-armored GPG key file for the repository.\n    - It can also be a list of multiple URLs.\n    elements: str\n    type: list\n  group:\n    description:\n    - Name of the group that should own the filesystem object, as would be fed to\n      I(chown).\n    - When left unspecified, it uses the current group of the current user unless\n      you are root, in which case it can preserve the previous ownership.\n    type: str\n  http_caching:\n    choices:\n    - all\n    - packages\n    - none\n    default: all\n    description:\n    - Determines how upstream HTTP caches are instructed to handle any HTTP downloads\n      that Yum does.\n    - C(all) means that all HTTP downloads should be cached.\n    - C(packages) means that only RPM package downloads should be cached (but not\n      repository metadata downloads).\n    - C(none) means that no HTTP downloads should be cached.\n    type: str\n  include:\n    description:\n    - Include external configuration file. Both, local path and URL is supported.\n      Configuration file will be inserted at the position of the I(include=) line.\n      Included files may contain further include lines. Yum will abort with an error\n      if an inclusion loop is detected.\n    type: str\n  includepkgs:\n    description:\n    - List of packages you want to only use from a repository. This should be a space\n      separated list. Shell globs using wildcards (eg. C(*) and C(?)) are allowed.\n      Substitution variables (e.g. C($releasever)) are honored here.\n    - The list can also be a regular YAML array.\n    elements: str\n    type: list\n  ip_resolve:\n    choices:\n    - '4'\n    - '6'\n    - IPv4\n    - IPv6\n    - whatever\n    default: whatever\n    description:\n    - Determines how yum resolves host names.\n    - C(4) or C(IPv4) - resolve to IPv4 addresses only.\n    - C(6) or C(IPv6) - resolve to IPv6 addresses only.\n    type: str\n  keepalive:\n    default: 'no'\n    description:\n    - This tells yum whether or not HTTP/1.1 keepalive should be used with this repository.\n      This can improve transfer speeds by using one connection when downloading multiple\n      files from a repository.\n    type: bool\n  keepcache:\n    choices:\n    - '0'\n    - '1'\n    default: '1'\n    description:\n    - Either C(1) or C(0). Determines whether or not yum keeps the cache of headers\n      and packages after successful installation.\n    type: str\n  metadata_expire:\n    default: '21600'\n    description:\n    - Time (in seconds) after which the metadata will expire.\n    - Default value is 6 hours.\n    type: str\n  metadata_expire_filter:\n    choices:\n    - never\n    - read-only:past\n    - read-only:present\n    - read-only:future\n    default: read-only:present\n    description:\n    - Filter the I(metadata_expire) time, allowing a trade of speed for accuracy if\n      a command doesn't require it. Each yum command can specify that it requires\n      a certain level of timeliness quality from the remote repos. from \"I'm about\n      to install/upgrade, so this better be current\" to \"Anything that's available\n      is good enough\".\n    - C(never) - Nothing is filtered, always obey I(metadata_expire).\n    - C(read-only:past) - Commands that only care about past information are filtered\n      from metadata expiring. Eg. I(yum history) info (if history needs to lookup\n      anything about a previous transaction, then by definition the remote package\n      was available in the past).\n    - C(read-only:present) - Commands that are balanced between past and future. Eg.\n      I(yum list yum).\n    - C(read-only:future) - Commands that are likely to result in running other commands\n      which will require the latest metadata. Eg. I(yum check-update).\n    - Note that this option does not override \"yum clean expire-cache\".\n    type: str\n  metalink:\n    description:\n    - Specifies a URL to a metalink file for the repomd.xml, a list of mirrors for\n      the entire repository are generated by converting the mirrors for the repomd.xml\n      file to a I(baseurl).\n    - This, the I(baseurl) or I(mirrorlist) parameters are required if I(state) is\n      set to C(present).\n    type: str\n  mirrorlist:\n    description:\n    - Specifies a URL to a file containing a list of baseurls.\n    - This, the I(baseurl) or I(metalink) parameters are required if I(state) is set\n      to C(present).\n    type: str\n  mirrorlist_expire:\n    default: '21600'\n    description:\n    - Time (in seconds) after which the mirrorlist locally cached will expire.\n    - Default value is 6 hours.\n    type: str\n  mode:\n    description:\n    - The permissions the resulting filesystem object should have.\n    - For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers.\n      You must either add a leading zero so that Ansible's YAML parser knows it is\n      an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777'))\n      so Ansible receives a string and can do its own conversion from string into\n      number.\n    - Giving Ansible a number without following one of these rules will end up with\n      a decimal number which will have unexpected results.\n    - As of Ansible 1.8, the mode may be specified as a symbolic mode (for example,\n      C(u+rwx) or C(u=rw,g=r,o=r)).\n    - If C(mode) is not specified and the destination filesystem object B(does not)\n      exist, the default C(umask) on the system will be used when setting the mode\n      for the newly created filesystem object.\n    - If C(mode) is not specified and the destination filesystem object B(does) exist,\n      the mode of the existing filesystem object will be used.\n    - Specifying C(mode) is the best way to ensure filesystem objects are created\n      with the correct permissions. See CVE-2020-1736 for further details.\n    type: raw\n  module_hotfixes:\n    description:\n    - Disable module RPM filtering and make all RPMs from the repository available.\n      The default is C(None).\n    type: bool\n    version_added: '2.11'\n    version_added_collection: ansible.builtin\n  name:\n    description:\n    - Unique repository ID. This option builds the section name of the repository\n      in the repo file.\n    - This parameter is only required if I(state) is set to C(present) or C(absent).\n    required: true\n    type: str\n  owner:\n    description:\n    - Name of the user that should own the filesystem object, as would be fed to I(chown).\n    - When left unspecified, it uses the current user unless you are root, in which\n      case it can preserve the previous ownership.\n    - Specifying a numeric username will be assumed to be a user ID and not a username.\n      Avoid numeric usernames to avoid this confusion.\n    type: str\n  password:\n    description:\n    - Password to use with the username for basic authentication.\n    type: str\n  priority:\n    default: '99'\n    description:\n    - Enforce ordered protection of repositories. The value is an integer from 1 to\n      99.\n    - This option only works if the YUM Priorities plugin is installed.\n    type: str\n  protect:\n    default: 'no'\n    description:\n    - Protect packages from updates from other repositories.\n    type: bool\n  proxy:\n    description:\n    - URL to the proxy server that yum should use. Set to C(_none_) to disable the\n      global proxy setting.\n    type: str\n  proxy_password:\n    description:\n    - Password for this proxy.\n    type: str\n  proxy_username:\n    description:\n    - Username to use for proxy.\n    type: str\n  repo_gpgcheck:\n    default: 'no'\n    description:\n    - This tells yum whether or not it should perform a GPG signature check on the\n      repodata from this repository.\n    type: bool\n  reposdir:\n    default: /etc/yum.repos.d\n    description:\n    - Directory where the C(.repo) files will be stored.\n    type: path\n  retries:\n    default: '10'\n    description:\n    - Set the number of times any attempt to retrieve a file should retry before returning\n      an error. Setting this to C(0) makes yum try forever.\n    type: str\n  s3_enabled:\n    default: 'no'\n    description:\n    - Enables support for S3 repositories.\n    - This option only works if the YUM S3 plugin is installed.\n    type: bool\n  selevel:\n    description:\n    - The level part of the SELinux filesystem object context.\n    - This is the MLS/MCS attribute, sometimes known as the C(range).\n    - When set to C(_default), it will use the C(level) portion of the policy if available.\n    type: str\n  serole:\n    description:\n    - The role part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(role) portion of the policy if available.\n    type: str\n  setype:\n    description:\n    - The type part of the SELinux filesystem object context.\n    - When set to C(_default), it will use the C(type) portion of the policy if available.\n    type: str\n  seuser:\n    description:\n    - The user part of the SELinux filesystem object context.\n    - By default it uses the C(system) policy, where applicable.\n    - When set to C(_default), it will use the C(user) portion of the policy if available.\n    type: str\n  skip_if_unavailable:\n    default: 'no'\n    description:\n    - If set to C(true) yum will continue running if this repository cannot be contacted\n      for any reason. This should be set carefully as all repos are consulted for\n      any given command.\n    type: bool\n  ssl_check_cert_permissions:\n    default: 'no'\n    description:\n    - Whether yum should check the permissions on the paths for the certificates on\n      the repository (both remote and local).\n    - If we can't read any of the files then yum will force I(skip_if_unavailable)\n      to be C(true). This is most useful for non-root processes which use yum on repos\n      that have client cert files which are readable only by root.\n    type: bool\n  sslcacert:\n    aliases:\n    - ca_cert\n    description:\n    - Path to the directory containing the databases of the certificate authorities\n      yum should use to verify SSL certificates.\n    type: str\n  sslclientcert:\n    aliases:\n    - client_cert\n    description:\n    - Path to the SSL client certificate yum should use to connect to repos/remote\n      sites.\n    type: str\n  sslclientkey:\n    aliases:\n    - client_key\n    description:\n    - Path to the SSL client key yum should use to connect to repos/remote sites.\n    type: str\n  sslverify:\n    aliases:\n    - validate_certs\n    default: 'yes'\n    description:\n    - Defines whether yum should verify SSL certificates/hosts at all.\n    type: bool\n  state:\n    choices:\n    - absent\n    - present\n    default: present\n    description:\n    - State of the repo file.\n    type: str\n  throttle:\n    description:\n    - Enable bandwidth throttling for downloads.\n    - This option can be expressed as a absolute data rate in bytes/sec. An SI prefix\n      (k, M or G) may be appended to the bandwidth value.\n    type: str\n  timeout:\n    default: '30'\n    description:\n    - Number of seconds to wait for a connection before timing out.\n    type: str\n  ui_repoid_vars:\n    default: releasever basearch\n    description:\n    - When a repository id is displayed, append these yum variables to the string\n      if they are used in the I(baseurl)/etc. Variables are appended in the order\n      listed (and found).\n    type: str\n  unsafe_writes:\n    default: false\n    description:\n    - Influence when to use atomic operation to prevent data corruption or inconsistent\n      reads from the target filesystem object.\n    - By default this module uses atomic operations to prevent data corruption or\n      inconsistent reads from the target filesystem objects, but sometimes systems\n      are configured or just broken in ways that prevent this. One example is docker\n      mounted filesystem objects, which cannot be updated atomically from inside the\n      container and can only be written in an unsafe manner.\n    - This option allows Ansible to fall back to unsafe methods of updating filesystem\n      objects when atomic operations fail (however, it doesn't force Ansible to perform\n      unsafe writes).\n    - IMPORTANT! Unsafe writes are subject to race conditions and can lead to data\n      corruption.\n    type: bool\n    version_added: '2.2'\n    version_added_collection: ansible.builtin\n  username:\n    description:\n    - Username to use for basic authentication to a repo or really any url.\n    type: str\nshort_description: Add or remove YUM repositories\nversion_added: '2.1'\nversion_added_collection: ansible.builtin\n", "examples": "\n- name: Add repository\n  ansible.builtin.yum_repository:\n    name: epel\n    description: EPEL YUM repo\n    baseurl: https://download.fedoraproject.org/pub/epel/$releasever/$basearch/\n\n- name: Add multiple repositories into the same file (1/2)\n  ansible.builtin.yum_repository:\n    name: epel\n    description: EPEL YUM repo\n    file: external_repos\n    baseurl: https://download.fedoraproject.org/pub/epel/$releasever/$basearch/\n    gpgcheck: no\n\n- name: Add multiple repositories into the same file (2/2)\n  ansible.builtin.yum_repository:\n    name: rpmforge\n    description: RPMforge YUM repo\n    file: external_repos\n    baseurl: http://apt.sw.be/redhat/el7/en/$basearch/rpmforge\n    mirrorlist: http://mirrorlist.repoforge.org/el7/mirrors-rpmforge\n    enabled: no\n\n# Handler showing how to clean yum metadata cache\n- name: yum-clean-metadata\n  ansible.builtin.command: yum clean metadata\n\n# Example removing a repository and cleaning up metadata cache\n- name: Remove repository (and clean up left-over metadata)\n  ansible.builtin.yum_repository:\n    name: epel\n    state: absent\n  notify: yum-clean-metadata\n\n- name: Remove repository from a specific repo file\n  ansible.builtin.yum_repository:\n    name: epel\n    file: external_repos\n    state: absent\n", "arguments": [{"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "async", "type": "bool", "elements": "", "default": null, "required": false, "description": ["If set to C(true) Yum will download packages and metadata from this repo in parallel, if possible.", "In ansible-core 2.11, 2.12, and 2.13 the default value is C(true).", "This option has been deprecated in RHEL 8. If you're using one of the versions listed above, you can set this option to None to avoid passing an unknown configuration option."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "attributes", "type": "str", "elements": "", "default": null, "required": false, "description": ["The attributes the resulting filesystem object should have.", "To get supported flags look at the man page for I(chattr) on the target system.", "This string should contain the attributes in the same order as the one displayed by I(lsattr).", "The C(=) operator is assumed as default, otherwise C(+) or C(-) operators need to be included in the string."], "choices": null, "aliases": ["attr"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "bandwidth", "type": "str", "elements": "", "default": "0", "required": false, "description": ["Maximum available network bandwidth in bytes/second. Used with the I(throttle) option.", "If I(throttle) is a percentage and bandwidth is C(0) then bandwidth throttling will be disabled. If I(throttle) is expressed as a data rate (bytes/sec) then this option is ignored. Default is C(0) (no bandwidth throttling)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "baseurl", "type": "list", "elements": "str", "default": null, "required": false, "description": ["URL to the directory where the yum repository's 'repodata' directory lives.", "It can also be a list of multiple URLs.", "This, the I(metalink) or I(mirrorlist) parameters are required if I(state) is set to C(present)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "cost", "type": "str", "elements": "", "default": "1000", "required": false, "description": ["Relative cost of accessing this repository. Useful for weighing one repo's packages as greater/less than any other."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "deltarpm_metadata_percentage", "type": "str", "elements": "", "default": "100", "required": false, "description": ["When the relative size of deltarpm metadata vs pkgs is larger than this, deltarpm metadata is not downloaded from the repo. Note that you can give values over C(100), so C(200) means that the metadata is required to be half the size of the packages. Use C(0) to turn off this check, and always download metadata."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "deltarpm_percentage", "type": "str", "elements": "", "default": "75", "required": false, "description": ["When the relative size of delta vs pkg is larger than this, delta is not used. Use C(0) to turn off delta rpm processing. Local repositories (with file:// I(baseurl)) have delta rpms turned off by default."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "description", "type": "str", "elements": "", "default": null, "required": false, "description": ["A human readable string describing the repository. This option corresponds to the \"name\" property in the repo file.", "This parameter is only required if I(state) is set to C(present)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "enabled", "type": "bool", "elements": "", "default": null, "required": false, "description": ["This tells yum whether or not use this repository.", "Yum default value is C(true)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "enablegroups", "type": "bool", "elements": "", "default": null, "required": false, "description": ["Determines whether yum will allow the use of package groups for this repository.", "Yum default value is C(true)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "exclude", "type": "list", "elements": "str", "default": null, "required": false, "description": ["List of packages to exclude from updates or installs. This should be a space separated list. Shell globs using wildcards (eg. C(*) and C(?)) are allowed.", "The list can also be a regular YAML array."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "failovermethod", "type": "str", "elements": "", "default": "roundrobin", "required": false, "description": ["C(roundrobin) randomly selects a URL out of the list of URLs to start with and proceeds through each of them as it encounters a failure contacting the host.", "C(priority) starts from the first I(baseurl) listed and reads through them sequentially."], "choices": ["roundrobin", "priority"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "file", "type": "str", "elements": "", "default": null, "required": false, "description": ["File name without the C(.repo) extension to save the repo in. Defaults to the value of I(name)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "gpgcakey", "type": "str", "elements": "", "default": null, "required": false, "description": ["A URL pointing to the ASCII-armored CA key file for the repository."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "gpgcheck", "type": "bool", "elements": "", "default": null, "required": false, "description": ["Tells yum whether or not it should perform a GPG signature check on packages.", "No default setting. If the value is not set, the system setting from C(/etc/yum.conf) or system default of C(false) will be used."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "gpgkey", "type": "list", "elements": "str", "default": null, "required": false, "description": ["A URL pointing to the ASCII-armored GPG key file for the repository.", "It can also be a list of multiple URLs."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "group", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the group that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current group of the current user unless you are root, in which case it can preserve the previous ownership."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "http_caching", "type": "str", "elements": "", "default": "all", "required": false, "description": ["Determines how upstream HTTP caches are instructed to handle any HTTP downloads that Yum does.", "C(all) means that all HTTP downloads should be cached.", "C(packages) means that only RPM package downloads should be cached (but not repository metadata downloads).", "C(none) means that no HTTP downloads should be cached."], "choices": ["all", "packages", "none"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "include", "type": "str", "elements": "", "default": null, "required": false, "description": ["Include external configuration file. Both, local path and URL is supported. Configuration file will be inserted at the position of the I(include=) line. Included files may contain further include lines. Yum will abort with an error if an inclusion loop is detected."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "includepkgs", "type": "list", "elements": "str", "default": null, "required": false, "description": ["List of packages you want to only use from a repository. This should be a space separated list. Shell globs using wildcards (eg. C(*) and C(?)) are allowed. Substitution variables (e.g. C($releasever)) are honored here.", "The list can also be a regular YAML array."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ip_resolve", "type": "str", "elements": "", "default": "whatever", "required": false, "description": ["Determines how yum resolves host names.", "C(4) or C(IPv4) - resolve to IPv4 addresses only.", "C(6) or C(IPv6) - resolve to IPv6 addresses only."], "choices": ["4", "6", "IPv4", "IPv6", "whatever"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "keepalive", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["This tells yum whether or not HTTP/1.1 keepalive should be used with this repository. This can improve transfer speeds by using one connection when downloading multiple files from a repository."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "keepcache", "type": "str", "elements": "", "default": "1", "required": false, "description": ["Either C(1) or C(0). Determines whether or not yum keeps the cache of headers and packages after successful installation."], "choices": ["0", "1"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "metadata_expire", "type": "str", "elements": "", "default": "21600", "required": false, "description": ["Time (in seconds) after which the metadata will expire.", "Default value is 6 hours."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "metadata_expire_filter", "type": "str", "elements": "", "default": "read-only:present", "required": false, "description": ["Filter the I(metadata_expire) time, allowing a trade of speed for accuracy if a command doesn't require it. Each yum command can specify that it requires a certain level of timeliness quality from the remote repos. from \"I'm about to install/upgrade, so this better be current\" to \"Anything that's available is good enough\".", "C(never) - Nothing is filtered, always obey I(metadata_expire).", "C(read-only:past) - Commands that only care about past information are filtered from metadata expiring. Eg. I(yum history) info (if history needs to lookup anything about a previous transaction, then by definition the remote package was available in the past).", "C(read-only:present) - Commands that are balanced between past and future. Eg. I(yum list yum).", "C(read-only:future) - Commands that are likely to result in running other commands which will require the latest metadata. Eg. I(yum check-update).", "Note that this option does not override \"yum clean expire-cache\"."], "choices": ["never", "read-only:past", "read-only:present", "read-only:future"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "metalink", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies a URL to a metalink file for the repomd.xml, a list of mirrors for the entire repository are generated by converting the mirrors for the repomd.xml file to a I(baseurl).", "This, the I(baseurl) or I(mirrorlist) parameters are required if I(state) is set to C(present)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mirrorlist", "type": "str", "elements": "", "default": null, "required": false, "description": ["Specifies a URL to a file containing a list of baseurls.", "This, the I(baseurl) or I(metalink) parameters are required if I(state) is set to C(present)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mirrorlist_expire", "type": "str", "elements": "", "default": "21600", "required": false, "description": ["Time (in seconds) after which the mirrorlist locally cached will expire.", "Default value is 6 hours."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "mode", "type": "any", "elements": "", "default": null, "required": false, "description": ["The permissions the resulting filesystem object should have.", "For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers. You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777')) so Ansible receives a string and can do its own conversion from string into number.", "Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.", "As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r)).", "If C(mode) is not specified and the destination filesystem object B(does not) exist, the default C(umask) on the system will be used when setting the mode for the newly created filesystem object.", "If C(mode) is not specified and the destination filesystem object B(does) exist, the mode of the existing filesystem object will be used.", "Specifying C(mode) is the best way to ensure filesystem objects are created with the correct permissions. See CVE-2020-1736 for further details."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "module_hotfixes", "type": "bool", "elements": "", "default": null, "required": false, "description": ["Disable module RPM filtering and make all RPMs from the repository available. The default is C(None)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "name", "type": "str", "elements": "", "default": null, "required": true, "description": ["Unique repository ID. This option builds the section name of the repository in the repo file.", "This parameter is only required if I(state) is set to C(present) or C(absent)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "owner", "type": "str", "elements": "", "default": null, "required": false, "description": ["Name of the user that should own the filesystem object, as would be fed to I(chown).", "When left unspecified, it uses the current user unless you are root, in which case it can preserve the previous ownership.", "Specifying a numeric username will be assumed to be a user ID and not a username. Avoid numeric usernames to avoid this confusion."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "password", "type": "str", "elements": "", "default": null, "required": false, "description": ["Password to use with the username for basic authentication."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "priority", "type": "str", "elements": "", "default": "99", "required": false, "description": ["Enforce ordered protection of repositories. The value is an integer from 1 to 99.", "This option only works if the YUM Priorities plugin is installed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "protect", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Protect packages from updates from other repositories."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "proxy", "type": "str", "elements": "", "default": null, "required": false, "description": ["URL to the proxy server that yum should use. Set to C(_none_) to disable the global proxy setting."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "proxy_password", "type": "str", "elements": "", "default": null, "required": false, "description": ["Password for this proxy."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "proxy_username", "type": "str", "elements": "", "default": null, "required": false, "description": ["Username to use for proxy."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "repo_gpgcheck", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["This tells yum whether or not it should perform a GPG signature check on the repodata from this repository."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "reposdir", "type": "str", "elements": "", "default": "/etc/yum.repos.d", "required": false, "description": ["Directory where the C(.repo) files will be stored."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "retries", "type": "str", "elements": "", "default": "10", "required": false, "description": ["Set the number of times any attempt to retrieve a file should retry before returning an error. Setting this to C(0) makes yum try forever."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "s3_enabled", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Enables support for S3 repositories.", "This option only works if the YUM S3 plugin is installed."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "selevel", "type": "str", "elements": "", "default": null, "required": false, "description": ["The level part of the SELinux filesystem object context.", "This is the MLS/MCS attribute, sometimes known as the C(range).", "When set to C(_default), it will use the C(level) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "serole", "type": "str", "elements": "", "default": null, "required": false, "description": ["The role part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(role) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "setype", "type": "str", "elements": "", "default": null, "required": false, "description": ["The type part of the SELinux filesystem object context.", "When set to C(_default), it will use the C(type) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "seuser", "type": "str", "elements": "", "default": null, "required": false, "description": ["The user part of the SELinux filesystem object context.", "By default it uses the C(system) policy, where applicable.", "When set to C(_default), it will use the C(user) portion of the policy if available."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "skip_if_unavailable", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["If set to C(true) yum will continue running if this repository cannot be contacted for any reason. This should be set carefully as all repos are consulted for any given command."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ssl_check_cert_permissions", "type": "bool", "elements": "", "default": "no", "required": false, "description": ["Whether yum should check the permissions on the paths for the certificates on the repository (both remote and local).", "If we can't read any of the files then yum will force I(skip_if_unavailable) to be C(true). This is most useful for non-root processes which use yum on repos that have client cert files which are readable only by root."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "sslcacert", "type": "str", "elements": "", "default": null, "required": false, "description": ["Path to the directory containing the databases of the certificate authorities yum should use to verify SSL certificates."], "choices": null, "aliases": ["ca_cert"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "sslclientcert", "type": "str", "elements": "", "default": null, "required": false, "description": ["Path to the SSL client certificate yum should use to connect to repos/remote sites."], "choices": null, "aliases": ["client_cert"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "sslclientkey", "type": "str", "elements": "", "default": null, "required": false, "description": ["Path to the SSL client key yum should use to connect to repos/remote sites."], "choices": null, "aliases": ["client_key"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "sslverify", "type": "bool", "elements": "", "default": "yes", "required": false, "description": ["Defines whether yum should verify SSL certificates/hosts at all."], "choices": null, "aliases": ["validate_certs"]}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "state", "type": "str", "elements": "", "default": "present", "required": false, "description": ["State of the repo file."], "choices": ["absent", "present"], "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "throttle", "type": "str", "elements": "", "default": null, "required": false, "description": ["Enable bandwidth throttling for downloads.", "This option can be expressed as a absolute data rate in bytes/sec. An SI prefix (k, M or G) may be appended to the bandwidth value."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "timeout", "type": "str", "elements": "", "default": "30", "required": false, "description": ["Number of seconds to wait for a connection before timing out."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "ui_repoid_vars", "type": "str", "elements": "", "default": "releasever basearch", "required": false, "description": ["When a repository id is displayed, append these yum variables to the string if they are used in the I(baseurl)/etc. Variables are appended in the order listed (and found)."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "unsafe_writes", "type": "bool", "elements": "", "default": false, "required": false, "description": ["Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target filesystem object.", "By default this module uses atomic operations to prevent data corruption or inconsistent reads from the target filesystem objects, but sometimes systems are configured or just broken in ways that prevent this. One example is docker mounted filesystem objects, which cannot be updated atomically from inside the container and can only be written in an unsafe manner.", "This option allows Ansible to fall back to unsafe methods of updating filesystem objects when atomic operations fail (however, it doesn't force Ansible to perform unsafe writes).", "IMPORTANT! Unsafe writes are subject to race conditions and can lead to data corruption."], "choices": null, "aliases": null}, {"py/object": "ansible_risk_insight.models.ModuleArgument", "name": "username", "type": "str", "elements": "", "default": null, "required": false, "description": ["Username to use for basic authentication to a repo or really any url."], "choices": null, "aliases": null}], "defined_in": "lib/ansible/modules/yum_repository.py", "builtin": true, "used_in": [], "annotations": {}}